require({cache:{"com/ibm/vis/engine/internal/nativeImpl/WebEngineException":function(){
define("com/ibm/vis/engine/internal/nativeImpl/WebEngineException",["dojo/_base/declare"],function(_1){
return _1("com.ibm.vis.engine.internal.nativeImpl.WebEngineException",null,{message:null,constructor:function(_2){
this.message=_2;
console.log(this.message);
},getMessage:function(){
return this.message;
}});
});
},"com/ibm/vis/engine/internal/facet/CellElementContents":function(){
define("com/ibm/vis/engine/internal/facet/CellElementContents",["com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_3,_4,_5){
var _6=_5("com.ibm.vis.engine.internal.facet.CellElementContents",null,{scene:null,name:null,index:0,constructor:function(id,_7,_8){
this.name=id;
this.index=_7;
this.scene=_8;
}});
_6.createContentsFromParts=function(_9,_a,_b,_c,_d){
var _e=_3.m.createSizedJSONArray(_b.size()+(_c==null?0:_c.size())+_d.size());
for(var _f=0,_10=_b.size();_f<_10;++_f){
var o=_b.get(_f);
_e.push(_3.m.deepClone(o));
}
if(_c!=null){
for(var _11=0,_12=_c.size();_11<_12;++_11){
var o=_c.get(_11);
_e.push(o);
}
}
for(var _13=0,_14=_d.size();_13<_14;++_13){
var o=_d.get(_13);
_e.push(_3.m.deepClone(o));
}
return new _6(_9,_a,_e);
};
_6.createContentsFromScene=function(key,i,_15){
return new _6(key,i,_15);
};
return _6;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/AestheticHelper":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/AestheticHelper",["com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/Set","com/ibm/init/statics","dojo/_base/declare"],function(_16,_17,_18,_19){
var _1a=_19("com.ibm.vis.engine.internal.grammar.aesthetic.AestheticHelper",null,{});
_1a.groupAestheticsByFieldAndElement=function(_1b){
var _1c=new _16.m();
for(var _1d=0,_1e=_1b.size();_1d<_1e;++_1d){
var a=_1b.get(_1d);
_1a.addToGroup(_1c,a);
}
return _1c;
};
_1a.addToGroup=function(_1f,a){
for(var _20=0,_21=_1f.size();_20<_21;++_20){
var _22=_1f.get(_20);
var aes=_22.get(0);
if(aes.valueProvider.getBaseField()==a.valueProvider.getBaseField()&&aes.element==a.element){
_22.add(a);
return;
}
}
var _23=new _16.m();
_23.add(a);
_1f.add(_23);
};
_1a.getLegendableAesthetics=function(_24){
var _25=new _16.m();
var _26=_1a.isFacetChart(_24);
for(var _27=0,_28=_24.length;_27<_28;++_27){
var g=_24[_27];
var _29=g.elements;
for(var _2a=0,_2b=_29.length;_2a<_2b;++_2a){
var e=_29[_2a];
var _2c=e.getAesthetics();
for(var _2d=0,_2e=_2c.length;_2d<_2e;++_2d){
var a=_2c[_2d];
var _2f=new _16.m();
_2f.add(a);
if(a.scale.localScale&&_26){
continue;
}
var _30=null;
var _31=a.type;
if(e.pointOnLineAesthetic!=null){
if(a.valueProvider.getBaseField()!=null&&e.pointOnLineAesthetic.valueProvider.getBaseField()!=null&&a.valueProvider.getBaseField()==e.pointOnLineAesthetic.valueProvider.getBaseField()){
_30=e.pointOnLineAesthetic;
}
}
if(_30!=null&&(a!=_30)){
_2f.add(_30);
}
if(!_31.CPVisEngineEquals("meta")&&!_31.CPVisEngineEquals("split")){
_25.addAll(_2f);
}
}
for(var _32=0,_33=e.labelProducers,_34=_33.size();_32<_34;++_32){
var _35=_33.get(_32);
var _36=_35.getAesthetics();
if(_36==null){
continue;
}
for(var _37=0,_38=_36.length;_37<_38;++_37){
var a=_36[_37];
_25.add(a);
}
}
}
}
return _25;
};
_1a.getFilteredLegendableAesthetics=function(_39,_3a){
var _3b=new _17.m();
if(_3a!=null){
for(var _3c=0,_3d=_3a.length;_3c<_3d;++_3c){
var _3e=_3a[_3c];
if(_3e.aesthetics!=null){
for(var _3f=0,_40=_3e.aesthetics,_41=_40.length;_3f<_41;++_3f){
var ref=_40[_3f];
_3b.add(ref.aesthetic.$ref);
}
}
}
}
var _42=_1a.groupAestheticsByFieldAndElement(_1a.getLegendableAesthetics(_39));
var _43=new _16.m();
for(var _44=0,_45=_42.size();_44<_45;++_44){
var _46=_42.get(_44);
var OK=false;
for(var _47=0,_48=_46.size();_47<_48;++_47){
var _49=_46.get(_47);
if(_49.id==null||!_3b.contains(_49.id)){
OK=true;
break;
}
}
if(OK){
_43.add(_46);
}
}
return _43;
};
_1a.isFacetChart=function(_4a){
for(var _4b=0,_4c=_4a.length;_4b<_4c;++_4b){
var _4d=_4a[_4b];
if(_4d.isFacetChart()){
return true;
}
}
return false;
};
_1a.getAestheticsByReferences=function(_4e,vis){
if(_4e==null){
return null;
}
var _4f=new _16.m();
for(var _50=0,_51=_4e.length;_50<_51;++_50){
var _52=_4e[_50];
var a=vis.getByID(_52.aesthetic.$ref);
_4f.add(a);
}
return _4f;
};
return _1a;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/Crossings":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/Crossings",["com/ibm/init/fork!../../../nativeImpl/Map","com/ibm/init/statics","dojo/_base/declare"],function(_53,_54,_55){
var _56=_55("com.ibm.vis.engine.internal.grammar.layout.graph.Crossings",null,{nodes:null,links:null,rowToIndexMap:null,linkNodes:null,counts:null,total:0,constructor:function(_57,_58){
this.nodes=_57;
this.links=_58;
this.rowToIndexMap=new _53.m();
for(var i=0;i<this.nodes.length;++i){
var _59=Math.abs(this.nodes[i].row);
this.rowToIndexMap.put(_59,i);
}
this.linkNodes=new Array(_58.length);
this.total=0;
this.counts=Array.create([this.nodes.length],0);
for(var i=0;i<this.links.length;++i){
var a=this.links[i];
if((this.rowToIndexMap.get(Math.abs(a.from.row))!=null)&&(this.rowToIndexMap.get(Math.abs(a.to.row))!=null)){
this.linkNodes[i]=[this.rowToIndexMap.get(Math.abs(a.from.row)),this.rowToIndexMap.get(Math.abs(a.to.row))];
}
}
this.calculateCounts();
},calculateCounts:function(){
this.total=0;
for(var i=0;i<this.counts.length;++i){
this.counts[i]=0;
}
for(var i=1;i<this.links.length;++i){
for(var j=0;j<i;++j){
if(this.links[i].intersects(this.links[j])){
this.total++;
this.counts[this.linkNodes[i][0]]=this.counts[this.linkNodes[i][0]]+1;
this.counts[this.linkNodes[i][1]]=this.counts[this.linkNodes[i][1]]+1;
this.counts[this.linkNodes[j][0]]=this.counts[this.linkNodes[j][0]]+1;
this.counts[this.linkNodes[j][1]]=this.counts[this.linkNodes[j][1]]+1;
}
}
}
},swap:function(i,j,_5a){
if(this.counts[i]+this.counts[j]<=_5a){
return false;
}
var a=this.nodes[i];
var b=this.nodes[j];
var _5b=this.countIntersectionsFor(a,b,1000000);
a.swapWith(b);
var _5c=this.countIntersectionsFor(a,b,_5b-_5a);
if(_5b-_5c>_5a){
this.calculateCounts();
return true;
}else{
a.swapWith(b);
return false;
}
},countIntersectionsFor:function(a,b,_5d){
var _5e=0;
for(var i=1;i<this.links.length;++i){
var _5f=this.links[i];
var _60=_5f.involves(a)||_5f.involves(b);
for(var j=0;j<i;++j){
var _61=this.links[j];
if((_60||_61.involves(a)||_61.involves(b))&&_5f.intersects(_61)){
if(++_5e>=_5d){
return _5d;
}
}
}
}
return _5e;
},swapNodes:function(a,b){
return this.swap(this.rowToIndexMap.get(Math.abs(a.row)),this.rowToIndexMap.get(Math.abs(b.row)),0);
}});
return _56;
});
},"com/ibm/vis/engine/internal/layout/FlowLayout":function(){
define("com/ibm/vis/engine/internal/layout/FlowLayout",["./ContentLayout","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../nativeImpl/HashcodeMap","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!./Flow","com/ibm/init/fork!../struct/Dim","com/ibm/init/statics","dojo/_base/declare"],function(_62,_63,_64,_65,_66,_67,_68,_69){
var _6a=_69("com.ibm.vis.engine.internal.layout.FlowLayout",[_62],{flow:null,constructor:function(_6b){
this.flow=_6b;
},layout:function(_6c,_6d,_6e){
var _6f=_6c.getChildren();
var _70=_6f.size();
if(_70==0){
return;
}
var _71=_6c.getExtent();
var _72=this.getInFlow(_71);
var _73=this.getOffFlow(_71);
if(_70==1){
this.layoutSingleton(_6f.get(0),_72,_73,_6d,_6e);
return;
}
var _74=new _63.m();
var _75=new _64.m();
var _76=new _64.m();
var _77=_72;
for(var _78=0,_79=_6f.size();_78<_79;++_78){
var _7a=_6f.get(_78);
var min=_7a.getMinimumSize();
var _7b=_7a.getPreferredSize();
var _7c=this.getInFlow(min);
if(_7b.width<=0||_7b.height<=0||_7c>_72||this.getOffFlow(min)>_73){
_7a.layoutWithBounds(new _65.m(0,0,0,0),_6d,_6e);
}else{
if(_77<_7c){
_77=-1;
_7a.layoutWithBounds(new _65.m(0,0,0,0),_6d,_6e);
}else{
_77-=_7c;
_74.add(_7a);
_75.put(_7a,min);
_76.put(_7a,_7b);
}
}
}
_70=_74.size();
if(_70==0){
return;
}
if(_70==1){
this.layoutSingleton(_74.get(0),_72,_73,_6d,_6e);
return;
}
var _7d=new Array(_70);
var _7e=0;
for(var i=0;i<_70;++i){
var _7a=_74.get(i);
_7d[i]=_7a;
var _7b=_76.get(_7a);
_7e+=this.getInFlow(_7b);
}
var _7f=Array.create([_70],0);
var _80=Array.create([_70],0);
var _81=0;
var _82;
if(_7e<=_72){
_82=true;
for(var i=0;i<_70;++i){
var max=_7d[i].getMaximumSize();
_7f[i]=Math.min(_72,this.getInFlow(max));
_80[i]=Math.min(_73,this.getOffFlow(max));
_81+=_7f[i];
}
}else{
_82=false;
for(var i=0;i<_70;++i){
var _7b=_76.get(_7d[i]);
_7f[i]=Math.min(_72,this.getInFlow(_7b));
var max=_7d[i].getMaximumSize();
_80[i]=Math.min(_73,this.getOffFlow(max));
_81+=_7f[i];
}
}
if(_81<=_72){
var pos=0;
for(var i=0;i<_70;++i){
_7d[i].layoutWithBounds(this.makeLayoutRect(_7d[i],pos,_7f[i],_80[i],_73),_6d,_6e);
pos+=_7f[i];
}
return;
}
_77=_72;
var _83=Array.create([_70],0);
var _84=Array.create([_70],false);
var _85=0;
var _86=_72;
for(var i=0;i<_70;++i){
var _7a=_7d[i];
var _87;
if(_82){
_87=this.getInFlow(_76.get(_7a));
}else{
_87=this.getInFlow(_75.get(_7a));
}
_83[i]=_87;
var _88=_7f[i]-_87;
if(_88<0.5){
_84[i]=true;
}else{
_86=Math.min(_86,_7f[i]-_87);
_85++;
}
_77-=_87;
}
while(_85>0&&_77>0.5&&_86>0.5){
var _89=Math.min(_86,_77/_85);
var _8a=_72;
for(var i=0;i<_70;++i){
if(!_84[i]){
_83[i]+=_89;
_77-=_89;
var _88=_7f[i]-_83[i];
if(_88<0.5){
_84[i]=true;
_85--;
}else{
_8a=Math.min(_8a,_88);
}
}
}
_86=_8a;
}
var pos=0;
for(var i=0;i<_70;++i){
_7d[i].layoutWithBounds(this.makeLayoutRect(_7d[i],pos,_83[i],_80[i],_73),_6d,_6e);
pos+=_83[i];
}
},layoutSingleton:function(_8b,_8c,_8d,_8e,_8f){
var min=_8b.getMinimumSize();
if(this.getInFlow(min)>_8c||this.getOffFlow(min)>_8d){
_8b.layoutWithBounds(new _65.m(0,0,0,0),_8e,_8f);
}else{
var _90=_8b.getPreferredSize();
var max=_8b.getMaximumSize();
var _91=this.getInFlow(_90);
var _92=this.getOffFlow(_90);
var _93;
if(_91<=_8c&&_92<=_8d){
_93=Math.min(_8c,this.getInFlow(max));
}else{
_93=Math.min(_8c,_91);
}
var _94=Math.min(_8d,this.getOffFlow(max));
_8b.layoutWithBounds(this.makeLayoutRect(_8b,0,_93,_94,_8d),_8e,_8f);
}
},getPreferredSize:function(_95){
var _96=0;
var _97=0;
for(var _98=0,_99=_95.getChildren(),_9a=_99.size();_98<_9a;++_98){
var _9b=_99.get(_98);
var _9c=_9b.getPreferredSize();
_96+=this.getInFlow(_9c);
_97=Math.max(_97,this.getOffFlow(_9c));
}
return this.makeLayoutDim(_96,_97);
},getMinimumSize:function(_9d){
var _9e=0;
var _9f=0;
for(var _a0=0,_a1=_9d.getChildren(),_a2=_a1.size();_a0<_a2;++_a0){
var _a3=_a1.get(_a0);
var _a4=_a3.getMinimumSize();
_9e+=this.getInFlow(_a4);
_9f=Math.max(_9f,this.getOffFlow(_a4));
}
return this.makeLayoutDim(_9e,_9f);
},getMaximumSize:function(_a5){
var _a6=0;
var _a7=0;
for(var _a8=0,_a9=_a5.getChildren(),_aa=_a9.size();_a8<_aa;++_a8){
var _ab=_a9.get(_a8);
var _ac=_ab.getMaximumSize();
_a6+=this.getInFlow(_ac);
_a7=Math.max(_a7,this.getOffFlow(_ac));
}
return this.makeLayoutDim(_a6,_a7);
},getInFlow:function(dim){
return (this.flow==_66.m.horizontal)?dim.width:dim.height;
},getOffFlow:function(dim){
return (this.flow==_66.m.horizontal)?dim.height:dim.width;
},makeLayoutRect:function(_ad,_ae,_af,_b0,_b1){
var _b2="start";
var _b3=0;
if("middle".CPVisEngineEquals(_b2)){
_b3=(_b1-_b0)/2;
}else{
if("end".CPVisEngineEquals(_b2)){
_b3=_b1-_b0;
}
}
if(this.flow==_66.m.horizontal){
return new _65.m(_ae,_b3,_af,_b0);
}
return new _65.m(_b3,_ae,_b0,_af);
},makeLayoutDim:function(_b4,_b5){
if(this.flow==_66.m.horizontal){
return new _67.m(_b4,_b5);
}
return new _67.m(_b5,_b4);
}});
return _6a;
});
},"com/ibm/vis/engine/internal/nativeImpl/IntegerUtil":function(){
define("com/ibm/vis/engine/internal/nativeImpl/IntegerUtil",["exports"],function(_b6){
_b6.parseInt=function(s,_b7){
var i=parseInt(s,_b7);
if(isNaN(i)){
i=null;
}
return i;
};
});
},"com/ibm/vis/engine/internal/interaction/interpolation/TransformInterpolator":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/TransformInterpolator",["./Interpolator","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!./TransformInterpolatorData","com/ibm/init/fork!../../Affine","com/ibm/init/statics","dojo/_base/declare"],function(_b8,_b9,_ba,_bb,_bc,_bd){
var _be=_bd("com.ibm.vis.engine.internal.interaction.interpolation.TransformInterpolator",[_b8],{start_time:0,start_data:null,end_time:0,end_data:null,interpolationMode:0,constructor:function(_bf,_c0,_c1,_c2,_c3){
this.start_time=_bf;
this.start_data=_c0;
this.end_time=_c1;
this.end_data=_c2;
if(_c3==0||_c3==1||_c3==3||_c3==7){
this.interpolationMode=_c3;
}else{
this.interpolationMode=7;
}
},setInterpolationMode:function(_c4){
if(_c4==0||_c4==1||_c4==3||_c4==7){
this.interpolationMode=_c4;
}
},interpolate:function(id,t){
t=this.getNormalizedTime(t,this.start_time,this.end_time);
var _c5=this.start_data.affine;
var _c6=this.end_data.affine;
var _c7=(t<0.5)?_c5:_c6;
if(this.interpolationMode==0){
return _c7.toJSON();
}
var tx=this.interpolateDouble(this.start_data.tx,this.end_data.tx,t);
var ty=this.interpolateDouble(this.start_data.ty,this.end_data.ty,t);
if(this.interpolationMode==1||!this.start_data.decomposable||!this.end_data.decomposable){
var a=new _bb.m(_c7.m00,_c7.m01,tx,_c7.m10,_c7.m11,ty);
return a.toJSON();
}
var _c8=this.end_data.theta-this.start_data.theta;
if(_c8>3.141592653589793){
_c8=_c8-2*3.141592653589793;
}else{
if(_c8<-3.141592653589793){
_c8=_c8+2*3.141592653589793;
}
}
var _c9=this.start_data.theta+t*_c8;
var cos=Math.cos(_c9);
var sin=Math.sin(_c9);
var _ca=(sin==0)?0:-sin;
var sx,sy;
if(this.interpolationMode==7){
sx=this.interpolateDouble(this.start_data.sx,this.end_data.sx,t);
sy=this.interpolateDouble(this.start_data.sy,this.end_data.sy,t);
}else{
if(t<0.5){
sx=this.start_data.sx;
sy=this.start_data.sy;
}else{
sx=this.end_data.sx;
sy=this.end_data.sy;
}
}
var a=new _bb.m(sx*cos,sx*_ca,tx,sy*sin,sy*cos,ty);
return a.toJSON();
}});
_be.makeTransformInterpolator=function(_cb,_cc,_cd,_ce,_cf){
_cb=_b9.m.ZERO_ONE.clamp(_cb);
_cd=_b9.m.ZERO_ONE.clamp(_cd);
var _d0=_ba.m.makeTransformInterpolatorDataFromAffine(_cc);
var _d1=_ba.m.makeTransformInterpolatorDataFromAffine(_ce);
if(_cb>_cd){
return new _be(_cd,_d1,_cb,_d0,_cf);
}else{
return new _be(_cb,_d0,_cd,_d1,_cf);
}
};
_be.makeTranslateInterpolator=function(_d2,_d3,_d4,_d5,_d6,_d7){
return _be.makeTransformInterpolator(_d2,new _bb.m(1,0,_d3,0,1,_d4),_d5,new _bb.m(1,0,_d6,0,1,_d7),1);
};
_be.makeTextTransformInterpolator=function(_d8,_d9,_da,_db){
return _be.makeTransformInterpolator(_d8,_d9,_da,_db,3);
};
_bc.add("com/ibm/vis/engine/internal/interaction/interpolation/TransformInterpolator",["com/ibm/vis/engine/internal/interaction/interpolation/Interpolator","com/ibm/vis/engine/internal/data/Range","com/ibm/vis/engine/internal/Affine"],function(){
_be.NONE=0;
_be.TRANSLATE_ONLY=1;
_be.TRANSLATE_ROTATE=3;
_be.ALL=7;
});
return _be;
});
},"com/ibm/vis/engine/internal/data/transform/TransformType":function(){
define("com/ibm/vis/engine/internal/data/transform/TransformType",["com/ibm/init/statics","dojo/_base/declare"],function(_dc,_dd){
var _de=_dd("com.ibm.vis.engine.internal.data.transform.TransformType",null,{setOverallDataDetails:function(_df,xI,_e0){
},getWindowWidth:function(){
},getDensity:function(x,_e1){
}});
_de.isType=function(_e2,_e3){
if(_e2!=null&&_e2.CPVisEngineEquals(_de.getType(_e3))){
return true;
}
return false;
};
_de.getType=function(_e4){
if(_e4!=null){
var _e5=_e4.indexOf(".");
if(_e5==-1){
return _e4;
}
return _e4.substring(0,_e5);
}
return "";
};
_dc.add("com/ibm/vis/engine/internal/data/transform/TransformType",[],function(){
_de.SMOOTH="smooth";
_de.SMOOTH_REGRESSION="smooth"+".regression";
_de.SMOOTH_KERNEL="smooth"+".kernel";
_de.DENSITY="density";
_de.DENSITY_KERNEL="density"+".kernel";
_de.SUMMARY="summary";
_de.PERCENT="percent";
_de.DISTRIBUTION="distribution";
_de.DISTRIBUTION_NORMAL=_de.DISTRIBUTION+".normal";
});
return _de;
});
},"com/ibm/vis/engine/internal/nativeImpl/render/SurfaceCreationManager":function(){
define("com/ibm/vis/engine/internal/nativeImpl/render/SurfaceCreationManager",["exports","dojox/collections/ArrayList","dojox/collections/Dictionary","dojo/_base/Deferred","dojo/_base/lang","dojo/_base/config"],function(_e6,_e7,_e8,_e9,_ea,_eb){
var _ec=_e6;
var _ed=1;
var _ee=true;
var _ef=true;
var _f0=new _e7();
var _f1=new _e8();
var _f2=1;
_ec.isEnabled=function(){
return _ee;
};
_ec.setEnabled=function(_f3){
_ee=_f3||false;
};
_ec.getTurn=function(_f4){
if(!this.isEnabled()){
return true;
}
var dfd=new _e9();
dfd.conditionFn=_f4||null;
_f0.add(dfd);
_f5();
return dfd;
};
_ec.done=function(_f6){
if(!this.isEnabled()){
return;
}
_f1.remove(_f6);
_f0.remove(_f6);
_f5();
};
function _f7(msg){
if(_eb.isDebug&&console){
console.log(msg);
}
};
function _f8(dfd){
_f7("Director -- firing deferred");
dfd.resolve(this);
};
function _f9(dfd){
_f1.add(dfd,true);
if(_ef){
setTimeout(_ea.hitch(this,_f8,dfd),1);
}else{
_f8(dfd);
}
};
function _fa(dfd){
if(!dfd.conditionFn){
return true;
}
return dfd.conditionFn.apply(this);
};
function _fb(){
var _fc={count:0};
_f1.forEach(function(_fd){
if(_fa(_fd.key)){
_fc.count+=1;
}
});
return _fc.count;
};
function _f5(){
var _fe=_fb();
if(_fe>=_ed){
return;
}
var _ff=_ed-_fe;
_f7("about to fire new Tickets: "+_ff+" . Queue count: "+_f0.count);
var _100=[];
var _101=_f0.count;
for(var i=0;(_100.length<_ff)&&(i<_101);i++){
var dfd=_f0.item(i);
if(_fa(dfd)){
_100.push(dfd);
_f9(dfd);
}
}
for(var i=0;i<_100.length;i++){
_f0.remove(_100[i]);
}
var _102=function(){
_f7("about to check for paused dfds");
_f5();
};
if(_100.length>0){
setTimeout(_ea.hitch(this,_102),_f2);
}
};
});
},"com/ibm/vis/engine/internal/grammar/scale/ContentLayoutSpec":function(){
define("com/ibm/vis/engine/internal/grammar/scale/ContentLayoutSpec",["com/ibm/init/statics","dojo/_base/declare"],function(_103,_104){
var _105=_104("com.ibm.vis.engine.internal.grammar.scale.ContentLayoutSpec",null,{method:null,reverse:null,rows:null,columns:null,flow:null});
return _105;
});
},"com/ibm/vis/engine/internal/spechelper/ScaleSpecHelper":function(){
define("com/ibm/vis/engine/internal/spechelper/ScaleSpecHelper",["./SpecHelper","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/statics","dojo/_base/declare"],function(_106,_107,_108,_109){
var _10a=_109("com.ibm.vis.engine.internal.spechelper.ScaleSpecHelper",[_106],{spec:null,constructor:function(_10b){
if(_10b==null){
_10b=new Object();
}
this.spec=_10b;
},getPadding:function(_10c,_10d){
var _10e=_107.m.convertLength(this.spec.padding,_10c,_10d);
if(_10e==null){
return 0;
}
return _10e;
}});
return _10a;
});
},"com/ibm/vis/engine/internal/grammar/label/NativeFontStatistics":function(){
define("com/ibm/vis/engine/internal/grammar/label/NativeFontStatistics",["com/ibm/init/fork!../../nativeImpl/LinkedHashcodeMap","com/ibm/init/fork!./FontStats","com/ibm/init/statics","dojo/_base/declare"],function(_10f,_110,_111,_112){
var _113=_112("com.ibm.vis.engine.internal.grammar.label.NativeFontStatistics",null,{constructor:function(){
if(_113.fontStats.isEmpty()){
_113.fontStats.put("default",new _110.m(8,1.12));
_113.fontStats.put("Courier",new _110.m(7,1.12));
}
},toString:function(){
return "NativeFontStatistics ["+_113.fontStats+"]";
},genKey:function(font){
var _114=font.getFamily().toLowerCase();
if(_114.indexOf(",")>0){
_114=_114.substring(0,_114.indexOf(",")-1);
}
return _114+","+font.getBold();
},resolveFontStats:function(font){
var key=this.genKey(font);
var _115=_113.fontStats.get(key);
if(_115==null){
_115=new _110.m(_113.fontStats.get("default").getAvg(12),1);
_113.fontStats.put(key,_115);
}
return _115;
},getAvg:function(font){
var _116=this.resolveFontStats(font);
return _116.getAvg(font.getSize());
}});
_111.add("com/ibm/vis/engine/internal/grammar/label/NativeFontStatistics",["com/ibm/vis/engine/internal/nativeImpl/LinkedHashcodeMap"],function(){
_113.DEFAULT_FONT_SIZE=12;
_113.DEFAULT_FONT="default";
_113.fontStats=new _10f.m();
});
return _113;
});
},"com/ibm/vis/engine/internal/grammar/scale/Axis":function(){
define("com/ibm/vis/engine/internal/grammar/scale/Axis",["com/ibm/init/fork!../../nativeImpl/SpecUtil","com/ibm/init/fork!../label/LabelProducer","com/ibm/init/fork!./ScaleGeometry","com/ibm/init/fork!../../struct/Dim","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!../../struct/Point","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../Affine","com/ibm/init/fork!./NestedTickInfo","com/ibm/init/fork!../../util/MathUtil","com/ibm/init/fork!./Tick","com/ibm/init/fork!../../scene/ItemBuilder","com/ibm/init/fork!../../struct/Insets","com/ibm/init/fork!../../struct/Text","com/ibm/init/fork!../../struct/Rect","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_117,_118,_119,_11a,_11b,_11c,_11d,_11e,_11f,_120,_121,_122,_123,_124,_125,_126,_127,_128,_129,_12a){
var Axis=_12a("com.ibm.vis.engine.internal.grammar.scale.Axis",null,{coordinates:null,whichScale:0,drawPosition:0,areTickMarksDrawn:false,axisSpec:null,tickMarkSize:0,minorMarkSize:0,spacing:0,tickLabeler:null,titleLabeler:null,ticks:null,tickHeight:0,method:null,geometry:null,tickAlign:null,parents:null,offset:0,axisDrawCount:0,tickInfo:null,drawTicks:false,drawOppositeSide:false,spans:null,calculatedMaxTickLabelSize:null,isOverlappingTick:false,outsideTickLabels:false,constructor:function(_12b,_12c,_12d,_12e,_12f){
this.whichScale=_12b;
this.coordinates=_12c;
this.drawPosition=_12c.getDrawnPosition(_12b);
this.axisSpec=_12d;
this.offset=0;
this.axisDrawCount=1;
this.spans=_12e;
this.method=(_12d.method==null)?"auto":_12d.method;
this.areTickMarksDrawn=Axis.isStyleDefined(_12d.markStyle,true)||Axis.isStyleDefined(_12d.boxStyle,false);
var _130;
if(_12d.tickStyle==null){
_130=new Object();
this.drawTicks=true;
}else{
if(!_117.m.isEmpty(_12d.tickStyle)){
_130=_12d.tickStyle;
this.drawTicks=true;
}else{
_130=null;
this.drawTicks=false;
}
}
if(_12d.title==null){
this.titleLabeler=null;
}else{
this.titleLabeler=_118.m.makeSimpleInside(_12c.vis,_12d.titleStyle,null,null,null);
}
if(_12d.opposite!=null){
var _131=_12d.opposite;
this.drawOppositeSide=(_12f)?!_131:_131;
}else{
this.drawOppositeSide=(_12f)?true:false;
}
this.tickAlign=(_130==null)?null:_130.align;
var _132=this.tickAlign;
if(_132==null){
_132="middle";
if(_12d.boxStyle==null&&this.drawPosition==0){
_132=this.drawOppositeSide?"start":"end";
}
}
this.tickLabeler=_118.m.makeSimpleInside(_12c.vis,_130,null,_132,"middle");
var _133=this.tickLabeler.font.getHeight();
this.tickMarkSize=this.getTickMarkSize(this.axisSpec,_133,0);
this.minorMarkSize=Axis.getMinorTickMarkSize(this.axisSpec,_133,this.tickMarkSize,0);
this.spacing=(_130==null||_130.padding==null)?_133/6:0;
this.geometry=_119.m.makeUnsized(this.drawPosition==0);
this.tickHeight=0;
this.calculatedMaxTickLabelSize=new _11a.m(0,0);
},setOutsideTickLabels:function(_134){
this.outsideTickLabels=_134;
},getTickHeight:function(){
return this.tickHeight;
},getDrawPosition:function(){
return this.drawPosition;
},getAxisDrawCount:function(){
return this.axisDrawCount;
},getMethod:function(){
return this.method;
},getFirstTickLabelSize:function(){
return this.tickLabeler.calculateLabelSize(this.ticks.get(0).name);
},setMethod:function(_135){
this.method=_135;
},isRadialAxis:function(){
return this.coordinates.containsPolar()&&this.drawPosition==0&&this.coordinates.scales.length==2;
},getScale:function(){
return this.coordinates.scales[this.whichScale];
},getScaleIndex:function(){
return this.whichScale;
},isVisible:function(){
return this.axisSpec.visible==null||this.axisSpec.visible;
},getAxisSpec:function(){
return this.axisSpec;
},getWhichScale:function(){
return this.whichScale;
},isDrawTicks:function(){
return this.drawTicks;
},setSpans:function(_136){
this.spans=_136;
},getSpans:function(){
return this.spans;
},isDrawOppositeSide:function(){
return this.drawOppositeSide;
},getTicks:function(){
return this.ticks;
},getTickLabeler:function(){
return this.tickLabeler;
},getTickMarkSize:function(spec,_137,_138){
if(!this.areTickMarksDrawn||spec.boxStyle!=null){
return 0;
}
if(spec.markStyle==null||spec.markStyle.size==null){
return _137/3;
}
return _11b.m.convertLength(spec.markStyle.size,_137/3,_138);
},modifyShape:function(_139,_13a,_13b,_13c){
if(_139==null||this.whichScale==0){
return _139;
}
var info=this.tickInfo[_13c][_13b];
_139.position=info.pos;
return this.coordinates.modifyAxisTickOrLabel(_139,_13a);
},defineLocationVisTransform:function(_13d,_13e,_13f){
if(this.coordinates.insideAxes){
_13e.intTranslate(_13d);
}else{
if(this.drawPosition==1){
var p=new _11c.m(_13e.x,_13e.y+_13f.height);
p.intTranslate(_13d);
}else{
_13e.intTranslate(_13d);
}
}
},getForegroundShapes:function(_140,_141){
this.createBasicInfo();
var _142=this.drawOppositeSide?"_1":"";
var id=_141+"A"+this.whichScale+_142;
var _143=_11d.m.createJSONArray();
if(Axis.isStyleDefined(this.axisSpec.lineStyle,true)&&this.offset==0){
var _144=this.makeAxisLine(_140);
_144.setID(id+"L");
_143.push(_144.toJSON());
}
if(this.axisSpec.title!=null){
var _144=this.makeAxisTitle(_140);
if(_144!=null){
_144.setID(id+"Title");
_143.push(_144.toJSON());
}
}
if(this.areTickMarksDrawn){
var _145=Axis.addGroup(_143,"axis-mark");
var _146=_11d.m.getItem(_145,"children");
for(var j=0;j<this.axisDrawCount;++j){
for(var i=0;i<this.ticks.size();++i){
var tick=this.ticks.get(i);
var _144=this.makeTickShape(i,_140,this.tickMarkSize,j,false);
var _147=this.modifyShape(_144,_140,i,j);
if(_147!=null){
var _148=this.axisDrawCount>1?j+"_"+i:""+i;
_147.setID(id+"M"+_148);
var item=this.addInfo(_147.toJSON(),i,j);
this.addAxisValue(item,tick.value);
_146.push(item);
}
}
}
}
if(this.axisSpec.minorStyle!=null){
var _145=Axis.addGroup(_143,"axis-minor");
var _146=_11d.m.getItem(_145,"children");
var _149=this.getScale().makeMinorTicks();
for(var j=0;j<this.axisDrawCount;++j){
for(var i=0;i<_149.size();++i){
var tick=_149.get(i);
var _144=this.makeTickShape(i,_140,this.minorMarkSize,j,true);
var _147=this.modifyShape(_144,_140,0,j);
if(_147!=null){
var _148=this.axisDrawCount>1?j+"_"+i:""+i;
_147.setID(id+"N"+_148);
var item=_147.toJSON();
this.addAxisValue(item,tick.value);
_146.push(item);
}
}
}
}
if(this.drawTicks){
var _145=Axis.addGroup(_143,"axis-label");
var _146=_11d.m.getItem(_145,"children");
for(var j=0;j<this.axisDrawCount;++j){
for(var i=0;i<this.ticks.size();++i){
var tick=this.ticks.get(i);
var _14a=tick.getAdjacentTickSpace(i,this.ticks);
var _144=this.makeTickLabel(i,_140,_14a,j);
if(_144!=null){
var _148=this.axisDrawCount>1?j+"_"+i:""+i;
_144.setID(id+"T"+_148);
var item=this.addInfo(_144.toJSON(),i,j);
this.addAxisValue(item,tick.value);
_146.push(item);
}
}
}
if(this.axisDrawCount==1&&this.coordinates.containsPolar()){
var _14b=_146.length;
if(_14b>=2){
var _14c=_146[0];
var _14d=_146[_14b-1];
var _14e=Axis.getTickLabelBounds(_14c);
var _14f=Axis.getTickLabelBounds(_14d);
if(Axis.doTickLabelsOverlap(_14e,_14f)){
_11d.m.removeAt(_146,_14b-1);
}
}
}
}
return _143;
},createBasicInfo:function(){
if(this.tickInfo!=null){
return;
}
if(this.parents!=null){
for(var _150=0,_151=this.parents,_152=_151.length;_150<_152;++_150){
var _153=_151[_150];
if(_153!=null&&_153.getTicks()!=null){
this.axisDrawCount*=_153.getTicks().size();
}
}
}
this.buildTickInfo();
},buildTickInfo:function(){
var n=this.ticks.size();
this.tickInfo=new Array(this.axisDrawCount);
for(var i=0;i<this.axisDrawCount;++i){
this.tickInfo[i]=new Array(n);
}
if(this.parents==null){
for(var j=0;j<this.ticks.size();++j){
var tick=this.ticks.get(j);
var pos=[tick.value];
var loc=[0,tick.location];
var _154=[0,tick.value];
this.tickInfo[0][j]=new _11f.m(pos,loc,_154);
}
return;
}
for(var i=0;i<this.axisDrawCount;++i){
for(var j=0;j<this.ticks.size();++j){
var pos=Array.create([this.parents.length+1],0);
var loc=Array.create([this.parents.length+2],0);
var _154=Array.create([this.parents.length+2],0);
var _155=i;
for(var k=0;k<this.parents.length;++k){
var _156=this.parents[k].getTicks();
if(_156!=null){
var _157=_155%_156.size();
var tick=_156.get(_157);
pos[this.parents.length-k-1]=tick.value;
loc[this.parents.length-k]=tick.location;
_154[this.parents.length-k]=tick.value;
_155=Math.floor(_155/_156.size());
}
}
var tick=this.ticks.get(j);
pos[this.parents.length]=tick.value;
loc[this.parents.length+1]=tick.location;
_154[this.parents.length+1]=tick.value;
this.tickInfo[i][j]=new _11f.m(pos,loc,_154);
}
}
},setisOverlappingTick:function(_158){
this.isOverlappingTick=_158;
},addInfo:function(item,_159,_15a){
var info=this.tickInfo[_15a][_159];
_11d.m.put(item,"value",info.getCoords());
var _15b=this.coordinates.coordinateFieldIDs[this.whichScale];
if(_15b!=null){
_11d.m.put(item,"field",_15b);
}
var _15c=_11d.m.getItem(item,"children");
if(_15c!=null){
for(var _15d=0,_15e=_15c.length;_15d<_15e;++_15d){
var _15f=_15c[_15d];
var _160=_15f;
this.addInfo(_160,_159,_15a);
}
}
return item;
},addAxisValue:function(item,_161){
if(_11d.m.getItem(item,"value")!=null){
return;
}
_11d.m.put(item,"value",_120.m.r3(_161));
var _162=_11d.m.getItem(item,"children");
if(_162!=null){
for(var _163=0,_164=_162.length;_163<_164;++_163){
var _165=_162[_163];
var _166=_165;
this.addAxisValue(_166,_161);
}
}
},getBackgroundShapes:function(_167,_168){
this.createBasicInfo();
var id=_168+"A"+this.whichScale;
var _169=_11d.m.createJSONArray();
if(this.axisSpec.gridStyle!=null){
var x=null;
var _16a=this.coordinates.isStraightPolarGridLine()&&this.drawPosition==0;
if(_16a){
x=_121.m.getTicksLocation(this.coordinates.axes[1].ticks,_167,false);
}
for(var _16b=0;_16b<this.axisDrawCount;++_16b){
for(var _16c=0;_16c<this.ticks.size();++_16c){
var tick=this.ticks.get(_16c);
if(this.skipGridLine(_16c,tick,_167)){
continue;
}
var _16d=this.makeGridShapes(_167,_16c,_16b,_16a,x);
var _16e=_16d.length>1;
for(var k=0;k<_16d.length;++k){
var _16f=_16d[k];
if(_16f!=null){
var _170=this.axisDrawCount>1?_16b+"_"+_16c:""+_16c;
_170=_16e?_170+"_"+k:_170;
this.addGridShapeToScene(id,_169,_16b,_16c,tick,_16f,_170);
}
}
}
}
}
return _169;
},addGridShapeToScene:function(id,_171,_172,_173,tick,_174,_175){
_174.setID(id+"G"+_175);
var item=this.addInfo(_174.toJSON(),_173,_172);
this.addAxisValue(item,tick.value);
_171.push(item);
},skipGridLine:function(_176,tick,_177){
return tick.isZeroth(_176,tick)||(this.drawPosition==0&&tick.isTickAtExtent(this.drawPosition==0,_177)&&this.coordinates.isValidRadar());
},makeStraightPolarGridLines:function(x,tick,_178){
var _179=new Array(x.length);
var y=tick.getLocation(_178,true);
for(var i=0;(i+1)<x.length;++i){
var line=_122.m.makeLine(x[i],y,x[i+1],y,this.axisSpec.gridStyle);
line.isRadial=true;
_179[i]=this.coordinates.modifyShape(line,_178);
}
if(x[x.length-1]<_178.width){
var _17a=_178.width+x[0];
var line=_122.m.makeLine(x[x.length-1],y,_17a,y,this.axisSpec.gridStyle);
line.isRadial=true;
_179[x.length-1]=this.coordinates.modifyShape(line,_178);
}
return _179;
},modifyInnerCellSize:function(_17b,_17c){
if(this.coordinates.insideAxes||_17c){
return;
}
if(this.drawPosition==0){
if(!this.drawOppositeSide){
_17b.x+=this.tickHeight;
}
_17b.width-=this.tickHeight;
}else{
if(this.drawOppositeSide){
_17b.y+=this.tickHeight;
}
_17b.height-=this.tickHeight;
}
},setLayoutForBounds:function(_17d,_17e){
this.ticks=null;
this.tickInfo=null;
this.coordinates.initializeGeometryForBounds(this.geometry,_17d.getExtent());
if(this.drawPosition==1&&("auto".CPVisEngineEquals(this.method)||"between".CPVisEngineEquals(this.method))){
this.resolveAutoMethod(_17d);
this.giveSizeInfoToScale();
}
this.getScale().initializeForDisplayableExtent(this.geometry);
if(this.drawPosition==0){
this.defineAxisLayout(_17d,_17e.width);
}else{
this.defineAxisLayout(_17d,_17e.height);
}
},computeExtraSpacingNeededForBounds:function(_17f){
var _180=_123.m.NONE;
if(this.ticks==null){
return _180;
}
var _181=this.ticks.size();
if(_181==0){
return _180;
}
_180=this.computeExtraSpacingNeededForBoundsAtTick(0,_180,_17f);
_180=this.computeExtraSpacingNeededForBoundsAtTick(_181-1,_180,_17f);
return new _123.m(Math.ceil(_180.top),Math.ceil(_180.left),Math.ceil(_180.bottom),Math.ceil(_180.right));
},computeExtraSpacingNeededForBoundsAtTick:function(_182,_183,_184){
var tick=this.ticks.get(_182);
var _185=_183;
var _186=tick.getAdjacentTickSpace(_182,this.ticks);
if(this.drawPosition==0){
var _187=_184.height;
var cy=(1-tick.location)*_187;
var _188=this.tickLabeler.font.getHeight();
if(_182>0){
var _189=cy-_188/2;
if(_189<0){
_185=new _123.m(-_189+1,_183.left,_183.bottom,_183.right);
}
}else{
var _18a=cy+_188/2;
var _18b=0;
if(_18a>_187){
_18b=_18a-_187;
}
var _18c=this.coordinates.getAxisForDimension(1);
if(_18c!=null){
if(_18b>_18c.tickHeight){
_18b=_18b-_18c.tickHeight;
}else{
_18b=0;
}
}
_185=new _123.m(_183.top,_183.left,_18b,_183.right);
}
var _18d=this.tickMarkSize+this.spacing+this.getTitleSize();
var _18e=_124.m.createTextWithUnshapedValue(tick.name,0,0,this.tickLabeler.align,this.tickLabeler.valign,this.tickLabeler.font,this.tickLabeler.style,null,this.tickLabeler.shapingInfo,null);
_18e=_18e.fitInside(new _11a.m(_184.x-_18d,_184.height));
if(_18e!=null){
var _18f=this.tickLabeler.font.getWidth(_18e)+_18d-_184.x;
if(_18f>0){
_185=new _123.m(_183.top,_18f,_183.bottom,_183.right);
}
}
}else{
var _187=_184.width-_183.left-_183.right;
var cx=tick.location*_187;
var _190=_186*_187;
var _191=this.tickLabeler.align;
var _192=_182>0?cx+_190/2:cx-_190/2;
if(this.axisSpec.boxStyle!=null){
var _193=this.axisSpec.boxStyle;
var _194=_123.m.makeForStyleStroke(_193.stroke,_193.outline,_184.getExtent(),_184.getExtent(),null);
if(_182>0){
_192+=_194.right;
}else{
_192-=_194.left;
}
}else{
if("vertical".CPVisEngineEquals(this.method)){
var _195=1;
var _196=this.tickHeight-this.tickMarkSize-this.spacing-this.getTitleSize()-this.tickLabeler.padding.getHorizontal();
var _18e=this.tickLabeler.makeSimpleLabel(tick.name,new _125.m(0,0,_196,_190));
if(_18e!=null&&_122.m.isMultiLineText(this.tickLabeler.font,_18e,new _11a.m(_196,_190))){
_195=_18e.getNumLines();
}
_190=this.tickLabeler.font.getHeight()*_195+3;
_191=this.tickLabeler.valign;
}else{
if("stagger".CPVisEngineEquals(this.method)){
_190*=2;
}
var _197=this.tickLabeler.calculateLabelSize(tick.name).width+this.tickLabeler.padding.getHorizontal();
if(_197<_190*0.75){
_190=_197+3;
}
}
_192=_182>0?cx+_190:cx-_190;
if("middle".CPVisEngineEquals(_191)){
_192=_182>0?cx+_190/2:cx-_190/2;
}
}
if(_182>0&&_192>_187){
_185=new _123.m(_183.top,_183.left,_183.bottom,_192-_187);
}
if(_182==0&&_192<0){
var _198=-_192;
var _199=this.coordinates.getAxisForDimension(0);
if(_199!=null){
if(-_192>_199.tickHeight){
_198=Math.abs(-_192-_199.tickHeight);
}else{
_198=_183.left;
}
}
_185=new _123.m(_183.top,_198,_183.bottom,_183.right);
}
}
return _185;
},makeAxisLine:function(_19a){
var line;
if(this.drawPosition==0){
var x=(this.drawOppositeSide)?_19a.width:0;
line=_122.m.makeLine(x,0,x,_19a.height,this.axisSpec.lineStyle);
}else{
var y=(this.drawOppositeSide)?-_19a.height:0;
line=_122.m.makeLine(0,y,_19a.width,y,this.axisSpec.lineStyle);
}
if(this.coordinates.insideAxes){
return this.coordinates.modifyShape(line,_19a);
}
return line;
},makeGridShapes:function(_19b,_19c,_19d,_19e,_19f){
var tick=this.ticks.get(_19c);
var span=this.makeParallelSpanForTick(this.ticks,_19c,_19b,_19d);
var line=null;
var _1a0=new Array(1);
if(this.coordinates.insideAxes){
if(_19e){
return this.makeStraightPolarGridLines(_19f,tick,_19b);
}else{
if(this.isRadialAxis()){
var y=tick.getLocation(_19b,true);
line=_122.m.makeLine(0,y,_19b.width,y,this.axisSpec.gridStyle);
}else{
var x=tick.getLocation(_19b,false);
line=_122.m.makeLine(x,0,x,_19b.height,this.axisSpec.gridStyle);
}
}
_1a0[0]=this.coordinates.modifyShape(line,_19b);
}else{
if(this.coordinates.containsCluster()&&(this.drawPosition==1||(this.drawPosition==0&&this.coordinates.containsTranspose()))){
var x=span.mid();
var _1a1=this.drawPosition==0?_19b.height:-_19b.height;
line=_122.m.makeLine(x,0,x,_1a1,this.axisSpec.gridStyle);
_1a0[0]=this.modifyShape(line,_19b,_19c,_19d);
}else{
if(this.drawPosition==0){
var _1a2;
if(this.coordinates.containsTranspose()&&"between".CPVisEngineEquals(this.axisSpec.method)){
if(_19c==0){
return null;
}
_1a2=1-span.min/_19b.width;
}else{
_1a2=tick.location;
}
var y=(1-_1a2)*_19b.height;
_1a0[0]=_122.m.makeLine(0,y,_19b.width,y,this.axisSpec.gridStyle);
}else{
var x;
if("between".CPVisEngineEquals(this.axisSpec.method)){
if(_19c==0){
return null;
}
x=span.min;
}else{
x=span.mid();
}
_1a0[0]=_122.m.makeLine(x,0,x,-_19b.height,this.axisSpec.gridStyle);
}
}
}
return _1a0;
},makeTickLabel:function(_1a3,_1a4,_1a5,_1a6){
var tick=this.ticks.get(_1a3);
var _1a7=this.tickLabeler.calculateLabelSize(tick.name).height;
if(!this.getScale().isCategorical()){
this.tickLabeler.isCategorical=false;
}
if(this.coordinates.insideAxes){
var p=this.getTickPosition(_1a4,tick,_1a7);
var text;
if("vertical".CPVisEngineEquals(this.method)){
text=tick.makeText(p,"end","middle",this.tickLabeler,this.axisSpec.tickStyle,_1a4,true);
text.vertical=true;
text.tickLabelOrientation="vertical";
}else{
if("horizontal".CPVisEngineEquals(this.method)){
text=tick.makeText(p,"middle","middle",this.tickLabeler,this.axisSpec.tickStyle,_1a4,true);
text.tickLabelOrientation="horizontal";
}else{
text=tick.makeText(p,"middle","middle",this.tickLabeler,this.axisSpec.tickStyle,_1a4,true);
text.tickLabelOrientation="auto";
}
}
return this.coordinates.modifyShape(text,_1a4);
}else{
if(this.drawPosition==0&&!this.coordinates.transposesAxes()){
if(this.isOverlappingTick&&!this.coordinates.containsCluster()){
if(_1a3==0){
return null;
}
}
var _1a8=this.tickHeight-this.getTitleSize();
var y=(1-tick.location)*_1a4.height;
var _1a9;
if(this.outsideTickLabels&&(_1a3==0||_1a3==this.ticks.size()-1)){
_1a9=_1a7;
}else{
_1a9=_1a4.height*_1a5;
}
var _1aa=(this.drawOppositeSide)?_1a4.width+_1a8+this.tickMarkSize+this.spacing:0;
var _1ab=new _125.m(-_1a8+this.offset+_1aa,y-_1a9/2,_1a8-this.tickMarkSize-this.spacing,_1a9);
_1ab=this.modifyShape(_1ab,_1a4,_1a3,_1a6);
if(_1ab==null){
return null;
}
return this.tickLabeler.makeSimpleLabel(tick.name,_1ab);
}else{
return this.makeTickLabelXAxis(_1a3,_1a4,_1a6);
}
}
},getTickPosition:function(_1ac,tick,_1ad){
var p=new _11c.m(0,0);
if(this.isRadialAxis()){
var _1ae=this.coordinates.axes[1];
var _1af=_1ae.ticks;
var _1b0=_1af.get(0);
p.x=_1b0.location*_1ac.width;
p.y=(1-tick.location)*_1ac.height;
}else{
p.x=tick.location*_1ac.width;
p.y=-this.tickMarkSize-this.spacing-_1ad;
}
return p;
},makeTickLabelXAxis:function(_1b1,_1b2,_1b3){
var span=this.makeParallelSpanForTick(this.ticks,_1b1,_1b2,_1b3);
var _1b4=this.getTitleSize();
if(_1b4>0){
_1b4-=this.spacing/2;
}
var _1b5=this.computeMaxTickSize();
var _1b6=_1b5.height;
var top=this.tickMarkSize+this.spacing;
var _1b7=this.tickHeight-_1b4;
var _1b8=0;
if(this.drawOppositeSide){
_1b8=_1b2.height+top+_1b7+2*this.offset;
}
if("stagger".CPVisEngineEquals(this.method)){
if(_1b1%2>0){
top+=_1b6;
if(this.drawOppositeSide){
_1b8+=_1b6;
}
}else{
_1b7-=_1b6;
if(this.drawOppositeSide){
_1b8-=_1b6;
}
}
var _1b9=this.tickLabeler.align;
if("start".CPVisEngineEquals(_1b9)){
span=span.unionValue(span.max+span.range);
}else{
if("end".CPVisEngineEquals(_1b9)){
span=span.unionValue(span.min-span.range);
}else{
span=span.expand(span.range/2);
}
}
}
var _1ba;
var ht;
var _1bb;
if(this.outsideTickLabels&&(_1b1==0||_1b1==this.ticks.size()-1)){
ht=Math.max(_1b5.width,_1b5.height);
_1bb=Math.max(span.range,ht);
}else{
ht=_1b7-top;
_1bb=span.range;
}
if(this.coordinates.transposesAxes()&&this.whichScale>0){
var _1bc=_1b2.height/_1b2.width;
if(this.drawOppositeSide){
_1b8=_1b2.width+top+_1b7+2*this.offset;
}
var cy=_1b2.height+(top+this.offset-_1b8)*_1bc;
var cw=ht*_1bc;
_1ba=new _125.m(span.min,cy,_1bb,cw);
}else{
_1ba=new _125.m(span.min,top+this.offset-_1b8,_1bb,ht);
}
var tick=this.ticks.get(_1b1);
var _1bd=null;
if("vertical".CPVisEngineEquals(this.method)){
_1ba.y=-_1ba.y;
_1ba=this.modifyTickLabelPosition(_1b1,_1b2,_1b3,_1ba);
if(_1ba==null){
return null;
}
_1bd=this.tickLabeler.makeSimpleRotatedLabel(tick.name,_1ba);
}else{
var _1be=this.modifyShape(_1ba,_1b2,_1b1,_1b3);
if(_1be==null){
return null;
}
_1bd=this.tickLabeler.makeSimpleLabel(tick.name,_1ba);
}
return _1bd;
},modifyTickLabelPosition:function(_1bf,_1c0,_1c1,_1c2){
var c=_1c2.getCenter();
var r=new _125.m(c.x,c.y,0,0);
r=this.modifyShape(r,_1c0,_1bf,_1c1);
if(r==null){
return null;
}
_1c2.x+=r.x-c.x;
_1c2.y+=r.y-c.y;
return _1c2;
},makeAxisTitle:function(_1c3){
var _1c4=this.getTitleSize();
if(this.coordinates.insideAxes||this.titleLabeler==null){
return null;
}else{
if(this.drawPosition==0){
var _1c5=(this.drawOppositeSide)?_1c3.width+2*this.tickHeight-_1c4:0;
var r=new _125.m(-this.tickHeight-this.offset+_1c5,0,_1c4,_1c3.height);
return this.titleLabeler.makeRotatedLabel(this.axisSpec.title,r);
}else{
var _1c6=(this.drawOppositeSide)?_1c3.height+2*this.tickHeight:0;
var r=new _125.m(0,this.tickHeight-_1c4-_1c6,_1c3.width,_1c4+2*this.offset);
return this.titleLabeler.makeLabel(this.axisSpec.title,r);
}
}
},makeTickShape:function(_1c7,_1c8,_1c9,_1ca,_1cb){
var _1cc=this.axisSpec.boxStyle;
var _1cd;
if(_1cc!=null){
_1cd=null;
}else{
if(_1cb){
_1cd=this.axisSpec.minorStyle;
}else{
_1cd=this.axisSpec.markStyle;
}
}
var _1ce=(_1cb)?this.getScale().makeMinorTicks():this.ticks;
var tick=_1ce.get(_1c7);
if(this.coordinates.insideAxes){
var x=tick.location*_1c8.width;
var d=Math.abs(_1ce.get(0).location-_1ce.get(1).location)*_1c8.width/4;
var ht=2*(_1c9+this.tickLabeler.font.getHeight());
var r=_122.m.makeRectangle(x-d/2,-ht,d,ht,_1cd);
return this.coordinates.modifyShape(r,_1c8);
}else{
if(this.drawPosition==0&&!this.coordinates.transposesAxes()){
if(this.isOverlappingTick&&!this.coordinates.containsCluster()){
if(_1c7==this.ticks.size()-1){
return null;
}
}
if(_1cc!=null){
var span=this.makeParallelSpanForTick(_1ce,_1c7,_1c8,_1ca);
return this.makeBox(span,_1c8,_1cc);
}
var _1cf=(this.parents==null||this.parents.length==0)?_1c8.height:_1c8.height/this.axisDrawCount;
var y=(1-tick.location+_1ca)*_1cf;
var loc=this.getTickPerpendicularLocation(-_1c9,_1cd,_1c8);
var _1d0=(this.drawOppositeSide)?_1c8.width:0;
return _122.m.makeLine(loc[0]+this.offset+_1d0,y,loc[1]+this.offset+_1d0,y,_1cd);
}else{
var span=this.makeParallelSpanForTick(_1ce,_1c7,_1c8,_1ca);
if(_1cc!=null){
return this.makeBox(span,_1c8,_1cc);
}
var x=span.mid();
if("between".CPVisEngineEquals(this.axisSpec.method)){
if(_1c7==0){
return null;
}
x=span.min;
}
var loc=this.getTickPerpendicularLocation(_1c9,_1cd,_1c8);
var _1d1=(this.drawPosition==0)?0:this.offset;
var _1d2=(this.drawOppositeSide)?_1c8.height+2*this.offset:0;
return _122.m.makeLine(x,loc[0]+_1d1-_1d2,x,loc[1]+_1d1-_1d2,_1cd);
}
}
},makeBox:function(span,_1d3,_1d4){
var _1d5=this.getTitleSize();
if(_1d5>0){
_1d5-=this.spacing/2;
}
var ht=this.tickHeight;
ht=this.tickHeight-_1d5;
var _1d6;
if(this.drawPosition==0&&!this.coordinates.transposesAxes()){
var _1d7=0;
if(this.drawOppositeSide){
_1d7=_1d3.width+ht;
}
_1d6=_122.m.makeRectangle(-ht+_1d7,span.min,ht,span.range,_1d4);
}else{
var _1d8=0;
if(this.drawOppositeSide){
_1d8=_1d3.height+2*this.offset+this.tickHeight;
}
if(this.coordinates.transposesAxes()){
var _1d9=_1d3.height/_1d3.width;
if(this.drawOppositeSide){
_1d8=_1d3.width+2*this.offset+this.tickHeight;
}
var cy=_1d3.height+(this.offset-_1d8)*_1d9;
var cw=ht*_1d9;
_1d6=_122.m.makeRectangle(span.min,cy,span.range,cw,_1d4);
}else{
_1d6=_122.m.makeRectangle(span.min,this.offset-_1d8,span.range,ht,_1d4);
}
}
_1d6.applyStrokeFix=true;
return _1d6;
},makeParallelSpanForTick:function(_1da,_1db,_1dc,_1dd){
var x;
var gap=_1dc.width;
if(this.parents!=null&&this.parents.length>0){
var info=this.tickInfo[_1dd][_1db];
x=info.pos.base[1]*_1dc.width;
var _1de=this.parents[this.parents.length-1].getTicks();
if(_1de!=null){
gap=_1dc.width/_1de.size();
}
}else{
var _1df=(this.drawPosition==0&&!this.coordinates.transposesAxes())?_1dc.height:_1dc.width;
var tick=_1da.get(_1db);
x=tick.location*_1df;
if(_1da.size()>1){
if(_1db==0){
gap=Math.abs(_1da.get(1).location-tick.location)*_1df;
}else{
gap=Math.abs(tick.location-_1da.get(_1db-1).location)*_1df;
}
}
}
if("vertical".CPVisEngineEquals(this.method)&&this.geometry.len<200){
gap+=4;
}
return new _126.m(x-gap/2,x+gap/2);
},getTickPerpendicularLocation:function(len,spec,_1e0){
var _1e1=Array.create([2],0);
var _1e2=(spec!=null&&spec.align!=null)?spec.align:"start";
if("start".CPVisEngineEquals(_1e2)){
_1e1[0]=(this.drawOppositeSide)?-len:0;
_1e1[1]=(this.drawOppositeSide)?0:len;
}
if("middle".CPVisEngineEquals(_1e2)){
_1e1[0]=-len/2;
_1e1[1]=len/2;
}
if("end".CPVisEngineEquals(_1e2)){
_1e1[0]=(this.drawOppositeSide)?0:-len;
_1e1[1]=(this.drawOppositeSide)?len:0;
}
if(this.coordinates.transposesAxes()&&this.whichScale>0){
var _1e3=_1e0.height/_1e0.width;
_1e1[0]=_1e0.height+_1e1[0]*_1e3;
_1e1[1]=_1e0.height+_1e1[1]*_1e3;
}
return _1e1;
},defineAxisLayout:function(_1e4,_1e5){
this.adjustTickMarkSize(_1e5);
this.tickHeight=this.calculateAxisHeight(_1e5);
var _1e6=this.tickMarkSize+this.spacing+this.getTitleSize();
var _1e7=(this.drawPosition==0)?_1e4.width-this.tickHeight:_1e4.height-this.tickHeight;
var _1e8;
if(this.outsideTickLabels){
_1e8=true;
}else{
_1e8=this.hasSpaceForTickLabels(_1e4,_1e5)&&_1e7>=this.getReservedChartSpace();
}
if(this.whichScale>1&&!_1e8&&this.drawPosition==1&&this.coordinates.containsCluster()){
this.modifyParentAxesMethod(_1e4,_1e5,_1e7,this.whichScale-1);
_1e7=_1e4.height-this.tickHeight;
if(this.outsideTickLabels){
_1e8=true;
}else{
_1e8=this.hasSpaceForTickLabels(_1e4,_1e5)&&_1e7>=this.getReservedChartSpace();
}
}
if(this.drawTicks){
this.drawTicks=_1e8;
}
if(!this.drawTicks){
this.tickHeight=_1e6;
_1e7=(this.drawPosition==0)?_1e4.width-_1e6:_1e4.height-_1e6;
}
this.tickHeight=Math.ceil(this.tickHeight);
if(this.coordinates.containsCluster()){
if(_1e7<(_1e5/3)){
this.reduceAxesSize(_1e4,_1e5);
}
this.calculateOffsetAndDefineParents();
}
},hasSpaceForTickLabels:function(_1e9,_1ea){
var _1eb=true;
if(this.tickLabeler!=null){
var _1ec=_1e9.height*_1e9.width/_1ea;
var _1ed=this.tickLabeler.font.getHeight()+this.tickLabeler.padding.getVertical();
if(_1ed*2.5>_1ec){
_1eb=false;
}
}
return _1eb;
},calculateAxisHeight:function(_1ee){
this.calculatedMaxTickLabelSize=new _11a.m(0,0);
var _1ef=0;
var _1f0=0;
var _1f1=this.tickMarkSize+this.spacing+this.getTitleSize();
this.ticks=(this.spans!=null&&this.spans.size()>0)?this.getScale().getTicksForSpans(this.spans):this.getScale().getTicks();
if(Axis.isStyleDefined(this.axisSpec.tickStyle,true)){
var _1f2=this.computeMaxTickSize();
_1ef=_1f2.width+3;
_1f0=_1f2.height;
}
if(this.drawPosition==0){
this.method="horizontal";
_1f1+=_1ef+this.tickLabeler.padding.getHorizontal();
}else{
if(this.drawPosition==1){
if("vertical".CPVisEngineEquals(this.method)){
_1f1+=_1ef+this.tickLabeler.padding.getHorizontal();
this.tickLabeler.valign=this.tickAlign==null?"middle":this.tickAlign;
this.tickLabeler.align=(this.drawOppositeSide)?"start":"end";
}else{
if("stagger".CPVisEngineEquals(this.method)){
_1f1+=_1f0*2+this.tickLabeler.padding.getVertical();
}else{
_1f1+=_1f0+this.tickLabeler.padding.getVertical();
}
}
}
}
if((this.axisSpec.preferredSize!=null)&&!(_117.m.isEmpty(this.axisSpec.preferredSize))){
var _1f3="stagger".CPVisEngineEquals(this.method)||"horizontal".CPVisEngineEquals(this.method);
_1f1=_127.m.getPreferredSize(this.axisSpec.preferredSize,_1f1,_1f3,_1ee);
}else{
if(_1f1>_1ee/3&&_1ee>200){
_1f1=_1ee/3;
}else{
if(_1f1>_1ee/2&&this.drawPosition==1){
_1f1=_1ee/2;
}else{
if(_1f1>2*_1ee/3&&this.drawPosition==0){
_1f1=2*_1ee/3;
}
}
}
}
return _1f1;
},adjustTickMarkSize:function(_1f4){
if(this.axisSpec.markStyle!=null&&this.axisSpec.markStyle.size!=null&&_11d.m.isString(this.axisSpec.markStyle.size)){
var str=this.axisSpec.markStyle.size;
if(str.CPVISEngineEndsWith("%%")){
this.tickMarkSize=this.getTickMarkSize(this.axisSpec,this.tickLabeler.font.getHeight(),_1f4);
}
}
if(this.axisSpec.minorStyle!=null&&this.axisSpec.minorStyle.size!=null&&_11d.m.isString(this.axisSpec.minorStyle.size)){
var str=this.axisSpec.minorStyle.size;
if(str.CPVISEngineEndsWith("%%")){
this.minorMarkSize=Axis.getMinorTickMarkSize(this.axisSpec,this.tickLabeler.font.getHeight(),this.tickMarkSize,_1f4);
}
}
},calculateOffsetAndDefineParents:function(){
this.offset=0;
for(var _1f5=0,_1f6=this.coordinates.axes,_1f7=_1f6.length;_1f5<_1f7;++_1f5){
var axis=_1f6[_1f5];
if(axis.whichScale>this.whichScale&&axis.drawPosition==this.drawPosition&&this.drawOppositeSide==axis.drawOppositeSide){
this.offset+=axis.tickHeight;
}
}
var n=0;
if(this.coordinates.scales.length>2){
for(var i=0;i<this.coordinates.scales.length;++i){
if(i>0&&i<this.whichScale){
n++;
}
}
this.parents=new Array(n);
for(var i=0;i<this.coordinates.scales.length;++i){
if(i>0&&i<this.whichScale){
this.parents[--n]=this.coordinates.scales[i];
}
}
}
},modifyParentAxesMethod:function(_1f8,_1f9,_1fa,_1fb){
if(_1fb<1){
return;
}
var _1fc=new _128.m();
for(var _1fd=0,_1fe=this.coordinates.axes,_1ff=_1fe.length;_1fd<_1ff;++_1fd){
var axis=_1fe[_1fd];
if(axis.whichScale<this.whichScale&&axis.drawOppositeSide==this.drawOppositeSide&&axis.drawPosition==this.drawPosition){
_1fc.add(axis);
}
}
if(_1fc.size()==0){
return;
}
if(this.hasSpaceForTickLabels(_1f8,_1f9)&&_1fa>=this.getReservedChartSpace()){
return;
}
_1f8.height=_1f9;
for(var _200=0,_201=_1fc.size();_200<_201;++_200){
var axis=_1fc.get(_200);
if(axis.whichScale==_1fb){
var spec=axis.axisSpec;
var _202=(spec!=null&&spec.method!=null)?spec.method:"auto";
if("auto".CPVisEngineEquals(_202)||"between".CPVisEngineEquals(_202)){
if("vertical".CPVisEngineEquals(axis.method)){
axis.method="horizontal";
axis.tickLabeler.align="middle";
axis.tickHeight=axis.calculateAxisHeight(_1f9);
axis.modifyInnerCellSize(_1f8,false);
}
}
}else{
axis.modifyInnerCellSize(_1f8,false);
}
}
this.tickHeight=this.calculateAxisHeight(_1f9);
this.modifyParentAxesMethod(_1f8,_1f9,_1f8.height-this.tickHeight,_1fb-1);
},reduceAxesSize:function(_203,_204){
var _205=new _128.m();
_205.add(this);
for(var _206=0,_207=this.coordinates.axes,_208=_207.length;_206<_208;++_206){
var axis=_207[_206];
if(axis.whichScale<this.whichScale&&axis.drawPosition==this.drawPosition){
_205.add(axis);
}
}
if(this.drawPosition==0){
_203.x=0;
_203.width=_204;
}else{
_203.height=_204;
}
var _209=(2*_204/3);
var _20a=_205.size();
var _20b=new _128.m();
for(var _20c=0,_20d=_205.size();_20c<_20d;++_20c){
var axis=_205.get(_20c);
if(axis.tickHeight<=(_209/_20a)){
if(axis!=this){
axis.modifyInnerCellSize(_203,false);
}
_209-=axis.tickHeight;
_20a--;
}else{
_20b.add(axis);
}
}
_20a=_20b.size();
for(var _20e=0,_20f=_20b.size();_20e<_20f;++_20e){
var axis=_20b.get(_20e);
axis.tickHeight=Math.floor(_209/_20a);
if(axis!=this){
axis.modifyInnerCellSize(_203,false);
}
}
},computeMaxTickSize:function(){
if(this.calculatedMaxTickLabelSize.hasSize()){
return this.calculatedMaxTickLabelSize;
}
var _210=0;
var _211=0;
for(var _212=0,_213=this.ticks,_214=_213.size();_212<_214;++_212){
var tick=_213.get(_212);
var _215=this.tickLabeler.calculateLabelSize(tick.name);
_210=Math.max(_210,_215.width);
_211=Math.max(_211,_215.height);
}
this.calculatedMaxTickLabelSize=new _11a.m(_210,_211);
return this.calculatedMaxTickLabelSize;
},getTitleSize:function(){
if(this.coordinates.insideAxes||this.axisSpec.title==null){
return 0;
}
var _216=this.spacing;
if(this.titleLabeler!=null&&this.titleLabeler.font!=null){
var _217=this.titleLabeler.makeLabelString(this.axisSpec.title,-1);
_216=this.titleLabeler.calculateLabelSize(_217).height+this.titleLabeler.padding.bottom+this.titleLabeler.padding.top+this.spacing;
}
return _216;
},giveSizeInfoToScale:function(){
var _218=this.getScale().computeMaxSpanTickLength(this.tickLabeler.font);
var _219=_218/2+this.tickLabeler.padding.getHorizontal();
var _21a=_218+this.tickLabeler.padding.getHorizontal();
var _21b=this.tickLabeler.font.getHeight()+this.tickLabeler.padding.getVertical();
if("vertical".CPVisEngineEquals(this.method)){
this.geometry.ticksNoSmallerThan(_21b+0.5);
}else{
if("stagger".CPVisEngineEquals(this.method)){
this.geometry.ticksNoSmallerThan(_219+0.5);
}else{
if("horizontal".CPVisEngineEquals(this.method)){
this.geometry.ticksNoSmallerThan(Math.min(_21b,_21a)+0.5);
}else{
if(this.geometry.isYAxis){
this.geometry.ticksNoSmallerThan(_21b+0.5);
}else{
this.geometry.ticksNoSmallerThan(Math.min(_21b,_219)+0.5);
}
}
}
}
},resolveAutoMethod:function(_21c){
if(this.coordinates.insideAxes&&this.coordinates.containsPolar()){
return;
}
var _21d=_21c.width;
var _21e=this.getScale();
var _21f=0;
if(this.whichScale>1){
_21f=this.getTickCountForInnerAxis(this.whichScale);
}else{
_21f=_21e.computeTickCountForExtent(this.geometry);
}
_21d=this.coordinates.getAvailableWidth(_21d,_21f);
var _220=_21e.computeMaxSpanTickLength(this.tickLabeler.font);
if((_21f<=0)||((_21d/_21f)>=_220+this.tickLabeler.padding.getHorizontal())){
this.method="horizontal";
}else{
if(_21f>2&&((_21d/_21f)*2)>=_220){
this.method=(this.axisSpec.boxStyle==null&&_21c.height>100)?"stagger":"vertical";
}else{
this.method="vertical";
}
}
},getTickCountForInnerAxis:function(_221){
var _222=this.coordinates.scales;
var _223=1;
for(var i=1;i<=_221&&i<_222.length;++i){
_223*=_222[i].computeTickCountForExtent(this.geometry);
}
return _223;
},getHierarchicalFieldIDs:function(){
if(this.parents==null){
return [this.coordinates.coordinateFieldIDs[this.whichScale]];
}
var _224=new Array(this.parents.length+1);
for(var i=0;i<=this.parents.length;++i){
_224[i]=this.coordinates.coordinateFieldIDs[i+1];
}
return _224;
},getReservedChartSpace:function(){
if(this.isPreferredOrMinSpecified()){
return 0;
}
return 40;
},isPreferredOrMinSpecified:function(){
var _225=this.axisSpec.preferredSize;
if(_225!=null){
return _225.min!=null||_225.preferred!=null;
}
return false;
}});
Axis.getMinorTickMarkSize=function(spec,_226,_227,_228){
if(_227==0){
return _226/6;
}
if(spec.minorStyle==null||spec.minorStyle.size==null){
return _227/2;
}
return _11b.m.convertLength(spec.minorStyle.size,_227/2,_228);
};
Axis.getTickLabelBounds=function(item){
var _229=_11d.m.getItem(item,"shape");
var _22a=_11d.m.getItem(_229,"x");
var _22b=_11d.m.getItem(_229,"y");
var _22c=_11d.m.getItem(_229,"width");
var _22d=_11d.m.getItem(_229,"height");
if(_22a==null||_22b==null||_22c==null||_22d==null){
return null;
}
var _22e=_11e.m.fromJSON(_11d.m.getItem(item,"transform"));
if(_22e==null){
_22e=_11e.m.identity();
}
var _22f=_11d.m.getItem(item,"align");
var x=_22a;
var y=_22b;
var _230=_22c;
var _231=_22d;
var _232=x;
var _233=y;
if("middle".CPVisEngineEquals(_22f)){
_232-=_230/2;
}else{
if("end".CPVisEngineEquals(_22f)){
_232-=_230;
}
}
var _234=new Array(4);
_234[0]=_22e.transform(_232,_233);
_234[1]=_22e.transform(_232+_230,_233);
_234[2]=_22e.transform(_232+_230,_233-_231);
_234[3]=_22e.transform(_232,_233-_231);
return _234;
};
Axis.doTickLabelsOverlap=function(_235,_236){
if(_235!=null&&_236!=null){
var _237=Math.min(_235[0].x,Math.min(_235[1].x,Math.min(_235[2].x,_235[3].x)));
var _238=Math.min(_235[0].y,Math.min(_235[1].y,Math.min(_235[2].y,_235[3].y)));
var _239=Math.max(_235[0].x,Math.max(_235[1].x,Math.max(_235[2].x,_235[3].x)));
var _23a=Math.max(_235[0].y,Math.max(_235[1].y,Math.max(_235[2].y,_235[3].y)));
var _23b=Math.min(_236[0].x,Math.min(_236[1].x,Math.min(_236[2].x,_236[3].x)));
var _23c=Math.min(_236[0].y,Math.min(_236[1].y,Math.min(_236[2].y,_236[3].y)));
var _23d=Math.max(_236[0].x,Math.max(_236[1].x,Math.max(_236[2].x,_236[3].x)));
var _23e=Math.max(_236[0].y,Math.max(_236[1].y,Math.max(_236[2].y,_236[3].y)));
if(!(_237>_23d||_238>_23e||_239<_23b||_23a<_23c)){
for(var i=0;i<=3;++i){
if(Axis.isPointInPolygon(_235[i],_236)||Axis.isPointInPolygon(_236[i],_235)){
return true;
}
}
}
}
return false;
};
Axis.isPointInPolygon=function(_23f,poly){
var _240=false;
var i,j;
var _241,_242,_243,_244;
for(i=0,j=poly.length-1;i<poly.length;j=i++){
_243=poly[j].x;
_244=poly[j].y;
_241=poly[i].x;
_242=poly[i].y;
if((((_242<=_23f.y)&&(_23f.y<_244))||((_244<=_23f.y)&&(_23f.y<_242)))&&(_23f.x<(_243-_241)*(_23f.y-_242)/(_244-_242)+_241)){
_240=!_240;
}
}
return _240;
};
Axis.addGroup=function(_245,type){
var _246=_11d.m.createJSONObject();
var _247=_11d.m.createJSONArray();
_11d.m.put(_246,"type",type);
_11d.m.put(_246,"children",_247);
_245.push(_246);
return _246;
};
Axis.isStyleDefined=function(_248,_249){
if(_248==null){
return _249;
}else{
if(_117.m.isEmpty(_248)){
return false;
}
}
return true;
};
_129.add("com/ibm/vis/engine/internal/grammar/scale/Axis",["com/ibm/vis/engine/internal/nativeImpl/SpecUtil","com/ibm/vis/engine/internal/grammar/units/UnitConverter","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/Affine"],function(){
Axis.MIN_CHARTSPACE_PERMITTED=40;
Axis.TICK_METHOD_VERTICAL="vertical";
Axis.TICK_METHOD_HORIZONTAL="horizontal";
Axis.TICK_METHOD_STAGGER="stagger";
Axis.TICK_METHOD_BETWEEN="between";
Axis.TICK_METHOD_AUTO="auto";
});
return Axis;
});
},"com/ibm/vis/engine/internal/layout/NoLayout":function(){
define("com/ibm/vis/engine/internal/layout/NoLayout",["./ContentLayout","com/ibm/init/fork!../struct/Dim","com/ibm/init/statics","dojo/_base/declare"],function(_24a,_24b,_24c,_24d){
var _24e=_24d("com.ibm.vis.engine.internal.layout.NoLayout",[_24a],{layout:function(_24f,_250,_251){
},getPreferredSize:function(_252){
return new _24b.m(0,0);
},getMinimumSize:function(_253){
return new _24b.m(0,0);
},getMaximumSize:function(_254){
return new _24b.m(0,0);
}});
_24c.add("com/ibm/vis/engine/internal/layout/NoLayout",["com/ibm/vis/engine/internal/layout/ContentLayout"],function(){
_24e.INSTANCE=new _24e();
});
return _24e;
});
},"com/ibm/vis/engine/internal/legend/HorizontalSwatchLegend":function(){
define("com/ibm/vis/engine/internal/legend/HorizontalSwatchLegend",["./SwatchLegend","com/ibm/init/statics","dojo/_base/declare"],function(_255,_256,_257){
var _258=_257("com.ibm.vis.engine.internal.legend.HorizontalSwatchLegend",[_255],{constructor:function(_259,_25a,_25b,vis){
},makePositions:function(_25c){
},makeData:function(_25d,_25e,_25f,_260,_261){
return null;
},reduceTickCount:function(){
return false;
}});
return _258;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/DAGInLayerLinkHandling":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/DAGInLayerLinkHandling",["com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!../../../nativeImpl/BasicFactory","com/ibm/init/fork!./LinkComparator","com/ibm/init/fork!./Link","com/ibm/init/fork!./Node","com/ibm/init/fork!./DAGNodeInfoSameLayer","com/ibm/init/fork!./NodeComparator","com/ibm/init/fork!../../../nativeImpl/HashcodeMap","com/ibm/init/statics","dojo/_base/declare"],function(_262,_263,_264,_265,_266,_267,_268,_269,_26a,_26b){
var _26c=_26b("com.ibm.vis.engine.internal.grammar.layout.graph.DAGInLayerLinkHandling",null,{});
_26c.insertDummyNodesForLinksInLayers=function(_26d,_26e,_26f){
var _270=new _262.m();
for(var _271=0,_272=_26e.length;_271<_272;++_271){
var node=_26e[_271];
_270.add(node);
}
var _273=new Array(_26d.length);
for(var l=0;l<_26d.length;++l){
_273[l]=new _262.m();
}
var _274=new _262.m();
for(var _275=0,_276=_26f.length;_275<_276;++_275){
var link=_26f[_275];
if(link.getSpan()==0){
_273[link.from.layer].add(link);
var _277=_26d[link.from.layer];
var _278=link.from.x;
var toX=link.to.x;
var _279=true;
for(var idx=0;idx<_277.length;++idx){
var n=_277[idx];
if((n.x>_278&&n.x<toX)||(n.x<_278&&n.x>toX)){
_279=false;
break;
}
}
if(_279){
var _27a=true;
if(_27a){
_274.add(link);
}else{
_26c.divideLinkSameLayer(_270,_274,link);
}
}else{
_26c.divideLinkSameLayer(_270,_274,link);
}
}else{
_274.add(link);
}
}
var _27b=new _262.m();
_27b.add(_270.toArray(new Array(_270.size())));
_263.m.sortList(_274,new _264.m());
_27b.add(_274.toArray(new Array(_274.size())));
return _27b;
};
_26c.divideLinkSameLayer=function(_27c,_27d,link){
var _27e=_26c.makeFirstLinkSameLayer(_27c,_27d,link);
_27e=_26c.makeInteriorLinkSameLayer(_27c,_27d,link,_27e,_27e.layer);
_26c.makeFinalLink(_27d,link,_27e);
};
_26c.makeFinalLink=function(_27f,_280,_281){
var _282=new _265.m(_281,_280.to);
_282.reversed=_280.reversed;
_27f.add(_282);
_281.outLink=[_282];
_280.to.replaceInlink(_280,_282);
};
_26c.makeFirstLinkSameLayer=function(_283,_284,_285){
var next=new _266.m(-_283.size());
next.layer=_285.from.layer;
var _286=new _267.m();
_286.setOrigFrom(_285.from);
_286.setOrigTo(_285.to);
_286.setBelongsTo(_285.from);
next.info=_286;
next.setX(_285.from.x+(_285.to.x-_285.from.x)*0.1);
_283.add(next);
var _287=new _265.m(_285.from,next);
_287.reversed=_285.reversed;
_284.add(_287);
_285.from.replaceOutlink(_285,_287);
next.inLink=[_287];
return next;
};
_26c.makeInteriorLinkSameLayer=function(_288,_289,_28a,_28b,_28c){
var next=new _266.m(-_288.size());
next.layer=_28c;
var _28d=new _267.m();
_28d.setOrigFrom(_28a.from);
_28d.setOrigTo(_28a.to);
_28d.setBelongsTo(_28a.to);
next.info=_28d;
next.setX(_28a.from.x+(_28a.to.x-_28a.from.x)*(1-0.1));
_288.add(next);
var _28e=new _265.m(_28b,next);
_28e.reversed=_28a.reversed;
_289.add(_28e);
_28b.outLink=[_28e];
next.inLink=[_28e];
return next;
};
_26c.handleLayer=function(_28f,_290){
_263.m.sortList(_28f,new _264.m());
_263.m.sortList(_290,new _268.m());
var _291=new _269.m();
for(var _292=0,_293=_28f.size();_292<_293;++_292){
var link=_28f.get(_292);
var from=link.from;
var _294=from.info;
var to=link.to;
var _295=to.info;
var _296=Math.max(_294.getLevel(),_295.getLevel());
var _297=_26c.getInnerNodes(link,_290);
for(var _298=0,_299=_297.size();_298<_299;++_298){
var n=_297.get(_298);
var info=n.info;
_296=Math.max(info.getLevel(),_296);
}
_296++;
var nl=_291.get(to);
if(nl==null){
nl=new _262.m();
nl.add(from);
_291.put(to,nl);
}
if(nl.contains(from)){
_296+=1;
}
nl.add(from);
_294.setLevel(_296);
_295.setLevel(_296);
}
};
_26c.assignLevelToDummyNodesInSameLayer=function(_29a,_29b){
var _29c=new Array(_29a.length);
var _29d=new Array(_29a.length);
for(var l=0;l<_29a.length;++l){
_29c[l]=new _262.m();
_29d[l]=new _262.m();
}
for(var _29e=0,_29f=_29b.length;_29e<_29f;++_29e){
var link=_29b[_29e];
var from=link.from;
var _2a0=from.layer;
var to=link.to;
var _2a1=to.layer;
if(from.isDummy()&&to.isDummy()){
if(_2a0==_2a1){
_29c[_2a0].add(link);
if(!_29d[_2a0].contains(from)){
_29d[_2a0].add(from);
}
if(!_29d[_2a1].contains(to)){
_29d[_2a1].add(to);
}
}
}
}
for(var l=0;l<_29a.length;++l){
_26c.handleLayer(_29c[l],_29d[l]);
}
};
_26c.getInnerNodes=function(l,_2a2){
var from=l.from;
var to=l.to;
if(from.x>to.x){
var d=from;
from=to;
to=d;
}
var _2a3=-1;
var _2a4=-1;
for(var idx=0;idx<_2a2.size();++idx){
if(_2a2.get(idx).x>=from.x){
if(_2a3==-1){
_2a3=idx-1;
}else{
if(_2a2.get(idx).x>=to.x||idx==_2a2.size()){
_2a4=idx;
}
}
}
}
if((_2a3>-1&&_2a4>-1)&&Math.abs(_2a4-_2a3)>0){
return _26c.subList(_2a2,_2a3,_2a4);
}
return new _262.m();
};
_26c.subList=function(list,_2a5,_2a6){
var _2a7=new _262.m();
for(var j=_2a5;j<=_2a6;++j){
_2a7.add(list.get(j));
}
return _2a7;
};
_26a.add("com/ibm/vis/engine/internal/grammar/layout/graph/DAGInLayerLinkHandling",["com/ibm/vis/engine/internal/nativeImpl/List","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/grammar/layout/graph/LinkComparator","com/ibm/vis/engine/internal/grammar/layout/graph/NodeComparator"],function(){
_26c.DUMMY_NODES_X_OFFSET_FACTOR=0.1;
});
return _26c;
});
},"com/ibm/vis/exp/FeatureNavigation":function(){
define("com/ibm/vis/exp/FeatureNavigation",["dojo/_base/declare","../interaction/internal/SceneItemImpl"],function(_2a8,_2a9){
var _2aa=_2a8("com.ibm.vis.exp.FeatureNavigation",null,{visControl:null,baseId:null,constructor:function(_2ab,id){
this.visControl=_2ab;
this.baseId=id;
},getFirst:function(){
},nextGreaterX:function(_2ac,_2ad){
},nextGreaterY:function(_2ae,_2af){
},nextLesserX:function(_2b0,_2b1){
},nextLesserY:function(_2b2,_2b3){
},convertToSceneItem:function(_2b4){
var _2b5=new _2a9(_2b4);
var _2b6=this.visControl.getInteractivity();
_2b5=_2b6.decorate(_2b5);
return _2b5;
}});
_2aa.LIGHT_WEIGHT=0;
_2aa.NORMAL_WEIGHT=1;
_2aa.HEAVY_WEIGHT=2;
_2aa.FORWARD=1;
_2aa.REVERSE=-1;
_2aa.NOT_APPLICABLE=0;
_2aa.GREATER_X=1;
_2aa.GREATER_Y=2;
_2aa.LESSER_X=3;
_2aa.LESSER_Y=4;
return _2aa;
});
},"com/ibm/vis/engine/internal/nativeImpl/render/SVGFilters":function(){
define("com/ibm/vis/engine/internal/nativeImpl/render/SVGFilters",["dojo/_base/declare","dojox/gfx","../BasicFactory","dojo/_base/window","dojo/_base/lang","../../ColorUtil"],function(_2b7,g,BF,win,lang,_2b8){
SVGFilterCache={};
function _2b9(s,_2ba){
SVGFilterCache[s]=_2ba;
};
function _2bb(){
SVGFilterCache={};
};
function _2bc(_2bd){
for(var s in SVGFilterCache){
if(BF.isEqual(SVGFilterCache[s],_2bd)){
return s;
}
}
return null;
};
if(g.renderer=="svg"){
(function(){
var _2be=g.svg.xmlns.svg;
function _2bf(ns,_2c0){
if(win.doc.createElementNS){
return win.doc.createElementNS(ns,_2c0);
}else{
return win.doc.createElement(_2c0);
}
};
lang.extend(g.svg.Shape,{setEffect:function(_2c1,_2c2){
var _2c3=_2bc(_2c1);
if(_2c3==null){
var _2c4=this._getParentSurface(),defs=_2c4.defNode,_2c5=this.rawNode;
var id=g._base._getUniqueId();
var _2c6=this._createFilter(id,_2c1.width,_2c1.height);
defs.appendChild(_2c6);
var _2c7=[];
if(_2c1.shadow){
_2c7.push(this._addDropShadow(_2c6,_2c1.shadow));
}
if(_2c1.glow){
_2c7.push(this._addGlow(_2c6,_2c1.glow,_2c2));
}
_2c7.push("SourceGraphic");
if(_2c7.length){
var _2c8=this._createMerge(_2c7);
_2c6.appendChild(_2c8);
}
_2c5.setAttribute("filter","url(#"+id+")");
_2b9(id,_2c1);
}else{
this.rawNode.setAttribute("filter","url(#"+_2c3+")");
}
},_createFilter:function(id,_2c9,_2ca){
if(_2c9==null){
_2c9="150%";
}
if(_2ca==null){
_2ca="150%";
}
var _2cb=_2bf(_2be,"filter");
_2cb.setAttribute("id",id);
_2cb.setAttribute("width",_2c9);
_2cb.setAttribute("height",_2ca);
return _2cb;
},_createMerge:function(_2cc){
var _2cd=_2bf(_2be,"feMerge");
for(var i=0;i<_2cc.length;i++){
var _2ce=_2bf(_2be,"feMergeNode");
_2ce.setAttribute("in",_2cc[i]);
_2cd.appendChild(_2ce);
}
return _2cd;
},_addDropShadow:function(_2cf,_2d0){
var _2d1=_2bf(_2be,"feGaussianBlur");
_2d1.setAttribute("in","SourceAlpha");
_2d1.setAttribute("stdDeviation",_2d0.stdDev);
_2cf.appendChild(_2d1);
var _2d2=_2bf(_2be,"feOffset");
_2d2.setAttribute("result","shadow");
_2d2.setAttribute("dx",_2d0.dx);
_2d2.setAttribute("dy",_2d0.dy);
_2cf.appendChild(_2d2);
return "shadow";
},_addGlow:function(_2d3,glow,_2d4){
_2d3.setAttribute("height","150%");
_2d3.setAttribute("y","-25%");
var _2d5=glow.stdDev;
var size=0;
if(_2d4.type=="circle"){
size=_2d4.r*2/2+1;
}else{
if(_2d4.type=="rect"){
size=Math.min(_2d4.width,_2d4.height)/2+1;
}else{
if(_2d4.type=="path"){
size=6;
}
}
}
if(size>0){
_2d5=Math.min(_2d5,size);
}
var _2d6=glow.color;
if(typeof _2d6=="undefined"){
_2d6=_2b8.createDefaultGlowColor();
}
var c=_2b8.toCanonicalColor(_2d6);
var rgba=c.getRGBA();
var _2d7=_2bf(_2be,"feFlood");
_2d7.setAttribute("flood-opacity",rgba[3]);
_2d7.setAttribute("flood-color","rgb("+rgba[0]+","+rgba[1]+","+rgba[2]+")");
_2d3.appendChild(_2d7);
var _2d8=_2bf(_2be,"feComposite");
_2d8.setAttribute("in2","SourceAlpha");
_2d8.setAttribute("operator","in");
_2d3.appendChild(_2d8);
var _2d9=_2bf(_2be,"feGaussianBlur");
_2d9.setAttribute("stdDeviation",_2d5);
_2d3.appendChild(_2d9);
var _2da=_2bf(_2be,"feComponentTransfer");
var _2db=_2bf(_2be,"feFuncA");
_2da.setAttribute("result","transfer");
_2db.setAttribute("type","linear");
_2db.setAttribute("slope","2");
_2db.setAttribute("intercept","0");
_2da.appendChild(_2db);
_2d3.appendChild(_2da);
return "transfer";
}});
})();
}
});
},"com/ibm/vis/engine/internal/grammar/coordinate/TransposeTransform":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/TransposeTransform",["./CoordinateTransform","com/ibm/init/statics","dojo/_base/declare"],function(_2dc,_2dd,_2de){
var _2df=_2de("com.ibm.vis.engine.internal.grammar.coordinate.TransposeTransform",[_2dc],{isTranspose:function(){
return true;
},transformShape:function(_2e0,b,_2e1){
if(_2e0==null){
return null;
}
if(_2e0.isGlyphLike()){
var p=_2e0.getCenter();
var x=b.width-b.width*p.y/b.height;
var y=b.height*(1-p.x/b.width);
_2e0.affine(1,x-p.x,1,y-p.y,false);
}else{
_2e0.transpose(b);
}
return _2e0;
},inverseTransform:function(p,b,_2e2){
var x=b.width*(1-p[0]/b.height);
var y=b.height*(1-p[1]/b.width);
p[0]=y;
p[1]=x;
return p;
},calculateGapSize:function(_2e3,_2e4){
return 0;
}});
return _2df;
});
},"com/ibm/vis/engine/internal/struct/ShapeType":function(){
define("com/ibm/vis/engine/internal/struct/ShapeType",["com/ibm/init/fork!../nativeImpl/Map","com/ibm/init/fork!./MultiPartPoly","com/ibm/init/statics","dojo/_base/declare"],function(_2e5,_2e6,_2e7,_2e8){
var _2e9=_2e8("com.ibm.vis.engine.internal.struct.ShapeType",null,{name:null,flags:0,constructor:function(name,_2ea){
this.name=name;
this.flags=_2ea;
_2e9.ShapeMap.put(name,this);
}});
_2e9.makeShapeType=function(_2eb,_2ec){
return new _2e9(_2eb,_2ec);
};
_2e9.FindShapeTypeByName=function(_2ed){
if(_2ed!=null){
var _2ee=_2e9.ShapeMap.get(_2ed);
if(_2ee!=null){
return _2ee;
}
var name=_2e9.getCorrectSymbolName(_2ed);
_2ee=_2e9.ShapeMap.get(name);
if(_2ee!=null){
return _2ee;
}
}
return null;
};
_2e9.getCorrectSymbolName=function(name){
if(name!=null){
if(name.CPVISEngineStartsWith("rect")){
return "rect";
}else{
if(name.CPVISEngineStartsWith("poly")){
return "poly";
}else{
if(name.CPVISEngineStartsWith("star")){
return "star";
}else{
if(name.CPVISEngineStartsWith("tri")){
return "tri";
}
}
}
}
}
return name;
};
_2e9.CheckShapeFlags=function(type,flag){
var _2ef=_2e9.FindShapeTypeByName(type);
if(_2ef!=null&&(_2ef.flags&flag)!=0){
return true;
}
return false;
};
_2e9.usesActualDimensions=function(type){
return _2e9.CheckShapeFlags(type,1);
};
_2e9.IsTypeOrChildOf=function(name,_2f0){
var type=_2e9.getCorrectSymbolName(name);
var _2f1=_2e9.getCorrectSymbolName(_2f0);
if("rect".CPVisEngineEquals(_2f1)&&("rect".CPVisEngineEquals(type)||"square".CPVisEngineEquals(type))){
return true;
}
if("poly".CPVisEngineEquals(_2f1)&&("cross".CPVisEngineEquals(type)||"star".CPVisEngineEquals(type)||"tri".CPVisEngineEquals(type)||"poly".CPVisEngineEquals(type))){
return true;
}
if("path".CPVisEngineEquals(_2f1)&&("path".CPVisEngineEquals(type)||"i-beam".CPVisEngineEquals(type)||"t-beam".CPVisEngineEquals(type))){
return true;
}
if("text".CPVisEngineEquals(_2f1)&&("text".CPVisEngineEquals(type)||"multitext".CPVisEngineEquals(type))){
return true;
}
return (type==_2f1);
};
_2e7.add("com/ibm/vis/engine/internal/struct/ShapeType",["com/ibm/vis/engine/internal/nativeImpl/Map","com/ibm/vis/engine/internal/struct/MultiPartPoly"],function(){
_2e9.ImageName="image";
_2e9.EllipseName="ellipse";
_2e9.ShapeMap=new _2e5.m();
_2e9.ShapeTypes=[_2e9.makeShapeType("none",0),_2e9.makeShapeType("arc",0),_2e9.makeShapeType("circle",0),_2e9.makeShapeType("cross",0),_2e9.makeShapeType("i-beam",1),_2e9.makeShapeType("line",0),_2e9.makeShapeType("multitext",0),_2e9.makeShapeType(_2e6.m.MULTIPOLY_NAME,0),_2e9.makeShapeType("path",0),_2e9.makeShapeType("plus",0),_2e9.makeShapeType("poly",0),_2e9.makeShapeType("rect",1),_2e9.makeShapeType("schema",0),_2e9.makeShapeType("square",1),_2e9.makeShapeType("star",0),_2e9.makeShapeType("t-beam",1),_2e9.makeShapeType("text",0),_2e9.makeShapeType("tri",0),_2e9.makeShapeType("wedge",0),_2e9.makeShapeType(_2e9.ImageName,0),_2e9.makeShapeType(_2e9.EllipseName,0)];
});
return _2e9;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/DAGNodePlacementAlgorithm":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/DAGNodePlacementAlgorithm",["com/ibm/init/statics","dojo/_base/declare"],function(_2f2,_2f3){
var _2f4=_2f3("com.ibm.vis.engine.internal.grammar.layout.graph.DAGNodePlacementAlgorithm",null,{layoutNodes:function(_2f5,_2f6){
}});
return _2f4;
});
},"com/ibm/vis/engine/internal/struct/RasterEdgeDataXComparator":function(){
define("com/ibm/vis/engine/internal/struct/RasterEdgeDataXComparator",["../nativeImpl/Comparator","com/ibm/init/statics","dojo/_base/declare"],function(_2f7,_2f8,_2f9){
var _2fa=_2f9("com.ibm.vis.engine.internal.struct.RasterEdgeDataXComparator",[_2f7],{compare:function(o1,o2){
var x0=(o1).x;
var x1=(o2).x;
if(x1-x0<0){
return 1;
}else{
if(x1-x0>0){
return -1;
}
}
return 0;
}});
return _2fa;
});
},"com/ibm/vis/engine/internal/globalization/NumericShaper":function(){
define("com/ibm/vis/engine/internal/globalization/NumericShaper",["com/ibm/init/fork!./CodePointRange","com/ibm/init/fork!../nativeImpl/StringBuilder","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_2fb,_2fc,_2fd,_2fe,_2ff){
var _300=_2ff("com.ibm.vis.engine.internal.globalization.NumericShaper",null,{});
_300.shape=function(text,_301){
if(_301==null||_301.isNone()){
return text;
}
if(_301.isNational()){
return _300.shapeNationally(text,_301.getNationalDigitCode());
}
if(_301.isContextual()){
return _300.shapeContextually(text,_301.getContextualDigitCodes(),_301.getStartingContextCode());
}
return text;
};
_300.shapeNationally=function(text,_302){
if(text==null){
return null;
}
if(_302>_300.offsets.length-1){
return text;
}
var _303=_300.offsets[_302];
var s=new _2fc.m();
var _304=48;
var _305=57;
for(var i=0;i<text.CPVisEngineLength();++i){
var c=_2fd.m.charCodeAt(text,i);
if(c>=_304&&c<=_305){
s.append(_2fd.m.fromCharCode((c+_303)));
}else{
s.append(_2fd.m.fromCharCode(c));
}
}
return s.toString();
};
_300.search=function(_306,_307){
var _308=0;
var end=_306.length-1;
while(_308<=end){
var mid=Math.floor((_308+end)/2);
if(_306[mid].start<=_307&&_306[mid].end>_307){
return mid;
}else{
if(_306[mid].start>_307){
end=mid-1;
}else{
if(_306[mid].end<=_307){
_308=mid+1;
}
}
}
}
return -1;
};
_300.hasContext=function(_309){
var _30a=_300.search(_300.contextualCharRanges,_309);
return (_30a!=-1);
};
_300.getRange=function(_30b){
var _30c=_300.search(_300.ranges,_30b);
if(_30c==-1){
return 0;
}
if(_30c==19){
return 1;
}
return _30c;
};
_300.shapeContextually=function(text,_30d,_30e){
if(text==null){
return null;
}
if(_30e>_300.offsets.length-1||_30d.length==0){
_30e=0;
}
var _30f=0;
for(var i=0;i<_30d.length;++i){
_30f|=1<<_30d[i];
}
var s=new _2fc.m();
var _310=0;
var _311=0;
if(((1<<_30e)&_30f)!=0){
_310=_300.offsets[_30e];
_311=_30e;
}
for(var i=0;i<text.CPVisEngineLength();++i){
var c=_2fd.m.charCodeAt(text,i);
var _312=48;
var _313=57;
if(c>=_312&&c<=_313){
s.append(_2fd.m.fromCharCode((c+_310)));
}else{
s.append(_2fd.m.fromCharCode(c));
var _314=_300.getRange(c);
if(_314!=_311){
if(_300.hasContext(c)){
if((1<<_314&_30f)!=0){
_311=_314;
if(_311==1&&((_30f&1<<2)!=0)){
_311=2;
}
_310=_300.offsets[_311];
}else{
if(((1<<_314)&_30f)==0){
if(_314==2){
if((1<<1&_30f)!=0){
_311=1;
_310=_300.offsets[_311];
}
}else{
if(_314==1){
if((1<<2&_30f)!=0){
_311=2;
_310=_300.offsets[_311];
}
}else{
_311=0;
_310=0;
}
}
}
}
}
}
}
}
return s.toString();
};
_2fe.add("com/ibm/vis/engine/internal/globalization/NumericShaper",["com/ibm/vis/engine/internal/globalization/CodePointRange","com/ibm/vis/engine/internal/nativeImpl/BasicFactory"],function(){
_300.EUROPEAN=0;
_300.ARABIC=1;
_300.EASTERN_ARABIC=2;
_300.DEVANAGARI=3;
_300.BENGALI=4;
_300.GURMUKHI=5;
_300.GUJARATI=6;
_300.ORIYA=7;
_300.TAMIL=8;
_300.TELUGU=9;
_300.KANNADA=10;
_300.MALAYALAM=11;
_300.THAI=12;
_300.LAO=13;
_300.TIBETAN=14;
_300.MYANMAR=15;
_300.ETHIOPIC=16;
_300.KHMER=17;
_300.MONGOLIAN=18;
_300.EXTENDED_ARABIC=19;
_300.ranges=[new _2fb.m(0,768),new _2fb.m(1536,1792),new _2fb.m(1536,1792),new _2fb.m(2304,2432),new _2fb.m(2432,2560),new _2fb.m(2560,2688),new _2fb.m(2688,2816),new _2fb.m(2816,2944),new _2fb.m(2944,3072),new _2fb.m(3072,3200),new _2fb.m(3200,3328),new _2fb.m(3328,3456),new _2fb.m(3584,3712),new _2fb.m(3712,3840),new _2fb.m(3840,4096),new _2fb.m(4096,4256),new _2fb.m(4608,5024),new _2fb.m(6016,6144),new _2fb.m(6144,6320),new _2fb.m(1872,1920)];
_300.contextualCharRanges=[new _2fb.m(65,91),new _2fb.m(97,123),new _2fb.m(170,171),new _2fb.m(181,182),new _2fb.m(186,187),new _2fb.m(192,215),new _2fb.m(216,247),new _2fb.m(248,697),new _2fb.m(699,706),new _2fb.m(720,722),new _2fb.m(736,741),new _2fb.m(750,751),new _2fb.m(1544,1545),new _2fb.m(1547,1548),new _2fb.m(1549,1550),new _2fb.m(1563,1611),new _2fb.m(1645,1648),new _2fb.m(1649,1750),new _2fb.m(1765,1767),new _2fb.m(1774,1776),new _2fb.m(1786,1793),new _2fb.m(1872,1921),new _2fb.m(2307,2362),new _2fb.m(2363,2364),new _2fb.m(2365,2369),new _2fb.m(2377,2381),new _2fb.m(2382,2385),new _2fb.m(2392,2402),new _2fb.m(2404,2433),new _2fb.m(2434,2492),new _2fb.m(2493,2497),new _2fb.m(2503,2509),new _2fb.m(2510,2530),new _2fb.m(2534,2546),new _2fb.m(2548,2555),new _2fb.m(2563,2620),new _2fb.m(2622,2625),new _2fb.m(2649,2672),new _2fb.m(2674,2677),new _2fb.m(2691,2748),new _2fb.m(2749,2753),new _2fb.m(2761,2765),new _2fb.m(2768,2786),new _2fb.m(2790,2801),new _2fb.m(2818,2876),new _2fb.m(2877,2879),new _2fb.m(2880,2881),new _2fb.m(2887,2893),new _2fb.m(2903,2914),new _2fb.m(2918,2946),new _2fb.m(2947,3008),new _2fb.m(3009,3021),new _2fb.m(3024,3059),new _2fb.m(3073,3134),new _2fb.m(3137,3142),new _2fb.m(3160,3170),new _2fb.m(3174,3192),new _2fb.m(3199,3260),new _2fb.m(3261,3276),new _2fb.m(3285,3298),new _2fb.m(3302,3393),new _2fb.m(3398,3405),new _2fb.m(3406,3426),new _2fb.m(3430,3457),new _2fb.m(3584,3633),new _2fb.m(3634,3636),new _2fb.m(3648,3655),new _2fb.m(3663,3761),new _2fb.m(3762,3764),new _2fb.m(3773,3784),new _2fb.m(3792,3864),new _2fb.m(3866,3893),new _2fb.m(3894,3895),new _2fb.m(3896,3897),new _2fb.m(3902,3953),new _2fb.m(3967,3968),new _2fb.m(3973,3974),new _2fb.m(3976,3981),new _2fb.m(4030,4038),new _2fb.m(4039,4141),new _2fb.m(4145,4146),new _2fb.m(4152,4153),new _2fb.m(4155,4157),new _2fb.m(4159,4184),new _2fb.m(4186,4190),new _2fb.m(4193,4209),new _2fb.m(4213,4225),new _2fb.m(4608,4957),new _2fb.m(4960,4993),new _2fb.m(6016,6071),new _2fb.m(6078,6086),new _2fb.m(6087,6089),new _2fb.m(6100,6107),new _2fb.m(6108,6109),new _2fb.m(6112,6128),new _2fb.m(6160,6313),new _2fb.m(6314,6401)];
_300.offsets=[0,1584,1728,2358,2486,2614,2742,2870,2998,3126,3254,3382,3616,3744,3824,4112,4921,6064,6112];
});
return _300;
});
},"com/ibm/vis/engine/internal/interaction/analysis/PieChartAnalysis":function(){
define("com/ibm/vis/engine/internal/interaction/analysis/PieChartAnalysis",["com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../struct/Point","com/ibm/init/fork!../../util/SceneUtil","com/ibm/init/fork!../../struct/Wedge","com/ibm/init/fork!../../struct/ShapeFactory","com/ibm/init/statics","dojo/_base/declare"],function(_315,_316,_317,_318,_319,_31a,_31b,_31c){
var _31d=_31c("com.ibm.vis.engine.internal.interaction.analysis.PieChartAnalysis",null,{center:null,wedgeItems:null,wedges:null,wedgeInsets:null,wedgeOffsets:null,wedgeZero:null,startAngle:0,CCW:false,nonWedgeItems:null,getWedgeItems:function(){
return this.wedgeItems;
},getWedges:function(){
return this.wedges;
},getWedgeInsets:function(){
return this.wedgeInsets;
},getWedgeOffsets:function(){
return this.wedgeOffsets;
},getStartAngle:function(){
return this.startAngle;
},getCCW:function(){
return this.CCW;
},getNonWedgeItems:function(){
return this.nonWedgeItems;
},constructor:function(_31e){
this.center=_31e;
this.wedgeItems=null;
this.wedges=null;
this.wedgeInsets=null;
this.wedgeOffsets=null;
this.wedgeZero=null;
this.startAngle=0;
this.CCW=false;
this.nonWedgeItems=new _315.m();
},checkShapes:function(_31f){
var _320=_316.m.getItem(_31f,"children");
var size=_320.length;
var _321=new _315.m();
var _322=new _315.m();
for(var i=0;i<size;++i){
var _323=_320[i];
var id=_316.m.getItem(_323,"id");
if(id==null||!_318.m.identifiesElementShape(id)){
this.nonWedgeItems.add(_323);
}else{
var _324=_319.m.getWedgeFromShape(_316.m.getItem(_323,"shape"));
if(_324==null){
return false;
}
_321.add(_323);
_322.add(_324);
}
}
var _325=_321.size();
if(_325==0){
return false;
}
this.wedgeItems=_321.toArray(new Array(_325));
this.wedges=_322.toArray(new Array(_325));
this.wedgeInsets=Array.create([_325],0);
this.wedgeOffsets=Array.create([_325],0);
this.wedgeZero=Array.create([_325],false);
for(var i=0;i<_325;++i){
this.wedgeInsets[i]=_316.m.getNumberWithDefault(_316.m.getItem(this.wedgeItems[i],"stroke"),"width",0)/2;
this.wedgeOffsets[i]=0;
this.wedgeZero[i]=this.wedges[i].a1==this.wedges[i].a2;
}
return true;
},anglesFormPie:function(){
var tol=0.02;
var sum=0;
var sumI=0;
var _326=0;
var N=this.wedges.length;
for(var i=0;i<N;++i){
var _327=this.wedges[i].a2-this.wedges[i].a1;
if(!this.wedgeZero[i]){
if(sum*_327<0){
return false;
}
sum+=_327;
}
var dA=2*Math.asin(this.wedgeInsets[i]/(this.wedges[i].r2+this.wedgeInsets[i]));
if(!this.wedgeZero[i]){
sumI+=dA;
}else{
_326+=dA;
}
}
this.CCW=sum>0;
sum=Math.abs(sum);
if(sum>2*3.141592653589793+tol*N){
return false;
}
if(sum+sumI+_326<2*3.141592653589793-tol*N){
return false;
}
if(Math.abs(sum-2*3.141592653589793)<tol*N){
for(var i=0;i<N;++i){
this.wedgeInsets[i]=0;
if(!_31a.m.areEqualAngles(this.wedges[i].a1,this.wedges[(i+1)%N].a2,tol)){
return false;
}
}
this.startAngle=this.wedges[0].a2;
return true;
}
if(2*3.141592653589793<sum+sumI-tol*N||2*3.141592653589793>sum+sumI+_326+tol*N){
return false;
}
var _328=Array.create([N],0);
for(var i=0;i<N;++i){
var j=(i+1)%N;
var ai=this.wedges[i].a1;
var dai=Math.asin(this.wedgeInsets[i]/(this.wedges[i].r2+this.wedgeInsets[i]));
var aj=this.wedges[j].a2;
var daj=Math.asin(this.wedgeInsets[j]/(this.wedges[j].r2+this.wedgeInsets[j]));
if(this.CCW){
dai=-dai;
}else{
daj=-daj;
}
if(!this.wedgeZero[i]){
ai+=dai;
}
if(!this.wedgeZero[j]){
aj+=daj;
}
if(!this.wedgeZero[i]&&!this.wedgeZero[j]){
if(!_31a.m.areEqualAngles(ai,aj,tol)){
return false;
}
_328[i]=ai;
}else{
if(!this.wedgeZero[i]){
if(!_31d.angleRangeContains(aj,daj,ai,tol)){
return false;
}
_328[i]=ai;
}else{
if(!this.wedgeZero[j]){
if(!_31d.angleRangeContains(ai,dai,aj,tol)){
return false;
}
_328[i]=aj;
}else{
if(!_31d.angleRangeContains(ai,dai,aj,tol)&&!_31d.angleRangeContains(ai,dai,aj+daj,tol)&&!_31d.angleRangeContains(aj,daj,ai,tol)&&!_31d.angleRangeContains(aj,daj,ai+dai,tol)){
return false;
}
_328[i]=(ai+dai+aj+daj)/2;
}
}
}
}
for(var i=0;i<N;++i){
var cx=this.wedges[i].x;
var cy=this.wedges[i].y;
var a1=_328[i];
var a2=_328[(i+N-1)%N];
if(this.CCW){
if(a2-a1<0){
a2+=2*3.141592653589793;
}
}else{
if(a2-a1>0){
a2-=2*3.141592653589793;
}
}
var r1;
var r2;
if(this.wedgeZero[i]){
var a=(a1+a2)/2;
cx-=this.wedgeInsets[i]*Math.cos(a);
cy-=this.wedgeInsets[i]*Math.sin(a);
r1=0;
r2=this.wedges[i].r2+2*this.wedgeInsets[i];
}else{
r1=Math.max(0,this.wedges[i].r1-this.wedgeInsets[i]);
r2=this.wedges[i].r2+this.wedgeInsets[i];
}
this.wedges[i]=new _319.m(cx,cy,r1,r2,a1,a2);
}
this.startAngle=this.wedges[0].a2;
return true;
},radiiFormPie:function(){
var N=this.wedges.length;
var r2=0;
for(var i=0;i<N;++i){
var _329=Math.abs(this.wedges[i].a2-this.wedges[i].a1);
var tol=(_329>0.02)?0.5:((_329>0.01)?1.5:2);
if(this.wedges[i].r1>tol){
return false;
}
r2+=this.wedges[i].r2;
}
r2/=N;
for(var i=0;i<N;++i){
if(Math.abs(r2-this.wedges[i].r2)>1){
return false;
}
}
for(var i=0;i<N;++i){
var _32a=new _317.m(this.wedges[i].x,this.wedges[i].y);
var dist=this.center.dist(_32a);
if(dist>1.5){
var _32b=(this.wedges[i].a1+this.wedges[i].a2)/2;
var dir=this.center.angle(_32a);
if(!_31a.m.areEqualAngles(_32b,dir,0.01)){
return false;
}
this.wedgeOffsets[i]=dist;
}else{
this.wedgeOffsets[i]=0;
}
this.wedges[i]=new _319.m(this.center.x,this.center.y,0,r2,this.wedges[i].a1,this.wedges[i].a2);
}
return true;
}});
_31d.getPieChartAnalysis=function(_32c){
var _32d=_31d.getPolarChartCenter(_32c);
if(_32d==null){
return null;
}
var _32e=new _31d(_32d);
if(!_32e.checkShapes(_32c)){
return null;
}
if(!_32e.anglesFormPie()){
return null;
}
if(!_32e.radiiFormPie()){
return null;
}
return _32e;
};
_31d.getPolarChartCenter=function(_32f){
var type=_316.m.getItem(_32f,"type");
if(!"element".CPVisEngineEquals(type)){
return null;
}
var _330=_316.m.getItem(_32f,"elementType");
if(!"interval".CPVisEngineEquals(_330)){
return null;
}
var _331=_316.m.getItem(_32f,"children");
if(_331==null||_331.length==0){
return null;
}
var _332=_316.m.getItem(_32f,"baseline");
if(_332==null){
return null;
}
var x1=_316.m.getItem(_332,"x1");
var x2=_316.m.getItem(_332,"x2");
var y1=_316.m.getItem(_332,"y1");
var y2=_316.m.getItem(_332,"y2");
if(x1==null||x2==null||y1==null||y2==null){
return null;
}
var cx=x1;
var cy=y1;
if(Math.abs(cx-x2)>0.001||Math.abs(cy-y2)>0.001){
return null;
}
return new _317.m(cx,cy);
};
_31d.angleRangeContains=function(a1,dA,a2,tol){
if(dA==0){
return _31a.m.areEqualAngles(a1,a2,tol);
}
a1%=2*3.141592653589793;
a2%=2*3.141592653589793;
while(a1<0||a1+dA<0){
a1+=2*3.141592653589793;
}
while(a2<0){
a2+=2*3.141592653589793;
}
if(dA>0){
if(a2<a1){
a2+=2*3.141592653589793;
}
}
if(dA<0){
if(a2>a1){
a2-=2*3.141592653589793;
}
}
if(dA>0){
return a1-tol<=a2&&a2<=a1+dA+tol;
}
return a1+dA-tol<=a2&&a2<=a1+tol;
};
return _31d;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/stack/StackTransform":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/stack/StackTransform",["../CoordinateTransform","com/ibm/init/fork!../../../nativeImpl/Map","com/ibm/init/fork!./GlyphStacker","com/ibm/init/fork!./PolyStacker","com/ibm/init/fork!./DefaultStacker","com/ibm/init/fork!./StackState","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_333,_334,_335,_336,_337,_338,_339,_33a,_33b){
var _33c=_33b("com.ibm.vis.engine.internal.grammar.coordinate.stack.StackTransform",[_333],{panelStackState:null,constructor:function(){
this.panelStackState=new _334.m();
},transformShape:function(_33d,_33e,_33f){
var _340;
var _341;
var _342=_33d.getFacetKey();
var _343=this.getStackStateForFacet(_342);
if(!_33d.canScaleY()){
_341=new _335.m(_343);
}else{
if(_33d.isTypeOf("poly")){
_341=new _336.m(_343);
}else{
_341=new _337.m(_343);
}
}
var zero=_33e.height*(1-_33f[0].getBase());
var _344=Math.max(0,zero);
_344=Math.min(_33e.height,_344);
_340=_341.stack(_33d,zero,_344);
if(_340!=null){
_340.meta=_33d.meta;
}
return _340;
},getStackStateForFacet:function(_345){
var _346=this.panelStackState.get(_345);
if(_346==null){
_346=new _338.m();
this.panelStackState.put(_345,_346);
}
return _346;
},transformShapes:function(_347,_348,_349){
this.clearStackState();
var _34a=new _339.m();
var _34b=0;
for(var _34c=0,_34d=_347.size();_34c<_34d;++_34c){
var _34e=_347.get(_34c);
_34b=Math.max(_34b,_34e.aestheticGroup);
}
for(var g=_34b;g>=0;--g){
for(var _34f=0,_350=_347.size();_34f<_350;++_34f){
var _351=_347.get(_34f);
if(_351.aestheticGroup==g){
var _34e=this.transformShape(_351,_348,_349);
if(_34e!=null){
_34a.add(_34e);
}
}
}
}
this.clearStackState();
return _34a;
},clearStackState:function(){
for(var _352=0,_353=this.panelStackState.values(),_354=_353.size();_352<_354;++_352){
var _355=_353.get(_352);
_355.clear();
}
},isStacking:function(){
return true;
},inverseTransform:function(_356,_357,_358){
return _356;
},calculateGapSize:function(_359,_35a){
return 0;
}});
return _33c;
});
},"com/ibm/vis/engine/internal/nativeImpl/render/ClippingMixin":function(){
define("com/ibm/vis/engine/internal/nativeImpl/render/ClippingMixin",["dojox/gfx","dojox/gfx/shape","dojo/_base/window","dojo/dom-attr","dojo/_base/lang","dojo/_base/array","exports"],function(g,_35b,win,_35c,lang,_35d,_35e){
var m=g.matrix;
var _35f=function(){
if(g.renderer!="svg"){
return;
}
var svg=g.svg;
function _360(ns,_361){
if(win.doc.createElementNS){
return win.doc.createElementNS(ns,_361);
}else{
return win.doc.createElement(_361);
}
};
var _362=0;
lang.extend(svg.Shape,{setClip:function(clip){
this.clip=clip;
var _363=clip?"width" in clip?"rect":"cx" in clip?"ellipse":"points" in clip?"polyline":"d" in clip?"path":null:null;
if(clip&&!_363){
return this;
}
if(_363==="polyline"){
clip=lang.clone(clip);
clip.points=clip.points.join(",");
}
var _364,_365,_366=_35c.get(this.rawNode,"clip-path");
if(_366){
_364=win.doc.getElementById(_366.match(/gfx_clip[\d]+/)[0],this.rawNode.parentNode);
_364.removeChild(_364.childNodes[0]);
}
if(clip){
if(_364){
_365=_360(svg.xmlns.svg,_363);
_364.appendChild(_365);
}else{
var _367=++_362;
var _368="gfx_clip"+_367;
var _369="url(#"+_368+")";
this.rawNode.setAttribute("clip-path",_369);
_364=_360(svg.xmlns.svg,"clipPath");
_365=_360(svg.xmlns.svg,_363);
_364.appendChild(_365);
this.rawNode.parentNode.appendChild(_364);
_35c.set(_364,"id",_368);
}
_35c.set(_365,clip);
}else{
if(_364){
this.rawNode.removeAttribute("clip-path");
_364.parentNode.removeChild(_364);
}
}
return this;
}});
};
var _36a=function(){
if(g.renderer!="vml"){
return;
}
var cm=_35e;
var m=g.matrix,gs=g.shape,vml=g.vml;
g.shape.Shape.prototype.getBoundingBox=function(){
if(this.bbox){
return this.bbox;
}else{
if(this.children){
var _36b=null;
_35d.forEach(this.children,function(_36c){
var bb=_36c.getBoundingBox();
if(bb){
if(_36b){
_36b.x=Math.min(_36b.x,bb.x);
_36b.y=Math.min(_36b.y,bb.y);
_36b.endX=Math.max(_36b.endX,bb.x+bb.width);
_36b.endY=Math.max(_36b.endY,bb.y+bb.height);
}else{
_36b={x:bb.x,y:bb.y,endX:bb.x+bb.width,endY:bb.y+bb.height};
}
}
});
if(_36b){
_36b.width=_36b.endX-_36b.x;
_36b.height=_36b.endY-_36b.y;
}
return _36b;
}
}
return null;
};
lang.extend(g.vml.Shape,{setClip:function(clip){
this.clip=clip;
var _36d=this.rawNode.style;
if(!clip){
_36d.clip="rect(0px "+_36d.width+" "+_36d.height+" 0px)";
}else{
if("width" in clip){
_36d.clip="rect("+clip.y+"px "+(clip.x+clip.width)+"px "+(clip.y+clip.height)+"px "+clip.x+"px)";
}
}
return this;
}});
lang.extend(g.vml.Group,{setClip:function(clip){
if(clip){
clip={x:clip.x,y:clip.y,width:clip.width,height:clip.height};
}
this.clip=clip;
var _36e=this.rawNode.style;
if(!clip){
_36e.clip="rect(0px "+_36e.width+" "+_36e.height+" 0px)";
}else{
if("width" in clip){
var _36f=this._getRealMatrix();
var r=clip;
var bb=this.getBoundingBox();
if(bb!=null){
if(_36f!=null){
r.x+=Math.max(-bb.x,_36f.dx);
r.y+=Math.max(-bb.y,_36f.dy);
}else{
r.x+=-bb.x;
r.y+=-bb.y;
}
}
_36e.clip="rect("+Math.round(r.y)+"px "+Math.round(r.x+r.width)+"px "+Math.round(r.y+r.height)+"px "+Math.round(r.x)+"px)";
}
}
return this;
},_applyTransform:function(){
var _370=this._getRealMatrix();
for(var i=0;i<this.children.length;++i){
this.children[i]._updateParentMatrix(_370);
}
if(this.clip){
this.setClip(this.clip);
}
return this;
}});
};
var _371=function(){
if(g.renderer!="silverlight"){
return;
}
lang.extend(g.silverlight.Shape,{setClip:function(clip){
this.clip=clip;
var r=this.rawNode;
if(clip){
var _372=clip?"width" in clip?"rect":"cx" in clip?"ellipse":"points" in clip?"polyline":"d" in clip?"path":null:null;
if(clip&&!_372){
return this;
}
switch(_372){
case "rect":
r.clip=r.getHost().content.createFromXaml("<RectangleGeometry/>");
r.clip.rect=clip.x+","+clip.y+","+clip.width+","+clip.height;
break;
case "path":
break;
}
}else{
r.clip=null;
}
return this;
}});
};
var _373=function(){
if(g.renderer!="canvas"&&g.renderer!="canvasWithEvents"){
return;
}
var gs=g.shape,ga=g.arc,_374=g.canvas,_375=g.canvasWithEvents,m=g.matrix,mp=m.multiplyPoint,pi=Math.PI,_376=2*pi,_377=pi/2;
var _378=g.renderer=="canvasWithEvents"?_375:_374;
var _379=function(_37a,_37b){
switch(_37a){
case "ellipse":
return {canvasEllipse:_37c(_37b),render:function(ctx){
return _378.Ellipse.prototype._renderShape.call(this,ctx);
}};
case "rect":
return {shape:lang.delegate(_37b,{r:0}),render:function(ctx){
return _378.Rect.prototype._renderShape.call(this,ctx);
}};
case "path":
return {canvasPath:_37d(_37b),render:function(ctx){
this.canvasPath._renderShape(ctx);
}};
case "polyline":
return {canvasPolyline:_37b.points,render:function(ctx){
return _378.Polyline.prototype._renderShape.call(this,ctx);
}};
}
};
var _37d=function(geo){
var p=new _378.Path();
p.canvasPath=[];
p._setPath(geo.d);
return p;
};
var _37c=function(s){
var t,c1,c2,r=[],M=m.normalize([m.translate(s.cx,s.cy),m.scale(s.rx,s.ry)]);
t=mp(M,bezierCircle[0]);
r.push([t.x,t.y]);
for(var i=1;i<bezierCircle.length;i+=3){
c1=mp(M,bezierCircle[i]);
c2=mp(M,bezierCircle[i+1]);
t=mp(M,bezierCircle[i+2]);
r.push([c1.x,c1.y,c2.x,c2.y,t.x,t.y]);
}
return r;
};
lang.extend(_378.Group,{_render:function(ctx){
ctx.save();
this._renderTransform(ctx);
this._renderClip(ctx);
for(var i=0;i<this.children.length;++i){
this.children[i]._render(ctx);
}
ctx.restore();
}});
lang.extend(_378.Shape,{_render:function(ctx){
ctx.save();
this._renderTransform(ctx);
this._renderClip(ctx);
this._renderShape(ctx);
this._renderFill(ctx,true);
this._renderStroke(ctx,true);
ctx.restore();
},_renderClip:function(ctx){
if(this.canvasClip){
this.canvasClip.render(ctx);
ctx.clip();
}
},canvasClip:null,setClip:function(clip){
this.clip=clip;
var _37e=clip?"width" in clip?"rect":"cx" in clip?"ellipse":"points" in clip?"polyline":"d" in clip?"path":null:null;
if(clip&&!_37e){
return this;
}
this.canvasClip=clip?_379(_37e,clip):null;
this.surface.makeDirty();
return this;
}});
lang.extend(_378.Ellipse,{setShape:function(){
this.shape=g.makeParameters(this.shape,shape);
this.bbox=null;
return this;
this.canvasEllipse=_37c(this.shape);
return this;
}});
if(_375){
lang.extend(_375.Shape,{_testInputs:function(ctx,pos){
if(this.clip||(!this.canvasFill&&this.strokeStyle)){
this._hitTestPixel(ctx,pos);
}else{
this._renderShape(ctx);
var cnt=pos.length,t=this.getTransform();
for(var i=0;i<pos.length;++i){
var _37f=pos[i];
if(_37f.target){
continue;
}
var x=_37f.x,y=_37f.y;
var p=t?m.multiplyPoint(m.invert(t),x,y):{x:x,y:y};
_37f.target=this._hitTestGeometry(ctx,p.x,p.y);
}
}
}});
lang.extend(_375.Group,{_testInputs:function(ctx,pos){
var _380=this.children,t=this.getTransform(),i,j;
if(_380.length==0){
return;
}
var _381=[];
for(i=0;i<pos.length;++i){
var _382=pos[i];
_381[i]={x:_382.x,y:_382.y};
if(_382.target){
continue;
}
var x=_382.x,y=_382.y;
var p=t?m.multiplyPoint(m.invert(t),x,y):{x:x,y:y};
_382.x=p.x;
_382.y=p.y;
}
for(i=_380.length-1;i>=0;--i){
_380[i]._testInputs(ctx,pos);
var _383=true;
for(j=0;j<pos.length;++j){
if(pos[j].target==null){
_383=false;
break;
}
}
if(_383){
break;
}
}
if(this.clip){
for(i=0;i<pos.length;++i){
_382=pos[i];
_382.x=_381[i].x;
_382.y=_381[i].y;
if(_382.target){
ctx.clearRect(0,0,1,1);
ctx.save();
ctx.translate(-_382.x,-_382.y);
this._render(ctx,true);
if(!ctx.getImageData(0,0,1,1).data[0]){
_382.target=null;
}
ctx.restore();
}
}
}else{
for(i=0;i<pos.length;++i){
pos[i].x=_381[i].x;
pos[i].y=_381[i].y;
}
}
}});
lang.extend(_375.Surface,{destroy:function(){
_35b.Surface.prototype.destroy.apply(this);
for(var i in this._eventsH){
if(this._eventsH[i]){
this._eventsH[i].remove();
}
}
this._eventsH=this.mirrorCanvas=null;
}});
}
};
_35f();
_373();
_371();
_36a();
});
},"com/ibm/vis/engine/internal/nativeImpl/hash":function(){
define("com/ibm/vis/engine/internal/nativeImpl/hash",function(){
var _384=0;
var _385={"function":"f:","object":"o:","number":"n:","string":"s:","boolean":"b:","undefined":"0:"};
var hash=function(_386){
if(_386===null){
return "0:null";
}
var tid=_385[typeof _386]||(_385[typeof _386]=(typeof _386).charAt(0)+":");
if(_386 instanceof Object){
if(!_386.__id){
return _386.__id=tid+(++_384);
}
return _386.__id;
}
return tid+_386;
};
hash.test_reset=function(){
_384=0;
};
return hash;
});
},"com/ibm/vis/engine/internal/grammar/layout/treemap/DefaultTreeMapAlgorithms":function(){
define("com/ibm/vis/engine/internal/grammar/layout/treemap/DefaultTreeMapAlgorithms",["../../../../../extension/ExtensionFactory","com/ibm/init/fork!../../../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./Squarify","com/ibm/init/fork!./PivotBySize","com/ibm/init/fork!./SliceAndDice","com/ibm/init/statics","dojo/_base/declare"],function(_387,_388,_389,_38a,_38b,_38c,_38d){
var _38e=_38d("com.ibm.vis.engine.internal.grammar.layout.treemap.DefaultTreeMapAlgorithms",[_387],{newInstance:function(name,_38f){
if("squarify".CPVisEngineEquals(name)){
return new _389.m();
}
if("pivotBySize".CPVisEngineEquals(name)){
return new _38a.m();
}
if("sliceAndDice".CPVisEngineEquals(name)){
return new _38b.m(false);
}
if("sliceAndDiceVertical".CPVisEngineEquals(name)){
return new _38b.m(true);
}
return null;
}});
_38e.registerExtensions=function(){
if(!_38e.registered){
_38e.registered=true;
_388.m.INSTANCE.registerDefaultFactory(new _38e());
}
};
_38c.add("com/ibm/vis/engine/internal/grammar/layout/treemap/DefaultTreeMapAlgorithms",["com/ibm/vis/extension/ExtensionFactory","com/ibm/vis/extension/internal/RAVEExtensionManager"],function(){
_38e.registered=false;
});
return _38e;
});
},"com/ibm/vis/engine/internal/facet/FacetMethodPanel":function(){
define("com/ibm/vis/engine/internal/facet/FacetMethodPanel",["./AbstractFaceting","com/ibm/init/fork!../../../monitor/LogLevel","com/ibm/init/fork!../../../monitor/LogComponent","com/ibm/init/fork!./Compose","com/ibm/init/fork!./FacetingHelper","com/ibm/init/fork!./GenerateOuter","com/ibm/init/fork!../util/SceneUtil","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../grammar/label/LabelProducer","com/ibm/init/fork!../struct/Rect","com/ibm/init/statics","dojo/_base/declare"],function(_390,_391,_392,_393,_394,_395,_396,_397,_398,_399,_39a,_39b,_39c){
var _39d=_39c("com.ibm.vis.engine.internal.facet.FacetMethodPanel",[_390],{vis:null,axisSize:null,constructor:function(_39e,_39f,_3a0,vis){
this.vis=vis;
if(_39e.targetElement!=null){
this.getLogger().log(_391.m.Warning,_392.m.CommonGrammar,"The specified targetElement is expected to be null","targetElement",_39e.targetElement);
}
},generateSharedCellsScene:function(_3a1,_3a2){
var _3a3=new _393.m(_3a2,this.targetElementID,null);
var _3a4=_394.m.divideScene(_3a1,this.facetFields);
return _3a3.makeInnerScene(_3a4);
},getPanelSize:function(_3a5,_3a6){
var _3a7=_3a5;
if(this.targetElementID==null){
_3a7=_395.m.makeTableOuterScene(this.facetSpec,this.facetFields,_3a6);
this.setGeneratedScene(_3a7);
}
var util=new _396.m(_3a7);
var _3a8=util.getElementGroups();
if(_3a8.length>0){
var _3a9=_3a8[0];
var _3aa=_3a9[0];
var _3ab=_396.m.getBounds(_3aa);
return _3ab.getExtent();
}
return _3a6;
},getSelectedPanelSize:function(_3ac,_3ad,_3ae,_3af,_3b0,_3b1,_3b2,_3b3){
if(_3af==null){
return null;
}
if(_3b1==null&&_3ae.CPVisEngineEquals("0|0")){
return _3ad;
}else{
if(_3b1!=null){
this.axisSize=_3b2;
var _3b4=_3b0.width;
var _3b5=_3b0.height;
if(_3b1.width>0){
var _3b6=_3ae.indexOf("|");
var _3b7=_3ae.substring(_3b6+1,_3b6+2).CPVisEngineEquals("0");
_3b4=_3b7?_3b1.width+_3b2[0]:_3b1.width+_3b3.width;
}
if(_3b1.height>0){
var _3b8=this.facetFields[0].field.categories.length;
var _3b9=_3ae.substring(0,1).CPVisEngineEquals(""+(_3b8-1));
_3b5=_3b9?_3b1.height+_3b2[1]:_3b1.height+_3b3.height;
}
return new _397.m(_3b4,_3b5);
}
}
return null;
},isChartInChart:function(){
return false;
},modifyPanelSize:function(_3ba,_3bb){
var _3bc=_3ba.keySet();
var keys=_3bc.toArray(new Array(_3bc.size()));
_398.m.sortArray(keys);
var _3bd=keys[0].substring(0,keys[0].indexOf("|"));
var _3be=0,_3bf=0;
for(var i=0;i<keys.length;++i){
var _3c0=this.findShapeFromKey(_3bb,keys[i]);
if(_3c0!=null){
var size=_3ba.get(keys[i]);
_398.m.put(_3c0,"width",size.width);
_398.m.put(_3c0,"height",size.height);
var _3c1=keys[i].substring(0,keys[i].indexOf("|"));
if(!_3c1.CPVisEngineEquals(_3bd)){
_3be=0;
_3bf+=_3ba.get(keys[i-1]).height;
}
_398.m.put(_3c0,"x",_3be);
_398.m.put(_3c0,"y",_3bf);
_3be+=size.width;
_3bd=_3c1;
}
}
this.rebuildFacetXAxisLabels(_3bb);
},rebuildFacetXAxisLabels:function(_3c2){
var _3c3=this.facetFields.length>1?this.facetFields[1].field.categories.length:1;
if(_3c3==1){
return;
}
var _3c4=this.getFacetAxisLabels(_3c2);
if(_3c4==null){
return;
}
for(var i=0;i<_3c3;++i){
var _3c5="0|"+i;
var _3c6=this.findShapeFromKey(_3c2,_3c5);
var _3c7=_398.m.getItem(_3c6,"width");
var _3c8=_398.m.getItem(_3c6,"x");
var _3c9=_3c4[i];
var _3ca=_398.m.getItem(_3c9,"shape");
var _3cb=_398.m.getItem(_3ca,"height");
var _3cc=_398.m.getItem(_3ca,"text");
var y=(_398.m.getItem(_3ca,"y"));
var _3cd=_395.m.makeAxisSpec(this.facetFields[1]);
var _3ce=_399.m.makeSimpleInside(this.vis,_3cd.tickStyle,null,"middle","start");
var x=_3c8;
var _3cf=_3c7;
if(i==0&&this.axisSize!=null){
x=this.axisSize[0];
_3cf=_3cf-this.axisSize[0];
}
var _3d0=_3ce.makeLabel([_3cc],new _39a.m(x,0,_3cf,_3cb));
var _3d1=_3d0.toJSON();
for(var _3d2=0,_3d3=_398.m.keySet(_3d1),_3d4=_3d3.length;_3d2<_3d4;++_3d2){
var key=_3d3[_3d2];
_398.m.put(_3c9,key,_398.m.getItem(_3d1,key));
}
_3ca=_398.m.getItem(_3c9,"shape");
_398.m.put(_3ca,"y",y);
}
},getFacetAxisLabels:function(_3d5){
var size=_3d5.length;
for(var i=size-1;i>=0;--i){
var _3d6=_3d5[i];
var type=_398.m.getItem(_3d6,"type");
if(type==null||!type.CPVisEngineEquals("axis")){
continue;
}
var axis=_398.m.getItem(_3d6,"children");
var _3d7=_398.m.getArrayItemByKey(axis,"type","axis-label");
var _3d8=_398.m.getItem(_3d7,"children");
var _3d9=_3d8[0];
var _3da=_398.m.getItem(_3d9,"field");
if(_3da.CPVisEngineEquals("facet2")){
return _3d8;
}
}
return null;
},findShapeFromKey:function(_3db,key){
var _3dc=_398.m.getArrayItemByKey(_3db,"type","element");
var _3dd=_398.m.getItem(_3dc,"children");
if(_3dd!=null){
var _3de=_398.m.getArrayItemByKey(_3dd,"key",key);
return _398.m.getItem(_3de,"shape");
}
return null;
}});
return _39d;
});
},"com/ibm/vis/interaction/internal/InteractivityImpl":function(){
define("com/ibm/vis/interaction/internal/InteractivityImpl",["../Interactivity","com/ibm/init/fork!../SceneState","com/ibm/init/fork!../../engine/internal/nativeImpl/Map","com/ibm/init/fork!../../engine/internal/interaction/effect/StyleEffect","com/ibm/init/fork!../../engine/internal/interaction/defender/ScrollUnitRenderer","com/ibm/init/fork!../navigation/NavigationStub","com/ibm/init/fork!../HighlightRepresentation","com/ibm/init/fork!../../engine/internal/nativeImpl/Set","com/ibm/init/fork!../../engine/internal/nativeImpl/List","com/ibm/init/fork!../../engine/internal/struct/Poly","com/ibm/init/fork!./HighlightStateImpl","com/ibm/init/fork!./GraphInteractivityImpl","com/ibm/init/fork!../../engine/internal/interaction/effect/ChangeEffectsImpl","com/ibm/init/fork!../../exceptions/RaveException","com/ibm/init/fork!../../engine/internal/nativeImpl/BasicFactory","com/ibm/init/fork!../../engine/internal/util/SceneIdUtil","com/ibm/init/fork!../../engine/internal/nativeImpl/LinkedHashcodeMap","com/ibm/init/fork!../../engine/internal/interaction/defender/DefenderFocus","com/ibm/init/fork!../../engine/internal/struct/Point","com/ibm/init/fork!../../engine/internal/interaction/defender/DefenderViewPortEvent","com/ibm/init/fork!./PanZoomImpl","com/ibm/init/statics","dojo/_base/declare"],function(_3df,_3e0,_3e1,_3e2,_3e3,_3e4,_3e5,_3e6,_3e7,_3e8,_3e9,_3ea,_3eb,_3ec,_3ed,_3ee,_3ef,_3f0,_3f1,_3f2,_3f3,_3f4,_3f5){
var _3f6=_3f5("com.ibm.vis.interaction.internal.InteractivityImpl",[_3df],{vis:null,highlightEffect:null,scrollUnitRenderer:null,defenderObj:null,translate:null,coordHelper:null,changeEffects:null,sceneState:null,listeners:null,updatedDefenderSpec:null,navigation:null,eventDispatcher:null,defenderGrammarIndex:-1,constructor:function(vis,_3f7,_3f8){
this.vis=vis;
this.sceneState=new _3e0.m();
this.highlightEffect=new _3e1.m();
var _3f9=this.createHighlightRepresentation();
var _3fa=new _3e2.m(0,_3f9,0,this.sceneState);
this.highlightEffect.put(0,_3fa);
this.coordHelper=_3f7;
this.scrollUnitRenderer=new _3e3.m();
this.navigation=new _3e4.m(this);
this.eventDispatcher=_3f8;
},getSceneState:function(){
return this.sceneState;
},getNavigation:function(){
return this.navigation;
},getVisInstance:function(){
return this.vis;
},createHighlightRepresentation:function(){
var _3fb=new Object();
_3fb.fill=_3f6.DEFAULT_HIGHLIGHT_FILL;
_3fb.outline=_3f6.DEFAULT_HIGHLIGHT_OUTLINE;
var _3fc=new Object();
_3fc.width=2;
_3fb.stroke=_3fc;
return new _3e5.m(_3fb);
},updateState:function(_3fd){
this.sceneState.setScene(_3fd);
this.navigation.sceneChanged();
},getTooltipItem:function(x,y){
var _3fe=this.getItemsAtPoint(x,y);
for(var _3ff=0,_400=_3fe.length;_3ff<_400;++_3ff){
var item=_3fe[_3ff];
if(item.tooltipText()!=null){
return item;
}
}
return null;
},getMetaItem:function(x,y){
var _401=this.getItemsAtPoint(x,y);
for(var _402=0,_403=_401.length;_402<_403;++_402){
var item=_401[_402];
if(item.meta()!=null){
return item;
}
}
return null;
},getItems:function(){
return this.getItemsMatching(null,null,null);
},getItemsExcluding:function(_404){
var _405=new _3e6.m();
for(var _406=0,_407=_404.length;_406<_407;++_406){
var i=_404[_406];
_405.add((i).id);
}
var all=this.getItems();
var _408=new _3e7.m();
for(var _409=0,_40a=all.length;_409<_40a;++_409){
var i=all[_409];
if(!_405.contains((i).id)){
_408.add(i);
}
}
return _408.toArray(new Array(0));
},getItemsAtPoint:function(x,y){
x=this.coordHelper.shiftX(x);
y=this.coordHelper.shiftY(y);
var p=this.pointToExpandedPolygon(x,y);
return this.decorate(this.filterOutParts(this.getItemsMatching(p,null,null)),x,y);
},pointToExpandedPolygon:function(x,y){
var cx=[x-1,x+1,x+1,x-1];
var cy=[y-1,y-1,y+1,y+1];
var _40b=true;
return new _3e8.m(cx,cy,_40b,null);
},getItemsAtPointForType:function(x,y,type){
x=this.coordHelper.shiftX(x);
y=this.coordHelper.shiftY(y);
var p=this.pointToExpandedPolygon(x,y);
var _40c=this.filterOutParts(this.getItemsMatching(p,type,null));
return this.decorate(_40c,x,y);
},getItemsInPolygon:function(x,y){
x=this.coordHelper.shiftXarray(x);
y=this.coordHelper.shiftYarray(y);
var _40d=this.filterOutParts(this.getItemsMatching(this.toPoly(x,y),null,null));
return this.decorate(_40d,x[0],y[0]);
},toPoly:function(x,y){
var poly=new _3e8.m(x,y,true,null);
if(poly.getBounds().width==0&&poly.getBounds().height==0){
return this.pointToExpandedPolygon(x[0],y[0]);
}
return poly;
},getItemsInPolygonForType:function(x,y,type){
x=this.coordHelper.shiftXarray(x);
y=this.coordHelper.shiftYarray(y);
return this.decorate(this.getItemsMatching(this.toPoly(x,y),type,null),x[0],y[0]);
},getCategory:function(_40e,_40f){
var _410=this.vis.getByID(_40e);
if(_410==null){
return null;
}
var n=Math.round(_40f);
if(_410.categories==null||n<0||n>=_410.categories.length){
return null;
}
return _410.categories[n];
},getFormattedLabel:function(_411,_412){
var _413=this.vis.getByID(_411);
return _413==null?null:_413.getFormattedStringValue(_412,-1);
},getMatchingRows:function(_414,_415){
return this.vis.getMatchingRows(_414,_415,true);
},getItemsForRows:function(rows){
return this.decorate(this.getItemsMatching(null,null,rows),0,0);
},getItemsMatchingAnyRows:function(rows){
return this.decorate(this.nativeGetItemsMatchingAnyRows(rows),0,0);
},makeHighlightState:function(){
return new _3e9.m(this.highlightEffect,this);
},getGraphInteractivity:function(){
return new _3ea.m(this,this.vis);
},getChangeEffects:function(){
if(this.changeEffects==null){
this.changeEffects=new _3eb.m();
}
return this.changeEffects;
},rendererShowHighlights:function(){
},getItemsMatching:function(_416,_417,_418){
},nativeGetItemsMatchingAnyRows:function(rows){
},installMoreEffects:function(){
},setHighlightRepresentation:function(_419,_41a){
if(_41a==null){
this.highlightEffect.remove(_419);
return;
}
var _41b=this.highlightEffect.get(_419);
if(_41b==null){
var _41c=new _3e2.m(0,_41a,_419,this.sceneState);
this.highlightEffect.put(_419,_41c);
this.installMoreEffects();
}else{
_41b.setRepresentation(_41a);
}
},dispose:function(){
this.highlightEffect=null;
this.listeners=null;
},filterByType:function(_41d,type){
var _41e=new _3e7.m();
for(var _41f=0,_420=_41d.length;_41f<_420;++_41f){
var item=_41d[_41f];
if(item.getType().CPVisEngineEquals(type)){
_41e.add(item);
}
}
return _41e.toArray(new Array(_41e.size()));
},decorate:function(_421,x,y){
try{
for(var _422=0,_423=_421.length;_422<_423;++_422){
var i=_421[_422];
this.decorateItem(i,x,y);
}
return _421;
}
catch(e){
if(e instanceof _3ec.m){
return new Array(0);
}else{
throw e;
}
}
},decorateItem:function(i,x,y){
var item=i;
item.vis=this.vis;
var _424=_3ed.m.getItem(item.sceneItem,"value");
var _425=_3ed.m.getItem(item.sceneItem,"field");
if(_424!=null&&_425!=null&&_3ed.m.isNumber(_424)){
var v=(_424);
if("legend".CPVisEngineEquals(item.type)){
item.aesFieldIDs=[_425];
item.aesValues=[v];
item.setDataIndex(this.vis.getMatchingData(item.aesFieldIDs));
}else{
item.coordFields=[_425];
item.coords=[v];
item.setDataIndex(this.vis.getMatchingData(item.coordFields));
}
}else{
if(_424!=null&&_3ed.m.isString(_424)){
item.coords=this.toArray(_424);
}else{
if(_424!=null&&_425!=null&&_3ed.m.isObject(_424)){
if("legend".CPVisEngineEquals(item.type)){
item.aesFieldIDs=[_425,_425];
item.aesValues=Array.create([2],0);
item.aesValues[0]=(_3ed.m.getItem(_424,"min"));
item.aesValues[1]=(_3ed.m.getItem(_424,"max"));
}
}
}
}
if(i.grammarIndex()!=null){
var _426=this.vis.grammar[i.grammarIndex()];
if("element".CPVisEngineEquals(item.type)){
if(item.elementIndex()!=null){
var _427=_426.elements[i.elementIndex()];
item.coords=_427.getCoordinates(i.getRows());
item.coordFields=_427.coordinateFieldIDs;
item.aesValues=_427.getAestheticValues(i.getRows());
item.aesFieldIDs=_427.aestheticFieldIDs;
if(_427.data!=null){
item.setDataIndex(this.vis.getDataIndex(_427.data.id));
}
}
}else{
if("coordinates".CPVisEngineEquals(item.type)){
var _428=_3f6.getCoordinates(item.sceneItem);
item.coords=_426.screenToCoordinates(x-_428[0],y-_428[1]);
item.coordFields=_426.coordinates.coordinateFieldIDs;
}else{
if("axis".CPVisEngineEquals(item.type)){
var dim=item.dimensionIndex();
if(dim>0&&_426.coordinates.containsCluster()){
var axis=_426.coordinates.getAxisForDimension(dim);
var ids=axis.getHierarchicalFieldIDs();
if(ids!=null&&ids.length>0){
item.coordFields=ids;
}
}else{
var _429=_426.coordinates.coordinateFieldIDs[dim];
item.coordFields=[_429];
}
var _42a=_3ee.m.getMainId(item.id);
if(!_42a.CPVisEngineEquals(item.id)){
var val=this.getValue(_42a,"value");
if(val!=null){
item.coords=[val];
}
}
}
}
}
if(item.getDataIndex()==null&&item.coordFields!=null){
item.setDataIndex(this.vis.getMatchingData(item.coordFields));
}
}
var hitc=item.getHitChildren();
if(hitc!=null){
for(var _42b=0,_42c=hitc.length;_42b<_42c;++_42b){
var hc=hitc[_42b];
this.decorateItem(hc,x,y);
}
}
},filterOutParts:function(_42d){
var _42e=new _3ef.m();
for(var i=0;i<_42d.length;++i){
var si=_42d[i];
var psi=this.getMainItem(si);
var _42f=_42e.get(psi.id);
if(null==_42f){
_42f=new _3e7.m();
_42f.add(psi);
_42e.put(psi.id,_42f);
}
if(psi!=si){
_42f.add(si);
}
}
var _430=new Array(_42e.size());
var j=0;
for(var _431=0,_432=_42e.values(),_433=_432.size();_431<_433;++_431){
var sis=_432.get(_431);
var main=sis.get(0);
if(sis.size()>1){
var _434=new Array(sis.size()-1);
for(var i=1;i<sis.size();++i){
_434[i-1]=sis.get(i);
}
main.setHitChildren(_434);
}
_430[j++]=main;
}
return _430;
},getMainItem:function(si){
var r=si;
var siid=si.id;
var pid=_3ee.m.getMainId(siid);
if(!pid.CPVisEngineEquals(siid)){
r=this.getItemById(pid);
if(r==null){
r=si;
}
}
return r;
},getItemById:function(id){
return this.sceneState.getById(id);
},getValue:function(_435,key){
return null;
},toArray:function(_436){
var _437=_436.split(";");
var _438=Array.create([_437.length],0);
for(var i=0;i<_438.length;++i){
_438[i]=_3ed.m.parseDouble(_437[i]);
}
return _438;
},setScrollUnitStartPoint:function(x,y){
this.setTranslateInfo();
if(this.defenderGrammarIndex!=-1){
this.scrollUnitRenderer.setStartPoint(this.coordHelper.shiftX(x)-this.translate.x,this.coordHelper.shiftY(y)-this.translate.y);
}
},updateScrollUnit:function(x,_439,_43a,_43b,_43c,_43d){
var cord=null;
this.setTranslateInfo();
if(this.defenderGrammarIndex!=-1){
cord=this.scrollUnitRenderer.updateScrollUnit(this.coordHelper.shiftX(x)-this.translate.x,_439,_43a,_43b,_43c,_43d);
cord[0]=this.coordHelper.reverseShiftY(cord[0]);
cord[1]=this.coordHelper.reverseShiftY(cord[1]);
cord[2]=this.coordHelper.reverseShiftX(cord[2]);
cord[3]=this.coordHelper.reverseShiftX(cord[3]);
if(_43d){
this.scrollUnitRenderer.resetGrabbers(_439,_43a,_43b,_43c);
this.scrollUnitRenderer.updateSpec(this.getXCordinatesForSliderEndPoints(cord),this.vis);
}
}
return cord;
},buildDefenderScene:function(){
this.vis.setVisJSONSpec(this.updatedDefenderSpec);
return this.vis.makeSceneTree(null);
},getZoomChartSpec:function(cord){
if(this.defenderObj==null){
this.defenderObj=new _3f0.m(this.vis);
}
var d=this.getXCordinatesForSliderEndPoints(cord);
if(d.length==2){
return this.defenderObj.updateSpec(d);
}else{
return null;
}
},getScrollUnitRenderer:function(){
return this.scrollUnitRenderer;
},getXCordinatesForSliderEndPoints:function(cord){
var d=Array.create([2],0);
var _43e=this.getItemsAtPointForType(cord[2]+this.translate.x,cord[0]+this.translate.y,"coordinates");
if(_43e.length!=0&&_43e[0].coordinates()!=null){
d[0]=_43e[0].coordinates()[1];
}
_43e=this.getItemsAtPointForType(cord[3]+this.translate.x,cord[0]+this.translate.y,"coordinates");
if(_43e.length!=0&&_43e[0].coordinates()!=null){
d[1]=_43e[0].coordinates()[1];
}
return d;
},setTranslateInfo:function(){
this.setThumbnailGrammar();
var _43f="G"+this.defenderGrammarIndex+"Coords";
var item=this.sceneState.getSceneJSONById(_43f);
var _440=_3f6.getCoordinates(item);
if(this.defenderGrammarIndex!=-1){
this.translate=new _3f1.m(_440[0],_440[1]);
}
},setThumbnailGrammar:function(){
this.defenderGrammarIndex=-1;
var type="scrollUnit";
for(var _441=0;_441<this.vis.grammar.length;++_441){
var temp=this.vis.grammar[_441];
for(var _442=0,_443=temp.elements,_444=_443.length;_442<_444;++_442){
var _445=_443[_442];
if(type.CPVisEngineEquals(_445.interactionType)){
this.defenderGrammarIndex=_441;
break;
}
}
}
},offsetSlices:function(_446,_447){
var _448=null;
var _449=this.vis.currentSpec.grammar;
var _44a=this.vis.currentSpec.data;
var _44b=0,j=0,k=0,_44c=0;
var _44d=_446[0].getDataIndex();
var _44e=_446[0].elementIndex();
var _44f=_446[0].grammarIndex();
_448=_449[_44f].elements[_44e].offset;
var _450=0;
for(j=0;j<_446.length;++j){
var _451=null;
if((_451=_446[j].getRows())!=null){
_450+=_451.length;
}
}
var rows=Array.create([_450],0);
for(j=0;j<_446.length;++j){
var _451=_446[j].getRows();
if(_451!=null){
for(k=0;k<_451.length;k++,_44b++){
rows[_44b]=_451[k];
}
}
}
var _452=false;
if(_448==null){
_448=new Array(1);
_449[_44f].elements[_44e].offset=_448;
_448[0]=new Object();
_44b=0;
_452=true;
}else{
_44b=_448.length-1;
if(_448[_44b].field==null){
_452=true;
}else{
_452=false;
}
}
if(_448[_44b].palette==null){
var _453=new Object();
_453.at=1;
_453.size=_447;
var _454=new Object();
_454.at=0;
_454.size=0;
var _455=[_454,_453];
_448[_44b].mapping=_455;
}else{
var _456=[0,_447];
_448[_44b].palette=_456;
}
if(_452){
var _457=new Object();
_457.$ref="_o_f_f_s_e_t_";
_448[_44b].field=_457;
}
if(_452){
var _458=new Object();
_458.categories=["unexploded","explode_level_1"];
_458.id="_o_f_f_s_e_t_";
_458.label="offset";
_458.key=false;
var _459=_44a[_44d].fields.length;
var _45a=_44a[_44d].rows.length;
var _45b=new Array(_459+1);
for(j=0;j<_459;++j){
_45b[j]=_44a[_44d].fields[j];
}
_45b[j]=_458;
_44a[_44d].fields=_45b;
var _45c=Array.create([_45a,_459+1],null);
for(j=0;j<_45a;++j){
for(k=0;k<_459;++k){
_45c[j][k]=_44a[_44d].rows[j][k];
}
_45c[j][k]=0;
}
for(j=0;j<rows.length;++j){
_45c[rows[j]][_459]=1;
}
_44a[_44d].rows=_45c;
}else{
for(_44c=0;_44c<_44a[_44d].fields.length;++_44c){
if((_44a[_44d].fields[_44c].id).CPVisEngineEquals(_448[_44b].field.$ref)){
break;
}
}
for(k=0;k<_44a[_44d].rows.length;++k){
_44a[_44d].rows[k][_44c]=0;
}
for(k=0;k<rows.length;++k){
_44a[_44d].rows[rows[k]][_44c]=1;
}
}
this.vis.setVisJSONSpec(this.vis.currentSpec);
var _45d=this.vis.recreateSceneTree();
if(_45d!=null){
this.setScene(_45d);
}
},createDefenderViewPortEvent:function(x,y,type){
return new _3f2.m(this.listeners,x,y,this,type);
},getUpdatedDefenderSpec:function(){
return this.updatedDefenderSpec;
},setUpdatedDefenderSpec:function(_45e){
this.updatedDefenderSpec=_45e;
},addListener:function(_45f){
if(this.listeners==null){
this.listeners=new _3e7.m();
}
this.listeners.add(_45f);
},removeListener:function(_460){
this.listeners.remove(_460);
},fireEvent:function(_461){
this.eventDispatcher.notify(_461);
},getPanZoom:function(){
return new _3f3.m(this.getScene(),this.getCanvasDimensions(),this);
},recreateSceneTree:function(){
return this.vis.recreateSceneTree();
},getSelected:function(key){
var _462=this.sceneState.getSelected(key);
return this.decorate(_462,0,0);
}});
_3f6.getCoordinates=function(item){
var _463=Array.create([2],0);
var _464=_3ed.m.getItem(item,"transform");
_463[0]=(_3ed.m.getItem(_464,"dx"));
_463[1]=(_3ed.m.getItem(_464,"dy"));
return _463;
};
_3f4.add("com/ibm/vis/interaction/internal/InteractivityImpl",["com/ibm/vis/interaction/Interactivity","com/ibm/vis/engine/internal/nativeImpl/BasicFactory"],function(){
_3f6.DY="dy";
_3f6.DX="dx";
_3f6.TRANSFORM_STR="transform";
_3f6.DEFAULT_HIGHLIGHT_FILL="rgba(240,166,48,0.4)";
_3f6.DEFAULT_HIGHLIGHT_OUTLINE="rgba(0,255,0,1.0)";
_3f6.GRAMMER_ID_PREFIX="G";
_3f6.COORDS_ID="Coords";
});
return _3f6;
});
},"com/ibm/vis/engine/internal/data/transform/KernelSmoothType":function(){
define("com/ibm/vis/engine/internal/data/transform/KernelSmoothType",["./SmoothType","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_465,_466,_467,_468){
var _469=_468("com.ibm.vis.engine.internal.data.transform.KernelSmoothType",[_465],{h:0,xData:null,yData:null,wData:null,xMean:0,yMean:0,constructor:function(){
this.h=-1;
},getRowsCreated:function(){
return 21;
},setGroupMoments:function(n,_46a,_46b,sxx,sxy,syy){
this.xMean=_46a;
this.yMean=_46b;
},setGroupData:function(_46c,xI,yI,wI,_46d){
this.xData=Array.create([_46d.length],0);
this.yData=Array.create([_46d.length],0);
this.wData=Array.create([_46d.length],0);
var n=0;
for(var _46e=0,_46f=_46d.length;_46e<_46f;++_46e){
var i=_46d[_46e];
var x=_46c[i].data[xI];
this.xData[n]=x;
if(yI>=0){
var y=_46c[i].data[yI];
this.yData[n]=y;
}
if(wI>0){
var w=_46c[i].data[wI];
this.wData[n]=w;
}else{
this.wData[n]=1;
}
n++;
}
},setOverallDataDetails:function(_470,xI,_471){
this.xData=Array.create([_471.length],0);
var n=0;
for(var _472=0,_473=_471.length;_472<_473;++_472){
var i=_471[_472];
var x=_470[i].data[xI];
this.xData[n++]=x;
}
var IQR;
if(this.xData.length<4){
IQR=(this.xData[(n-1)]-this.xData[0])/2;
}else{
IQR=this.xData[Math.round(3*(n-1)/4)]-this.xData[Math.round((n-1)/4)];
}
var _474=0;
for(var i=0;i<n;++i){
_474+=this.xData[i];
}
_474/=this.xData.length;
var sd=0;
for(var i=0;i<n;++i){
var v=this.xData[i];
sd+=(v-_474)*(v-_474);
}
sd=Math.sqrt(sd/this.xData.length);
var min=IQR>0?Math.min(IQR/1.34,sd):sd;
this.h=2.34*min*Math.pow(_470.length,-0.2);
var _475=this.xData[n-1]-this.xData[0];
if(this.h<_475/40){
this.h=_475/40;
}
if(this.h==0){
this.h=_474/10;
}
if(this.h==0){
this.h=1;
}
},getPrediction:function(x){
var n=0;
var sx=0,sy=0,sxx=0,sxy=0;
for(var i=0;i<this.xData.length;++i){
var k=this.wData[i]*this.K((x-this.xData[i])/this.h);
if(k>0){
var x1=this.xData[i]-this.xMean;
var y1=this.yData[i]-this.yMean;
n+=k;
sx+=k*x1;
sy+=k*y1;
sxx+=k*x1*x1;
sxy+=k*x1*y1;
}
}
if(n<=1e-8){
return null;
}
var _476=n*sxx-sx*sx;
if(_476<=1e-8){
return this.yMean+sy/n;
}
var b1=(n*sxy-sx*sy)/_476;
var b0=(sy-b1*sx)/n;
return b0+b1*(x-this.xMean)+this.yMean;
},getDensity:function(x,_477){
var sum=0;
var _478=0;
for(var i=0;i<this.xData.length;++i){
sum+=this.wData[i]*this.K((x-this.xData[i])/this.h);
_478+=this.wData[i];
}
if(_466.m.isNaN(_477)){
_477=_478;
}
return _477*sum/(this.h*_478);
},getWindowWidth:function(){
return this.h;
},K:function(u){
if(u<-1||u>1){
return 0;
}
return 0.75*(1-u*u);
}});
return _469;
});
},"com/ibm/vis/engine/internal/util/ArrayUtil":function(){
define("com/ibm/vis/engine/internal/util/ArrayUtil",["com/ibm/init/fork!../nativeImpl/StringBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_479,_47a,_47b){
var _47c=_47b("com.ibm.vis.engine.internal.util.ArrayUtil",null,{});
_47c.arrayToString=function(_47d){
if(_47d==null){
return null;
}
var _47e=new _479.m("[");
for(var i=0;i<_47d.length;++i){
_47e.append(_47d[i]);
if(i<_47d.length-1){
_47e.append(",");
}
}
_47e.append("]");
return _47e.toString();
};
return _47c;
});
},"com/ibm/vis/monitor/LogComponent":function(){
define("com/ibm/vis/monitor/LogComponent",["com/ibm/init/statics","dojo/_base/declare"],function(_47f,_480){
var _481=_480("com.ibm.vis.monitor.LogComponent",null,{name:null,code:0,constructor:function(name,code){
this.name=name;
this.code=code;
},toString:function(){
return this.name;
},getName:function(){
return this.name;
},getCode:function(){
return this.code;
}});
_47f.add("com/ibm/vis/monitor/LogComponent",[],function(){
_481.CommonGrammar=new _481("Grammar",10),_481.CommonInteraction=new _481("Interaction",20),_481.AWTEngine=new _481("AWTEngine",30),_481.JavaEngine=new _481("JavaEngine",40),_481.WebEngine=new _481("WebEngine",50),_481.AppVisBoard=new _481("AppVisBoard",60),_481.AppOther=new _481("AppOther",100);
});
return _481;
});
},"com/ibm/vis/engine/internal/oldlegendlayout/OldFlow":function(){
define("com/ibm/vis/engine/internal/oldlegendlayout/OldFlow",["com/ibm/init/fork!../nativeImpl/WebEngineException","com/ibm/init/statics","dojo/_base/declare"],function(_482,_483,_484){
var _485=_484("com.ibm.vis.engine.internal.oldlegendlayout.OldFlow",null,{name:null,constructor:function(name){
this.name=name;
},toString:function(){
return this.name;
},equals:function(o){
return this==o;
},hashCode:function(){
return this.name.charAt(0);
}});
_485.valueOf=function(flow){
if(flow.CPVisEngineEquals("vertical")){
return _485.vertical;
}else{
if(flow.CPVisEngineEquals("horizontal")){
return _485.horizontal;
}else{
throw new _482.m();
}
}
};
_483.add("com/ibm/vis/engine/internal/oldlegendlayout/OldFlow",["com/ibm/vis/engine/internal/nativeImpl/WebEngineException"],function(){
_485.vertical=new _485("vertical");
_485.horizontal=new _485("horizontal");
});
return _485;
});
},"com/ibm/vis/engine/internal/grammar/element/IntervalBuilder":function(){
define("com/ibm/vis/engine/internal/grammar/element/IntervalBuilder",["./Builder","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../nativeImpl/SpecUtil","com/ibm/init/fork!../../scene/CustomGlyphBuilder","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!../../scene/ItemBuilder","com/ibm/init/fork!../../struct/Rect","com/ibm/init/fork!../../scene/SymbolBuilder","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../coordinate/Position","com/ibm/init/statics","dojo/_base/declare"],function(_486,_487,_488,_489,_48a,_48b,_48c,_48d,_48e,_48f,_490,_491,_492){
var _493=_492("com.ibm.vis.engine.internal.grammar.element.IntervalBuilder",[_486],{size:null,fixedWidth:false,symbolName:null,symbolDef:null,style:null,clipping:false,constructor:function(_494,_495,_496,size,_497,_498){
this.snap=_487.m.getSnap(_497);
this.size=size;
this.fixedWidth=this.isWidthAbsoluteSize(_497);
this.style=_497;
this.clipping=_498;
if(_497==null||_497.symbol==null){
this.symbolName="rect";
}else{
if(_488.m.isString(_497.symbol)){
this.symbolName=_497.symbol;
}else{
this.symbolName=null;
var _499=_497.symbol;
var _49a=_489.m.toJSONObject(_499);
this.symbolDef=new _48a.m(_49a,size,_496);
}
}
},isWidthAbsoluteSize:function(_49b){
return _49b!=null&&(_48b.m.convertLength(_49b.width,null,null)!=null||_48b.m.convertLength(_49b.size,null,null)!=null);
},makeShapeInside:function(_49c,_49d){
return _48c.m.makeRectangle(_49c.x,_49c.y,_49c.width,_49c.height,this.style);
},makeAugmentedShape:function(_49e,_49f){
return _49e.featureBounds(_49f);
},getBase:function(_4a0){
var y=null;
if(_4a0.length()==0){
y=this.extent.height/2-this.size.height/2;
}else{
var zero=this.coords.scales[0].getBase();
zero=Math.max(0,Math.min(1,zero));
y=this.extent.height-zero*this.extent.height;
}
return y;
},makeShape:function(_4a1,_4a2){
if(_4a1.XYUndefined()){
return null;
}
var y,_4a3;
if(_4a1.length()==0){
y=this.extent.height/2-this.size.height/2;
_4a3=this.size.height;
}else{
if(_4a1.hasY2()){
y=this.extent.height-_4a1.Y2()*this.extent.height;
_4a3=this.extent.height-_4a1.Y()*this.extent.height-y;
}else{
var zero=this.getOriginOfSpan(_4a1);
if(this.clipping){
zero=Math.max(0,Math.min(1,zero));
}
y=this.extent.height-_4a1.Y()*this.extent.height;
_4a3=this.extent.height-zero*this.extent.height-y;
}
}
if(_4a3<0&&!"t-beam".CPVisEngineEquals(this.symbolName)){
y+=_4a3;
_4a3=-_4a3;
}
var x,_4a4;
if(_4a1.length()<2){
x=this.extent.width/2-this.size.width/2;
_4a4=this.size.width;
}else{
if(_4a1.hasX2()){
x=_4a1.X()*this.extent.width;
_4a4=_4a1.X2()*this.extent.width-x;
}else{
x=_4a1.X()*this.extent.width-this.size.width/2;
_4a4=this.size.width;
}
}
if(_4a4<0){
x+=_4a4;
_4a4=-_4a4;
}
return this.buildShape(x,y,_4a4,_4a3);
},buildShape:function(x,y,_4a5,_4a6){
var _4a7;
var cx=x+_4a5/2;
var cy=y+_4a6/2;
if(this.symbolDef!=null){
_4a7=this.symbolDef.makeCustomShape(cx,cy,_4a5,_4a6);
}else{
if(this.symbolName.CPVISEngineStartsWith("rect")){
if(_4a5<0.1&&_4a6<0.1){
_4a7=new _48d.m(x,y,_4a5,_4a6);
}else{
_4a7=_48c.m.makeRectangle(x,y,_4a5,_4a6,this.style);
_4a7.fill=null;
}
}else{
_4a7=_48e.m.makeSymbol(this.symbolName,cx,cy,_4a5,_4a6,this.style);
}
}
_4a7.scaleDimensions=this.fixedWidth?2:3;
_4a7.snap=_487.m.getSnap(this.style);
return _4a7;
},makeSwatch:function(_4a8){
var _4a9=new _48f.m();
var pos=_490.m.NO_COORDS;
if("t-beam".CPVisEngineEquals(this.symbolName)||"i-beam".CPVisEngineEquals(this.symbolName)){
var _4aa=[[0,1],[0.25,0.75]];
pos=_490.m.makeComplex(_4aa);
}
_4a9.add(this.makeShape(pos,null));
return _4a9;
},getOriginOfSpan:function(_4ab){
return _4ab.getYOrigin(this.coords.scales[0]);
}});
return _493;
});
},"com/ibm/vis/engine/internal/scene/CustomGlyphBuilder":function(){
define("com/ibm/vis/engine/internal/scene/CustomGlyphBuilder",["com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../nativeImpl/SpecUtil","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../../../actions/internal/ScrollUnitControllerAction","com/ibm/init/fork!../struct/Schema","com/ibm/init/fork!../struct/Circle","com/ibm/init/fork!./ItemBuilder","com/ibm/init/fork!./StyleBuilder","com/ibm/init/fork!../../../exceptions/EngineException","com/ibm/init/fork!../../../exceptions/ErrorCode","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/fork!../struct/Poly","com/ibm/init/fork!../struct/Path","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_4ac,_4ad,_4ae,_4af,_4b0,_4b1,_4b2,_4b3,_4b4,_4b5,_4b6,_4b7,_4b8,_4b9,_4ba,_4bb,_4bc){
var _4bd=_4bc("com.ibm.vis.engine.internal.scene.CustomGlyphBuilder",null,{styles:null,scaleDimensions:0,spec:null,extent:null,parentSize:null,constructor:function(spec,_4be,_4bf){
this.spec=spec;
this.parentSize=_4be;
this.extent=_4bf;
var _4c0=_4ac.m.getItem(spec,"shape");
this.scaleDimensions=_4bd.getScaleDimensionsValueFor(spec,0);
if(_4ac.m.isArray(_4c0)){
var _4c1=_4c0;
var n=_4c1.length;
this.styles=new Array(n);
for(var i=0;i<n;++i){
var item=_4c1[i];
this.styles[i]=_4bd.createStyleSpecFrom(_4ac.m.getItem(item,"style"));
}
}else{
this.styles=new Array(1);
this.styles[0]=_4bd.createStyleSpecFrom(_4ac.m.getItem(_4c0,"style"));
}
},makeCustomShape:function(cx,cy,wid,ht){
var _4c2=this.createGlyphs(new _4af.m(wid,ht));
var _4c3=new _4b0.m();
for(var i=0;i<_4c2.length;++i){
var _4c4=_4c2[i];
var xx=1;
var yy=1;
if("path".CPVisEngineEquals(_4c4.getType())){
var _4c5=_4c4.getBounds();
if(_4c5.width<=1&&_4c5.height<=1){
xx=wid;
yy=ht;
}
}else{
if("poly".CPVisEngineEquals(_4c4.getType())){
xx=wid;
yy=ht;
}
}
var _4c6=_4c4.scaleDimensions;
_4c4.scaleDimensions=3;
_4c3.affine(_4c4,xx,cx-wid/2,yy,cy-ht/2);
_4c4.scaleDimensions=_4c6;
}
var _4c7;
if(_4c2.length==0){
return null;
}else{
if(_4c2.length==1){
_4c7=_4c2[0];
}else{
var _4c8=new _4b1.m(cx-wid/2,cy-ht/2,wid,ht,_4c2,true);
_4c7=_4c8;
}
}
_4c7.scaleDimensions=this.scaleDimensions;
return _4c7;
},getScaleDimensions:function(){
return this.scaleDimensions;
},getGlyphs:function(){
return this.createGlyphs(this.parentSize);
},createGlyphs:function(size){
var _4c9=_4ac.m.getItem(this.spec,"shape");
var _4ca;
if(_4ac.m.isArray(_4c9)){
var _4cb=_4c9;
var n=_4cb.length;
_4ca=new Array(n);
for(var i=0;i<n;++i){
var item=_4cb[i];
_4ca[i]=_4bd.makeSingleGlyphShape(item,size,this.extent,3,this.styles[i]);
var part=_4ac.m.getItem(item,"part");
if(part!=null){
_4ca[i].setMeta("part",part);
}
}
}else{
_4ca=[_4bd.makeSingleGlyphShape(_4c9,size,this.extent,3,this.styles[0])];
}
return _4ca;
}});
_4bd.getScaleDimensionsValueFor=function(def,_4cc){
var _4cd=_4ac.m.getItem(def,_4bd.SCALE_DIMENSIONS_ATTRNAME);
if(_4cd==null||_4ac.m.isWhitespaceString(_4cd)){
return _4cc;
}
if("none".CPVisEngineEquals(_4cd)){
return 0;
}else{
if("x".CPVisEngineEquals(_4cd)){
return 1;
}else{
if("y".CPVisEngineEquals(_4cd)){
return 2;
}else{
if("both".CPVisEngineEquals(_4cd)){
return 3;
}
}
}
}
return _4cc;
};
_4bd.createStyleSpecFrom=function(_4ce){
if(_4ce!=null){
return _4ad.m.createSpecObject(_4ce,"com.ibm.vis.spec.StyleSpec");
}
return null;
};
_4bd.computeRadius=function(_4cf,size,_4d0){
var _4d1=Math.min(size.width,size.height);
var _4d2=Math.min(_4d0.width,_4d0.height);
var val=_4ae.m.convertLength(_4cf,_4d1,_4d2);
return val;
};
_4bd.makeSingleGlyphShape=function(base,size,_4d3,_4d4,_4d5){
var path=_4ac.m.getItem(base,"path");
var _4d6;
if(path!=null){
_4d6=_4bd.makeGlyphPath(path,_4d5);
}else{
var x=_4bd.getConvertedSizeValueForKey(base,"x",size.width,_4d3.width);
var y=_4bd.getConvertedSizeValueForKey(base,"y",size.height,_4d3.height);
var _4d7=_4ac.m.containsKey(base,"r");
if(_4d7){
var _4d8=_4bd.getConvertedRadiusValueForKey(base,"r",size,_4d3);
_4d6=new _4b2.m(x,y,_4d8);
}else{
var _4d9=_4bd.getConvertedSizeValueForKey(base,"width",size.width,_4d3.width);
var _4da=_4bd.getConvertedSizeValueForKey(base,"height",size.height,_4d3.height);
_4d6=_4b3.m.makeRectangle(x,y,_4d9,_4da,_4d5);
if(_4d5==null){
_4d6.fill=null;
_4d6.outline=null;
}
}
}
_4d6.snap=_4b4.m.getSnap(_4d5);
_4d6.scaleDimensions=_4bd.getScaleDimensionsValueFor(base,_4d4);
if(_4d5!=null){
if(_4d6.isFilled()){
_4b4.m.setFilled(_4d6,_4d5);
}else{
_4b4.m.setUnfilled(_4d6,_4d5,null);
}
}
return _4d6;
};
_4bd.getConvertedSizeValueForKey=function(base,key,_4db,_4dc){
var w=_4bd.getSizeInfoFromSpec(base,key);
if(w==null){
throw new _4b5.m(null,_4b6.m.ENGINE_ILLEGAL_ARGUMENT,"Bad definition for custom shape",null);
}
var _4dd=_4ae.m.convertLength(w,_4db,_4dc);
return _4dd;
};
_4bd.getConvertedRadiusValueForKey=function(base,key,_4de,_4df){
var r=_4bd.getSizeInfoFromSpec(base,key);
if(r==null){
throw new _4b5.m(null,_4b6.m.ENGINE_ILLEGAL_ARGUMENT,"Bad definition for custom shape",null);
}
var _4e0=_4bd.computeRadius(r,_4de,_4df);
return _4e0;
};
_4bd.getSizeInfoFromSpec=function(base,key){
var o=_4ac.m.getItem(base,key);
if(_4ac.m.isObject(o)){
return _4ad.m.createSpecObject(o,"com.ibm.vis.spec.PreferredSizeSpec");
}
return o;
};
_4bd.makeGlyphPath=function(path,_4e1){
var _4e2=_4bd.makeCodeList(path);
var m=_4e2.size()/2;
var x=Array.create([m],0);
var y=Array.create([m],0);
var _4e3=Array.create([m],"\x00");
var _4e4=false;
for(var i=0;i<m;++i){
var code=_4e2.get(2*i);
if(code<0){
_4e3[i]="M";
}else{
_4e3[i]=path.charAt(code);
}
if(_4e3[i]=="Z"){
_4e4=true;
x[i]=0;
y[i]=0;
}else{
var _4e5=_4e2.get(2*i+1);
var _4e6;
if(i+1<m){
_4e6=_4e2.get(2*i+2);
}else{
_4e6=path.CPVisEngineLength();
}
x[i]=_4b7.m.parseDouble(path.substring(code+1,_4e5));
y[i]=_4b7.m.parseDouble(path.substring(_4e5+1,_4e6));
}
}
var _4e7=null;
if(_4bd.isPoly(path)){
_4e7=new _4b8.m(x,y,true,null);
}else{
_4e7=new _4b9.m(x,y,_4e4,_4e3);
}
_4e7.snap=_4b4.m.getSnap(_4e1);
return _4e7;
};
_4bd.isPoly=function(path){
var n=path.CPVisEngineLength();
var poly=true;
for(var i=0;i<n;++i){
var c=path.charAt(i);
if(_4bd.isSVGCode(c)){
poly=false;
}
}
return poly;
};
_4bd.makeCodeList=function(path){
var n=path.CPVisEngineLength();
var _4e8=new _4ba.m();
for(var i=0;i<n;++i){
var c=path.charAt(i);
if(c==","){
_4e8.add(i);
}else{
if(_4bd.isSVGCode(c)){
_4e8.add(i);
if(c=="Z"){
_4e8.add(-1);
}
}
}
}
if(_4e8.get(0)!=0){
_4e8.add(0,-1);
}
return _4e8;
};
_4bd.isSVGCode=function(c){
return c=="L"||c=="M"||c=="Z"||c=="C"||c=="Q";
};
_4bb.add("com/ibm/vis/engine/internal/scene/CustomGlyphBuilder",["com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/nativeImpl/SpecUtil","com/ibm/vis/engine/internal/struct/Circle","com/ibm/vis/engine/internal/scene/ItemBuilder","com/ibm/vis/engine/internal/scene/StyleBuilder","com/ibm/vis/exceptions/EngineException","com/ibm/vis/exceptions/ErrorCode","com/ibm/vis/engine/internal/nativeImpl/Double","com/ibm/vis/engine/internal/struct/Poly","com/ibm/vis/engine/internal/struct/Path"],function(){
_4bd.SCALE_DIMENSIONS_ATTRNAME="scaleDimensions";
_4bd.NONE="none";
_4bd.X="x";
_4bd.Y="y";
_4bd.BOTH="both";
_4bd.SHAPE="shape";
_4bd.STYLE="style";
_4bd.PART="part";
_4bd.PATH="path";
_4bd.HEIGHT="height";
_4bd.WIDTH="width";
_4bd.RADIUS="r";
});
return _4bd;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/OffsetAestheticValueProducer":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/OffsetAestheticValueProducer",["./AestheticValueProducer","com/ibm/init/statics","dojo/_base/declare"],function(_4e9,_4ea,_4eb){
var _4ec=_4eb("com.ibm.vis.engine.internal.grammar.aesthetic.OffsetAestheticValueProducer",[_4e9],{coordinates:null,constructor:function(_4ed,_4ee){
this.visContext=_4ed;
this.coordinates=_4ee;
},make:function(spec){
if(spec==null||spec.size==null){
return null;
}
return spec.size;
},forPalette:function(o){
return o;
},modify:function(item,o,_4ef){
var v=(o);
if(v!=0){
var p=this.coordinates.getOffsetInFreeDirection(item,v,this.getGrammarSize());
item.affine(1,p.x,1,p.y,false);
}
return item;
},interpolate:function(a,b,p){
var low=a==null?0:(a);
var high=b==null?100:(b);
return low+p*(high-low);
},getDefaultForCategory:function(_4f0,_4f1){
return _4f1*100;
}});
return _4ec;
});
},"com/ibm/vis/engine/internal/grammar/scale/SpanOutRangeBuilder":function(){
define("com/ibm/vis/engine/internal/grammar/scale/SpanOutRangeBuilder",["com/ibm/init/fork!../../data/Range","com/ibm/init/fork!../../../../exceptions/RaveException","com/ibm/init/statics","dojo/_base/declare"],function(_4f2,_4f3,_4f4,_4f5){
var _4f6=_4f5("com.ibm.vis.engine.internal.grammar.scale.SpanOutRangeBuilder",null,{});
_4f6.createFromSpec=function(_4f7){
if(_4f7!=null){
if(_4f7.min==null){
_4f7.min=0;
}
if(_4f7.max==null){
_4f7.max=1;
}
_4f6.validateOutRangeSpec(_4f7);
return new _4f2.m(_4f7.min,_4f7.max);
}
return null;
};
_4f6.validateOutRangeSpec=function(_4f8){
if(_4f8.min>=_4f8.max){
throw new _4f3.m("outRange.max value must be larger than outRange.min",_4f3.m.SPEC_INVALID_VALUE);
}
};
return _4f6;
});
},"com/ibm/vis/engine/internal/grammar/layout/treemap/PivotBySize":function(){
define("com/ibm/vis/engine/internal/grammar/layout/treemap/PivotBySize",["./TreeMapAlgorithm","com/ibm/init/fork!../../../struct/Rect","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_4f9,_4fa,_4fb,_4fc,_4fd){
var _4fe=_4fd("com.ibm.vis.engine.internal.grammar.layout.treemap.PivotBySize",[_4f9],{constructor:function(){
},createBounds:function(node,rect,_4ff){
if(node!=null){
this.layoutNode(node,rect,_4ff);
}
},getRectangleAvailableForChildren:function(_500,_501,_502){
var area=_500.width*_500.height;
var _503=area*((_502-_501)/_502);
if(_500.width>_500.height){
var _504=_503/_500.height;
return new _4fa.m(_500.x,_500.y,_504,_500.height);
}else{
var _505=_503/_500.width;
return new _4fa.m(_500.x,_500.y,_500.width,_505);
}
},layoutNode:function(node,rect,_506){
if(node.rowIndex>-1){
_506.setBounds(node,rect);
rect=node.bounds;
}
var size=node.getSize();
if(size>0){
rect=this.getRectangleAvailableForChildren(rect,size,node.getAggregatedSize());
}
this.layoutSiblingNodes(node.getChildren(),rect,_506);
},layoutSiblingNodes:function(_507,rect,_508){
if(_507==null||_507.size()==0){
return;
}
if(_507.size()==1){
var node=_507.get(0);
this.layoutNode(node,rect,_508);
return;
}
var _509=this.pivotIndex(_507);
var _50a=_507.get(_509);
var l1=new _4fb.m();
var _50b=0;
if(_509>0){
for(var i=0;i<_509;++i){
l1.add(_507.get(i));
}
_50b=this.sum(l1);
}
var _50c=0;
var l2=new _4fb.m();
if(_509<_507.size()-1){
for(var i=_509+1;i<_507.size();++i){
l2.add(_507.get(i));
}
_50c=this.sum(l2);
}
var _50d=rect.width*rect.height;
var _50e=(_50b+_50a.getAggregatedSize()+_50c);
var a1=_50b*_50d/_50e;
var a2=_50c*_50d/_50e;
var _50f=_50a.getAggregatedSize()*_50d/_50e;
var r1,r2,r3,_510;
var l3=new _4fb.m();
var _511=this.isHorizontalLayout(rect);
if(_511){
var _512=a1/rect.height;
var _513=_50f/rect.height;
var _514=a2/rect.height;
r1=new _4fa.m(rect.x,rect.y,_512,rect.height);
_510=new _4fa.m(r1.x+r1.width,rect.y,_513,rect.height);
r2=new _4fa.m(_510.x+_510.width,rect.y,_514,rect.height);
r3=new _4fa.m(_510.x,rect.y+rect.height,_510.width,0);
this.transferToPivotRect(_510,r2,r3,_511,l2,l3);
}else{
var _515=a1/rect.width;
var _516=_50f/rect.width;
var _517=a2/rect.width;
r1=new _4fa.m(rect.x,rect.y,rect.width,_515);
_510=new _4fa.m(rect.x,rect.y+r1.height,rect.width,_516);
r2=new _4fa.m(rect.x,_510.y+_510.height,rect.width,_517);
r3=new _4fa.m(rect.x+rect.width,rect.y+r1.height,0,_510.height);
this.transferToPivotRect(_510,r2,r3,_511,l2,l3);
}
this.layoutNode(_50a,_510,_508);
if(l1.size()>0){
this.layoutSiblingNodes(l1,r1,_508);
}
if(l3.size()>0){
this.layoutSiblingNodes(l3,r3,_508);
}
if(l2.size()>0){
this.layoutSiblingNodes(l2,r2,_508);
}
},addToPivot:function(_518,r2,r3,_519,_51a,_51b,l3){
if(_519.size()==0){
return false;
}
var newP=new _4fa.m(_518.x,_518.y,_518.width,_518.height);
var _51c=r2.height*r2.width;
var _51d=_518.height*_518.width;
var _51e=_519.get(_51a);
var _51f=(_51c*(_51e.getAggregatedSize())/this.sum(_519));
if(_51b){
var _520=(_51f)/r2.height;
newP.width+=_520;
newP.height=_51d/newP.width;
if(_4fe.aspectRatio(_518)>_4fe.aspectRatio(newP)){
_518.width=newP.width;
_518.height=newP.height;
r2.x=_518.x+_518.width;
r2.width=r2.width-_520;
r3.width=newP.width;
r3.height=r2.height-newP.height;
r3.y=_518.y+_518.height;
var node=_519.get(_51a);
_519.remove(node);
l3.add(node);
return _519.size()!=0;
}
}else{
var _521=_51f/r2.width;
newP.height+=_521;
newP.width=_51d/newP.height;
if(_4fe.aspectRatio(_518)>_4fe.aspectRatio(newP)){
_518.width=newP.width;
_518.height=newP.height;
r2.y=_518.y+_518.height;
r2.height=r2.height-_521;
r3.width=r2.width-_518.width;
r3.height=_518.height;
r3.x=_518.x+_518.width;
var node=_519.get(_51a);
_519.remove(node);
l3.add(node);
return _519.size()!=0;
}
}
return false;
},sum:function(_522){
var sum=0;
for(var _523=0,_524=_522.size();_523<_524;++_523){
var node=_522.get(_523);
sum+=node.getAggregatedSize();
}
return sum;
},pivotIndex:function(_525){
var _526=0;
var _527=_525.get(_526).getAggregatedSize();
for(var i=0;i<_525.size();++i){
var _528=_525.get(i).getAggregatedSize();
if(_528>_527){
_526=i;
_527=_525.get(_526).getAggregatedSize();
}
}
return _526;
},isHorizontalLayout:function(rect){
return rect.width>rect.height;
},transferToPivotRect:function(_529,r2,r3,_52a,l2,l3){
for(var i=0;i<l2.size();++i){
if(!this.addToPivot(_529,r2,r3,l2,i,_52a,l3)){
break;
}
}
}});
_4fe.aspectRatio=function(r){
return (Math.max(r.width,r.height))/(Math.min(r.width,r.height));
};
return _4fe;
});
},"com/ibm/vis/engine/internal/migration/EvaluationContext":function(){
define("com/ibm/vis/engine/internal/migration/EvaluationContext",["com/ibm/init/fork!../nativeImpl/Map","com/ibm/init/fork!../nativeImpl/HashcodeMap","com/ibm/init/statics","dojo/_base/declare"],function(_52b,_52c,_52d,_52e){
var _52f=_52e("com.ibm.vis.engine.internal.migration.EvaluationContext",null,{variables:null,properties:null,context:null,parent:null,constructor:function(){
this.variables=new _52b.m();
this.properties=new _52c.m();
this.__constructor_com_ibm_vis_engine_internal_migration_EvaluationContext.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_migration_EvaluationContext:function(_530,_531){
this.context=_530;
this.parent=_531;
},getParent:function(){
return this.parent;
},reset:function(){
this.variables.clear();
this.properties.clear();
},getContext:function(){
return this.context;
},getVariables:function(){
return this.variables;
},getProperties:function(){
return this.properties;
},getVariable:function(name){
var _532=null;
if(this.variables.containsKey(name)){
_532=this.variables.get(name);
}else{
if(this.parent!=null){
_532=this.parent.getVariable(name);
}
}
return _532;
},hasVariable:function(name){
var _533=false;
if(this.variables.containsKey(name)){
_533=true;
}else{
if(this.parent!=null){
_533=this.parent.hasVariable(name);
}
}
return _533;
},getProperty:function(key){
var _534=null;
if(this.properties.containsKey(key)){
_534=this.properties.get(key);
}else{
if(this.parent!=null){
_534=this.parent.getProperty(key);
}
}
return _534;
},hasProperty:function(key){
var _535=false;
if(this.properties.containsKey(key)){
_535=true;
}else{
if(this.parent!=null){
_535=this.parent.hasProperty(key);
}
}
return _535;
}});
return _52f;
});
},"com/ibm/vis/engine/internal/data/Range":function(){
define("com/ibm/vis/engine/internal/data/Range",["com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_536,_537,_538){
var _539=_538("com.ibm.vis.engine.internal.data.Range",null,{min:0,max:0,range:0,constructor:function(min,max){
if(min>max){
this.min=max;
this.max=min;
}else{
this.min=min;
this.max=max;
}
this.range=this.max-this.min;
},fromZeroOne:function(x){
return this.min+this.range*x;
},toZeroOne:function(v){
if(this.range==0){
return (this.min!=0)?v/this.min:1;
}
return (v-this.min)/this.range;
},unionValue:function(v){
if(v!=v){
return this;
}
if(this.min!=this.min&&this.max!=this.max){
return new _539(v,v);
}
if(this.min!=this.min){
return new _539(v,this.max);
}
if(this.max!=this.max){
return new _539(v,this.min);
}
if(v<this.min){
return new _539(v,this.max);
}else{
if(v>this.max){
return new _539(this.min,v);
}else{
return this;
}
}
},contains:function(_53a){
return this.min<=_53a&&this.max>=_53a;
},containsTolerantly:function(_53b,_53c){
return (_53b>=(this.min-_53c)&&_53b<=(this.max+_53c));
},isEmpty:function(){
return _536.m.isNaN(this.min)&&_536.m.isNaN(this.max);
},complete:function(_53d){
if(this.isComplete()){
return this;
}else{
var _53e=_536.m.isNaN(this.min)?_53d.min:this.min;
var _53f=_536.m.isNaN(this.max)?_53d.max:this.max;
return new _539(_53e,_53f);
}
},isComplete:function(){
return !_536.m.isNaN(this.range);
},clamp:function(v){
if(v>this.max){
return this.max;
}else{
if(v<this.min){
return this.min;
}else{
return v;
}
}
},expand:function(_540){
if(_536.m.isNaN(_540)||_540==0){
return this;
}
if(_540<0&&this.range<=-2*_540){
var _541=this.min+this.range/2;
return new _539(_541,_541);
}else{
return new _539(this.min-_540,this.max+_540);
}
},mid:function(){
return (this.min+this.max)/2;
},getFormattingPrecision:function(){
var _542=0;
var x=(this.max>100000)?this.range/this.max:this.range;
if(x>0&&x<1){
_542=(0-Math.floor(Math.log(x)/Math.log(10)))+1;
}
return Math.round(_542);
},containsRange:function(_543){
return this.contains(_543.min)&&this.contains(_543.max);
},overlaps:function(r){
return (this.max>r.min&&this.min<r.max);
},getOverlap:function(r){
if(!this.overlaps(r)){
return 0;
}
var mn=Math.max(this.min,r.min);
var mx=Math.min(this.max,r.max);
return mx-mn;
},toString:function(){
return "["+this.min+", "+this.max+"]";
},hashCode:function(){
return Math.round(this.min)+Math.round(this.max);
},equals:function(obj){
if(this==obj){
return true;
}
if(obj==null){
return false;
}
try{
var _544=obj;
if(this.isEmpty()&&_544.isEmpty()){
return true;
}
if(this.max!=_544.max){
return false;
}
if(this.min!=_544.min){
return false;
}
}
catch(e){
if(e instanceof Error){
return false;
}else{
throw e;
}
}
return true;
}});
_537.add("com/ibm/vis/engine/internal/data/Range",[],function(){
_539.EMPTY=new _539(NaN,NaN);
_539.ZERO_ONE=new _539(0,1);
_539.ZERO=new _539(0,0);
});
return _539;
});
},"com/ibm/vis/interaction/internal/util/TransformData":function(){
define("com/ibm/vis/interaction/internal/util/TransformData",["com/ibm/init/fork!../../../engine/internal/nativeImpl/BasicFactory","com/ibm/init/fork!../../../engine/internal/nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_545,_546,_547,_548){
var _549=_548("com.ibm.vis.interaction.internal.util.TransformData",null,{dx:0,dy:0,sx:0,sy:0,constructor:function(dx,dy,sx,sy){
this.dx=dx;
this.dy=dy;
this.sx=sx;
this.sy=sy;
}});
_549.make=function(_54a){
var dX=0,dY=0,xx=1,yy=1;
if(_54a!=null){
var _54b=_545.m.getItem(_54a,"dx");
if(_545.m.isNumber(_54b)){
var n=_54b;
dX=n;
}
if(_545.m.isString(_54b)){
dX=_546.m.parseDouble(_54b);
}
var _54c=_545.m.getItem(_54a,"dy");
if(_545.m.isNumber(_54c)){
var n=_54c;
dY=n;
}
if(_545.m.isString(_54c)){
dY=_546.m.parseDouble(_54c);
}
var _54d=_545.m.getItem(_54a,"xx");
if(_545.m.isNumber(_54d)){
var n=_54d;
xx=n;
}
if(_545.m.isString(_54d)){
xx=_546.m.parseDouble(_54d);
}
var _54e=_545.m.getItem(_54a,"yy");
if(_545.m.isNumber(_54e)){
var n=_54e;
yy=n;
}
if(_545.m.isString(_54e)){
yy=_546.m.parseDouble(_54e);
}
}
var txfm=new _549(dX,dY,xx,yy);
return txfm;
};
return _549;
});
},"com/ibm/vis/engine/internal/grammar/element/Element":function(){
define("com/ibm/vis/engine/internal/grammar/element/Element",["../../IdentifiableItem","../values/DerivedValueProducer","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../values/ValueProvider","com/ibm/init/fork!../layout/LayoutFactory","com/ibm/init/fork!../aesthetic/Aesthetic","com/ibm/init/fork!../label/LabelProducer","com/ibm/init/fork!../label/TooltipProducer","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/fork!../../struct/Dim","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../struct/ShapeType","com/ibm/init/fork!../../struct/Shape","com/ibm/init/fork!../label/LabelCallout","com/ibm/init/fork!./SchemaBuilder","com/ibm/init/fork!./IntervalBuilder","com/ibm/init/fork!./PointBuilder","com/ibm/init/fork!./EdgeBuilder","com/ibm/init/fork!./PathBuilder","com/ibm/init/fork!./TextBuilder","com/ibm/init/fork!../../nativeImpl/WebEngineException","com/ibm/init/fork!../../struct/SmoothAreaPathMaker","com/ibm/init/fork!../../struct/SmoothPolyPathMaker","com/ibm/init/fork!../../GradientGeometry","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!../aesthetic/SizeAestheticValueProducer","com/ibm/init/fork!../../struct/Rect","com/ibm/init/fork!../../struct/Line","com/ibm/init/fork!../../Fill","com/ibm/init/fork!../../data/Row","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../util/ArrayUtil","com/ibm/init/fork!../../globalization/NumericShaper","com/ibm/init/statics","dojo/_base/declare"],function(_54f,_550,_551,_552,_553,_554,_555,_556,_557,_558,_559,_55a,_55b,_55c,_55d,_55e,_55f,_560,_561,_562,_563,_564,_565,_566,_567,_568,_569,_56a,_56b,_56c,_56d,_56e,_56f,_570,_571,_572){
var _573=_572("com.ibm.vis.engine.internal.grammar.element.Element",[_54f,_550],{grammar:null,type:null,interactionType:null,isLineWithPoints:false,pointOnLineAesthetic:null,positions:null,components:null,aesthetics:null,labelProducers:null,spec:null,data:null,cachedShapes:null,extent:null,layout:null,tooltipProducers:null,coordinateFieldIDs:null,aestheticFieldIDs:null,positionModifier:null,vis:null,size:null,baseline:null,isCallOut:false,elementShapeSize:null,elementShapesWithoutLabels:null,elementIndex:0,cachedBuilder:null,constructor:function(id,vis,_574,spec,_575){
this.grammar=_574;
this.spec=spec;
this.elementIndex=_575;
this.vis=_574.vis;
this.type=spec.type==null?"point":spec.type;
this.interactionType=spec.interactionType;
this.positionModifier=spec.positionModifier;
this.labelProducers=new _551.m();
if(spec.positioning==null){
var _576=spec.position;
this.positions=(_576==null)?new Array(0):new Array(_576.length);
for(var i=0;i<this.positions.length;++i){
this.positions[i]=_552.m.makePositionProvider(_576[i],vis);
}
}else{
this.positions=[_552.m.DEFAULT,_552.m.DEFAULT];
}
this.coordinateFieldIDs=new Array(this.positions.length);
for(var i=0;i<this.positions.length;++i){
this.coordinateFieldIDs[i]=this.positions[i].getBaseField()==null?null:this.positions[i].getBaseField().id;
}
var _577=(spec.data==null)?null:spec.data.$ref;
var d=vis.getByID(_577);
this.data=d==null?_573.chooseData(vis,this.positions):d;
if(spec.components!=null){
var _578=spec.components;
this.components=(_578==null)?new Array(0):new Array(_578.length);
for(var i=0;i<this.components.length;++i){
this.components[i]=_552.m.makeComponentProvider(_578[i],vis);
}
}else{
this.components=[_552.m.DEFAULT,_552.m.DEFAULT];
}
this.layout=_553.m.makeLayout(spec.positioning,this.data,_574,vis,spec.style);
this.aesthetics=_554.m.findAesthetics(this,spec);
this.aestheticFieldIDs=new Array(this.aesthetics.length);
for(var i=0;i<this.aesthetics.length;++i){
if(this.aesthetics[i].valueProvider.getBaseField()==null){
this.aestheticFieldIDs[i]=null;
}else{
this.aestheticFieldIDs[i]=this.aesthetics[i].valueProvider.getBaseField().id;
}
}
this.pointOnLineAesthetic=this.findPointOnLineAesthetic();
this.isLineWithPoints=this.type.CPVisEngineEquals("line")&&(this.spec.symbolStyle!=null);
if(spec.label!=null){
var _579=this.isInside(this.type);
var _57a=spec.label;
for(var _57b=0,_57c=_57a.length;_57b<_57c;++_57b){
var _57d=_57a[_57b];
var _57e=_555.m.makeForData(this.data,vis,_579,_57d,null);
if(this.hasOutlineStroke()&&this.isNotPolarTransformed()){
_57e.addPaddingForOutline(this.spec.style);
}
_57e.addAesthetics(_554.m.getLabelAesthetics(this,_57d));
this.labelProducers.add(_57e);
}
}
if(spec.tooltip!=null){
var _57f=spec.tooltip;
this.tooltipProducers=new _551.m();
for(var _580=0,_581=_57f.length;_580<_581;++_580){
var _582=_57f[_580];
var part=(_582.modifies==null)?null:_582.modifies.part;
this.tooltipProducers.add(_556.m.makeForData(this.data,vis,part));
}
}else{
this.tooltipProducers=null;
}
},getAreaUnderCurve:function(){
var _583=(!this.type.CPVisEngineEquals("edge")&&!this.type.CPVisEngineEquals("text"))&&(this.data!=null)&&(!this.data.isPdf());
if(_583&&this.positions!=null&&this.positions.length>=2){
var _584=this.positions[1].getBaseField();
if(_584!=null){
var _585=_584.getDataRange();
var _586=_584.granularity==null?_585.range/(this.data.rows.length-1):_584.granularity;
var _587=0;
for(var _588=0,_589=this.data.rows,_58a=_589.length;_588<_58a;++_588){
var row=_589[_588];
var _58b=this.positions[0].getNumber(row);
if(_58b!=null){
_587+=_58b*_586;
}
}
return _587;
}
}
return NaN;
},isNotPolarTransformed:function(){
return !this.grammar.coordinates.containsPolar();
},hasOutlineStroke:function(){
var _58c=this.spec.style;
return _58c!=null&&_58c.stroke!=null&&_58c.outline!=null;
},addSpaceRequirements:function(info,_58d){
var _58e=this.spec.style;
if(this.isLineWithPoints){
_58e=this.spec.symbolStyle;
}
var _58f=_557.m.getStrokeWidth(_58e);
var _590=0.03;
var _591=0.005;
if(_58e!=null&&(this.isLineWithPoints||"point".CPVisEngineEquals(this.type)||("interval".CPVisEngineEquals(this.type)&&!_58d)||this.type.indexOf("schema")>=0||"text".CPVisEngineEquals(this.type))){
var _592=0;
var _593=_573.buildPreferredDimension(_58e,new _558.m(0,0));
var _594=_559.m.convertLength(_593[0],15,300);
var _595=_559.m.convertLength(_593[1],15,300);
if(_58d){
_592=_595;
}else{
_592=_594;
}
if(this.needsSpaceAdjustment(_58e)){
_592=Math.min(_594,_595);
}
if(_592>0){
_58f+=_592;
_590=_591;
}
}
info.requirePixelPadding(_58f/2);
info.requireFractionPadding(_590/2);
},needsSpaceAdjustment:function(_596){
if(this.isLineWithPoints||"point".CPVisEngineEquals(this.type)){
var _597=_596.symbol;
var _598=null;
if(_597==null){
_598="circle";
}else{
if(_55a.m.isString(_597)){
_598=_597;
}else{
return false;
}
}
return !_55b.m.usesActualDimensions(_598);
}
return false;
},findPointOnLineAesthetic:function(){
if(this.type.CPVisEngineEquals("line")){
for(var _599=0,_59a=this.aesthetics,_59b=_59a.length;_599<_59b;++_599){
var _59c=_59a[_599];
if("symbol".CPVisEngineEquals(_59c.type)){
return _59c;
}
}
}
return null;
},getElementShapes:function(){
return this.elementShapesWithoutLabels;
},addLabels:function(_59d,_59e){
this.elementShapesWithoutLabels=_59d;
var _59f=_59e+"L";
var _5a0=_59e+"LN";
var _5a1=new _551.m();
var _5a2=new _551.m();
var _5a3=new Array(this.labelProducers.size());
for(var i=0;i<_5a3.length;++i){
_5a3[i]=new _551.m();
}
var _5a4=new Array(this.labelProducers.size());
for(var i=0;i<_5a4.length;++i){
_5a4[i]=new _551.m();
}
var _5a5=new Array(this.labelProducers.size());
for(var i=0;i<_5a5.length;++i){
_5a5[i]=new _551.m();
}
for(var _5a6=0,_5a7=_59d.size();_5a6<_5a7;++_5a6){
var _5a8=_59d.get(_5a6);
_5a1.add(_5a8);
if(this.layout!=null){
var _5a9=this.layout.applyLabels(_5a8,_5a2);
if(_5a9){
continue;
}
}
var _5aa=_5a8.id.indexOf("S");
var _5ab=_5a8.id.substring(_5aa+1);
var _5ac;
var size=this.labelProducers.size();
for(var i=0;i<size;++i){
var _5ad=this.labelProducers.get(i);
var _5ae=this.spec.label[i];
if(this.putLabelWithShape(_5ad)){
_5ac=_5a1;
}else{
_5ac=_5a2;
}
var _5af=_5ad.makeLabel(_5ae.content,_5a8);
if(_5af==null){
continue;
}
this.isCallOut="callout".CPVisEngineEquals(_5ad.style.location);
this.preventLineWithPointsOverlap(_5a8,_5af);
var _5b0=_5ad.makeLabelBackground(_5af,_5a8);
var _5b1=_5a8.visible?_5af.visible:false;
if(_5b0!=null){
_5ac.add(_5b0);
_5b0.meta=_5a8.meta;
_5b0.visible=_5b1;
if("callout".CPVisEngineEquals(_5ad.style.location)){
_5a4[i].add(_5b0);
}
if(_5a8.key!=null){
_5b0.key=_5a8.key+"|BL";
}
_5b0.setID(_59f+"B"+_5ab);
}
_5ac.add(_5af);
var _5b2=_5ad.makeLabelLine(_5af,_5a8,this.grammar);
if(_5b2!=null){
_5ac.add(_5b2);
_5b2.visible=_5b1;
_5b2.setID(_5a0+_5ab);
}
_5af.meta=_5a8.meta;
_5af.visible=_5b1;
if(this.vis.legendVis&&!_5af.visible){
_55c.m.makeGhostLike(_5af);
_5af.visible=true;
_5a8.visible=true;
}
if("callout".CPVisEngineEquals(_5ad.style.location)){
_5a3[i].add(_5af);
_5a5[i].add(_59d.size()+_5ac.size()-1);
}
if(_5a8.key!=null){
_5af.key=_5a8.key+"|L";
}
_5af.setID(_59f+_5ab);
}
}
_5a1.addAll(_5a2);
var _5b3=new _55d.m(this.grammar,this,this.extent);
var _5b4=new _551.m();
for(var i=0;i<_5a3.length;++i){
if(!_5a3[i].isEmpty()){
_5b4=_5b3.modifyShapes(_59d,_5a3[i],i);
this.grammar.setIDs(_5b4,_5a0);
if(!_5b4.isEmpty()){
var _5b5=-1;
for(var j=0;j<_5a5[i].size();++j){
_5b5=_5a5[i].get(j);
_5a1.set(_5b5,_5a3[i].get(j));
}
_5a1.addAll(_5b4);
}
for(var _5b6=0;_5b6<_5a4[i].size();++_5b6){
var _5a8=_5a4[i].get(_5b6);
var _5b7=_5a1.indexOf(_5a8);
if(_5a8==null){
continue;
}
if("rect".CPVisEngineEquals(_5a8.getType())||"path".CPVisEngineEquals(_5a8.getType())){
var s=_5a1.get(_5b7+1);
if(s==null){
_5a1.set(_5b7,null);
}else{
var _5b8=s;
this.labelProducers.get(i).adjustLabelBackgroundBounds(_5b8,_5a8);
}
}
}
}
}
var temp=new _551.m();
for(var _5b9=0,_5ba=_5a1.size();_5b9<_5ba;++_5b9){
var s=_5a1.get(_5b9);
if(s!=null){
temp.add(s);
}
}
_5a1=temp;
return _5a1;
},putLabelWithShape:function(_5bb){
return "text".CPVisEngineEquals(this.type)||"point".CPVisEngineEquals(this.type)||"symbol".CPVisEngineEquals(_5bb.part)||this.isLineWithPoints;
},preventLineWithPointsOverlap:function(_5bc,_5bd){
if(this.isLineWithPoints&&this.spec.symbolStyle!=null&&("line".CPVisEngineEquals(_5bc.getElementPart()))){
var _5be=_5bd;
if(!"middle".CPVisEngineEquals(_5be.valign)){
var _5bf=this.calculateDefaultShapeSize(this.spec.symbolStyle).height;
var _5c0="start".CPVisEngineEquals(_5be.valign)?-1:1;
_5be.p.y+=_5c0*_5bf/2;
}
}
},makeBuilder:function(_5c1,_5c2,_5c3,size,_5c4){
if(_5c2.CPVISEngineStartsWith("schema")){
return new _55e.m(this.vis.visContext,_5c1,_5c3,_5c2,size,this.components,this.data.rows,_5c4);
}
if(_5c2.CPVisEngineEquals("interval")){
return new _55f.m(this.vis.visContext,_5c1,_5c3,size,_5c4,this.getClip()==2);
}
if(_5c2.CPVisEngineEquals("point")){
return new _560.m(this.vis.visContext,_5c1,_5c3,size,_5c4);
}
if(_5c2.CPVisEngineEquals("edge")){
return new _561.m(this.vis.visContext,_5c1,_5c3,_5c4);
}
if(_5c2.CPVisEngineEquals("path")){
return new _562.m(this.vis.visContext,_5c1,_5c3,false,false,false,null,_557.m.getSnap(_5c4));
}
if(_5c2.CPVisEngineEquals("line")){
return this.getBuilder(_5c1,_5c3,true,false,false,_5c2,_5c4);
}
if(_5c2.CPVisEngineEquals("polygon")){
return new _562.m(this.vis.visContext,_5c1,_5c3,false,true,false,null,_557.m.getSnap(_5c4));
}
if(_5c2.CPVisEngineEquals("area")){
return this.getBuilder(_5c1,_5c3,true,true,true,_5c2,_5c4);
}
if(_5c2.CPVisEngineEquals("text")){
return new _563.m(this.vis.visContext,_5c1,_5c3,this.vis,this.data,size,this.spec);
}
throw new _564.m("Type '"+_5c2+"' not supported yet");
},getBuilder:function(_5c5,_5c6,sort,_5c7,drop,type,_5c8){
if("smooth".CPVisEngineEquals(this.spec.interpolation)){
var _5c9=null;
if("area".CPVisEngineEquals(type)){
_5c9=new _565.m();
}else{
_5c9=new _566.m();
}
return new _562.m(this.vis.visContext,_5c5,_5c6,sort,_5c7,drop,_5c9,_557.m.getSnap(_5c8));
}
return new _562.m(this.vis.visContext,_5c5,_5c6,sort,_5c7,drop,null,_557.m.getSnap(_5c8));
},calculateDefaultShapeSize:function(_5ca){
var size;
if(this.layout!=null){
size=this.layout.getDefaultShapeSize(this.extent,this.data.rows.length);
}else{
size=this.grammar.coordinates.getDefaultSize(this.extent,this.positions);
}
if(_5ca!=null){
var _5cb=_573.buildPreferredDimension(_5ca,size);
size.width=_559.m.convertLength(_5cb[0],size.width,this.extent.width);
size.height=_559.m.convertLength(_5cb[1],size.height,this.extent.height);
}
return size;
},makeShapes:function(id,_5cc,_5cd,_5ce,_5cf,_5d0){
if(!this.usesStacking()){
_5cc=_5cc.removeStackTransform();
}
this.extent=_5cd;
var size=this.calculateDefaultShapeSize(this.spec.style);
this.size=size;
var _5d1=this.makeBuilder(_5cc,this.type,_5cd,size,this.spec.style);
this.cachedBuilder=_5d1;
var _5d2=this.isLineWithPoints?this.makeBuilder(_5cc,"point",_5cd,this.calculateDefaultShapeSize(this.spec.symbolStyle),this.spec.symbolStyle):null;
this.setBaseline(_5cc,_5d1);
var _5d3;
if(this.layout!=null){
this.layout.adapter.connect(this.data.rows,_5d1,_5ce);
var _5d4=this.layout.buildLayout(this.data.rows.length,_5cd);
_5d3=new _551.m();
for(var _5d5=0,_5d6=_5d4.size();_5d5<_5d6;++_5d5){
var item=_5d4.get(_5d5);
var s=item;
s.setLocalGradientGeometry();
_5d3.add(s);
}
}else{
if(this.usesAugmentation()){
_5d3=this.makeByPositions(_5cc,_5d1);
}else{
if(_5d1.makesContinuousShapes()){
_5d3=this.makePerSplitShape(_5cc,_5d1,_5d2);
}else{
_5d3=this.makeByPositions(_5cc,_5d1);
}
}
}
var gg=_567.m.makeFromRect(0,0,_5cd.width,_5cd.height);
for(var _5d7=0,_5d8=_5d3.size();_5d7<_5d8;++_5d7){
var _5d9=_5d3.get(_5d7);
_5d9.data=this.data;
_5d9.shapeIsElement=true;
_5d9.setGlobalGradient(gg);
if(this.spec.style!=null){
if(this.spec.style.startArrow!=null){
(_5d9).setStartArrow(this.spec.style.startArrow);
}
if(this.spec.style.endArrow!=null){
(_5d9).setEndArrow(this.spec.style.endArrow);
}
}
}
this.grammar.faceting.addFacetInfoToShapes(_5d3,this);
if(this.layout==null||this.layout.respectsTransforms()){
_5d3=_5cc.modifyShapes(_5d3,_5cd);
}
if(_5cc.containsPolar()){
this.updateWedgeShapes(_5d3);
}
if(_5d0){
if(this.layout==null){
_5d3=this.prepareShapes(id,_5cc,_5cd,_5ce,_5d3,_5cf,true);
}else{
_5d3=this.prepareShapes(id,_5cc,_5cd,_5ce,_5d3,_5cf,!this.layout.needsAestheticsPreApplied());
}
}
return _5d3;
},usesStacking:function(){
return this.positionModifier==null||!this.positionModifier.CPVisEngineEquals("none");
},prepareShapes:function(id,_5da,_5db,_5dc,_5dd,_5de,_5df){
if(_5df){
this.styleShapes(_5dd);
this.applyAesthetics(_5dd);
}else{
for(var _5e0=0,_5e1=_5dd.size();_5e0<_5e1;++_5e0){
var _5e2=_5dd.get(_5e0);
if(_5e2.rows!=null){
var row=this.data.rows[_5e2.rows[0]];
for(var _5e3=0,_5e4=this.aesthetics,_5e5=_5e4.length;_5e3<_5e5;++_5e3){
var _5e6=_5e4[_5e3];
if(_5e6.type.CPVisEngineEquals("color")){
_5e6.apply(_5e2,row);
}
}
}
}
}
this.modifyPositions(_5dd,_5da);
this.makeTooltips(_5dd);
this.cachedShapes=_5dd;
var _5e7=id+"E"+_5dc;
this.grammar.setIDs(_5dd,_5e7+"S");
this.cacheDefenderScrollUnit(this,_5dd);
if("point".CPVisEngineEquals(this.type)){
this.calculateShapeSizeRange(_5dd);
}
_5dd=this.prepareLabels(_5e7,_5dd,_5de);
return _5dd;
},calculateShapeSizeRange:function(_5e8){
var _5e9=0;
var _5ea=0;
var _5eb=new _551.m();
for(var _5ec=0,_5ed=_5e8.size();_5ec<_5ed;++_5ec){
var _5ee=_5e8.get(_5ec);
var s=this.getSignificantSize(_5ee);
_5eb.add(s);
}
if(!_5eb.isEmpty()){
_5e9=_5eb.get(0);
_5ea=_5eb.get(0);
for(var i=1;i<_5eb.size();++i){
_5e9=Math.min(_5eb.get(i),_5e9);
_5ea=Math.max(_5eb.get(i),_5ea);
}
this.elementShapeSize=new _568.m(_5e9,_5ea);
}
},getSignificantSize:function(item){
var _5ef=null;
for(var _5f0=0,_5f1=this.aesthetics,_5f2=_5f1.length;_5f0<_5f2;++_5f0){
var _5f3=_5f1[_5f0];
if(_5f3.producer instanceof _569.m){
_5ef=_5f3.modifiesType;
}
}
var _5f4=item.getBounds().getExtent();
if(item.isFilled()){
if("height".CPVisEngineEquals(_5ef)||_5f4.width==_5f4.height){
return _5f4.height;
}else{
if("width".CPVisEngineEquals(_5ef)){
return _5f4.width;
}else{
return Math.sqrt(Math.pow(_5f4.width,2)+Math.pow(_5f4.height,2));
}
}
}
return _5f4.height;
},cacheDefenderScrollUnit:function(_5f5,_5f6){
var type="scrollUnit";
if(type.CPVisEngineEquals(_5f5.interactionType)&&_5f6.size()>0){
this.vis.visContext.objectMap.cacheObject("scrollUnit",_5f6.get(0));
}
},prepareLabels:function(_5f7,_5f8,_5f9){
if(this.labelProducers.size()>0||this.layout!=null){
var _5fa=(this.getClip()==2)?new _56a.m(0,0,this.grammar.graphSize.width,this.grammar.graphSize.height):_5f9;
_5fa.snap=_557.m.getSnap(this.spec.style);
if(this.getClip()==4){
_5fa=null;
}
for(var _5fb=0,_5fc=this.labelProducers,_5fd=_5fc.size();_5fb<_5fd;++_5fb){
var p=_5fc.get(_5fb);
p.setClipBounds(_5fa);
}
return this.addLabels(_5f8,_5f7);
}
return _5f8;
},setBaseline:function(_5fe,_5ff){
if(this.layout!=null||this.data==null||this.data.rows==null||this.data.rows.length==0||this.data.rows[0].data.length==0){
return;
}
var row=this.data.rows[0];
var _600=_5fe.getPosition(row,this.positions);
var _601=_5ff.getBase(_600);
if(_601==null){
this.baseline=null;
return;
}
this.baseline=_56b.m.make(0,_601,this.extent.width,_601);
this.baseline=_5fe.modifyShape(this.baseline,this.extent);
if(_5fe.containsPolar()){
var _602=this.baseline.getType();
var x=0;
var y=_601;
if("line".CPVisEngineEquals(_602)){
x=(this.baseline).x[0];
y=(this.baseline).y[0];
}else{
x=(this.baseline).x;
y=(this.baseline).y;
}
this.baseline=_56b.m.make(x,y,x,y);
}
this.baseline.snap=_557.m.getSnap(this.spec.style);
},applyAesthetics:function(_603){
var _604=0;
for(var _605=0,_606=_603.size();_605<_606;++_605){
var _607=_603.get(_605);
_603.set(_604,this.applyAesthetic(_607));
_604++;
}
},applyAesthetic:function(_608){
if(_608.rows!=null&&this.data!=null&&this.data.rows.length>0){
var row=this.data.rows[_608.rows[0]];
this.grammar.faceting.applyFacetingToShape(_608,row,this);
for(var _609=0,_60a=this.aesthetics,_60b=_60a.length;_609<_60b;++_609){
var _60c=_60a[_609];
_608=_60c.apply(_608,row);
if(this.vis.legendVis&&!_608.visible){
_55c.m.makeGhostLike(_608);
}
}
}
return _608;
},styleShapes:function(_60d){
for(var _60e=0,_60f=_60d.size();_60e<_60f;++_60e){
var s=_60d.get(_60e);
if(this.layout==null||!this.layout.applyStyles(s)){
this.styleShape(s);
}
}
},styleShape:function(s){
var _610=s.getType();
var _611=s.getMeta("part");
var _612=this.isLineWithPoints&&"symbol".CPVisEngineEquals(_611)?this.spec.symbolStyle:this.spec.style;
if(_612==null){
if("text".CPVisEngineEquals(_610)){
_557.m.setDefaultTextStyle(s);
}else{
if(s.isFilled()){
_557.m.setDefaultFillStyle(s);
}else{
_557.m.setDefaultStrokeStyle(s);
}
}
}else{
if("text".CPVisEngineEquals(_610)){
_557.m.setUnfilled(s,_612,null);
}else{
if(s.isFilled()&&(s.fill==null||s.canScaleBoth())){
_557.m.setFilled(s,_612);
}else{
if(!s.isFilled()){
var _613=null;
if("path".CPVisEngineEquals(this.type)||"line".CPVisEngineEquals(this.type)||"edge".CPVisEngineEquals(this.type)){
if(_612.size!=null){
_613=this.getStrokeWidthForStyleSize(_612);
}
}
_557.m.setUnfilled(s,_612,_613);
}
}
}
}
var _614=s.getParts();
if(_614!=null){
for(var _615=0,_616=_614.length;_615<_616;++_615){
var part=_614[_615];
if(part.fill==null&&part.outline==null&&part.stroke==null){
this.styleShape(part);
if(!part.isFilled()&&s.isFilled()){
part.fill=_56c.m.makeSolid(part.outline);
part.outline=null;
}
}
}
}
},getStrokeWidthForStyleSize:function(_617){
var _618=_557.m.getDefaultStrokeWidth();
var size=new _558.m(_618,_618);
var _619=_573.buildPreferredDimension(_617,size);
size.width=_559.m.convertLength(_619[0],size.width,this.extent.width);
return size.width;
},updateWedgeShapes:function(_61a){
if(this.labelProducers!=null){
for(var _61b=0,_61c=this.labelProducers,_61d=_61c.size();_61b<_61d;++_61b){
var _61e=_61c.get(_61b);
if(_61e.style.location!=null&&"callout".CPVisEngineEquals(_61e.style.location)){
for(var _61f=0,_620=_61a.size();_61f<_620;++_61f){
var s=_61a.get(_61f);
if("wedge".CPVisEngineEquals(s.getType())){
var w=(s);
w.scale(0.5,0.5);
w.getGlobalGradientGeometry().scaleRadius(0.5);
}
}
break;
}
}
}
},isInside:function(_621){
return _621.CPVisEngineEquals("interval")||_621.CPVisEngineEquals("polygon")||_621.CPVisEngineEquals("area");
},makeAestheticSplits:function(){
var _622=new _551.m();
this.grammar.faceting.splitAesthetic(_622,this);
for(var _623=0,_624=this.aesthetics,_625=_624.length;_623<_625;++_623){
var _626=_624[_623];
if(!_626.modifiesSymbol()||_626.valueProvider.isCategorical()){
var _627=new _551.m();
for(var _628=0,_629=_622.size();_628<_629;++_628){
var _62a=_622.get(_628);
this.splitByAesthetic(_62a,_626,_627);
}
_622=_627;
}
}
return _622;
},usesAugmentation:function(){
return this.data!=null&&this.data.augmentation!=null&&this.positions.length==0&&this.layout==null;
},makeByPositions:function(_62b,_62c){
var _62d=new _551.m();
var _62e=this.getDefaultKeyFields();
var _62f=this.usesAugmentation()?_62b.get2DScaleRanges():null;
if(this.hasVariableRef()||(this.data!=null&&this.data.augmentation!=null)){
var rows=this.data.rows;
var _630=this.makeAestheticSplits();
for(var _631=_630.size()-1;_631>=0;--_631){
var _632=_630.get(_631);
for(var i=_632.size()-1;i>=0;--i){
var _633=_632.get(i);
var s=null;
var _634=_62b.getPosition(rows[_633],this.positions);
if(this.usesAugmentation()){
s=_62c.makeFromAugmentation(_633,this.data.augmentation,_62f);
}else{
if(_634!=null){
s=_62c.make(_634,_633);
}
if(s==null){
s=new _56a.m(0,0,0,0);
s.visible=false;
}
}
if(s!=null){
s.key=this.data.getKeyWithDefaultFields(rows[_633],_62e);
_573.addKeyToShapeParts(s);
s.position=_634;
s.aestheticGroup=_631;
_62d.add(s);
}
}
}
}else{
var rows;
if(this.data==null||this.data.rows==null||this.data.rows.length==0){
rows=[_56d.m.createEmptyRow(_62b.scales.length,0)];
}else{
rows=this.hasReferencedFields()?this.data.rows:[this.data.rows[0]];
}
for(var i=0;i<rows.length;++i){
var _634=_62b.getPosition(rows[i],this.positions);
if(_634!=null){
var s=_62c.make(_634,i);
if(s!=null){
_62d.add(s);
}
}
}
}
return _62d;
},hasReferencedFields:function(){
return this.aestheticFieldIDs.length>0||this.isLabelReferenced();
},isLabelReferenced:function(){
if(this.spec.label==null||this.spec.label.length==0){
return false;
}
for(var _635=0,_636=this.spec.label,_637=_636.length;_635<_637;++_635){
var _638=_636[_635];
for(var _639=0,_63a=_638.content,_63b=_63a.length;_639<_63b;++_639){
var o=_63a[_639];
if(o instanceof Object){
return true;
}
}
}
return false;
},getDefaultKeyFields:function(){
if(this.positions.length==0){
return null;
}
if(this.grammar.coordinates.containsCluster()){
var _63c=Math.min(this.grammar.coordinates.axes.length,this.positions.length-1);
var _63d=new _551.m();
for(var i=0;i<_63c;++i){
var _63e=this.positions[i+1].getBaseField();
if(_63e!=null){
_63d.add(_63e);
}
}
var _63f=_63d.size();
if(_63f==0){
return null;
}
var _640=new Array(_63f);
for(var i=0;i<_63f;++i){
_640[i]=_63d.get(i);
}
return _640;
}
var _641=(this.positions.length-1);
var _642=this.positions[_641].getBaseField();
if(_642==null){
while(_642==null&&_641>-1){
_642=this.positions[_641].getBaseField();
_641--;
}
if(_642==null){
return null;
}
}
return [_642];
},handleMissingCategoryValuesAsZeroForStack:function(_643,_644,rows,_645,_646){
var _647=_643.containsStacking()&&_643.scales.length>1&&_643.scales[1].getCategoryCount()>0;
var _648;
if(_647){
var _649=_643.scales[1].getCategoryCount();
var _64a=new _56e.m();
for(var k=0;k<_649;++k){
_64a.put(k,k);
}
var _64b=this.positions[1].getBaseField();
var unit=this.positions[1].getUnit();
var _64c;
var _64d=0;
for(var _64e=0;_64e<_644.size();++_64e){
var i=_644.get(_64e);
_648=_643.getPosition(rows[i],this.positions);
if(!_648.XPositionCoordinateUndefined()){
_64c=_643.scales[1].getCategoryIndexFromZeroOne(_648.X(),unit);
_64a.remove(_64c);
}
_645.add(_648);
_646.add(i);
_64d=i;
}
for(var _64f=0,_650=_64a.keySet(),_651=_650.size();_64f<_651;++_64f){
var _652=_650.get(_64f);
var _653=new Array(rows[0].data.length);
for(var _654=0,_655=this.positions,_656=_655.length;_654<_656;++_654){
var _657=_655[_654];
_653[_657.getBaseField().index]=0;
}
var _658=_643.scales[1].getFieldCategoryIndex(_652,unit);
_653[_64b.index]=_658;
var row=_56d.m.createRow(_653,_64d);
_648=_643.getPosition(row,this.positions);
_645.add(_648);
_646.add(_64d);
}
}else{
for(var _64c=0;_64c<_644.size();++_64c){
var i=_644.get(_64c);
_648=_643.getPosition(rows[i],this.positions);
_645.add(_648);
_646.add(i);
}
}
},makePerSplitShape:function(_659,_65a,_65b){
var rows=this.data.rows;
var _65c=new _551.m();
var _65d=this.makeAestheticSplits();
var _65e=1;
var _65f=this.getDefaultKeyFields();
for(var _660=0,_661=_65d.size();_660<_661;++_660){
var _662=_65d.get(_660);
var _663=new _551.m();
var _664=new _551.m();
this.handleMissingCategoryValuesAsZeroForStack(_659,_662,rows,_663,_664);
var _665=Array.create([_664.size()],0);
var j=0;
for(var _666=0;_666<_664.size();++_666){
var i=_664.get(_666);
_665[j]=i;
j++;
}
var _667=_65a.makeContinuousShapes(_663.toArray(new Array(_663.size())),_665,rows);
if(_667!=null){
for(var _668=0,_669=_667.size();_668<_669;++_668){
var _66a=_667.get(_668);
_66a.aestheticGroup=_65e;
_66a.key=this.data.getKeyWithDefaultFields(rows[_665[0]],_65f);
if(this.isLineWithPoints){
_66a.setMeta("part","line");
}
_65c.add(0,_66a);
if(_65b!=null){
var _66b=_66a.positions;
var _66c=_66a.getRows();
for(var _66d=0;_66d<_66c.length;++_66d){
var _66e=_65b.make(_66b[_66d],_66c[_66d]);
if(_66e!=null){
_66e.key=this.data.getKey(rows[_66c[_66d]]);
_66e.parent=_66a;
_66e.setMeta("part","symbol");
_66e.aestheticGroup=_65e;
_66e.setGlyphLike();
_66e.position=_66b[_66d];
_65c.add(1,_66e);
}
}
}
}
}
_65e++;
}
return _65c;
},splitByAesthetic:function(_66f,_670,_671){
var _672=new _56e.m();
var _673=new _551.m();
_670.valueProvider.enableOrdering(this.grammar.coordinates.containsStacking()||this.vis.legendVis);
for(var _674=0;_674<_66f.size();++_674){
var i=_66f.get(_674);
if(_670.valueProvider.getBaseField()==null||(this.data.rows[i].data.length>_670.valueProvider.getBaseField().index)){
var n=_670.valueProvider.getNumber(this.data.rows[i]);
if(n==null){
_673.add(i);
}else{
var v=n;
if(v!=v){
_673.add(i);
}else{
var list=_672.get(v);
if(list==null){
list=new _551.m();
_672.put(v,list);
}
list.add(i);
}
}
}
}
var keys=_55a.m.getHashMapKeysAsDoubleArray(_672);
if(!_673.isEmpty()){
_671.add(_673);
}
_55a.m.sortArray(keys);
for(var j=keys.length-1;j>=0;--j){
_671.add(_672.get(keys[j]));
}
},hasVariableRef:function(){
for(var _675=0,_676=this.positions,_677=_676.length;_675<_677;++_675){
var _678=_676[_675];
if(_678.getBaseField()!=null){
return true;
}
}
return false;
},modifyPositions:function(_679,_67a){
if(this.positionModifier==null||!this.positionModifier.CPVisEngineEquals("dodge")){
return;
}
this.dodgeShapesWithSameCenter(_679,!_67a.transposesAxes());
},dodgeShapesWithSameCenter:function(_67b,_67c){
var _67d=new _56e.m();
for(var _67e=0,_67f=_67b.size();_67e<_67f;++_67e){
var _680=_67b.get(_67e);
var _681=this.getCoordinates(_680.getRows());
var key=_56f.m.arrayToString(_681);
var list=_67d.get(key);
if(list==null){
list=new _551.m();
_67d.put(key,list);
}
list.add(_680);
}
for(var _682=0,_683=_67d.values(),_684=_683.size();_682<_684;++_682){
var _685=_683.get(_682);
_573.dodgeConflicts(_685,_67c);
}
},makeTooltips:function(_686){
if(this.tooltipProducers!=null&&this.tooltipProducers.size()>0){
var i=0;
for(var _687=0,_688=this.tooltipProducers,_689=_688.size();_687<_689;++_687){
var _68a=_688.get(_687);
this.produceTooltip(_686,_68a,this.spec.tooltip[i]);
i++;
}
}
},produceTooltip:function(_68b,_68c,_68d){
for(var _68e=0,_68f=_68b.size();_68e<_68f;++_68e){
var _690=_68b.get(_68e);
var s=_68c.makeStringFor(_68d.content,_690);
if(s!=null){
_690.tooltip=_570.m.shape(s,this.vis.visContext.getNumericShapingInfo());
}
var _691=_690.getParts();
if(_691!=null&&_691.length>0){
var _692=new _551.m();
for(var _693=0,_694=_691.length;_693<_694;++_693){
var part=_691[_693];
_692.add(part);
}
this.produceTooltip(_692,_68c,_68d);
}
}
},desiresZero:function(_695){
var _696=_695.scales.length<this.positions.length;
return !_696&&(this.type.CPVisEngineEquals("area")||this.type.CPVisEngineEquals("interval"));
},getDefaultSizeModifierType:function(_697){
if(this.type.CPVisEngineEquals("interval")||this.type.CPVisEngineEquals("schema:boxplot")){
return _697?"height":"width";
}
return null;
},getCoordinates:function(rows){
if(this.layout!=null){
return null;
}
if(rows==null||rows.length<1){
return null;
}
var _698=Array.create([this.positions.length],0);
var row=this.data.rows[rows[0]];
for(var i=0;i<_698.length;++i){
var _699=this.positions[i].getNumber(row);
_698[i]=_699;
}
return _698;
},getAestheticValues:function(rows){
if(rows==null||rows.length<1){
return null;
}
var _69a=Array.create([this.aesthetics.length],0);
var row=this.data.rows[rows[0]];
for(var i=0;i<_69a.length;++i){
var _69b=this.aesthetics[i].valueProvider.getNumber(row);
_69a[i]=_69b==null?NaN:_69b;
}
return _69a;
},getClip:function(){
var clip=this.spec.clip;
if("atBounds".CPVisEngineEquals(clip)){
return 2;
}else{
if("none".CPVisEngineEquals(clip)){
return 4;
}else{
if("overlap".CPVisEngineEquals(clip)){
return 1;
}
}
}
return this.layout==null?2:4;
},getAesthetics:function(){
return this.aesthetics;
},setAesthetics:function(_69c){
this.aesthetics=_69c;
},getElementShapeSize:function(){
return this.elementShapeSize;
},setElementShapeSize:function(_69d){
this.elementShapeSize=_69d;
},getDerivedValue:function(_69e,_69f,_6a0){
if(this.cachedBuilder==null){
return null;
}
return this.cachedBuilder.getDerivedValue(_69e,_69f,_6a0);
},getPreferredSize:function(){
if(this.layout==null){
return new _558.m(400,400);
}else{
var _6a1;
var _6a2=this.extent;
this.extent=new _558.m(5000,5000);
var size=this.calculateDefaultShapeSize(this.spec.style);
var _6a3=this.makeBuilder(this.grammar.coordinates,this.type,this.extent,size,this.spec.style);
this.layout.adapter.connect(this.data.rows,_6a3,this.elementIndex);
_6a1=this.layout.getPreferredSize(this.data.rows.length);
this.extent=_6a2;
return _6a1;
}
}});
_573.chooseData=function(vis,p){
if(vis==null||vis.data==null||vis.data.length==0){
return null;
}
if(vis.data.length==1){
return vis.data[0];
}
for(var _6a4=0,_6a5=p.length;_6a4<_6a5;++_6a4){
var _6a6=p[_6a4];
if(_6a6.getBaseField()!=null){
return _6a6.getBaseField().data;
}
}
return vis.data[0];
};
_573.buildPreferredDimension=function(_6a7,size){
var _6a8=_573.getPreferredSizeSpecForSize(_6a7);
var _6a9=_573.buildPreferredSizeSpec(_6a8,_6a7.width,size.width);
var _6aa=_573.buildPreferredSizeSpec(_6a8,_6a7.height,size.height);
return [_6a9,_6aa];
};
_573.getPreferredSizeSpecForSize=function(_6ab){
var _6ac=new Object();
if(_6ab.size!=null){
if(_55a.m.isNumber(_6ab.size)||_55a.m.isString(_6ab.size)){
_6ac.preferred=_6ab.size;
}else{
_6ac=_6ab.size;
}
}
return _6ac;
};
_573.buildPreferredSizeSpec=function(_6ad,_6ae,_6af){
var _6b0=new Object();
if(_6ae!=null){
if(_55a.m.isNumber(_6ae)||_55a.m.isString(_6ae)){
_6b0.preferred=_6ae;
}else{
_6b0=_6ae;
}
}
if(_6b0.preferred==null){
_6b0.preferred=(_6ad.preferred==null)?_6af:_6ad.preferred;
}
if(_6b0.max==null){
_6b0.max=_6ad.max;
}
if(_6b0.min==null){
_6b0.min=_6ad.min;
}
return _6b0;
};
_573.addKeyToShapeParts=function(_6b1){
var _6b2=_6b1.getParts();
if(_6b2!=null){
for(var _6b3=0,_6b4=_6b2.length;_6b3<_6b4;++_6b3){
var part=_6b2[_6b3];
part.key=_6b1.key;
}
}
};
_573.dodgeConflicts=function(_6b5,_6b6){
var size=_6b5.size();
if(size<2){
return;
}
var _6b7=new _56e.m();
var _6b8=0;
for(var _6b9=0,_6ba=_6b5.size();_6b9<_6ba;++_6b9){
var _6bb=_6b5.get(_6b9);
if(_6bb.getRows()!=null){
_6b7.put(_6bb.getRows()[0],_6bb);
var _6bc=_6bb.getBounds();
_6b8+=(_6b6)?_6bc.width:_6bc.height;
}
}
var _6bd=_55a.m.getHashMapKeysAsLongArray(_6b7);
_55a.m.sortArray(_6bd);
var _6be=_6b5.get(0).getBounds().getCenter();
var _6bf=(_6b6)?_6be.x-(_6b8/2):_6be.y-(_6b8/2);
for(var _6c0=0,_6c1=_6bd.length;_6c0<_6c1;++_6c0){
var _6c2=_6bd[_6c0];
var _6c3=_6b7.get(_6c2);
var _6bc=_6c3.getBounds();
var dy=(_6b6)?_6bc.width:_6bc.height;
var dx=(_6b6)?_6bc.x:_6bc.y;
var _6c4=_6bf-dx;
if(_6b6){
_6c3.affine(1,_6c4,1,0,false);
}else{
_6c3.affine(1,0,1,_6c4,false);
}
_6bf+=dy;
}
};
_571.add("com/ibm/vis/engine/internal/grammar/element/Element",["com/ibm/vis/engine/internal/IdentifiableItem","com/ibm/vis/engine/internal/grammar/values/DerivedValueProducer","com/ibm/vis/engine/internal/nativeImpl/BasicFactory"],function(){
_573.UNFACETED_ELEMENT="unfaceted";
_573.LABEL_KEY_SUFFIX="|L";
_573.BACKGROUND_KEY_SUFFIX="|BL";
_573.NO_CLIP=4;
_573.AT_BOUND_CLIP=2;
_573.OVERLAP_CLIP=1;
_573.ELEMENT_TEXT="text";
_573.ELEMENT_POINT="point";
_573.ELEMENT_INTERVAL="interval";
_573.ELEMENT_SCHEMA="schema";
_573.ELEMENT_EDGE="edge";
_573.ELEMENT_PATH="path";
_573.ELEMENT_LINE="line";
_573.ELEMENT_POLYGON="polygon";
_573.ELEMENT_AREA="area";
});
return _573;
});
},"com/ibm/vis/engine/internal/grammar/layout/cloud/DefaultCloudLayouts":function(){
define("com/ibm/vis/engine/internal/grammar/layout/cloud/DefaultCloudLayouts",["../../../../../extension/ExtensionFactory","com/ibm/init/fork!../../../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./CloudLayout","com/ibm/init/fork!../BubbleLayout","com/ibm/init/statics","dojo/_base/declare"],function(_6c5,_6c6,_6c7,_6c8,_6c9,_6ca){
var _6cb=_6ca("com.ibm.vis.engine.internal.grammar.layout.cloud.DefaultCloudLayouts",[_6c5],{newInstance:function(name,_6cc){
if("cloud".CPVisEngineEquals(name)){
return new _6c7.m(_6cc);
}
if("bubble".CPVisEngineEquals(name)){
return new _6c8.m(_6cc,false);
}
if("bubble-square".CPVisEngineEquals(name)){
return new _6c8.m(_6cc,true);
}
return null;
}});
_6cb.registerExtensions=function(){
if(!_6cb.initialized){
_6cb.initialized=true;
_6c6.m.INSTANCE.registerDefaultFactory(new _6cb());
}
};
_6c9.add("com/ibm/vis/engine/internal/grammar/layout/cloud/DefaultCloudLayouts",["com/ibm/vis/extension/ExtensionFactory","com/ibm/vis/extension/internal/RAVEExtensionManager"],function(){
_6cb.initialized=false;
});
return _6cb;
});
},"com/ibm/vis/engine/internal/grammar/layout/treemap/TreeNode":function(){
define("com/ibm/vis/engine/internal/grammar/layout/treemap/TreeNode",["com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!../../../nativeImpl/Map","com/ibm/init/statics","dojo/_base/declare"],function(_6cd,_6ce,_6cf,_6d0){
var _6d1=_6d0("com.ibm.vis.engine.internal.grammar.layout.treemap.TreeNode",null,{children:null,nodeMap:null,rowIndex:0,bounds:null,id:null,parentId:null,isDummyRoot:false,size:0,parentNode:null,subTreeSize:null,needsAggregationFlag:false,area:0,constructor:function(id,_6d2,size,_6d3){
this.id=id;
this.parentId=_6d2;
this.size=size;
this.children=new _6cd.m();
this.nodeMap=new _6ce.m();
this.needsAggregationFlag=true;
this.rowIndex=_6d3;
},getAggregatedSize:function(){
if(this.subTreeSize==null||this.needsAggregationFlag){
var s=this.size;
for(var _6d4=0,_6d5=this.children,_6d6=_6d5.size();_6d4<_6d6;++_6d4){
var _6d7=_6d5.get(_6d4);
s+=_6d7.getAggregatedSize();
}
this.subTreeSize=s;
this.needsAggregationFlag=false;
}
return this.subTreeSize;
},getLevel:function(){
if(this.parentNode!=null){
return this.parentNode.getLevel()+1;
}
if(this.isDummyRoot||this.rowIndex<0){
return -1;
}
return 0;
},addChild:function(node){
if(node==null){
return;
}
var _6d8=this.nodeMap.get(node.id);
if(_6d8!=null){
_6d8.setSize(_6d8.getSize()+node.getSize());
}else{
this.children.add(node);
this.nodeMap.put(node.id,node);
node.parentNode=this;
}
this.needsAggregation();
},removeChild:function(i){
if(i<this.getChildCount()){
var node=this.children.get(i);
this.children.remove(node);
this.nodeMap.remove(node.id);
if(node!=null){
node.parentNode=null;
this.needsAggregation();
}
}
},getChild:function(_6d9){
return this.children.get(_6d9);
},getChildCount:function(){
return this.children.size();
},getSize:function(){
return this.size;
},setSize:function(s){
this.size=s;
},needsAggregation:function(){
this.needsAggregationFlag=true;
if(this.parentNode!=null){
this.parentNode.needsAggregation();
}
},getParent:function(){
return this.parentNode;
},getChildren:function(){
return this.children;
},getShapes:function(list){
for(var _6da=0,_6db=this.children,_6dc=_6db.size();_6da<_6dc;++_6da){
var node=_6db.get(_6da);
list.add(node.bounds);
}
for(var _6dd=0,_6de=this.children,_6df=_6de.size();_6dd<_6df;++_6dd){
var node=_6de.get(_6dd);
node.getShapes(list);
}
},setIndex:function(_6e0){
this.rowIndex=_6e0;
}});
return _6d1;
});
},"com/ibm/vis/engine/internal/grammar/scale/ScaleGeometry":function(){
define("com/ibm/vis/engine/internal/grammar/scale/ScaleGeometry",["com/ibm/init/statics","dojo/_base/declare"],function(_6e1,_6e2){
var _6e3=_6e2("com.ibm.vis.engine.internal.grammar.scale.ScaleGeometry",null,{isYAxis:false,len:0,minimalTickSeparation:0,constructor:function(len,_6e4){
this.len=len;
this.isYAxis=_6e4;
this.minimalTickSeparation=2;
},ticksNoSmallerThan:function(v){
this.minimalTickSeparation=Math.max(this.minimalTickSeparation,v);
},setBounds:function(_6e5,_6e6){
this.len=this.isYAxis?_6e6:_6e5;
},getFittingTicks:function(_6e7){
var n=Math.floor(this.len*_6e7/this.minimalTickSeparation);
return Math.max(n,1);
},getPreferredNumericTicks:function(_6e8){
var _6e9=this.isYAxis?45:60;
var n=Math.round(this.len*_6e8/_6e9);
return Math.max(n,1);
}});
_6e3.makeSized=function(len,_6ea){
return new _6e3(len,_6ea);
};
_6e3.makeUnsized=function(_6eb){
return new _6e3(1,_6eb);
};
return _6e3;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/RectangleShapeInterpolator":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/RectangleShapeInterpolator",["./ShapeInterpolator","com/ibm/init/fork!../../struct/PolyGeom","com/ibm/init/fork!../../struct/Rect","com/ibm/init/fork!../../struct/ShapeFactory","com/ibm/init/statics","dojo/_base/declare"],function(_6ec,_6ed,_6ee,_6ef,_6f0,_6f1){
var _6f2=_6f1("com.ibm.vis.engine.internal.interaction.interpolation.RectangleShapeInterpolator",[_6ec],{constructor:function(_6f3,_6f4,_6f5,_6f6){
},interpolate:function(id,t){
t=this.getNormalizedTime(t,this.start_time,this.end_time);
if(t<=0){
return _6ed.m.makeJSONPath(this.start_data.getPolyGeom());
}
if(t>=1){
return _6ed.m.makeJSONPath(this.end_data.getPolyGeom());
}
if(!this.start_data.roundedRect&&!this.end_data.roundedRect){
return _6ee.m.makeRect(this.interpolateDouble(this.start_data.getRectX(),this.end_data.getRectX(),t),this.interpolateDouble(this.start_data.getRectY(),this.end_data.getRectY(),t),this.interpolateDouble(this.start_data.getRectW(),this.end_data.getRectW(),t),this.interpolateDouble(this.start_data.getRectH(),this.end_data.getRectH(),t));
}
var path=_6ef.m.makeRoundedRectanglePath(this.interpolateDouble(this.start_data.getRectX(),this.end_data.getRectX(),t),this.interpolateDouble(this.start_data.getRectY(),this.end_data.getRectY(),t),this.interpolateDouble(this.start_data.getRectW(),this.end_data.getRectW(),t),this.interpolateDouble(this.start_data.getRectH(),this.end_data.getRectH(),t),this.interpolateDouble(this.start_data.getRectRadius(),this.end_data.getRectRadius(),t));
return _6ed.m.makeJSONPath(_6ed.m.makePolyGeom(path));
}});
return _6f2;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/stack/PolyStacker":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/stack/PolyStacker",["./Stacker","com/ibm/init/fork!../functions/FunctionalPathUtil","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!../../../struct/MultiPartPoly","com/ibm/init/statics","dojo/_base/declare"],function(_6f7,_6f8,_6f9,_6fa,_6fb,_6fc){
var _6fd=_6fc("com.ibm.vis.engine.internal.grammar.coordinate.stack.PolyStacker",[_6f7],{stackState:null,constructor:function(_6fe){
this.stackState=_6fe;
},stack:function(_6ff,zero,_700){
var poly=_6ff;
var path=_6f8.m.makeStackingLine(poly,zero);
var _701=_6f8.m.splitSubShapes(path);
var _702=new _6f9.m();
for(var _703=0,_704=_701.size();_703<_704;++_703){
var _705=_701.get(_703);
_702.add(this.stackState.stack(_6ff.aestheticGroup,_705,zero,_6ff.isFilled(),null));
}
var _706;
if(_702.size()>1){
_706=new _6fa.m([],[],poly.isFilled(),null,_702);
}else{
_706=_702.get(0);
}
_706.setRows(poly.getRows());
_706.snap=poly.snap;
var _707=_706;
this.stackState.setTransformedShapeForPoly(poly,_707);
return _707;
}});
return _6fd;
});
},"com/ibm/vis/engine/internal/grammar/layout/DefaultLinkLayouts":function(){
define("com/ibm/vis/engine/internal/grammar/layout/DefaultLinkLayouts",["../../../../extension/ExtensionFactory","com/ibm/init/fork!../../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./LinkLayout","com/ibm/init/statics","dojo/_base/declare"],function(_708,_709,_70a,_70b,_70c){
var _70d=_70c("com.ibm.vis.engine.internal.grammar.layout.DefaultLinkLayouts",[_708],{newInstance:function(name,_70e){
if(name.CPVisEngineEquals("link")){
return new _70a.m(_70e);
}
return null;
}});
_70d.registerExtensions=function(){
if(!_70d.registered){
_70d.registered=true;
_709.m.INSTANCE.registerDefaultFactory(new _70d());
}
};
_70b.add("com/ibm/vis/engine/internal/grammar/layout/DefaultLinkLayouts",["com/ibm/vis/extension/ExtensionFactory","com/ibm/vis/extension/internal/RAVEExtensionManager"],function(){
_70d.registered=false;
});
return _70d;
});
},"com/ibm/vis/engine/internal/migration/spec/LegendMigrator1_3":function(){
define("com/ibm/vis/engine/internal/migration/spec/LegendMigrator1_3",["../MigrationStrategy","com/ibm/init/fork!../../util/Version","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_70f,_710,_711,_712,_713){
var _714=_713("com.ibm.vis.engine.internal.migration.spec.LegendMigrator1_3",[_70f],{getTargetVersion:function(){
return _714.VERSION;
},migrate:function(json){
var _715=false;
var _716=_711.m.getItem(json,"legends");
if(_716!=null){
var size=_716.length;
if(size>0){
if(size!=1||_711.m.keySet(_716[0]).length>0){
_715=_714.mergeLegendTitles(_716);
}
}
}
return _715;
}});
_714.mergeLegendTitles=function(_717){
var _718=false;
var size=_717.length;
for(var i=0;i<size;++i){
var _719=_717[i];
var _71a=_711.m.getItem(_719,"content");
if(_71a!=null){
_718=_714.mergeContentTitles(_71a)||_718;
}
}
return _718;
};
_714.mergeContentTitles=function(_71b){
var _71c=false;
var size=_71b.length;
var _71d=null;
var _71e=null;
for(var i=0;i<size;++i){
var _71f=_71b[i];
var _720=_71d!=null&&_71d.length>0;
var _721=_711.m.containsKey(_71f,"aesthetics");
var _722=_721||(i==(size-1));
var _723=_711.m.containsKey(_71f,"text");
if(_723){
if(_71d==null){
_71d=_711.m.createJSONArray();
}
var text=_711.m.getItem(_71f,"text");
if(_711.m.isArray(text)){
_711.m.addAll(_71d,text);
}else{
_71d.push(text);
}
if(_71e==null){
_71e=_711.m.getItem(_71f,"textStyle");
}
}
if(_720){
_71c=true;
_711.m.removeAt(_71b,i-1);
i--;
size--;
}
if(_722){
_71c=true;
if(_71d!=null){
_711.m.put(_71f,"text",_71d);
}else{
_711.m.put(_71f,"text",_711.m.createJSONArray());
if(_71e==null){
_71e=_711.m.getItem(_71f,"textStyle");
if(_71e==null){
_71e=_711.m.createJSONObject();
}
}
}
if(_71e!=null){
_711.m.put(_71f,"titleStyle",_71e);
}
_71d=null;
_71e=null;
}
}
return _71c;
};
_712.add("com/ibm/vis/engine/internal/migration/spec/LegendMigrator1_3",["com/ibm/vis/engine/internal/migration/MigrationStrategy","com/ibm/vis/engine/internal/util/Version","com/ibm/vis/engine/internal/nativeImpl/BasicFactory"],function(){
_714.LEGENDS="legends";
_714.CONTENT="content";
_714.TEXT_STYLE="textStyle";
_714.TEXT="text";
_714.TITLE_STYLE="titleStyle";
_714.AESTHETICS="aesthetics";
_714.VERSION=new _710.m(1,3,0);
});
return _714;
});
},"com/ibm/vis/engine/internal/legend/StaggerSwatchLegend":function(){
define("com/ibm/vis/engine/internal/legend/StaggerSwatchLegend",["./SwatchLegend","com/ibm/init/statics","dojo/_base/declare"],function(_724,_725,_726){
var _727=_726("com.ibm.vis.engine.internal.legend.StaggerSwatchLegend",[_724],{constructor:function(_728,_729,_72a,vis){
},makePositions:function(_72b){
},makeData:function(_72c,_72d,_72e,_72f,_730){
return null;
},reduceTickCount:function(){
return false;
}});
return _727;
});
},"com/ibm/vis/engine/internal/oldlegends/LegendContent":function(){
define("com/ibm/vis/engine/internal/oldlegends/LegendContent",["./OldContentFrame","com/ibm/init/fork!../Bounds","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../MutableInt","com/ibm/init/fork!../struct/Point","com/ibm/init/fork!../util/SceneUtil","com/ibm/init/fork!../scene/Font","com/ibm/init/fork!../struct/Rect","com/ibm/init/statics","dojo/_base/declare"],function(_731,_732,_733,_734,_735,_736,_737,_738,_739,_73a){
var _73b=_73a("com.ibm.vis.engine.internal.oldlegends.LegendContent",[_731],{textLabeler:null,vis:null,constructor:function(_73c,spec,vis){
this.style=spec;
this.outerBounds=new _732.m(_73c,vis.visContext.logContext);
this.vis=vis;
},getShapes:function(_73d,id,_73e){
},layoutShapes:function(_73f,_740,type,id){
var _741=_733.m.createJSONArray();
var _742=new _734.m();
for(var _743=0,_744=_740.size();_743<_744;++_743){
var _745=_740.get(_743);
_745.layoutShape(_73f.getTopLeft(),_741,type,id,_742);
_742.value++;
}
return _741;
},layoutShape:function(_746,_747,type,id,_748){
var _749=this.bounds;
if(_749!=null){
var _74a=new _735.m(_746.x+_749.x,_746.y+_749.y);
var _74b=this.getShapes(_749.getExtent(),id,_748);
var _74c=_736.m.createGroup(type,_74b);
_733.m.put(_74c,"id",id+_748.value);
_74a.translate(_74c);
_747.push(_74c);
return _74b;
}
return null;
},createEllipsis:function(_74d,_74e,type,id,_74f){
if(_74d==null){
return;
}
var _750=_74d.continuedArea;
if(_750.hasExtent()&&this.textLabeler!=null){
this.textLabeler.align="middle";
this.textLabeler.valign="start";
var _751=Math.max(_74f.width,this.textLabeler.font.getEllipsisSize()+this.textLabeler.padding.getHorizontal());
var _752=Math.max(_74f.height,this.textLabeler.font.getHeight()+this.textLabeler.padding.getVertical());
var _753=this.textLabeler.makeSimpleLabel(_737.m.ELLIPSIS,new _738.m(0,0,_751,_752));
if(_753!=null&&_74d.bounds!=null){
_753.setID(id+"T");
var _754=_733.m.createJSONArray();
_754.push(_753.toJSON());
var _755=_736.m.createGroup(type,_754);
_733.m.put(_755,"id",id);
var _756=new _735.m(_750.x,_750.y);
_756.translate(_755);
_74e.push(_755);
}
}
}});
return _73b;
});
},"com/ibm/vis/interaction/internal/TransformMatrix":function(){
define("com/ibm/vis/interaction/internal/TransformMatrix",["com/ibm/init/fork!../../engine/internal/nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_757,_758,_759){
var _75a=_759("com.ibm.vis.interaction.internal.TransformMatrix",null,{dx:0,dy:0,xx:0,yy:0,xy:0,yx:0,constructor:function(){
},asDoubleArray:function(){
return [this.xx,this.xy,this.dx,this.yx,this.yy,this.dy];
},setJson:function(json){
this.dx=this.getValue(json,"dx",0);
this.dy=this.getValue(json,"dy",0);
this.xx=this.getValue(json,"xx",1);
this.yy=this.getValue(json,"yy",1);
this.xy=this.getValue(json,"xy",0);
this.yx=this.getValue(json,"yx",0);
},combine:function(b){
var out=new _75a();
out.dx=this.dx+b.dx*this.xx+this.xy*b.dy;
out.dy=this.dy+b.dy*this.yy+this.yx*b.dx;
out.xx=this.xx*b.xx+this.xy*b.yx;
out.yy=this.yx*b.xy+this.yy*b.yy;
out.xy=this.xx*b.xy+this.xy*b.yy;
out.yx=this.yx*b.xx+this.yy*b.yx;
return out;
},toJSON:function(){
var json=_757.m.createJSONObject();
this.addToJson(json,this.xx,"xx",1);
this.addToJson(json,this.xy,"xy",0);
this.addToJson(json,this.dx,"dx",0);
this.addToJson(json,this.dy,"dy",0);
this.addToJson(json,this.yy,"yy",1);
this.addToJson(json,this.yx,"yx",0);
return json;
},addToJson:function(json,_75b,key,_75c){
if(_75b!=_75c){
_757.m.put(json,key,_75b);
}
},getValue:function(_75d,key,_75e){
var _75f=_757.m.getItem(_75d,key);
if(_75f==null){
return _75e;
}else{
return _75f;
}
}});
return _75a;
});
},"com/ibm/vis/engine/internal/nativeImpl/Map":function(){
define("com/ibm/vis/engine/internal/nativeImpl/Map",["dojo/_base/declare","dojo/_base/array","./List","./Set"],function(_760,_761,List,Set){
var Map=_760("com.ibm.vis.engine.internal.nativeImpl.Map",null,{data:null,keys:null,length:0,constructor:function(){
this.data={};
this.keys={};
},_hash:function(key){
return key;
},get:function(key){
return this.data[this._hash(key)];
},put:function(key,_762){
var hk=this._hash(key);
if(!this._containsHashKey(hk)){
this.keys[hk]=key;
++this.length;
}
this.data[hk]=_762;
},_forEach:function(f,ctx){
ctx=ctx||this;
if(Object.keys){
var keys=Object.keys(this.keys);
for(var _763=0;_763<keys.length;_763++){
var key=this.keys[keys[_763]];
f.call(ctx,key,this.data[key],key);
}
}else{
for(var hk in this.keys){
if(this.keys.hasOwnProperty(hk)){
f.call(ctx,this.keys[hk],this.data[hk],hk);
}
}
}
},putAll:function(map){
map._forEach(function(k,v,hk){
this.put(k,v);
},this);
},remove:function(key){
var hk=this._hash(key);
if(this._containsHashKey(hk)){
delete this.data[hk];
delete this.keys[hk];
--this.length;
}
},clear:function(){
this.data={};
this.keys={};
this.length=0;
},size:function(){
return this.length;
},containsKey:function(key){
return this._containsHashKey(this._hash(key));
},_containsHashKey:function(hk){
return this.data.hasOwnProperty(hk);
},keySet:function(){
var r=new Set();
this._forEach(function(k,v,hk){
r.data.push(k);
});
return r;
},numericKeySet:function(){
var r=[];
this._forEach(function(k,v,hk){
r.push(Number(k));
});
return r;
},values:function(){
var r=new List();
this._forEach(function(k,v,hk){
r.add(v);
});
return r;
},isEmpty:function(){
return (this.size()==0);
}});
return Map;
});
},"com/ibm/vis/engine/internal/struct/Text":function(){
define("com/ibm/vis/engine/internal/struct/Text",["./Shape","com/ibm/init/fork!./Point","com/ibm/init/fork!../scene/Font","com/ibm/init/fork!../scene/StyleBuilder","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../util/MathUtil","com/ibm/init/fork!./Rect","com/ibm/init/fork!./Dim","com/ibm/init/fork!./Insets","com/ibm/init/fork!../globalization/NumericShaper","com/ibm/init/statics","dojo/_base/declare"],function(_764,_765,_766,_767,_768,_769,_76a,_76b,_76c,_76d,_76e,_76f){
var Text=_76f("com.ibm.vis.engine.internal.struct.Text",[_764],{size:null,p:null,text:null,align:null,font:null,valign:null,vertical:false,style:null,clipSymbol:null,wasClipped:false,textElement:false,cachedBounds:null,tickLabelOrientation:null,constructor:function(_770,x,y,_771,_772,f,_773,_774,size){
this.text=_770;
this.align=_771;
this.valign=_772;
this.p=new _765.m(x,y);
this.font=f;
this.style=_773;
this.clipSymbol=_774!=null?_774:_766.m.ELLIPSIS;
this.wasClipped=false;
this.size=size;
if(_773==null){
_767.m.setDefaultTextStyle(this);
}else{
_767.m.setUnfilled(this,_773,null);
}
},getType:function(){
return "text";
},asBasic:function(){
return this.getBounds();
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("text".CPVisEngineEquals(type)){
return true;
}
return false;
},toJSON:function(){
var o=this.inherited(arguments,[]);
_768.m.put(o,"align",this.align);
_768.m.put(o,"font",this.font.toJSON());
return o;
},applyPointTransform:function(t){
this.cachedBounds=null;
this.p=t.transform(this.p.x,this.p.y);
return null;
},contains:function(px,py){
return this.getBounds().contains(px,py);
},makeGeometryClone:function(){
return new Text(this.text,this.p.x,this.p.y,this.align,this.valign,this.font,null,this.clipSymbol,this.size);
},affine:function(xx,dx,yy,dy,_775){
this.cachedBounds=null;
this.p.affine(xx,dx,yy,dy);
if(_775&&yy!=1){
this.font=this.font.modifySize(this.font.getSize()*yy);
}
},setTransform:function(_776){
this.cachedBounds=null;
this.transform=_776;
},updateTransform:function(_777){
this.cachedBounds=null;
if(this.transform==null){
this.transform=_777;
}else{
var _778=_769.m.multiplyAffineJSONObjects(_777,this.transform);
this.transform=_778;
}
},clipToFit:function(_779){
this.cachedBounds=null;
var _77a=this.font.getAmountThatFits(this.text,_779);
if(_77a>=this.text.CPVisEngineLength()){
return;
}
this.wasClipped=true;
if(_779>=this.getClipSymbolSize()){
if(this.clipSymbol.CPVisEngineEquals(_766.m.HASH)){
if(_779<3*this.getClipSymbolSize()){
this.text=this.clipSymbol;
}else{
this.text=this.clipSymbol+this.clipSymbol+this.clipSymbol;
}
}else{
var _77b=this.font.getAmountThatFits(this.text,_779-this.getClipSymbolSize());
this.text=this.text.substring(0,_77b)+this.clipSymbol;
var fits=this.font.getAmountThatFits(this.text,_779);
while(fits<this.text.CPVisEngineLength()&&_77b>0){
_77b--;
this.text=this.text.substring(0,_77b)+this.clipSymbol;
fits=this.font.getAmountThatFits(this.text,_779);
}
}
}else{
this.text="";
}
},getClipSymbolSize:function(){
if(this.clipSymbol.CPVisEngineEquals(_766.m.ELLIPSIS)){
return this.font.getEllipsisSize();
}
return this.font.getHashSize();
},getBounds:function(){
if(this.cachedBounds!=null){
return this.cachedBounds;
}
var dx;
var _77c=this.calculateTextWidth();
var _77d=this.getHeight();
if("start".CPVisEngineEquals(this.align)){
dx=0;
}else{
if("end".CPVisEngineEquals(this.align)){
dx=_77c;
}else{
dx=_77c/2;
}
}
var dy;
if("end".CPVisEngineEquals(this.valign)){
dy=0;
}else{
if("start".CPVisEngineEquals(this.valign)){
dy=this.font.getAscent()+(this.getNumLines()-1)*this.font.getHeight();
}else{
dy=this.getNumLines()*this.font.getHeight()/2;
}
}
var _77e=new _76a.m(this.p.x-dx,this.p.y-dy,_77c,_77d);
if(this.textElement){
var _77f=this.createPadding(new _76b.m(_77c,_77d));
_77e=_77f.expandRect(_77e);
}
_77e.copyInfoFrom(this);
this.cachedBounds=_77e;
return _77e;
},createPadding:function(_780){
var _781;
if(this.style!=null&&this.style.padding!=null){
_781=_76c.m.makeForStylePadding(this.style.padding,_780,this.size);
}else{
_781=new _76c.m(0,0,0,0);
}
return _781;
},getWidth:function(){
return this.font.getWidth(this);
},calculateTextWidth:function(){
return this.getWidth();
},getCenter:function(){
return this.p;
},isFilled:function(){
return true;
},reflect:function(size,_782){
this.cachedBounds=null;
this.p.reflect(size,_782);
},getNumLines:function(){
return 1;
},setShapeParameters:function(o){
this.cachedBounds=null;
var _783=this.p;
if(this.snap){
_783=new _765.m(this.p.x,this.p.y);
_783.snapPosition();
}
_768.m.put(o,"text",this.text);
_768.m.put(o,"align",this.align);
_768.m.put(o,"x",_769.m.r3(_783.x));
var y=this.p.y;
if("start".CPVisEngineEquals(this.valign)){
y-=((this.font.getHeight()-this.font.getAscent())*this.getNumLines());
}else{
if("end".CPVisEngineEquals(this.valign)){
y+=(this.font.getAscent()*this.getNumLines());
}else{
y=y-(this.font.getHeight()-this.font.getAscent())+this.getHeight()/2;
}
}
_768.m.put(o,"y",_769.m.r3(this.snapValue(y)));
var r=this.getBounds();
_768.m.put(o,"width",_769.m.r3(this.snapValue(r.width)));
_768.m.put(o,"height",_769.m.r3(this.snapValue(r.height)));
},sizeToFit:function(size,clip){
var _784=this.font.getSize()*size.height/this.font.getHeight();
var _785=this.font.getSize()*size.width/this.calculateTextWidth();
var _786=Math.min(_784,_785);
this.cachedBounds=null;
if(_786>this.font.getSize()){
return this;
}
if(_786<6&&clip){
this.font=this.font.modifySize(6);
if(this.font.getHeight()<1.01*size.height){
this.clipToFit(size.width);
return this;
}
return null;
}
this.modifyFontSize(_786);
return this;
},modifyFontSize:function(_787){
this.cachedBounds=null;
this.font=this.font.modifySize(_787);
},stretchToFit:function(size){
this.cachedBounds=null;
this.font=this.font.modifySize(10);
this.transform=_768.m.createJSONObject();
var xx=size.width/this.font.getWidth(this);
var yy=size.height/this.font.getHeight();
_768.m.put(this.transform,"xx",xx);
_768.m.put(this.transform,"yy",yy);
_768.m.put(this.transform,"dx",this.p.x*(1-xx));
_768.m.put(this.transform,"dy",this.p.y*(1-yy));
return this;
},transpose:function(b){
this.cachedBounds=null;
this.p.transpose(b);
},fitInside:function(size){
this.cachedBounds=null;
if(this.font.getHeight()>1.01*size.height){
return null;
}
var _788=this.font.getAmountThatFits(this.text,size.width);
if(_788<1){
return null;
}
if(size.width>=this.font.getWidth(this)){
return this;
}
this.wasClipped=true;
this.clipToFit(size.width);
return this;
},buildParts:function(area){
},getHeight:function(){
return this.font.getHeight()*this.getNumLines();
},copyInfoFrom:function(_789){
this.inherited(arguments,[_789]);
if("text".CPVisEngineEquals(_789.getType())||"multitext".CPVisEngineEquals(_789.getType())){
var txt=_789;
this.clipSymbol=txt.clipSymbol;
this.cachedBounds=null;
}
},toString:function(){
return this.text;
},isTextElement:function(){
return this.textElement;
},setTextElement:function(_78a){
this.textElement=_78a;
}});
Text.createTextWithShapedValue=function(_78b,x,y,_78c,_78d,f,_78e,_78f,size){
return new Text(_78b,x,y,_78c,_78d,f,_78e,_78f,size);
};
Text.createTextWithUnshapedValue=function(_790,x,y,_791,_792,f,_793,_794,_795,size){
var _796=Text.applyNumericalShaping(_790,_795);
return new Text(_796,x,y,_791,_792,f,_793,_794,size);
};
Text.applyNumericalShaping=function(_797,_798){
if(_798!=null){
return _76d.m.shape(_797,_798);
}
return _797;
};
_76e.add("com/ibm/vis/engine/internal/struct/Text",["com/ibm/vis/engine/internal/struct/Shape","com/ibm/vis/engine/internal/globalization/NumericShaper"],function(){
Text.TEXT_FLAGS=0;
Text.TEXT_NAME="text";
});
return Text;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/functions/FunctionalPathUtil":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/functions/FunctionalPathUtil",["com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!./LinearFunctionalPath","com/ibm/init/fork!../../../nativeImpl/Double","com/ibm/init/fork!../../../struct/Poly","com/ibm/init/fork!./DoubleOrderedSet","com/ibm/init/statics","dojo/_base/declare"],function(_799,_79a,_79b,_79c,_79d,_79e,_79f){
var _7a0=_79f("com.ibm.vis.engine.internal.grammar.coordinate.functions.FunctionalPathUtil",null,{constructor:function(){
}});
_7a0.splitSubShapes=function(poly){
var _7a1=new _799.m();
var _7a2=poly.getXAxisCrossingPoints();
var _7a3=_7a2.size();
if(_7a3==0){
_7a1.add(poly);
}else{
var _7a4=poly.getXSamples();
var _7a5=0;
var _7a6=new _79a.m(NaN);
var x=_7a4.get(0);
_7a6.moveTo(x,poly.getRightY(x));
for(var i=1;i<_7a4.size();++i){
x=_7a4.get(i);
if(_7a5<_7a3&&_7a2.get(_7a5)<=x){
_7a6.lineTo(_7a2.get(_7a5),0);
_7a1.add(_7a6);
_7a6=new _79a.m(NaN);
_7a6.moveTo(_7a2.get(_7a5),0);
_7a5++;
}
_7a6.lineTo(x,poly.getY(x));
}
_7a1.add(_7a6);
}
return _7a1;
};
_7a0.makeStackingLine=function(poly,zero){
var _7a7=new _79a.m(NaN);
if(poly.filled){
if(poly.pathMaker!=null){
var _7a8=poly.pathMaker.getControlPoints(poly);
_7a7.moveTo(poly.x[1],zero-poly.y[1]);
for(var i=2;i<poly.x.length-1;++i){
var _7a9=(i-2)*2;
var p1=_7a8.get(_7a9);
var p2=_7a8.get(_7a9+1);
_7a7.curveTo(poly.x[i],zero-poly.y[i],p1.x,zero-p1.y,p2.x,zero-p2.y);
}
}else{
_7a7.moveTo(poly.x[1],zero-poly.y[1]);
for(var i=2;i<poly.x.length-1;++i){
_7a7.lineTo(poly.x[i],zero-poly.y[i]);
}
}
}else{
if(poly.pathMaker!=null){
var _7a8=poly.pathMaker.getControlPoints(poly);
_7a7.moveTo(poly.x[0],zero-poly.y[0]);
for(var i=1;i<poly.x.length;++i){
var _7a9=(i-1)*2;
var p1=_7a8.get(_7a9);
var p2=_7a8.get(_7a9+1);
_7a7.curveTo(poly.x[i],zero-poly.y[i],p1.x,zero-p1.y,p2.x,zero-p2.y);
}
}else{
_7a7.moveTo(poly.x[0],zero-poly.y[0]);
for(var i=1;i<poly.x.length;++i){
_7a7.lineTo(poly.x[i],zero-poly.y[i]);
}
}
}
return _7a7;
};
_7a0.createSubPoly=function(top,_7aa,zero,_7ab){
var _7ac;
if(_7aa==null){
_7ac=_7a0.makeLineSubPoly(top,zero,_7ab);
}else{
_7ac=_7a0.makeAreaSubPoly(top,_7aa,zero,_7ab);
}
return _7ac;
};
_7a0.makeLineSubPoly=function(top,zero,_7ad){
var _7ae=top.getXSamples();
var xs=new _799.m();
var ys=new _799.m();
for(var i=0;i<_7ae.size();++i){
var x=_7ae.get(i);
var _7af=zero-top.getRightY(x);
var y=zero-top.getY(x);
var _7b0=zero-top.getLeftY(x);
if(xs.size()>0&&!(y==_7b0)){
xs.add(x);
ys.add(_7b0);
}
if(!_79b.m.isNaN(y)){
xs.add(x);
ys.add(y);
}
if(!(y==_7af)&&i!=_7ae.size()-1){
xs.add(x);
ys.add(_7af);
}
}
return new _79c.m(xs.toArray(),ys.toArray(),false,_7ad);
};
_7a0.makeAreaSubPoly=function(top,_7b1,zero,_7b2){
var _7b3=top.getXSamples();
var _7b4=_7b3.getDomain();
var xs=new _799.m();
var ys=new _799.m();
for(var i=0;i<_7b3.size();++i){
var x=_7b3.get(i);
var _7b5=zero-top.getRightY(x);
var y=zero-top.getY(x);
var _7b6=zero-top.getLeftY(x);
if(xs.size()>0&&!(y==_7b6)&&!_79b.m.isNaN(_7b6)){
xs.add(x);
ys.add(_7b6);
}
if(!_79b.m.isNaN(y)){
xs.add(x);
ys.add(y);
}
if(!(y==_7b5)&&!_79b.m.isNaN(_7b5)){
xs.add(x);
ys.add(_7b5);
}
}
var _7b7=xs.size();
var _7b8=_7b3.get(0);
var _7b9=_7b3.get(_7b3.size()-1);
var _7ba=_7b1.getXSamples();
_7b3=new _79d.m(_7ba.size()+2);
_7b3.addAll(_7ba);
_7b3.add(_7b8);
_7b3.add(_7b9);
_7b3.retain(_7b4);
var _7bb=true;
for(var i=_7b3.size()-1;i>=0;--i){
var x=_7b3.get(i);
var _7b5=zero-_7b1.getRightY(x);
var y=zero-_7b1.getY(x);
var _7b6=zero-_7b1.getLeftY(x);
if(!_79b.m.isNaN(_7b5)&&!_7bb){
xs.add(x);
ys.add(_7b5);
}
if(!_79b.m.isNaN(y)&&(_7bb||(!(y==_7b5)&&i!=0))){
xs.add(x);
ys.add(y);
}
if(!_79b.m.isNaN(_7b6)&&!(y==_7b6)&&i!=0){
xs.add(x);
ys.add(_7b6);
}
_7bb=false;
}
var cx=xs.toArray();
var cy=ys.toArray();
var _7bc=new _79c.m(cx,cy,true,_7b2);
_7bc.nonTopPointsCount=xs.size()-_7b7;
return _7bc;
};
return _7a0;
});
},"com/ibm/init/statics":function(){
define("com/ibm/init/statics",["exports","dojo/_base/array"],function(_7bd,_7be){
_7bd.queue=[];
_7bd.immediate=false;
_7bd.debug=false;
var _7bf={};
var cdbg=console.debug||console.log;
function dbg(){
_7bd.debug&&cdbg&&cdbg.apply(console,arguments);
};
var _7c0=0,_7c1=1,_7c2=2;
_7bd.add=function(_7c3,deps,_7c4){
dbg("adding init:",_7c3);
if(this.immediate){
_7c4();
}else{
var _7c5={initialized:_7c0,module:_7c3,deps:deps,initializer:_7c4};
if(typeof _7bf[_7c3]!=="undefined"){
console.error("Module "+_7c3+" is trying to register its initialization twice.");
}
_7bf[_7c3]=_7c5;
this.queue.push(_7c3);
}
};
var _7c6=function(_7c7){
var ms=_7bf[_7c7];
if(!ms){
return;
}
if(ms.initialized==_7c1){
console.error("Severe: cycle found during static initialization.");
}else{
if(ms.initialized==_7c2){
return;
}else{
ms.initialized=_7c1;
_7be.forEach(ms.deps,_7c6);
if(ms.initializer){
dbg(ms.module+"...");
(ms.initializer)();
}else{
console.warn(ms.module+"... no initializer; skipping.");
}
ms.initialized=_7c2;
}
}
};
_7bd.init=function(){
dbg("performing initialization");
if(!this.immediate){
_7be.forEach(this.queue,_7c6);
}
this.queue=[];
};
});
},"com/ibm/vis/engine/internal/data/transform/Smooth":function(){
define("com/ibm/vis/engine/internal/data/transform/Smooth",["./Transform","com/ibm/init/fork!./TransformType","com/ibm/init/fork!./RegressionSmoothType","com/ibm/init/fork!./KernelSmoothType","com/ibm/init/fork!../../nativeImpl/WebEngineException","com/ibm/init/fork!../../grammar/units/Unit","com/ibm/init/statics","dojo/_base/declare"],function(_7c8,_7c9,_7ca,_7cb,_7cc,_7cd,_7ce,_7cf){
var _7d0=_7cf("com.ibm.vis.engine.internal.data.transform.Smooth",[_7c8],{xI:0,yI:0,type:null,constructor:function(_7d1,_7d2,_7d3,_7d4){
this.xI=this.getInputIndex("x");
this.yI=this.getInputIndex("y");
if(_7c9.m.SMOOTH_REGRESSION.CPVisEngineEquals(_7d4)){
this.type=new _7ca.m();
}else{
if(_7c9.m.SMOOTH_KERNEL.CPVisEngineEquals(_7d4)){
this.type=new _7cb.m();
}else{
throw new _7cc.m("Unknown smooth: "+_7d4);
}
}
},getRowsCreated:function(){
var x=this.getOutputIndex("x");
if(x>=0){
var _7d5=this.outputs.get(x).derivedField;
var unit=_7cd.m.get(_7d5.unit,_7cd.m.RATIO);
if(unit.measure.categorical){
var _7d6=this.inputs.get(this.xI);
return Math.round(_7d6.inputRange.range);
}
}
return this.type.getRowsCreated();
},setValues:function(_7d7,_7d8,_7d9,_7da,_7db){
this.setOverallData(_7d7,this.type,this.xI);
var _7dc=this.sortAndRemoveMissing(_7d7,this.xI,this.yI,_7d8);
var _7dd=this.calculateMoments1(_7d7,this.xI,this.yI,_7dc);
if(_7dd[0]<1e-12){
return;
}
var _7de=this.calculateSumSquares(_7d7,this.xI,this.yI,_7dc,_7dd);
if(_7de[0]<1e-12){
return;
}
var x0=_7d7[_7dc[0]].data[this.xI];
var x1=_7d7[_7dc[_7dc.length-1]].data[this.xI];
var xMin=x0;
var xMax=x1;
this.type.setGroupMoments(_7dd[0],_7dd[1],_7dd[2],_7de[0],_7de[1],_7de[2]);
this.type.setGroupData(_7d7,this.xI,this.yI,this.weightIndex,_7dc);
var sse=this.calculateSSE(_7d7,this.xI,this.yI,_7dc);
for(var _7df=0,_7e0=this.outputs,_7e1=_7e0.size();_7df<_7e1;++_7df){
var df=_7e0.get(_7df);
var N=this.getRowsCreated();
for(var i=0;i<N;++i){
var x=xMin+(xMax-xMin)*i/(N-1);
if("x".CPVisEngineEquals(df.role)){
_7d9[_7da+i].data[df.outputIndex]=x;
}else{
if("y".CPVisEngineEquals(df.role)){
_7d9[_7da+i].data[df.outputIndex]=this.type.getPrediction(x);
}else{
if("accuracy".CPVisEngineEquals(df.role)){
_7d9[_7da+i].data[df.outputIndex]=1-sse/_7de[2];
}
}
}
}
}
},calculateMoments1:function(_7e2,_7e3,_7e4,list){
var n=0;
var sx=0;
var sy=0;
for(var _7e5=0,_7e6=list.length;_7e5<_7e6;++_7e5){
var i=list[_7e5];
var w=this.getWeight(_7e2[i]);
n+=w;
var x=_7e2[i].data[_7e3];
var y=_7e2[i].data[_7e4];
sx+=w*x;
sy+=w*y;
}
return [n,sx/n,sy/n];
},calculateSSE:function(_7e7,_7e8,_7e9,list){
var sse=0;
for(var _7ea=0,_7eb=list.length;_7ea<_7eb;++_7ea){
var i=list[_7ea];
var w=this.getWeight(_7e7[i]);
var x=_7e7[i].data[_7e8];
var y=_7e7[i].data[_7e9];
var y0=y;
var yE=this.type.getPrediction(x);
sse+=w*(yE-y0)*(yE-y0);
}
return sse;
},calculateSumSquares:function(_7ec,_7ed,_7ee,list,M1){
var sxx=0;
var syy=0;
var sxy=0;
for(var _7ef=0,_7f0=list.length;_7ef<_7f0;++_7ef){
var i=list[_7ef];
var w=this.getWeight(_7ec[i]);
var x=_7ec[i].data[_7ed];
var y=_7ec[i].data[_7ee];
var x0=x;
var y0=y;
sxx+=w*(x0-M1[1])*(x0-M1[1]);
syy+=w*(y0-M1[2])*(y0-M1[2]);
sxy+=w*(x0-M1[1])*(y0-M1[2]);
}
return [sxx,sxy,syy];
}});
return _7d0;
});
},"com/ibm/vis/engine/internal/nativeImpl/HighlightHelper":function(){
define("com/ibm/vis/engine/internal/nativeImpl/HighlightHelper",["dojo/_base/declare"],function(_7f1){
var _7f2=_7f1("com.ibm.vis.engine.internal.nativeImpl.HighlightHelper",null,{_nativeSceneMap:null,visSceneMap:null,constructor:function(_7f3,_7f4){
this._nativeSceneMap=_7f3;
this.visSceneMap=_7f4;
},addClipToHighlight:function(_7f5,item){
var _7f6=this.getParent(item);
if(_7f5==null||_7f6==null){
return;
}
var clip=_7f6["clip"];
if(clip!=null){
_7f5["clip"]=clip;
}
},getItemFromScene:function(item){
return this.visSceneMap.get(item.id);
},getParent:function(item){
var _7f7=null;
if(item!=null){
if(item.id){
var map=this._nativeSceneMap[item.id];
if(map){
_7f7=map.parent;
}else{
if(typeof this._nativeSceneMap.get=="function"){
_7f7=this._nativeSceneMap.get(item);
}
}
}
}
return _7f7;
},addTransform:function(_7f8,item){
if(item==null||_7f8==null){
return;
}
var id=item["id"];
if(id==null){
return;
}
var _7f9=this._getNativeItemMatrix(id);
if(_7f9==null){
return;
}
var _7fa={};
this._addTransformPart(_7f9,_7fa,"dx");
this._addTransformPart(_7f9,_7fa,"dy");
this._addTransformPart(_7f9,_7fa,"xx");
this._addTransformPart(_7f9,_7fa,"yy");
this._addTransformPart(_7f9,_7fa,"xy");
this._addTransformPart(_7f9,_7fa,"yx");
_7f8["transform"]=_7fa;
},addTransformsToHighlight:function(_7fb,item){
this.addTransform(_7fb,item);
},_getNativeItemMatrix:function(id){
var _7fc=this._nativeSceneMap[id];
if(_7fc==null){
return;
}
return _7fc._getRealMatrix();
},_addTransformPart:function(_7fd,_7fe,part){
var _7ff=_7fd[part];
if(_7ff!=null){
if(!_7fe[part]){
_7fe[part]=0;
}
_7fe[part]+=_7ff;
}
}});
return _7f2;
});
},"com/ibm/vis/engine/internal/grammar/label/NativeFontMetric":function(){
define("com/ibm/vis/engine/internal/grammar/label/NativeFontMetric",["./FontMetric","com/ibm/init/fork!./NativeFontStatistics","com/ibm/init/fork!../../nativeImpl/LinkedHashcodeMap","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../nativeImpl/HashcodeMap","com/ibm/init/fork!../../util/MathUtil","com/ibm/init/fork!../../nativeImpl/NativeTextMeasure","com/ibm/init/statics","dojo/_base/declare"],function(_800,_801,_802,_803,_804,_805,_806,_807,_808){
var _809=_808("com.ibm.vis.engine.internal.grammar.label.NativeFontMetric",[_800],{cacheEnabled:false,font:null,cache:null,fontStats:null,setFontStats:function(_80a){
this.fontStats=_80a;
},getFontStats:function(){
return this.fontStats;
},constructor:function(font){
this.cacheEnabled=true;
this.font=font;
this.setFontStats(_809.fontStatistics.resolveFontStats(font));
if(this.cacheEnabled){
this.cache=new _803.m();
this.cache.put("ascent",null);
this.cache.put("height",null);
this.cache.put("width",new _803.m());
this.cache.put("amountThatFits",new _804.m());
}
},internalAmountThatFits:function(font,text,_80b,to,_80c){
var _80d=this.fontStats.getAvg(font.getSize());
var w=this.getWidth(text.substring(0,_80c),font.getSize(),font.getBold());
var _80e=to-_80c;
if(_80b-w>0&&(_80e==0||_80b-w<this.getWidth(""+text.charAt(_80c),font.getSize(),font.getBold()))){
return _80c;
}
if(_80e==0&&(w<_80b||(w-_80b)<this.getWidth(""+text.charAt(_80c-1),font.getSize(),font.getBold()))){
return (w<_80b?_80c:_80c-1);
}
if(w<_80b){
var _80f=((_80b-w)/_80d);
return this.internalAmountThatFits(font,text,_80b,to,_80c+Math.min(Math.max((_80f),1),to-_80c));
}else{
if(w>_80b){
if(_80c==1){
return 0;
}
var _810=((w-_80b)/_80d);
return this.internalAmountThatFits(font,text,_80b,_80c-1,Math.max(1,_80c-Math.max((_810),1)));
}else{
if(w==_80b){
return _80c;
}
}
}
return 0;
},getAmountThatFitsBin:function(font,text,_811){
if(text==null||text.CPVisEngineLength()==0){
return 0;
}
var _812=this.getFontStats().getAvg(font.getSize());
var _813=this.internalAmountThatFits(font,text,_811,text.CPVisEngineLength(),Math.min(text.CPVisEngineLength(),Math.max(_811/_812,1)));
return _813;
},getAmountThatFitsLin:function(font,text,_814){
if(text==null||text.CPVisEngineLength()==0){
return 0;
}
var w=0;
for(var i=0;i<text.CPVisEngineLength();++i){
w+=this.getWidth(text.substring(i,i+1),font.getSize(),font.getBold());
if(w>_814){
return i;
}
}
return text.CPVisEngineLength();
},getAmountThatFitsGuessLin:function(font,text,_815){
if(text==null||text.CPVisEngineLength()==0){
return 0;
}
var _816=this.getFontStats().getAvg(font.getSize());
var _817=Math.floor(Math.min(Math.max(_815/_816,1),text.CPVisEngineLength()));
var w=this.getWidth(text.substring(0,_817),font.getSize(),font.getBold());
if(w==_815){
return _817;
}
if(w<_815){
for(var i=_817;i<=text.CPVisEngineLength();++i){
w=this.getWidth(text.substring(0,i),font.getSize(),font.getBold());
if(w>_815){
return Math.max(i-1,0);
}
}
return text.CPVisEngineLength();
}else{
for(var i=_817;i>0;--i){
w=this.getWidth(text.substring(0,i),font.getSize(),font.getBold());
if(w<=_815){
return i;
}
}
return 0;
}
},getAmountThatFits:function(text,size,bold,_818){
var _819=_818;
if(text==null||this.font==null||_819<=0||text.CPVisEngineLength()==0){
return 0;
}
_819=_805.m.r3(_819);
var d=null;
var _81a=null;
if(this.cacheEnabled){
_81a=(this.cache.get("amountThatFits")).get(text);
if(_81a!=null){
d=_81a.get(_819);
}else{
var tmp=this.cache.get("amountThatFits");
_81a=new _803.m();
tmp.put(text,_81a);
}
}
if(d==null){
d=this._getAmountThatFits(this.font,text,_819);
if(this.cacheEnabled){
_81a.put(_819,d);
}
}
return d;
},_getAmountThatFits:function(_81b,text,_81c){
var res=0;
var _81d=text.CPVisEngineLength();
if(_81d<16){
res=this.getAmountThatFitsGuessLin(_81b,text,_81c);
}else{
res=this.getAmountThatFitsBin(_81b,text,_81c);
}
return res;
},getAscent:function(size){
var d=this.cacheEnabled?this.cache.get("ascent"):null;
if(d==null){
d=_806.m.getAscent(this.font);
if(this.cacheEnabled){
this.cache.put("ascent",d);
}
}
return d;
},getHeight:function(size){
var d=this.cacheEnabled?this.cache.get("height"):null;
if(d==null){
d=_806.m.getHeight(this.font);
if(this.cacheEnabled){
this.cache.put("height",d);
}
}
return d;
},getWidth:function(text,size,bold){
var _81e=this.cacheEnabled?this.cache.get("width"):null;
var d=this.cacheEnabled?_81e.get(text):null;
if(d==null){
d=_806.m.getWidth(this.font,text);
if(this.cacheEnabled){
_81e.put(text,d);
}
}
return d;
},getActualFamily:function(){
return this.font.getFamily();
}});
_809.get=function(font){
var key=font.getMetricsId();
var r=_809.metrics.get(key);
if(r==null){
r=new _809(font);
_809.metrics.put(key,r);
}
return r;
};
_807.add("com/ibm/vis/engine/internal/grammar/label/NativeFontMetric",["com/ibm/vis/engine/internal/grammar/label/FontMetric","com/ibm/vis/engine/internal/grammar/label/NativeFontStatistics","com/ibm/vis/engine/internal/nativeImpl/LinkedHashcodeMap"],function(){
_809.fontStatistics=new _801.m();
_809.metrics=new _802.m();
});
return _809;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/functions/SumOperation":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/functions/SumOperation",["./CompositeOperation","com/ibm/init/statics","dojo/_base/declare"],function(_81f,_820,_821){
var _822=_821("com.ibm.vis.engine.internal.grammar.coordinate.functions.SumOperation",[_81f],{combineValues:function(y1,y2){
return y1+y2;
}});
return _822;
});
},"com/ibm/vis/engine/internal/grammar/layout/treemap/TreeMapBoundsSetter":function(){
define("com/ibm/vis/engine/internal/grammar/layout/treemap/TreeMapBoundsSetter",["com/ibm/init/statics","dojo/_base/declare"],function(_823,_824){
var _825=_824("com.ibm.vis.engine.internal.grammar.layout.treemap.TreeMapBoundsSetter",null,{setBounds:function(node,_826){
}});
return _825;
});
},"com/ibm/vis/engine/internal/data/Field":function(){
define("com/ibm/vis/engine/internal/data/Field",["../IdentifiableItem","com/ibm/init/fork!../grammar/units/Unit","com/ibm/init/fork!./Range","com/ibm/init/fork!../nativeImpl/RAVEFormatter","com/ibm/init/fork!../../../exceptions/SpecException","com/ibm/init/fork!../../../exceptions/ErrorCode","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../nativeImpl/DateUtil","com/ibm/init/statics","dojo/_base/declare"],function(_827,_828,_829,_82a,_82b,_82c,_82d,_82e,_82f,_830){
var _831=_830("com.ibm.vis.engine.internal.data.Field",[_827],{data:null,index:0,categories:null,order:null,label:null,unit:null,range:null,granularity:null,isKey:false,specifiedFormatter:null,constructor:function(id,vis,_832,data,_833,_834,_835,_836,_837,_838,_839){
this.data=data;
this.index=_833;
this.label=_834==null?id:_834;
this.range=_836;
this.categories=_837;
this.order=_838;
this.isKey=(_832!=null&&_832.key!=null)?_832.key:false;
this.specifiedFormatter=_839;
if(_835==null){
this.unit=(this.categories==null?_828.m.RATIO:_828.m.CATEGORICAL);
}else{
this.unit=_835;
}
var g=_832!=null?_832.granularity:null;
if(g!=null){
this.granularity=g;
}else{
if(this.unit.measure.categorical){
this.granularity=1;
}
}
},copyDerivedInfo:function(base){
if(this.categories==null&&base.categories!=null){
this.categories=base.categories;
this.range=base.range;
}
if(this.label==null||this.label.CPVisEngineEquals(this.id)){
this.label=base.label;
}
if(this.unit==null){
this.unit=base.unit;
}
},copyRange:function(base){
this.range=base.range;
},getUnformattedStringValue:function(row,_83a){
var _83b=row.data[this.index];
if(_83b==null){
return null;
}
if(this.categories!=null){
var _83c=Math.round(_83b);
if(_83a){
return this.categories[_83c];
}
var i=_83c+"";
return i;
}else{
return _82d.m.unformattedNumber(_83b);
}
},getFormattedStringValue:function(_83d,idx){
if(this.categories==null){
if(_828.m.isTime(this.unit)){
var _83e=null;
if(_83d!=null){
_83e=_82e.m.INSTANCE.toDate(_83d,this.unit);
}
return this.data.visContext.formatContext.formatDate(_83e,this.specifiedFormatter,idx,this.id,this.unit);
}else{
return this.data.visContext.formatContext.formatNumber(_83d,this.specifiedFormatter,idx,this.id,this.range,this.unit);
}
}else{
var _83f=null;
if(_83d!=null){
var _840=Math.round(_83d);
_83f=this.categories[_840];
}
return this.data.visContext.formatContext.formatString(_83f,this.specifiedFormatter,idx,this.id);
}
},getCategoryIndexFromZeroOne:function(v){
if(this.categories!=null){
return Math.round(v*(this.categories.length-1));
}
return null;
},isCategorical:function(){
return this.unit.measure.categorical;
},getMatchingRows:function(_841){
var n=0;
for(var _842=0,_843=this.data.rows,_844=_843.length;_842<_844;++_842){
var row=_843[_842];
var _845=row.data[this.index];
if(_845!=null&&_845==_841){
n++;
}
}
var _846=Array.create([n],0);
n=0;
var rows=this.data.rows;
for(var i=0;i<rows.length;++i){
var _845=rows[i].data[this.index];
if(_845!=null&&_845==_841){
_846[n++]=i;
}
}
return _846;
},getDataRange:function(){
var r=_829.m.EMPTY;
for(var _847=0,_848=this.data.rows,_849=_848.length;_847<_849;++_847){
var row=_848[_847];
var _84a=row.data[this.index];
if(_84a!=null){
r=r.unionValue(_84a);
}
}
return r;
},getIndex:function(){
return this.index;
},getSpecifiedFormatter:function(){
return this.specifiedFormatter;
},setSpecifiedFormatter:function(_84b){
this.specifiedFormatter=_84b;
}});
_831.createSimpleField=function(vis,_84c,data,_84d,_84e){
if(_84e==null){
_84e=_84c.categories==null?_828.m.RATIO:_828.m.CATEGORICAL;
}
var unit=_828.m.get(_84c.unit,_84e);
var _84f=_84c.min;
var _850=_84c.max;
var min=_84f==null?NaN:_84f;
var max=_850==null?NaN:_850;
var _851=new _829.m(min,max);
var _852=_82a.m.makeFromSpec(_84c.format);
var _853=null;
var _854=null;
if(_84c.categories!=null){
_853=new Array(_84c.categories.length);
for(var i=0;i<_853.length;++i){
_853[i]=_84c.categories[i];
}
_851=new _829.m(-0.5,_84c.categories.length-0.5);
if(_84c.order!=null){
_854=_831.computeCategoriesOrder(_84c.categories,_84c.order);
}
}
return new _831(_84c.id,vis,_84c,data,_84d,_84c.label,unit,_851,_853,_854,_852);
};
_831.computeCategoriesOrder=function(_855,_856){
var len=_855.length;
var _857=Array.create([len],0);
var _858=Array.create([len],false);
var _859,_85a,_85b;
for(_859=0;_859<len;++_859){
_858[_859]=false;
}
for(_859=0,_85a=0;_859<_856.length;++_859){
if(Math.floor(_856[_859])<_856[_859]){
throw new _82b.m(null,_82c.m.DATA_CONVERSION,"Double value given for category index: integer expected.",null,null,null,null);
}
var _85c=_856[_859];
if(_85c<len&&!_858[_85c]){
_857[_85a++]=_85c;
_858[_85c]=true;
}
}
if(len>_85a){
for(_859=_85a,_85b=0;_859<len;++_859){
while(_858[_85b]){
_85b++;
}
_857[_859]=_85b++;
}
}
return _857;
};
_831.getValuesAsZeroOne=function(row,_85d){
if(_85d==null){
return null;
}
var _85e=Array.create([_85d.length],0);
for(var i=0;i<_85e.length;++i){
var _85f=row.data[_85d[i].index];
_85e[i]=_85f==null?NaN:_85d[i].range.toZeroOne(_85f);
}
return _85e;
};
return _831;
});
},"com/ibm/vis/engine/internal/oldlegendlayout/OldFlowLayout":function(){
define("com/ibm/vis/engine/internal/oldlegendlayout/OldFlowLayout",["./OldContentLayout","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!./OldFlow","com/ibm/init/fork!../struct/Rect","com/ibm/init/statics","dojo/_base/declare"],function(_860,_861,_862,_863,_864,_865){
var _866=_865("com.ibm.vis.engine.internal.oldlegendlayout.OldFlowLayout",[_860],{flow:null,currentX:0,currentY:0,previousChildContainer:null,isContinuedAreaSet:false,overflowPadding:0,constructor:function(flow){
this.flow=flow;
this.overflowPadding=15;
this.adjustWidth=false;
this.adjustHeight=false;
this.resetLayout();
},layout:function(_867){
var maxC=new _861.m(0,0);
if(this.adjustWidth||this.adjustHeight){
for(var _868=0,_869=_867.getChildren(),_86a=_869.size();_868<_86a;++_868){
var _86b=_869.get(_868);
maxC.width=Math.max(maxC.width,_86b.getPreferredSize().width);
maxC.height=Math.max(maxC.height,_86b.getPreferredSize().height);
}
}
for(var _86c=0,_86d=_867.getChildren(),_86e=_86d.size();_86c<_86e;++_86c){
var _86b=_86d.get(_86c);
this.layoutContentInContainer(_867,_86b,maxC);
if(this.isContinuedAreaSet){
break;
}
}
if(_867.getChildren().size()==0){
this.usedHeight=_867.getBounds().height;
this.usedWidth=_867.getBounds().width;
}
},layoutContentInContainer:function(_86f,_870,maxC){
var _871=_86f.getBounds();
if(this.adjustWidth){
_870.getPreferredSize().width=maxC.width;
}
if(this.adjustHeight){
_870.getPreferredSize().height=maxC.height;
}
var _872=_870.getPreferredSize();
var _873=_870.getMinimumSize();
var _874=_871.width;
var _875=_871.height;
if(this.flow==_862.m.vertical){
_875-=this.usedHeight;
}else{
_874-=this.usedWidth;
}
var _876=_875>=_872.height&&_874>=_872.width;
if(_876){
var _877=new _863.m(this.currentX,this.currentY,_872.width,_872.height);
_870.layoutWithBounds(_877);
}else{
this.fitInRemainingSpace(_86f,_870,_874,_875,_873);
}
var _878=_870.getBounds();
if(_878!=null){
if(this.flow==_862.m.vertical){
this.currentY+=_878.height;
this.usedHeight=this.currentY;
this.usedWidth=Math.max(this.usedWidth,_878.width);
}else{
this.currentX+=_878.width;
this.usedWidth=this.currentX;
this.usedHeight=Math.max(this.usedHeight,_878.height);
}
}
this.previousChildContainer=_870;
},fitInRemainingSpace:function(_879,_87a,_87b,_87c,_87d){
var _87e=new _863.m(this.currentX,this.currentY,_87b,_87c);
var _87f=Math.min(_87a.getPreferredSize().width,_87b);
var _880=Math.min(_87a.getPreferredSize().height,_87c);
if(_87b>=_87d.width&&_87c>=_87d.height){
_87e=new _863.m(this.currentX,this.currentY,_87f,_880);
_87a.layoutWithBounds(_87e);
return;
}
var _881=_87a.getPreferredSize();
if(this.flow==_862.m.horizontal){
var newY=this.usedHeight+this.currentY+this.overflowPadding;
var newX=0;
if((newY+_881.height)<=_87c&&_881.width<=_879.getBounds().width){
this.currentX=newX;
this.currentY=newY;
_87a.layoutWithBounds(new _863.m(newX,newY,_881.width,_881.height));
return;
}
}else{
var newX=this.usedWidth+this.currentX+this.overflowPadding;
var newY=0;
if((newX+_881.width<=_87b)&&_881.height<=_879.getBounds().height){
this.currentX=newX;
this.currentY=newY;
_87a.layoutWithBounds(new _863.m(newX,newY,_881.width,_881.height));
return;
}
}
_87a.layoutWithBounds(null);
if(this.previousChildContainer!=null&&!this.previousChildContainer.hasContinuedArea()){
var _882=this.previousChildContainer;
var _883=this.previousChildContainer.getChildren().size();
if(_883>0){
_882=this.previousChildContainer.getChildren().get(_883-1);
}
var _884=_882.getBounds();
if(_884!=null){
_87e.x=_884.x;
_87e.y=_884.y;
_87e.height=_884.height;
_87e.width=_884.width;
_882.layoutWithBounds(null);
}
_882.getParent().setContinuedArea(_87e);
this.isContinuedAreaSet=true;
}
},resetLayout:function(){
this.currentX=0;
this.currentY=0;
this.usedHeight=0;
this.usedWidth=0;
this.isContinuedAreaSet=false;
}});
return _866;
});
},"com/ibm/vis/engine/internal/interaction/effect/ChangeEffectsImpl":function(){
define("com/ibm/vis/engine/internal/interaction/effect/ChangeEffectsImpl",["../../../../interaction/ChangeEffects","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!./Transition","com/ibm/init/fork!./GrowEffect","com/ibm/init/fork!./RevealEffect","com/ibm/init/fork!./FadeInEffect","com/ibm/init/fork!./FadeOutEffect","com/ibm/init/fork!./FlyInEffect","com/ibm/init/fork!./CompositeEffect","com/ibm/init/statics","dojo/_base/declare"],function(_885,_886,_887,_888,_889,_88a,_88b,_88c,_88d,_88e,_88f,_890){
var _891=_890("com.ibm.vis.engine.internal.interaction.effect.ChangeEffectsImpl",[_885],{effectsMap:null,listeners:null,constructor:function(){
this.effectsMap=new _886.m();
this.listeners=new _887.m();
},makeTransitionEffect:function(_892){
var _893=new _888.m(_892);
_893.addChangeEffectEventListeners(this.listeners);
return _893;
},makeGrowEffect:function(_894){
var _895=new _889.m(_894);
_895.addChangeEffectEventListeners(this.listeners);
return _895;
},makeRevealEffect:function(_896){
var _897=new _88a.m(_896);
_897.addChangeEffectEventListeners(this.listeners);
return _897;
},makeFadeInEffect:function(_898){
var _899=new _88b.m(_898,1);
_899.addChangeEffectEventListeners(this.listeners);
return _899;
},makeFadeOutEffect:function(_89a){
var _89b=new _88c.m(_89a,1);
_89b.addChangeEffectEventListeners(this.listeners);
return _89b;
},makeFlyInEffect:function(_89c){
var _89d=new _88d.m(_89c,1);
_89d.addChangeEffectEventListeners(this.listeners);
return _89d;
},makeSimultaneous:function(a,b){
var _89e=_88e.m.makeCompositeEffect([a,b]);
_89e.addChangeEffectEventListeners(this.listeners);
return _89e;
},makeSequential:function(a,b){
return null;
},setChangeEffect:function(a,_89f){
this.effectsMap.put(_89f,a);
},getChangeEffect:function(_8a0){
return this.effectsMap.get(_8a0);
},addListener:function(_8a1){
if(!this.listeners.contains(_8a1)){
this.listeners.add(_8a1);
}
},removeListener:function(_8a2){
this.listeners.remove(_8a2);
},getListeners:function(){
return this.listeners;
}});
return _891;
});
},"com/ibm/vis/engine/internal/oldlegends/OldContentFrame":function(){
define("com/ibm/vis/engine/internal/oldlegends/OldContentFrame",["../oldlegendlayout/OldLayoutable","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!../struct/Insets","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!../oldlegendlayout/OldContentLayoutFactory","com/ibm/init/fork!../grammar/scale/Tick","com/ibm/init/fork!../scene/ItemBuilder","com/ibm/init/fork!../scene/StyleBuilder","com/ibm/init/fork!../struct/Dim","com/ibm/init/statics","dojo/_base/declare"],function(_8a3,_8a4,_8a5,_8a6,_8a7,_8a8,_8a9,_8aa,_8ab,_8ac,_8ad,_8ae){
var _8af=_8ae("com.ibm.vis.engine.internal.oldlegends.OldContentFrame",[_8a3],{style:null,outerBounds:null,layoutSpec:null,contents:null,layoutMethod:null,bounds:null,continuedArea:null,preferredSize:null,resizeToFit:false,parentContainer:null,minimumSize:null,constructor:function(){
this.contents=new _8a4.m();
this.continuedArea=new _8a5.m(0,0,0,0);
},getOuterBounds:function(){
return this.outerBounds;
},setOuterBounds:function(_8b0){
this.outerBounds=_8b0;
},getStyle:function(){
return this.style;
},setStyle:function(_8b1){
this.style=_8b1;
},getPreferredSize:function(){
return this.preferredSize;
},getLayoutSpec:function(){
return this.layoutSpec;
},setLayoutSpec:function(_8b2){
this.layoutSpec=_8b2;
},isDefinedPositionalBounds:function(){
return this.outerBounds.isDefinedPositionalBounds();
},calculateExtent:function(_8b3){
var _8b4=this.getBoundsRect(_8b3);
if(_8b4==null){
return _8b3;
}
return _8b4.getExtent();
},getBoundsRect:function(_8b5){
if(this.outerBounds.isDefined()){
var r=this.outerBounds.getRect(_8b5);
if(r==null){
return null;
}
return new _8a5.m(r.x,r.y,r.width,r.height);
}
return null;
},getPaddedBounds:function(_8b6){
var _8b7=null;
if(this.style!=null){
_8b7=this.style.padding;
}
var pad=_8a6.m.makeForStylePadding(_8b7,_8b6.getExtent(),_8b6.getExtent());
return this.getInnerStrokeBounds(pad.insetRect(_8b6));
},getOuterStrokeBounds:function(_8b8,_8b9){
if(_8b9!=null){
if((_8b9.stroke!=null)&&(_8b9.stroke.width!=null)&&("inside".CPVisEngineEquals(_8b9.outlineMethod))){
var _8ba=_8a7.m.convertLength(_8b9.stroke.width,_8b8.height,_8b8.height);
if(_8ba==null){
_8ba=1;
}
var _8bb=new _8a6.m(_8ba/2,_8ba/2,_8ba/2,_8ba/2);
return _8bb.insetRect(_8b8);
}
if(_8b9.outline!=null){
var _8bb=new _8a6.m(0.5,0.5,0.5,0.5);
return _8bb.insetRect(_8b8);
}
}
return _8b8;
},getInnerStrokeBounds:function(_8bc){
if(this.style==null){
return _8bc;
}
var pad=_8a6.m.makeForStyleStroke(this.style.stroke,this.style.outline,_8bc.getExtent(),_8bc.getExtent(),this.style.outlineMethod);
return pad.insetRect(_8bc);
},createLayout:function(_8bd,_8be){
var _8bf=this.calculateExtent(_8bd);
if(_8be==null){
_8be=_8a8.m.makeLayout(this.layoutSpec);
}
this.layoutMethod=_8be;
this.setPreferredSize(_8bf);
if(this.isDefinedPositionalBounds()){
this.bounds=this.outerBounds.getRect(_8bd);
}
this.layoutChildren();
return this;
},makeDrawnBounds:function(_8c0,_8c1,_8c2,_8c3,id,_8c4){
var _8c5=null;
if(_8c4!=null&&_8c4.isPoylgonal(id)){
var x=_8a9.m.getTicksLocation(_8c4.axes[1].ticks,_8c1,false);
var y=Array.create([x.length],0);
var yMax=0;
for(var i=0;i<y.length;++i){
y[i]=yMax;
}
_8c5=_8aa.m.makePoly(x,y,_8c2);
}else{
_8c5=_8aa.m.makeRectangle(0,0,_8c1.width,_8c1.height,_8c2);
}
if(_8c4!=null){
_8c5=_8c4.modifyShape(_8c5,_8c1);
}
_8c5.setID(id);
if(_8c2==null){
_8c5.fill=null;
_8c5.outline=null;
}
var back=_8c5.toJSON();
if(_8c3!=null){
_8c3.translate(back);
}
_8c0.push(back);
return back;
},translateByStyle:function(_8c6,_8c7){
if(this.style!=null){
var e=this.determineOccupiedExtent(_8c7);
if("middle".CPVisEngineEquals(this.style.align)){
_8c6.x+=(_8c7.width-e.width)/2;
}
if("end".CPVisEngineEquals(this.style.align)){
_8c6.x+=(_8c7.width-e.width);
}
if("middle".CPVisEngineEquals(this.style.valign)){
_8c6.y+=(_8c7.height-e.height)/2;
}
if("end".CPVisEngineEquals(this.style.valign)){
_8c6.y+=(_8c7.height-e.height);
}
}
},createBackground:function(_8c8,_8c9,_8ca,_8cb){
var _8cc=null;
if(this.style!=null&&this.style.fill!=null){
_8cc=this.style.fill;
this.style.fill=_8af.FILL_TRANSPARENT;
}
if(this.hasOutlineStroke()){
_8ab.m.expandStroke(this.style,0.5);
var _8cd=this.getOuterStrokeBounds(_8c8,this.style);
var _8ce=null;
if(this.style!=null){
if(this.style.outlineMethod!=null){
_8ce=this.style.outlineMethod;
this.style.outlineMethod=null;
}
}
this.makeDrawnBounds(_8c9,_8cd.getExtent(),this.style,_8cd.getTopLeft(),_8ca,null);
if(this.style!=null){
if(_8ce!=null){
this.style.outlineMethod=_8ce;
}
}
_8ab.m.expandStroke(this.style,-0.5);
}
if(this.style!=null){
this.style.fill=_8cc;
}
var _8cd=this.getInnerStrokeBounds(_8c8);
var _8cf=null;
var _8d0=null;
if(this.style!=null){
if(this.style.stroke!=null){
_8cf=this.style.stroke;
this.style.stroke=null;
}
if(this.style.outline!=null){
_8d0=this.style.outline;
this.style.outline=null;
}
}
this.makeDrawnBounds(_8c9,_8cd.getExtent(),this.style,_8cd.getTopLeft(),_8cb,null);
if(this.style!=null){
if(_8cf!=null){
this.style.stroke=_8cf;
}
if(_8d0!=null){
this.style.outline=_8d0;
}
}
},hasOutlineStroke:function(){
if(this.style!=null){
if(this.style.stroke!=null&&this.style.stroke.width!=null){
var _8d1=_8a7.m.convertLength(this.style.stroke.width,null,null);
return _8d1>0;
}else{
if(this.style.outline!=null){
return true;
}
}
}
return false;
},layoutChildren:function(){
},createShapesInScene:function(_8d2,id,_8d3){
},add:function(_8d4){
this.contents.add(_8d4);
_8d4.parentContainer=this;
},getBounds:function(){
return this.bounds;
},getContinuedArea:function(){
return this.continuedArea;
},getParent:function(){
return this.parentContainer;
},layoutWithBounds:function(_8d5){
this.bounds=_8d5;
if(this.bounds==null||this.hasSiblingWithContinuedAreaSet()){
this.bounds=null;
for(var _8d6=0,_8d7=this.contents,_8d8=_8d7.size();_8d6<_8d8;++_8d6){
var _8d9=_8d7.get(_8d6);
_8d9.layoutWithBounds(null);
}
}else{
this.layoutMethod.layout(this);
if(this.resizeToFit){
var _8da=this.bounds;
var _8db=Math.min(this.layoutMethod.usedWidth,_8da.width);
var _8dc=Math.min(this.layoutMethod.usedHeight,_8da.height);
var _8dd=new _8a5.m(_8da.x,_8da.y,_8db,_8dc);
this.bounds=_8dd;
}
}
},hasSiblingWithContinuedAreaSet:function(){
var _8de=this.parentContainer;
if(_8de!=null){
for(var _8df=0,_8e0=_8de.getChildren(),_8e1=_8e0.size();_8df<_8e1;++_8df){
var _8e2=_8e0.get(_8df);
if(_8e2.hasContinuedArea()){
return true;
}
}
}
return false;
},setBounds:function(_8e3){
this.bounds=_8e3;
},setContinuedArea:function(rect){
this.continuedArea=rect;
},setPreferredSize:function(_8e4){
this.preferredSize=_8e4;
},setMinimumSize:function(_8e5){
this.minimumSize=_8e5;
},getMinimumSize:function(){
if(this.minimumSize==null){
return new _8ac.m(this.preferredSize.width,this.preferredSize.height);
}
return this.minimumSize;
},getChildren:function(){
return this.contents;
},hasContinuedArea:function(){
return (this.continuedArea.width!=0&&this.continuedArea.height!=0);
},setResizeToFit:function(_8e6){
this.resizeToFit=_8e6;
},getTranslatedBounds:function(){
var _8e7=this.bounds;
if(_8e7!=null){
var r=new _8a5.m(_8e7.x,_8e7.y,_8e7.width,_8e7.height);
if(this.parentContainer!=null){
var _8e8=this.parentContainer.getTranslatedBounds();
if(_8e8!=null){
r.x+=_8e8.x;
r.y+=_8e8.y;
}
}
return r;
}
return null;
},determineOccupiedExtent:function(_8e9){
var _8ea=this.layoutMethod.determineOccupiedExtent();
if(this.parentContainer!=null&&this.parentContainer.bounds!=null){
var _8eb=this.parentContainer.bounds.getExtent();
_8ea.width=Math.min(_8ea.width,_8eb.width);
_8ea.height=Math.min(_8ea.height,_8eb.height);
}
if(_8e9!=null){
_8ea.width=Math.min(_8ea.width,_8e9.width);
_8ea.height=Math.min(_8ea.height,_8e9.height);
}
return _8ea;
},resetLayout:function(){
this.continuedArea=new _8a5.m(0,0,0,0);
this.bounds=null;
this.layoutMethod.resetLayout();
for(var _8ec=0,_8ed=this.contents,_8ee=_8ed.size();_8ec<_8ee;++_8ec){
var _8ef=_8ed.get(_8ec);
_8ef.resetLayout();
}
},setLayout:function(_8f0){
this.layoutMethod=_8f0;
}});
_8ad.add("com/ibm/vis/engine/internal/oldlegends/OldContentFrame",["com/ibm/vis/engine/internal/oldlegendlayout/OldLayoutable"],function(){
_8af.RECT_STROKE_FUDGE_FACTOR=0.5;
_8af.FILL_TRANSPARENT="transparent";
});
return _8af;
});
},"com/ibm/vis/engine/internal/data/transform/Density":function(){
define("com/ibm/vis/engine/internal/data/transform/Density",["./Transform","com/ibm/init/fork!./KernelSmoothType","com/ibm/init/statics","dojo/_base/declare"],function(_8f1,_8f2,_8f3,_8f4){
var _8f5=_8f4("com.ibm.vis.engine.internal.data.transform.Density",[_8f1],{xI:0,type:null,range:null,constructor:function(_8f6,_8f7,_8f8){
this.xI=this.getInputIndex("x");
this.type=new _8f2.m();
for(var _8f9=0,_8fa=_8f6.size();_8f9<_8fa;++_8f9){
var _8fb=_8f6.get(_8f9);
if(_8fb.inputIndex==this.xI){
this.range=_8fb.inputRange;
if(this.range.range<1e-15){
this.range=this.range.expand(this.range.min/4);
}
if(this.range.range<1e-15){
this.range=this.range.expand(1);
}
}
}
},getRowsCreated:function(){
return 41;
},isPdf:function(){
return true;
},setValues:function(_8fc,_8fd,_8fe,_8ff,_900){
this.setOverallData(_8fc,this.type,this.xI);
var _901=this.sortAndRemoveMissing(_8fc,this.xI,-1,_8fd);
var _902=this.calculateMoments(_8fc,this.xI,_901);
if(_902[0]<1e-12){
return;
}
this.type.setGroupMoments(_902[0],_902[1],0,_902[2],0,0);
this.type.setGroupData(_8fc,this.xI,-1,this.weightIndex,_901);
var _903=this.range.expand(this.type.getWindowWidth());
for(var _904=0,_905=this.outputs,_906=_905.size();_904<_906;++_904){
var df=_905.get(_904);
if("x".CPVisEngineEquals(df.role)){
df.outputGranularity=_903.range/this.getRowsCreated();
df.outputRange=this.range;
}
}
var _907=this.getRange(_8fc,_8fd,this.xI,this.range);
_903=_907.expand(this.type.getWindowWidth());
for(var _908=0,_909=this.outputs,_90a=_909.size();_908<_90a;++_908){
var df=_909.get(_908);
var _90b=this.getRowsCreated();
for(var i=0;i<_90b;++i){
var x=_903.fromZeroOne((i)/(_90b-1));
if("x".CPVisEngineEquals(df.role)){
_8fe[_8ff+i].data[df.outputIndex]=x;
}else{
if("y".CPVisEngineEquals(df.role)){
_8fe[_8ff+i].data[df.outputIndex]=this.type.getDensity(x,this.getMultiplier());
}
}
}
}
},calculateMoments:function(_90c,_90d,list){
var n=0;
var sx=0;
for(var _90e=0,_90f=list.length;_90e<_90f;++_90e){
var i=list[_90e];
var w=this.getWeight(_90c[i]);
n+=w;
var x=_90c[i].data[_90d];
sx+=w*x;
}
var mean=sx/n;
var sxx=0;
for(var _910=0,_911=list.length;_910<_911;++_910){
var i=list[_910];
var w=this.getWeight(_90c[i]);
var x=_90c[i].data[_90d];
var x0=x;
sxx+=w*(x0-mean)*(x0-mean);
}
return [n,mean,sxx/n];
}});
return _8f5;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/DAGCrossingReductionAlgorithm":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/DAGCrossingReductionAlgorithm",["com/ibm/init/statics","dojo/_base/declare"],function(_912,_913){
var _914=_913("com.ibm.vis.engine.internal.grammar.layout.graph.DAGCrossingReductionAlgorithm",null,{layout:function(_915,_916){
}});
return _914;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/cluster/NestedClusterShapeGroup":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/cluster/NestedClusterShapeGroup",["./ClusterShapeGroup","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!./ClusterShapeNode","com/ibm/init/fork!../../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_917,_918,_919,_91a,_91b,_91c){
var _91d=_91c("com.ibm.vis.engine.internal.grammar.coordinate.cluster.NestedClusterShapeGroup",[_917],{maxChildrenSize:1,constructor:function(_91e){
this.nodeNested=true;
},preProcess:function(){
this.inherited(arguments,[]);
if(!this.containsLeaves()){
this.removeNesting();
}
if(this.nodesReversed){
this.reverse();
}
},removeNesting:function(){
var _91f=this.getChildren();
this.maxChildrenSize=Math.max(this.maxChildrenSize,_91f.size());
var _920=new _918.m();
for(var _921=0;_921<_91f.size();++_921){
var _922=_91f.get(_921);
if(!this.containsElement(_922)){
_920.add(_922);
}
}
for(var _923=0,_924=_920.size();_923<_924;++_923){
var _925=_920.get(_923);
this.remove(_925);
}
},containsElement:function(_926){
if(_926.nodeContainsElement){
return true;
}
for(var _927=0;_927<_926.getChildren().size();++_927){
var node=_926.getChildren().get(_927);
if(this.containsElement(node)){
return true;
}
}
return false;
},remove:function(_928){
this.indexToShapeNode.remove(_928.id);
this.getChildren().remove(_928);
},getMaxNumberOfChildren:function(){
return this.maxChildrenSize;
},findShapeNodes:function(_929,_92a){
var _92b=new _918.m();
if(this.includeShape(_929)){
_92b=this.inherited(arguments,[_929,_92a]);
if(_92b.size()==0&&_929.shapeIsElement){
_92b=this.createNodesForShape(_929);
}
}
return _92b;
},createNodesForShape:function(_92c){
var _92d=new _918.m();
var _92e=_92c.positions;
if(_92e==null){
_92e=[_92c.position];
}
for(var _92f=0,_930=_92e.length;_92f<_930;++_92f){
var _931=_92e[_92f];
var node=this.createNodeFromPosition(_931);
if(node!=null){
_92d.add(node);
}
}
return _92d;
},createNodeFromPosition:function(_932){
var _933=null;
var _934=this.getRootNode();
for(var _935=1;_935<_932.index.length;++_935){
var _936=_932.index[_935];
var node=_934.indexToShapeNode.get(_936);
if(node==null&&_935==_932.index.length-1){
var _937=new _919.m(this.fullVizWidth);
(_934).add(_937,_936);
_933=_937;
}else{
if(node!=null){
_934=node;
}
}
}
return _933;
},fixOrdering:function(){
var _938=this.indexToShapeNode.keySet();
if(_938.size()>1){
var _939=this.getChildren();
_939.clear();
var _93a=new _918.m(_938);
var _93b=_93a.toArray(new Array(_93a.size()));
_91a.m.sortArray(_93b);
for(var i=0;i<_93b.length;++i){
var key=_93b[i];
var _93c=this.indexToShapeNode.get(key);
this.add(_93c,key);
}
this.inherited(arguments,[]);
}
}});
return _91d;
});
},"com/ibm/vis/engine/internal/grammar/label/TooltipProducer":function(){
define("com/ibm/vis/engine/internal/grammar/label/TooltipProducer",["./AbstractLabelProducer","com/ibm/init/statics","dojo/_base/declare"],function(_93d,_93e,_93f){
var _940=_93f("com.ibm.vis.engine.internal.grammar.label.TooltipProducer",[_93d],{constructor:function(data,vis,part){
}});
_940.makeForData=function(data,vis,part){
return new _940(data,vis,part);
};
return _940;
});
},"com/ibm/vis/interaction/RaveEvent":function(){
define("com/ibm/vis/interaction/RaveEvent",["com/ibm/init/statics","dojo/_base/declare"],function(_941,_942){
var _943=_942("com.ibm.vis.interaction.RaveEvent",null,{});
return _943;
});
},"com/ibm/vis/extension/ExtensionManager":function(){
define("com/ibm/vis/extension/ExtensionManager",["com/ibm/init/statics","dojo/_base/declare"],function(_944,_945){
var _946=_945("com.ibm.vis.extension.ExtensionManager",null,{registerUserFactory:function(_947){
},registerFallbackFactory:function(_948){
}});
return _946;
});
},"com/ibm/vis/engine/internal/interaction/effect/FlyInEffect":function(){
define("com/ibm/vis/engine/internal/interaction/effect/FlyInEffect",["./Effect","com/ibm/init/fork!../../struct/Rect","com/ibm/init/fork!../../util/SceneUtil","com/ibm/init/fork!../interpolation/TransformInterpolator","com/ibm/init/statics","dojo/_base/declare"],function(_949,_94a,_94b,_94c,_94d,_94e){
var _94f=_94e("com.ibm.vis.engine.internal.interaction.effect.FlyInEffect",[_949],{constructor:function(time,_950){
this.setTarget(_950);
},install:function(_951){
this.inherited(arguments,[_951]);
var r=Math.max(this.sceneSize.width,this.sceneSize.height)*0.6;
var _952=new _94a.m(0,0,this.sceneSize.width,this.sceneSize.height);
for(var _953=0,_954=this.targetIDs,_955=_954.size();_953<_955;++_953){
var id=_954.get(_953);
var bds;
var q=-1;
if(_94b.m.identifiesElement(id)){
q=id.indexOf("E");
}
if(q<0){
bds=_952;
}else{
bds=this.getInnerBounds(id.substring(0,q));
}
var a=_94f.calculateAngle(this.items.get(id),bds);
var _956=_94c.m.makeTranslateInterpolator(0,r*Math.cos(a),r*Math.sin(a),1,0,0);
_951.addAnimatedTransform(id,_956);
}
}});
_94f.calculateAngle=function(_957,_958){
var c=_94b.m.getCenter(_957);
if(c==null){
return -3.141592653589793/2;
}
return Math.atan2(c.y-_958.height/2,c.x-_958.width/2);
};
return _94f;
});
},"com/ibm/vis/engine/internal/grammar/scale/TimeScaleSpan":function(){
define("com/ibm/vis/engine/internal/grammar/scale/TimeScaleSpan",["./NumericScaleSpan","com/ibm/init/fork!../../../../monitor/LogComponent","com/ibm/init/fork!../../struct/Text","com/ibm/init/fork!../../Alignment","com/ibm/init/fork!../../nativeImpl/DateUtil","com/ibm/init/fork!./Tick","com/ibm/init/fork!../units/Unit","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../units/Measure","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_959,_95a,_95b,_95c,_95d,_95e,_95f,_960,_961,_962,_963,_964,_965){
var _966=_965("com.ibm.vis.engine.internal.grammar.scale.TimeScaleSpan",[_959],{tickDomainMinDate:null,constructor:function(unit,_967,info,_968,_969,_96a,_96b,_96c,_96d,num){
if(this.useTickDeltaFromSpec&&this.tickDelta<1){
if(this.visContext.logContext.hasListeners()){
this.visContext.logContext.grammarWarning(_95a.m.CommonGrammar,"badValueTickDelta (tickDelta must be greater than 1 in time scales)");
}
this.useTickDeltaFromSpec=false;
}
if(this.useTickDeltaFromSpec&&this.tickDelta!=Math.floor(this.tickDelta)){
if(this.visContext.logContext.hasListeners()){
this.visContext.logContext.grammarWarning(_95a.m.CommonGrammar,"unsupportedValueTickDelta (tickDelta should be integer, will be rounded down to integer)");
}
}
},getMaxTickLength:function(font){
this.makeNumericSpanDetails(5,20);
var a=this.visContext.formatContext.formatDate(this.tickDomainMinDate,this.specifiedFormatter,-1,null,this.ticksUnit);
var text=_95b.m.createTextWithUnshapedValue(a,0,0,"start",_95c.m.VALIGN_MIDDLE_1ST_LINE,font,null,null,this.visContext.getNumericShapingInfo(),null);
return font.getWidth(text);
},computeTickCount:function(){
return this.computeTicks(null,false);
},addTicks:function(_96e,_96f){
if(this.inputNumDomain.range==0&&this.desiredTicks==null){
var d=this.scaleTransform.transformToZeroOne(this.inputNumDomain.min);
var date=_95d.m.INSTANCE.toDate(this.inputNumDomain.min,this.inputUnit);
var tick=new _95e.m(this.visContext.formatContext.formatDate(date,this.specifiedFormatter,-1,null,this.inputUnit==_95f.m.TIMESTAMP?_95f.m.SECOND:_95f.m.DAY),this.outRange.fromZeroOne(d),this.inputNumDomain.min);
_96e.add(tick);
return;
}
this.computeTicks(_96e,true);
},computeTicks:function(_970,_971){
var x=_95d.m.INSTANCE.copy(this.tickDomainMinDate);
var _972=0;
var _973=0;
var _974=null;
if(_971){
_974=new _960.m();
}
while(true){
_973++;
var v=_95d.m.INSTANCE.fromDateObject(x,this.inputUnit);
var d=this.scaleTransform.transformToZeroOne(v);
if(this.shouldAddTick(v)){
if(_974!=null){
var tick=new _95e.m(this.visContext.formatContext.formatDate(x,this.specifiedFormatter,-1,null,this.ticksUnit),this.outRange.fromZeroOne(d),v);
_974.add(tick);
}
_972++;
}
if(d>1.0001){
break;
}
_95d.m.INSTANCE.increment(x,this.ticksUnit,Math.floor(this.tickDelta));
if(_973>20){
var _975=this.scaleTransform.transformToZeroOne(_95d.m.INSTANCE.fromDateObject(_95d.m.INSTANCE.copy(this.tickDomainMinDate),this.ticksUnit));
if(d==_975){
if(_974!=null){
_974=new _960.m();
var tick=new _95e.m(this.visContext.formatContext.formatDate(x,this.specifiedFormatter,-1,null,this.ticksUnit),this.outRange.fromZeroOne(d),d);
_974.add(tick);
}
_972=1;
break;
}
}
}
if(_974!=null){
for(var i=0;i<_972;++i){
_970.add(_974.get(i));
}
}
return _972;
},addMinorTicks:function(_976){
var div=(!this.useMinorDivisionsFromSpec)?this.ticksUnit.minorDivisions:this.minorDivisions;
if(div<2){
return;
}
var x=_95d.m.INSTANCE.copy(this.tickDomainMinDate);
_95d.m.INSTANCE.increment(x,this.ticksUnit,-Math.floor(this.tickDelta));
var d=0;
while(true){
var v=_95d.m.INSTANCE.fromDateObject(x,this.inputUnit);
_95d.m.INSTANCE.increment(x,this.ticksUnit,Math.floor(this.tickDelta));
var w=_95d.m.INSTANCE.fromDateObject(x,this.inputUnit);
for(var i=1;i<div;++i){
var t=v+(w-v)*i/div;
d=this.scaleTransform.transformToZeroOne(t);
if(d>=-1e-8&&d<=1+1e-8){
var tick=new _95e.m(null,this.outRange.fromZeroOne(d),t);
_976.add(tick);
}
}
if(d>1.0001){
break;
}
}
},makeNumericSpanDetails:function(_977,_978){
var _979=this.expandInitialRange(this.inputNumDomain);
var _97a;
if(this.useTickDeltaFromSpec){
this.ticksUnit=this.inputUnit==_95f.m.TIMESTAMP?_95f.m.SECOND:_95f.m.DAY;
_97a=_979;
}else{
this.ticksUnit=this.findBestUnit(_979.range,this.inputUnit,_961.m.TIME.units,_977);
_97a=_962.m.convertRange(_979,this.inputUnit,this.ticksUnit);
this.tickDelta=this.applyMultipliers(_97a,1,this.ticksUnit.multipliers,_977+1,_978+1);
if(this.tickDelta<1){
this.tickDelta=1;
}
}
this.tickDomainMinDate=_95d.m.INSTANCE.toDate(_979.min,this.inputUnit);
var _97b=Math.floor(this.tickDelta);
_95d.m.INSTANCE.floorToUnitMultiple(this.tickDomainMinDate,this.ticksUnit,_97b);
var _97c=_95d.m.INSTANCE.copy(this.tickDomainMinDate);
var n=Math.ceil(_97a.range/this.tickDelta);
_95d.m.INSTANCE.increment(_97c,this.ticksUnit,n*_97b);
if(_95d.m.INSTANCE.fromDateObject(_97c,this.inputUnit)<_979.max){
_95d.m.INSTANCE.increment(_97c,this.ticksUnit,_97b);
}
var nice=new _963.m(_95d.m.INSTANCE.fromDateObject(this.tickDomainMinDate,this.inputUnit),_95d.m.INSTANCE.fromDateObject(_97c,this.inputUnit));
this.modifiedInputNumDomain=this.fitInfo.finalizeRange(this.inputNumDomain,nice);
this.scaleTransform.setRange(this.modifiedInputNumDomain);
}});
return _966;
});
},"com/ibm/vis/engine/internal/grammar/scale/transform/LinearScaleTransform":function(){
define("com/ibm/vis/engine/internal/grammar/scale/transform/LinearScaleTransform",["./ScaleTransform","com/ibm/init/statics","dojo/_base/declare"],function(_97d,_97e,_97f){
var _980=_97f("com.ibm.vis.engine.internal.grammar.scale.transform.LinearScaleTransform",[_97d],{constructor:function(){
},transform:function(_981){
return _981;
},inverse:function(_982){
return _982;
}});
return _980;
});
},"com/ibm/vis/engine/internal/Data":function(){
define("com/ibm/vis/engine/internal/Data",["./IdentifiableItem","com/ibm/init/fork!../../monitor/LogLevel","com/ibm/init/fork!../../monitor/LogComponent","com/ibm/init/fork!./nativeImpl/List","com/ibm/init/fork!./data/transform/Grouping","com/ibm/init/fork!./data/DerivedData","com/ibm/init/fork!./data/geo/GeoData","com/ibm/init/fork!./data/geo/GeoPropertiesMatcher","com/ibm/init/fork!./data/geo/NoDataMatcher","com/ibm/init/fork!./data/Row","com/ibm/init/fork!./data/Field","com/ibm/init/fork!./data/transform/TransformType","com/ibm/init/fork!./data/transform/Smooth","com/ibm/init/fork!./data/transform/Density","com/ibm/init/fork!./data/transform/Summary","com/ibm/init/fork!./data/transform/Percent","com/ibm/init/fork!./data/transform/Distribution","com/ibm/init/fork!./nativeImpl/WebEngineException","com/ibm/init/fork!./data/transform/DerivedField","com/ibm/init/fork!./nativeImpl/SpecUtil","com/ibm/init/fork!./grammar/scale/ScaleFitInfo","com/ibm/init/fork!./grammar/scale/ScaleSpanBuilder","com/ibm/init/fork!./grammar/scale/ScaleGeometry","com/ibm/init/fork!./grammar/units/UnitConverter","com/ibm/init/fork!./data/Range","com/ibm/init/fork!./grammar/units/Unit","com/ibm/init/fork!./nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_983,_984,_985,_986,_987,_988,_989,_98a,_98b,_98c,_98d,_98e,_98f,_990,_991,_992,_993,_994,_995,_996,_997,_998,_999,_99a,_99b,_99c,_99d,_99e,_99f){
var Data=_99f("com.ibm.vis.engine.internal.Data",[_983],{fields:null,keyField:null,visContext:null,augmentation:null,rows:null,derived:null,source:null,constructor:function(id,vis,_9a0){
this.visContext=vis.visContext;
if(_9a0.source==null){
this.source=null;
this.fields=this.makeFields(_9a0,vis);
this.rows=(_9a0.rows==null)?new Array(0):this.makeSimpleRows(_9a0);
}else{
this.source=vis.getByID(_9a0.source.$ref);
this.makeDerivedData(vis,_9a0);
}
this.augmentation=this.augmentData(_9a0,vis.currentSpec,vis);
if(this.visContext.logContext.hasListeners()){
this.visContext.logContext.log(_984.m.Info,_985.m.CommonGrammar,"Built fields","fieldCount",this.fields.length);
this.visContext.logContext.log(_984.m.Info,_985.m.CommonGrammar,"Built rows","rowCount",this.rows.length);
}
var _9a1=new _986.m();
for(var _9a2=0,_9a3=this.fields,_9a4=_9a3.length;_9a2<_9a4;++_9a2){
var _9a5=_9a3[_9a2];
if(_9a5.isKey){
_9a1.add(_9a5);
}
if(!_9a5.range.isComplete()&&!this.isPdf()){
_9a5.range=this.makeDefaultRange(_9a5,this.rows);
if(this.visContext.logContext.hasListeners()){
this.visContext.logContext.log(_984.m.Trace,_985.m.CommonGrammar,"Created default range","field",_9a5.id);
}
}
}
if(_9a1.size()==0){
this.keyField=null;
}else{
this.keyField=new Array(_9a1.size());
for(var i=0;i<this.keyField.length;++i){
this.keyField[i]=_9a1.get(i);
}
}
},makeDerivedData:function(vis,_9a6){
var type=_9a6.type;
var _9a7=new _986.m();
var _9a8=this.makeInputDefinitions(_9a6,vis);
var _9a9=-1;
for(var _9aa=0,_9ab=_9a8.size();_9aa<_9ab;++_9aa){
var _9ac=_9a8.get(_9aa);
if("weight".CPVisEngineEquals(_9ac.role)){
_9a9=_9ac.inputIndex;
}
}
var _9ad=this.makeGroupDefinitions(_9a6,vis,this.source.rows,_9a9,_9a7);
var _9ae=this.makeOutputDefinitions(_9a6,vis,_9a7);
this.fields=new Array(_9a7.size());
var n=0;
for(var _9af=0,_9b0=_9a7.size();_9af<_9b0;++_9af){
var f=_9a7.get(_9af);
this.fields[n++]=f;
}
var _9b1=new _987.m(_9ad,this.source.rows);
var _9b2=this.makeTransform(type,_9a8,_9ae,_9a6,this.source);
this.derived=new _988.m(_9b1,_9b2);
this.rows=this.derived.calculate(this.source.rows);
for(var _9b3=0,_9b4=_9ae.size();_9b3<_9b4;++_9b3){
var df=_9ae.get(_9b3);
var _9ac=this.fields[df.outputIndex];
var _9b5=df.inputIndex;
if(_9b5<0){
_9b5=_9b2.getMatchingInputField(df);
}
if(_9b5>=0){
_9ac.copyDerivedInfo(this.source.fields[_9b5]);
}else{
var unit=_9b2.getUnit();
if(unit!=null){
_9ac.unit=unit;
}
}
if(df.outputRange!=null){
_9ac.range=df.outputRange;
}
_9ac.granularity=df.outputGranularity;
_9b2.finishFieldDefinitions(this.fields);
}
},augmentData:function(_9b6,_9b7,vis){
if(_9b7==null||_9b7.augment==null){
return null;
}
var _9b8=null;
for(var _9b9=0,_9ba=_9b7.augment,_9bb=_9ba.length;_9b9<_9bb;++_9b9){
var a=_9ba[_9b9];
if(a.target==null&&_9b6==_9b7.data[0]){
_9b8=a;
}
if(a.target!=null&&a.target.$ref.CPVisEngineEquals(_9b6.id)){
_9b8=a;
}
}
if(_9b8==null){
return null;
}
var _9bc=_989.m.readFeatures(_9b8.source,this.visContext);
var _9bd;
if(_9b8.sourceKeys!=null){
_9bd=new _98a.m(_9b6,_9b8.sourceKeys,_9b8.dataKeys,"includeAllSource".CPVisEngineEquals(_9b8.method),_9bc,this.visContext);
}else{
_9bd=new _98b.m(_9bc);
}
var g=_989.m.read(_9b8.thinningDistanceFraction,_9bd,this.visContext);
this.addExtraRows(g);
this.addExtraFields(g,_9b8.sourceFields,vis);
return g;
},addExtraRows:function(g){
if(g.size()>this.rows.length){
var old=this.rows;
this.rows=new Array(g.size());
for(var i=0;i<old.length;++i){
this.rows[i]=old[i];
}
var _9be=new Array(0);
for(var i=old.length;i<this.rows.length;++i){
this.rows[i]=_98c.m.createRow(_9be,i);
}
}
},addExtraFields:function(g,_9bf,vis){
if(_9bf==null||_9bf.length==0){
return;
}
var old=this.fields;
this.fields=new Array(old.length+_9bf.length);
for(var i=0;i<old.length;++i){
this.fields[i]=old[i];
}
for(var i=0;i<_9bf.length;++i){
var spec=_9bf[i];
if(spec.categories==null){
spec.categories=g.propertyCategories(_9bf[i].id);
}
this.fields[i+old.length]=_98d.m.createSimpleField(vis,spec,this,i+old.length,null);
}
var _9c0=this.rows;
for(var i=0;i<this.rows.length;++i){
var r=_98c.m.createEmptyRow(this.fields.length,this.rows[i].index);
for(var j=0;j<old.length;++j){
r.data[j]=_9c0[i].data[j];
}
for(var j=0;j<_9bf.length;++j){
r.data[old.length+j]=g.getPropertyAsNumber(i,_9bf[j].id);
}
this.rows[i]=r;
}
},makeTransform:function(type,_9c1,_9c2,base,_9c3){
var _9c4=null;
if(_98e.m.isType("smooth",type)){
_9c4=new _98f.m(_9c1,_9c2,this.visContext.logContext,type);
}else{
if(_98e.m.isType("density",type)){
_9c4=new _990.m(_9c1,_9c2,this.visContext.logContext);
}else{
if(_98e.m.isType("summary",type)){
_9c4=new _991.m(_9c1,_9c2,this.visContext.logContext,_9c3);
}else{
if(_98e.m.isType("percent",type)){
_9c4=new _992.m(_9c1,_9c2,this.visContext.logContext);
}else{
if(_98e.m.isType(_98e.m.DISTRIBUTION,type)){
_9c4=new _993.m(_9c1,_9c2,this.visContext.logContext,type);
}
}
}
}
}
if(_9c4==null){
throw new _994.m("unknown transform "+type);
}
return _9c4;
},makeGroupDefinitions:function(base,vis,_9c5,_9c6,_9c7){
var _9c8=new _986.m();
var _9c9=base.group;
if(_9c9==null){
return _9c8;
}
for(var _9ca=0,_9cb=_9c9.length;_9ca<_9cb;++_9ca){
var d=_9c9[_9ca];
var from=vis.getByID(d.input.$ref);
var df;
var _9cc=d.output;
if(_9cc!=null){
var out=_98d.m.createSimpleField(vis,_9cc,this,_9c7.size(),from.unit);
out.copyDerivedInfo(from);
if(out.order==null&&_9cc.order!=null&&out.categories!=null){
out.order=_98d.m.computeCategoriesOrder(out.categories,_9cc.order);
}
if(out.range==null){
out.copyRange(from);
}
_9c7.add(out);
df=_995.m.createThroughputField("group",from.index,out.index,from.range,null,_9cc);
if(!from.isCategorical()){
if(d.granularity!=null){
df.derivedField.granularity=d.granularity;
}
this.setBinningParameters(from,_9c5,_9c6,df);
var _9cd=df.derivedField.granularity;
if(d.granularity!=null){
_9cd=d.granularity;
}
out.granularity=_9cd;
}
}else{
var _9ce=_996.m.findByID(base,d.input.$ref);
df=_995.m.createInputField("group",from.index,from.range,null,_9ce);
if(!from.isCategorical()){
this.setBinningParameters(from,_9c5,_9c6,df);
}
}
_9c8.add(df);
}
return _9c8;
},setBinningParameters:function(_9cf,_9d0,_9d1,df){
if(_9cf.granularity!=null){
df.derivedField.granularity=_9cf.granularity;
return;
}
var f=0;
if(_9d1<0){
f=_9d0.length;
}else{
for(var _9d2=0,_9d3=_9d0.length;_9d2<_9d3;++_9d2){
var row=_9d0[_9d2];
var w=row.data[_9d1];
if(w!=null&&w>0){
f+=w;
}
}
}
var n=Math.round(3+Math.log(f)*Math.log(f)/Math.log(20));
if(n<4){
n=4;
}
var _9d4=new _997.m(true,false);
var span=_998.m.createForRange(_9cf.range,_9cf.unit,_9d4,n,null,_9cf.getSpecifiedFormatter(),this.visContext);
var _9d5=false;
var _9d6=0;
span.setupForExtent(_999.m.makeUnsized(false));
while(!_9d5){
span.setupForTickCount(n,n);
var _9d7=Math.min(4,_9d0.length);
if(this.getBinCounts(span,_9d0,_9cf)<_9d7){
n++;
}else{
_9d5=true;
}
_9d6++;
if(_9d6>15){
_9d5=true;
}
}
var _9d8=_99a.m.convert(span.getTickMin(),span.getTickUnit(),_9cf.unit);
var _9d9=_99a.m.convert(span.getTickSize(),span.getTickUnit(),_9cf.unit);
if(df.parameters.binStart==null){
df.parameters.binStart=_9d8;
}
if(df.derivedField.granularity==null){
df.outputGranularity=_9d9;
df.derivedField.granularity=_9d9;
}
},getBinCounts:function(span,_9da,_9db){
var _9dc=_99a.m.convert(span.getTickMin(),span.getTickUnit(),_9db.unit);
var _9dd=_99a.m.convert(span.getTickSize(),span.getTickUnit(),_9db.unit);
var keys=new _986.m();
for(var _9de=0;_9de<_9da.length;++_9de){
var row=_9da[_9de];
var _9df=row.data;
if(_9df[_9db.index]!=null){
var v=_9df[_9db.index];
var n=Math.floor((v-_9dc)/_9dd);
var _9e0=(n+0.5)*_9dd+_9dc;
var key=_9e0==_9e0?_9e0+"|":_9e0+"|";
if(!this.contains(keys,key)){
keys.add(key);
}
}
}
return keys.size();
},contains:function(keys,key){
for(var _9e1=0,_9e2=keys.size();_9e1<_9e2;++_9e1){
var aKey=keys.get(_9e1);
if(aKey.CPVisEngineEquals(key)){
return true;
}
}
return false;
},makeInputDefinitions:function(base,vis){
var _9e3=new _986.m();
var def=base.input;
if(def==null){
return _9e3;
}
for(var _9e4=0,_9e5=def.length;_9e4<_9e5;++_9e4){
var _9e6=def[_9e4];
var role=_9e6.role;
var from=vis.getByID(_9e6.field.$ref);
var df=_995.m.createInputField(role,from.index,from.range,null,null);
_9e3.add(df);
}
return _9e3;
},makeOutputDefinitions:function(base,vis,_9e7){
var _9e8=new _986.m();
var def=base.output;
if(def==null){
return _9e8;
}
for(var _9e9=0,_9ea=def.length;_9e9<_9ea;++_9e9){
var item=def[_9e9];
var role=item.role;
var _9eb=item.field;
if(_9eb==null){
_9eb=new Object();
}
var f=_98d.m.createSimpleField(vis,_9eb,this,_9e7.size(),null);
var df=null;
if(item.input!=null){
var from=vis.getByID(item.input.$ref);
if(from!=null){
if(_9eb.unit==null){
f.unit=from.unit;
}
f.copyDerivedInfo(from);
df=_995.m.createThroughputField("group",from.index,f.index,from.range,item.parameters,item.field);
}
}else{
df=_995.m.createOutputField(role,f.index,item.parameters,item.field);
}
_9e7.add(f);
_9e8.add(df);
}
return _9e8;
},makeFields:function(base,vis){
if(base==null||base.fields==null){
return new Array(0);
}
var _9ec=base.fields;
var f=new Array(_9ec.length);
for(var i=0;i<f.length;++i){
f[i]=_98d.m.createSimpleField(vis,_9ec[i],this,i,null);
}
return f;
},makeDefaultRange:function(_9ed,_9ee){
if(_9ed.range.isComplete()){
return _9ed.range;
}
return _9ed.range.complete(this.computeDataRange(_9ed,_9ee));
},computeDataRange:function(_9ef,_9f0){
var _9f1=_99b.m.EMPTY;
var _9f2=false;
if(_9ef.unit==_99c.m.COUNT){
_9f1=new _99b.m(0,0);
_9f2=true;
}
for(var _9f3=0,_9f4=_9f0.length;_9f3<_9f4;++_9f3){
var row=_9f0[_9f3];
if(row.data.length>_9ef.index){
var v=row.data[_9ef.index];
if(v!=null){
_9f1=_9f1.unionValue(v);
_9f2=true;
}
}
}
if(!_9f2){
_9f1=new _99b.m(0,0);
}
return _9f1;
},makeSimpleRows:function(base){
var _9f5=base.rows;
var r=new Array(_9f5.length);
for(var i=0;i<r.length;++i){
r[i]=_98c.m.createRow(_9f5[i],i);
}
return r;
},getKey:function(row){
return this.makeKey(row,this.keyField);
},makeKey:function(row,_9f6){
if(_9f6==null){
return null;
}
var s=_9f6[0].getUnformattedStringValue(row,false);
for(var i=1;i<_9f6.length;++i){
s+=("|"+_9f6[i].getUnformattedStringValue(row,false));
}
return s;
},getKeyWithDefaultFields:function(row,_9f7){
var _9f8=(this.keyField==null)?_9f7:this.keyField;
return this.makeKey(row,_9f8);
},matchDensityWithAreaUnderCurve:function(_9f9){
if(this.isPdf()){
this.derived.getTransform().setMultiplier(_9f9);
this.rows=this.derived.calculate(this.source.rows);
for(var _9fa=0,_9fb=this.fields,_9fc=_9fb.length;_9fa<_9fc;++_9fa){
var _9fd=_9fb[_9fa];
if(_99d.m.isNaN(_9f9)||_9fd.index==this.derived.getTransform().getOutputIndex("y")){
_9fd.range=_99b.m.EMPTY;
_9fd.range=this.makeDefaultRange(_9fd,this.rows);
}
}
}
},isPdf:function(){
return this.derived!=null&&this.derived.getTransform().isPdf();
}});
return Data;
});
},"com/ibm/vis/engine/internal/struct/Line":function(){
define("com/ibm/vis/engine/internal/struct/Line",["./PolyShape","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!./Rect","com/ibm/init/fork!../Fill","com/ibm/init/fork!../ColorUtil","com/ibm/init/fork!../data/Range","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!./Point","com/ibm/init/statics","dojo/_base/declare"],function(_9fe,_9ff,_a00,_a01,_a02,_a03,_a04,_a05,_a06,_a07){
var Line=_a07("com.ibm.vis.engine.internal.struct.Line",[_9fe],{isRadial:false,constructor:function(x,y,_a08){
},getType:function(){
return "line";
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("line".CPVisEngineEquals(type)){
return true;
}
return false;
},contains:function(px,py){
return false;
},getBounds:function(){
if(this.bounds==null){
this.bounds=new _a00.m(Math.min(this.x[0],this.x[1]),Math.min(this.y[0],this.y[1]),Math.abs(this.x[0]-this.x[1]),Math.abs(this.y[0]-this.y[1]));
}
return this.bounds;
},makeGeometryClone:function(){
var base=Line.make(this.x[0],this.y[0],this.x[1],this.y[1]);
base.snap=this.snap;
base.fill=_a01.m.makeSolid(_a02.m.getDefaultStrokeColor());
return base;
},pointOnLineSegment:function(_a09,_a0a){
var run1=(this.x[1]-this.x[0]);
var m1=1;
var b1=0;
if(run1!=0){
m1=(this.y[1]-this.y[0])/run1;
b1=this.y[1]-m1*this.x[1];
var _a0b=m1*_a09.x+b1;
var _a0c=new _a03.m(_a09.y,_a0b);
if(_a0c.range<=_a0a&&this.pointInSegment(_a09,_a0a)){
return true;
}
return false;
}
var _a0d=new _a03.m(_a09.x,this.x[0]);
if(_a0d.range<=_a0a&&this.pointInSegment(_a09,_a0a)){
return true;
}
return false;
},transformToXAxis:function(){
this.affine(1,-this.x[0],1,-this.y[0],false);
var _a0e=Math.atan2(this.y[1],this.x[1]);
var _a0f=Math.cos(-_a0e)*this.x[1]-Math.sin(-_a0e)*this.y[1];
var _a10=Math.sin(-_a0e)*this.x[1]+Math.cos(-_a0e)*this.y[1];
this.x[1]=_a0f;
this.y[1]=_a10;
return -_a0e;
},pointInSegment:function(p1,_a11){
var _a12=new _a03.m(this.x[0],this.x[1]);
if(_a12.containsTolerantly(p1.x,_a11)){
var _a13=new _a03.m(this.y[0],this.y[1]);
if(_a13.containsTolerantly(p1.y,_a11)){
return true;
}
}
return false;
},getLength:function(){
return Math.sqrt((this.x[0]-this.x[1])*(this.x[0]-this.x[1])+(this.y[0]-this.y[1])*(this.y[0]-this.y[1]));
},interpolatePoints:function(){
var _a14=new _a04.m();
var p1_x=this.x[0];
var p1_y=this.y[0];
var p2_x=this.x[1];
var p2_y=this.y[1];
var _a15=(Math.abs(p2_y-p1_y)>Math.abs(p2_x-p1_x));
if(_a15){
var temp=p1_x;
p1_x=p1_y;
p1_y=temp;
temp=p2_x;
p2_x=p2_y;
p2_y=temp;
}
if(p1_x>p2_x){
var temp=p1_x;
p1_x=p2_x;
p2_x=temp;
temp=p1_y;
p1_y=p2_y;
p2_y=temp;
}
var dx=p2_x-p1_x;
var dy=Math.abs(p2_y-p1_y);
var _a16=dx/2;
var _a17=0.5;
var _a18=(p1_y<p2_y)?0.5:-0.5;
var pY=p1_y;
var maxX=p2_x;
for(var pX=p1_x;pX<maxX;pX+=_a17){
_a14.add(_a15?new _a05.m(pY,pX):new _a05.m(pX,pY));
_a16-=dy;
if(_a16<0){
pY+=_a18;
_a16+=dx;
}
}
return _a14;
},clipOutside:function(_a19){
var _a1a=this.interpolatePoints();
var _a1b=new _a04.m();
var _a1c=new _a04.m();
for(var i=0;i<_a1a.size();++i){
var p=_a1a.get(i);
if(!_a19.contains(p.x,p.y)){
_a1b.add(p.x);
_a1c.add(p.y);
}
}
var _a1d=this;
if(!_a1b.isEmpty()&&!_a1c.isEmpty()){
_a1d=Line.make(_a1b.get(0),_a1c.get(0),_a1b.get(_a1b.size()-1),_a1c.get(_a1c.size()-1));
}
return _a1d;
},isLineRadial:function(){
return this.isRadial;
},setRadial:function(_a1e){
this.isRadial=_a1e;
}});
Line.make=function(x1,y1,x2,y2){
return new Line([x1,x2],[y1,y2],false);
};
Line.makeLine=function(x1,y1,x2,y2){
var l=Line.make(x1,y1,x2,y2);
var _a1f=_9ff.m.createJSONObject();
_9ff.m.put(_a1f,"type",l.getType());
l.setShapeParameters(_a1f);
return _a1f;
};
Line.intersects=function(x1,y1,x2,y2,x3,y3,x4,y4){
var d=(y4-y3)*(x2-x1)-(x4-x3)*(y2-y1);
if(Math.abs(d)<0.000001){
return false;
}
var t1=((x4-x3)*(y1-y3)-(y4-y3)*(x1-x3))/d;
if(t1<-0.000001||t1>1+0.000001){
return false;
}
var t2=((x2-x1)*(y1-y3)-(y2-y1)*(x1-x3))/d;
return (t2>-0.000001&&t2<1+0.000001);
};
Line.intersectsWithinTolerance=function(x1,y1,x2,y2,x3,y3,x4,y4,_a20){
var xMax=Math.max(x1,x2)+_a20;
var xMin=Math.min(x1,x2)-_a20;
if((x3<xMin&&x4<xMin)||(x3>xMax&&x4>xMax)){
return false;
}
var yMax=Math.max(y1,y2)+_a20;
var yMin=Math.min(y1,y2)-_a20;
if((y3>yMax&&y4>yMax)||(y3<yMin&&y4<yMin)){
return false;
}
var d=(y4-y3)*(x2-x1)-(x4-x3)*(y2-y1);
if(Math.abs(d)<0.000001){
return false;
}
var t1=((x4-x3)*(y1-y3)-(y4-y3)*(x1-x3))/d;
if(t1<(-0.000001-_a20)||t1>(1+0.000001+_a20)){
return false;
}
var t2=((x2-x1)*(y1-y3)-(y2-y1)*(x1-x3))/d;
return (t2>(-0.000001-_a20)&&t2<(1+0.000001+_a20));
};
Line.strictlyIntersects=function(x1,y1,x2,y2,x3,y3,x4,y4){
var d=(y4-y3)*(x2-x1)-(x4-x3)*(y2-y1);
if(Math.abs(d)<0.000001){
return false;
}
var t1=((x4-x3)*(y1-y3)-(y4-y3)*(x1-x3))/d;
if(t1<0.000001||t1>1-0.000001){
return false;
}
var t2=((x2-x1)*(y1-y3)-(y2-y1)*(x1-x3))/d;
return (t2>0.000001&&t2<1-0.000001);
};
Line.distanceToPoint=function(x1,y1,x2,y2,x3,y3){
var d2=(y2-y1)*(y2-y1)+(x2-x1)*(x2-x1);
if(d2<0.000001){
return -1;
}
var u=((x3-x1)*(x2-x1)+(y3-y1)*(y2-y1))/d2;
if(u<0||u>1){
return -1;
}
var x=x1+u*(x2-x1);
var y=y1+u*(y2-y1);
return Math.sqrt((x-x3)*(x-x3)+(y-y3)*(y-y3));
};
Line.distanceToLine=function(x1,y1,x2,y2,x,y){
var d2=(y2-y1)*(y2-y1)+(x2-x1)*(x2-x1);
var t=((x-x1)*(x2-x1)+(y-y1)*(y2-y1))/d2;
var xt=x1+t*(x2-x1);
var yt=y1+t*(y2-y1);
return Math.sqrt((xt-x)*(xt-x)+(yt-y)*(yt-y));
};
_a06.add("com/ibm/vis/engine/internal/struct/Line",["com/ibm/vis/engine/internal/struct/PolyShape","com/ibm/vis/engine/internal/nativeImpl/BasicFactory"],function(){
Line.LINE_FLAGS=0;
Line.LINE_NAME="line";
});
return Line;
});
},"com/ibm/vis/engine/internal/grammar/label/LabelProducer":function(){
define("com/ibm/vis/engine/internal/grammar/label/LabelProducer",["./AbstractLabelProducer","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../../../exceptions/SpecException","com/ibm/init/fork!../../../../exceptions/ErrorCode","com/ibm/init/fork!../../scene/Font","com/ibm/init/fork!../../struct/Dim","com/ibm/init/fork!../../struct/Insets","com/ibm/init/fork!../../Alignment","com/ibm/init/fork!../../scene/ItemBuilder","com/ibm/init/fork!../../util/MathUtil","com/ibm/init/fork!../../struct/Rect","com/ibm/init/fork!../../util/SceneUtil","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/fork!../../nativeImpl/SpecUtil","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!../../struct/Line","com/ibm/init/statics","dojo/_base/declare"],function(_a21,_a22,_a23,_a24,_a25,_a26,_a27,_a28,_a29,_a2a,_a2b,_a2c,_a2d,_a2e,_a2f,_a30,_a31,_a32){
var _a33=_a32("com.ibm.vis.engine.internal.grammar.label.LabelProducer",[_a21],{style:null,lineStyle:null,lineMinimumSizeSpec:null,backgroundStyle:null,shapingInfo:null,padding:null,font:null,aesthetics:null,align:null,valign:null,angle:null,location:null,stretch:false,fit:false,clipBounds:null,clipSymbol:null,backgroundPadding:null,constructor:function(data,vis,part,_a34,_a35,_a36,_a37,_a38,_a39,_a3a){
this.style=(_a37==null)?new Object():_a37;
this.lineStyle=(_a38==null)?new Object():_a38;
this.lineMinimumSizeSpec=_a39;
this.backgroundStyle=_a3a;
this.shapingInfo=vis.visContext.getNumericShapingInfo();
this.location=null;
this.stretch=false;
this.fit=false;
if(this.style.location==null){
this.location=_a34?"inside":"outside";
}else{
if(_a22.m.isString(this.style.location)){
if("stretch".CPVisEngineEquals(this.style.location)){
this.location="inside";
this.stretch=true;
}else{
if("fit".CPVisEngineEquals(this.style.location)){
this.location="inside";
this.fit=true;
}else{
if("inside".CPVisEngineEquals(this.style.location)){
this.location="inside";
}else{
if("outside".CPVisEngineEquals(this.style.location)){
this.location="outside";
}else{
if("callout".CPVisEngineEquals(this.style.location)){
this.location="callout";
}else{
throw new _a23.m(null,_a24.m.SPEC_INVALID_VALUE,"Invalid value -> location : "+this.style.location,null,null,null,null);
}
}
}
}
}
}
}
var _a3b=this.style.font;
this.font=_a25.m.makeFont(_a3b,vis.visContext);
var ext=new _a26.m(this.font.getHeight(),this.font.getHeight());
this.padding=_a27.m.makeForStylePadding(this.style.padding,ext,ext);
if(this.backgroundStyle!=null){
if(this.backgroundStyle.padding==null){
this.backgroundPadding=new _a27.m(_a33.V_BACKGROUND_PADDING,_a33.H_BACKGROUND_PADDING,_a33.V_BACKGROUND_PADDING,_a33.H_BACKGROUND_PADDING);
}else{
this.backgroundPadding=_a27.m.makeForStylePadding(this.backgroundStyle.padding,ext,ext);
}
this.padding=_a27.m.combine(this.padding,this.backgroundPadding);
}
this.angle=this.style.angle;
this.align=_a33.getAlignString(this.style.align,_a35);
this.valign=_a33.getAlignString(this.style.valign,_a36);
this.clipSymbol=_a25.m.ELLIPSIS;
},addAesthetics:function(_a3c){
this.aesthetics=_a3c;
},getAesthetics:function(){
return this.aesthetics;
},makeLabel:function(_a3d,_a3e){
var _a3f=_a3e.getParts();
var _a40=null;
var _a41=null;
if(_a3f!=null){
for(var i=0;i<_a3f.length;++i){
var _a42=_a3f[i].getElementPart();
if((_a42!=null)&&(_a42.CPVisEngineEquals(this.part))){
_a40=_a3f[i];
break;
}
}
}
if(_a40!=null){
_a41=_a40.getLabelShape(this.align,this.valign,this.location);
}else{
_a41=_a3e.getLabelShape(this.align,this.valign,this.location);
}
if(_a41==null){
_a41=_a3e;
}
if("circle".CPVisEngineEquals(_a41.getType())){
_a41=_a33.getReducedBoundsWhenNeededForCircle(_a41.getBounds(),this.align,this.valign);
}
var _a43=this.makeStringFor(_a3d,_a3e);
var _a44=this.calculateBoundsForOutsideLabel(_a41,_a43);
var _a45=_a44.width-this.padding.getHorizontal()>=0?_a44.width-this.padding.getHorizontal():0;
var _a46=_a44.height-this.padding.getVertical()>=0?_a44.height-this.padding.getVertical():0;
var size=new _a26.m(_a45,_a46);
var _a47=this.assembleText(_a3e,_a41,size,_a43,this.align,this.valign);
if(_a47!=null&&this.location.CPVisEngineEquals("outside")){
_a47=this.makeOutsideLabel(_a47,_a3d,_a3e);
}
return _a47;
},calculateBoundsForOutsideLabel:function(_a48,_a49){
var _a4a=_a48.getBounds();
if(_a49==null){
return _a4a;
}
if("outside".CPVisEngineEquals(this.location)||"callout".CPVisEngineEquals(this.location)){
_a4a=_a4a.makeGeometryClone();
var _a4b=this.calculateLabelSize(_a49);
_a4a.width=_a4b.width+this.padding.getHorizontal();
_a4a.height=_a4b.height+this.padding.getVertical();
}
return _a4a;
},assembleText:function(_a4c,_a4d,size,_a4e,_a4f,_a50){
if(_a4e==null){
return null;
}
var _a51=false;
if(_a4c.getType()=="wedge"&&"callout".CPVisEngineEquals(this.location)){
_a51=true;
}
var _a52=_a4f;
var _a53=_a50;
var p=_a4d.getCenter();
var b=_a4d.getBounds();
var x;
if("start".CPVisEngineEquals(_a52)){
if("inside".CPVisEngineEquals(this.location)){
x=b.x+this.padding.left;
}else{
if(_a51){
x=b.x;
_a52="middle";
}else{
x=b.x-this.padding.right;
_a52="end";
}
}
}else{
if("end".CPVisEngineEquals(_a52)){
if("inside".CPVisEngineEquals(this.location)){
x=b.x+b.width-this.padding.right;
}else{
if(_a51){
x=b.x+b.width;
_a52="middle";
}else{
x=b.x+b.width+this.padding.left;
_a52="start";
}
}
}else{
x=p.x;
}
}
var y;
if("start".CPVisEngineEquals(_a53)){
if("inside".CPVisEngineEquals(this.location)){
y=b.y+this.padding.top;
_a53="end";
}else{
if(_a51){
y=b.y;
_a53="middle";
}else{
y=b.y-this.padding.bottom;
}
}
}else{
if("end".CPVisEngineEquals(_a53)){
if("inside".CPVisEngineEquals(this.location)){
y=b.y+b.height-this.padding.bottom;
_a53="start";
}else{
if(_a51){
y=b.y+b.height;
_a53="middle";
}else{
y=b.y+b.height+this.padding.top;
}
}
}else{
y=p.y;
}
}
if(_a28.m.VALIGN_MIDDLE_1ST_LINE.CPVisEngineEquals(_a53)){
_a53="middle";
}
this.clipSymbol=this.isCategorical?_a25.m.ELLIPSIS:_a25.m.HASH;
var text=_a29.m.makeText(_a4e,x,y,_a52,_a53,this.font,this.style,size,this.allowClip(),this.clipSymbol,this.shapingInfo);
if(text==null){
return null;
}
if(this.fit){
text=text.sizeToFit(size,this.allowClip());
}else{
if(this.stretch){
text=text.stretchToFit(size);
}else{
if("inside".CPVisEngineEquals(this.location)){
text=text.fitInside(size);
}
}
}
if(text==null){
return null;
}
if(this.aesthetics!=null){
for(var _a54=0,_a55=this.aesthetics,_a56=_a55.length;_a54<_a56;++_a54){
var _a57=_a55[_a54];
_a57.apply(text,this.data.rows[_a4c.rows[0]]);
}
}
if(this.angle!=null&&!_a51){
var a=this.getAngle(_a4c,this.angle);
text.setTransform(_a2a.m.makeRotation(a,x,y));
}
if(_a4c.rows!=null){
text.setRow(_a4c.rows[0]);
}
return text;
},allowClip:function(){
return !(this.fit||this.stretch);
},getAngle:function(_a58,_a59){
if(_a59==null){
return 0;
}
if(_a22.m.isNumber(_a59)){
return (_a59)*3.141592653589793/180;
}
return _a58.getTangentAngle(this.align,this.valign);
},makeRotatedLabel:function(_a5a,r){
var _a5b=this.makeLabel(_a5a,new _a2b.m(r.y,r.x,r.height,r.width));
if(_a5b==null){
return null;
}
_a5b.snap=r.snap;
var _a5c=_a2a.m.makeRotation(-3.141592653589793/2,0,0);
_a22.m.put(_a5c,"dy",_a2a.m.r3(r.height));
_a5b.setTransform(_a5c);
return _a5b;
},makeSimpleLabel:function(text,_a5d){
var _a5e=new Array(1);
_a5e[0]=text;
return this.makeLabel(_a5e,_a5d);
},makeSimpleRotatedLabel:function(text,r){
var _a5f=new Array(1);
_a5f[0]=text;
return this.makeRotatedLabel(_a5f,r);
},calculateLabelSize:function(_a60){
var size=new _a26.m(1.7976931348623157e+308,1.7976931348623157e+308);
var text=_a29.m.makeText(_a60,0,0,null,null,this.font,this.style,size,this.allowClip(),this.clipSymbol,this.shapingInfo);
text.buildParts(size);
return new _a26.m(text.calculateTextWidth(),text.getHeight());
},makeLabelBackground:function(_a61,_a62){
if(this.backgroundStyle==null){
return null;
}
var _a63=_a2c.m.getBounds(_a61.toJSON());
var _a64=_a29.m.makeRectangle(_a63.x-this.backgroundPadding.left,_a63.y-this.backgroundPadding.top,_a63.width+this.backgroundPadding.left+this.backgroundPadding.right,_a63.height+this.backgroundPadding.top+this.backgroundPadding.bottom,this.backgroundStyle);
_a64=_a2d.m.modifyShapeStyle(_a64,this.backgroundStyle);
if(this.backgroundStyle.fill==null){
var fill=_a22.m.createJSONObject();
_a22.m.put(fill,"a",0);
var _a65=_a2e.m.createSpecObject(fill,"com.ibm.vis.spec.ColorSpec");
this.backgroundStyle.fill=_a65;
_a2d.m.setFilled(_a64,this.backgroundStyle);
}
if(_a62.rows!=null){
_a64.setRow(_a62.rows[0]);
}
return _a64;
},adjustLabelBackgroundBounds:function(_a66,_a67){
var _a68=_a2c.m.getBounds(_a66.toJSON());
if("rect".CPVisEngineEquals(_a67.getType())){
(_a67).x=_a68.x-this.backgroundPadding.left;
(_a67).y=_a68.y-this.backgroundPadding.top;
(_a67).width=_a68.width+this.backgroundPadding.left+this.backgroundPadding.right;
(_a67).height=_a68.height+this.backgroundPadding.top+this.backgroundPadding.bottom;
}else{
if("path".CPVisEngineEquals(_a67.getType())){
var _a69=_a29.m.makeRectangle(_a68.x-this.backgroundPadding.left,_a68.y-this.backgroundPadding.top,_a68.width+this.backgroundPadding.left+this.backgroundPadding.right,_a68.height+this.backgroundPadding.top+this.backgroundPadding.bottom,this.backgroundStyle);
(_a67).x=(_a69).x;
(_a67).y=(_a69).y;
}
}
},addPaddingForOutline:function(_a6a){
var _a6b=new _a26.m(this.font.getHeight(),this.font.getHeight());
var _a6c=_a6a.stroke;
var _a6d=_a6a.outline;
var _a6e=_a6a.outlineMethod;
var _a6f=_a33.getOutlinePadding(_a6b,_a6c,_a6d,_a6e);
this.padding=_a27.m.combine(this.padding,_a6f);
},makeOutsideLabel:function(_a70,_a71,_a72){
if(this.clipBounds!=null&&!this.clipBounds.containsRect(_a70.getBounds())){
var _a73=_a70.getBounds().intersectRect(this.clipBounds);
if(_a73==null){
return null;
}
var _a74=this.padding.expandRectBy(_a73);
_a74.copyInfoFrom(_a72);
this.location="inside";
this.align=_a28.m.getReverseAlignment(this.align);
this.valign=_a28.m.getReverseAlignment(this.valign);
_a70=this.makeLabel(_a71,_a74);
this.location="outside";
this.align=_a28.m.getReverseAlignment(this.align);
this.valign=_a28.m.getReverseAlignment(this.valign);
}
return _a70;
},setClipBounds:function(_a75){
this.clipBounds=_a75;
},getClipBounds:function(){
return this.clipBounds;
},makeLabelLine:function(_a76,_a77,_a78){
if(this.lineMinimumSizeSpec==null||_a76==null||_a77==null||!"outside".CPVisEngineEquals(this.style.location)){
return null;
}
var line=_a30.m.make(_a77.getCenter().x,_a77.getCenter().y,_a76.getCenter().x,_a76.getCenter().y);
line.snap=_a77.snap;
line=line.clipOutside(_a76);
line=line.clipOutside(_a77);
var _a79=line.getLength();
var _a7a=null;
var _a7b=null;
if(_a78!=null){
_a7b=_a2f.m.convertLength(this.lineMinimumSizeSpec,Math.min(_a78.graphSize.height,_a78.graphSize.width),Math.min(_a78.vis.getSize().height,_a78.vis.getSize().width));
}else{
_a7b=_a2f.m.convertLength(this.lineMinimumSizeSpec,null,null);
}
if(_a7b!=null){
if(_a79>=_a7b){
_a7a=line;
_a2d.m.setUnfilled(_a7a,this.lineStyle,null);
if(_a77.rows!=null){
line.setRow(_a77.rows[0]);
}
}
}
return _a7a;
}});
_a33.makeForData=function(data,vis,_a7c,spec,_a7d){
var part=_a7d;
if(spec.modifies!=null){
part=spec.modifies.part;
}
return new _a33(data,vis,part,_a7c,null,null,spec.style,spec.lineStyle,spec.lineMinSize,spec.backgroundStyle);
};
_a33.makeSimpleInside=function(vis,spec,_a7e,_a7f,_a80){
return new _a33(null,vis,null,true,_a7f,_a80,spec,_a7e,null,null);
};
_a33.getAlignString=function(s,_a81){
if("start".CPVisEngineEquals(s)||"end".CPVisEngineEquals(s)){
return s;
}
if(_a81!=null){
return _a81;
}
return "middle";
};
_a33.getReducedBoundsWhenNeededForCircle=function(s,_a82,_a83){
var b=s.getBounds();
var _a84=_a82==null||_a82.CPVisEngineEquals("middle");
var _a85=_a83==null||_a83.CPVisEngineEquals("middle");
if(!_a84&&!_a85){
var w=b.width/2.82842712;
var h=b.height/2.82842712;
return new _a2b.m(b.x+b.width/2-w,b.y+b.height/2-h,2*w,2*h);
}
return b;
};
_a33.getOutlinePadding=function(_a86,_a87,_a88,_a89){
var _a8a=_a27.m.NONE;
if(_a87!=null&&_a87.width!=null){
var _a8b=_a2f.m.convertLength(_a87.width,_a86.height,_a86.height);
if(_a8b==null){
_a8b=1;
}
if("inside".CPVisEngineEquals(_a89)){
_a8a=new _a27.m(_a8b,_a8b,_a8b,_a8b);
}else{
_a8a=new _a27.m(_a8b/2,_a8b/2,_a8b/2,_a8b/2);
}
}else{
if(_a88!=null){
_a8a=new _a27.m(0.5,0.5,0.5,0.5);
}
}
return _a8a;
};
_a31.add("com/ibm/vis/engine/internal/grammar/label/LabelProducer",["com/ibm/vis/engine/internal/grammar/label/AbstractLabelProducer","com/ibm/vis/engine/internal/struct/Insets","com/ibm/vis/engine/internal/struct/Rect"],function(){
_a33.V_BACKGROUND_PADDING=1;
_a33.H_BACKGROUND_PADDING=2;
});
return _a33;
});
},"com/ibm/vis/exceptions/VisException":function(){
define("com/ibm/vis/exceptions/VisException",["com/ibm/init/fork!../engine/internal/nativeImpl/HashcodeMap","com/ibm/init/fork!./ErrorCode","com/ibm/init/fork!../engine/internal/nativeImpl/Map","com/ibm/init/statics","dojo/_base/declare"],function(_a8c,_a8d,_a8e,_a8f,_a90){
var _a91=_a90("com.ibm.vis.exceptions.VisException",[Error],{errorCode:null,context:null,message:null,customData:null,errorDescription:null,initializeErrorDescription:function(){
if(this.errorDescription==null){
this.errorDescription=new _a8c.m();
this.errorDescription.put(_a8d.m.DATA_OVERFLOW,_a91.DESC_DATA_OVERFLOW);
this.errorDescription.put(_a8d.m.DATA_CONVERSION,_a91.DESC_DATA_CONVERSION);
this.errorDescription.put(_a8d.m.ERROR_UNKNOWN,_a91.DESC_UNKNOWN_ERROR);
this.errorDescription.put(_a8d.m.ENGINE_LAYOUT_DOES_NOT_FIT,_a91.DESC_ENGINE_LAYOUT_DOES_NOT_FIT);
this.errorDescription.put(_a8d.m.ENGINE_UNMATCHED_KEY,_a91.DESC_ENGINE_UNMATCHED_KEY);
this.errorDescription.put(_a8d.m.ENGINE_TRANSITION_UNSUPPORTED_TARGET,_a91.DESC_ENGINE_TRANSITION_UNSUPPORTED_TARGET);
this.errorDescription.put(_a8d.m.ENGINE_LEGENDS_ERROR,_a91.DESC_ENGINE_LEGENDS_ERROR);
this.errorDescription.put(_a8d.m.ENGINE_LOCALIZATION_ERROR,_a91.DESC_ENGINE_LOCALIZATION_ERROR);
this.errorDescription.put(_a8d.m.ENGINE_ILLEGAL_ARGUMENT,_a91.DESC_ENGINE_ILLEGAL_ARGUMENT);
this.errorDescription.put(_a8d.m.ENGINE_UNSUPPORTED_OPERATION,_a91.DESC_ENGINE_UNSUPPORTED_OPERATION);
this.errorDescription.put(_a8d.m.SPEC_PARSE_FAIL,_a91.DESC_SPEC_PARSE_FAIL);
this.errorDescription.put(_a8d.m.SPEC_INVALID_VALUE,_a91.DESC_SPEC_INVALID_VALUE);
this.errorDescription.put(_a8d.m.SPEC_IS_EMPTY,_a91.DESC_SPEC_IS_EMPTY);
this.errorDescription.put(_a8d.m.SPEC_IS_NULL,_a91.DESC_SPEC_IS_NULL);
this.errorDescription.put(_a8d.m.SPEC_DUPLICATE_ID,_a91.DESC_SPEC_DUPLICATE_ID);
this.errorDescription.put(_a8d.m.SPEC_INVALID_VERSION,_a91.DESC_SPEC_INVALID_VERSION);
this.errorDescription.put(_a8d.m.RENDERER_UNAVAILABLE,_a91.DESC_RENDERER_UNAVAILABLE);
this.errorDescription.put(_a8d.m.RENDERER_UNSUPPORTED,_a91.DESC_RENDERER_UNSUPPORTED);
this.errorDescription.put(_a8d.m.ENGINE_TRANSITION_UNSUPPORTED_TARGET,_a91.DESC_ENGINE_TRANSITION_UNSUPPORTED_TARGET);
this.errorDescription.put(_a8d.m.ENGINE_LEGENDS_ERROR,_a91.DESC_ENGINE_LEGENDS_ERROR);
this.errorDescription.put(_a8d.m.ENGINE_LOCALIZATION_ERROR,_a91.DESC_ENGINE_LOCALIZATION_ERROR);
this.errorDescription.put(_a8d.m.ENGINE_ILLEGAL_ARGUMENT,_a91.DESC_ENGINE_ILLEGAL_ARGUMENT);
this.errorDescription.put(_a8d.m.ENGINE_UNSUPPORTED_OPERATION,_a91.DESC_ENGINE_UNSUPPORTED_OPERATION);
this.errorDescription.put(_a8d.m.SPEC_PARSE_FAIL,_a91.DESC_SPEC_PARSE_FAIL);
this.errorDescription.put(_a8d.m.SPEC_INVALID_VALUE,_a91.DESC_SPEC_INVALID_VALUE);
this.errorDescription.put(_a8d.m.SPEC_INVALID_LENGTH,_a91.DESC_SPEC_INVALID_LENGTH);
this.errorDescription.put(_a8d.m.SPEC_IS_EMPTY,_a91.DESC_SPEC_IS_EMPTY);
this.errorDescription.put(_a8d.m.SPEC_IS_NULL,_a91.DESC_SPEC_IS_NULL);
this.errorDescription.put(_a8d.m.SPEC_DUPLICATE_ID,_a91.DESC_SPEC_DUPLICATE_ID);
this.errorDescription.put(_a8d.m.SPEC_INVALID_VERSION,_a91.DESC_SPEC_INVALID_VERSION);
this.errorDescription.put(_a8d.m.RENDERER_UNSUPPORTED,_a91.DESC_RENDERER_UNSUPPORTED);
this.errorDescription.put(_a8d.m.RENDERER_UNAVAILABLE,_a91.DESC_RENDERER_UNAVAILABLE);
this.errorDescription.put(_a8d.m.MIGRATION_INVALID_PATH_EXPRESSION,_a91.DESC_MIGRATION_INVALID_PATH_EXPRESSION);
this.errorDescription.put(_a8d.m.JSONPATH_INVALID_PATH,_a91.DESC_JSONPATH_INVALID_PATH);
this.errorDescription.put(_a8d.m.JSONPATH_UNSUPPORTED_FEATURE,_a91.DESC_JSONPATH_UNSUPPORTED_FEATURE);
this.errorDescription.put(_a8d.m.JSONPATH_BAD_ARRAY_INDEX,_a91.DESC_JSONPATH_BAD_ARRAY_INDEX);
this.errorDescription.put(_a8d.m.JSONPATH_OBJECT_DOES_NOT_EXIST,_a91.DESC_JSONPATH_OBJECT_DOES_NOT_EXIST);
this.errorDescription.put(_a8d.m.TEMPLATE_INVALID_JSON,_a91.DESC_TEMPLATE_INVALID_JSON);
this.errorDescription.put(_a8d.m.TEMPLATE_CANNOT_BE_RESOLVED,_a91.DESC_TEMPLATE_CANNOT_BE_RESOLVED);
this.errorDescription.put(_a8d.m.PARAMETER_NOT_FOUND,_a91.DESC_PARAMETER_NOT_FOUND);
this.errorDescription.put(_a8d.m.PARAMETER_VALUE_TYPE_MISMATCH,_a91.DESC_PARAMETER_VALUE_TYPE_MISMATCH);
this.errorDescription.put(_a8d.m.PARAMETER_ID_INVALID_TYPE,_a91.DESC_PARAMETER_ID_INVALID_TYPE);
}
},constructor:function(_a92,_a93,_a94,_a95){
this.context=_a92;
this.errorCode=_a93;
this.message=_a94;
this.initializeErrorDescription();
this.setCustomData(_a95);
},getMessage:function(){
return this.message;
},getErrorCode:function(){
return this.errorCode;
},getContext:function(){
return this.context;
},getErrorDescription:function(){
return this.errorDescription.get(this.errorCode);
},getCustomData:function(){
return this.customData;
},setCustomData:function(_a96){
if(_a96!=null&&!_a96.isEmpty()){
if(this.customData==null){
this.customData=new _a8e.m();
}
if(!this.customData.isEmpty()){
this.customData.clear();
}
this.customData.putAll(_a96);
}
}});
_a8f.add("com/ibm/vis/exceptions/VisException",[],function(){
_a91.DESC_DATA_OVERFLOW="DATA OVERFLOW";
_a91.DESC_DATA_CONVERSION="DATA CONVERSION ERROR";
_a91.DESC_UNKNOWN_ERROR="UNKNOWN ERROR";
_a91.DESC_ENGINE_LAYOUT_DOES_NOT_FIT="LAYOUT DOES NOT FIT";
_a91.DESC_ENGINE_UNMATCHED_KEY="KEY UNMATCHED IN SPECIFICATION";
_a91.DESC_ENGINE_TRANSITION_UNSUPPORTED_TARGET="UNSUPPORTED TARGET FOR EFFECTS";
_a91.DESC_ENGINE_LEGENDS_ERROR="LEGENDS PROCESSING ERROR";
_a91.DESC_ENGINE_LOCALIZATION_ERROR="LOCALIZATION PROCESSING ERROR";
_a91.DESC_ENGINE_ILLEGAL_ARGUMENT="ILLEGAL ARGUMENT PASSED";
_a91.DESC_ENGINE_UNSUPPORTED_OPERATION="OPERATION UNSUPPORTED";
_a91.DESC_SPEC_PARSE_FAIL="SPECIFICATION PARSING FAILED";
_a91.DESC_SPEC_INVALID_VALUE="INVALID VALUE IN SPECIFICATION";
_a91.DESC_SPEC_INVALID_LENGTH="INVALID LENGTH IN SPECIFICATION";
_a91.DESC_SPEC_IS_EMPTY="SPECIFICATION IS EMPTY";
_a91.DESC_SPEC_IS_NULL="SPECIFICATION IS NULL";
_a91.DESC_SPEC_DUPLICATE_ID="DUPLICATE ID IN SPECIFICATION";
_a91.DESC_SPEC_INVALID_VERSION="INVALID VERSION OF SPECIFICATION";
_a91.DESC_RENDERER_UNAVAILABLE="SELECTED RENDERER UNAVAILABLE";
_a91.DESC_RENDERER_UNSUPPORTED="SELECTED RENDERER UNSUPPORTED";
_a91.DESC_MIGRATION_INVALID_PATH_EXPRESSION="MIGRATION PATH IS INVALID";
_a91.DESC_JSONPATH_INVALID_PATH="INVALID JSON PATH";
_a91.DESC_JSONPATH_UNSUPPORTED_FEATURE="UNSUPPORTED FEATURE";
_a91.DESC_JSONPATH_BAD_ARRAY_INDEX="BAD ARRAY INDEX";
_a91.DESC_JSONPATH_OBJECT_DOES_NOT_EXIST="OBJECT DOES NOT EXIST";
_a91.DESC_PARAMETER_DEFAULT_VALUE_TYPE_MISMATCH="PARAMETER TYPE DEFAULT VALUE TYPE MISMATCH";
_a91.DESC_TEMPLATE_INVALID_JSON="TEMPLATE JSON INVALID";
_a91.DESC_TEMPLATE_CANNOT_BE_RESOLVED="TEMPLATE CANNOT BE RESOLVED";
_a91.DESC_PARAMETER_NOT_FOUND="PARAMETER NOT FOUND";
_a91.DESC_PARAMETER_VALUE_TYPE_MISMATCH="PARAMETER VALUE TYPE MISMATCH";
_a91.DESC_PARAMETER_ID_INVALID_TYPE="PARAMETER ID INVALID";
_a91.DESC_SWIM_LANE_ELEMENT_ORDER="SWIM LANE WITHOUT PRECEEDING GRAPH";
_a91.DESC_SWIM_LANE_DATA="SWIM LANE DATA DOES NOT MATCH GRAPH LAYOUT";
});
return _a91;
});
},"com/ibm/vis/engine/internal/Gradient":function(){
define("com/ibm/vis/engine/internal/Gradient",["com/ibm/init/fork!../../exceptions/RaveException","com/ibm/init/fork!./GradientGeometry","com/ibm/init/fork!./GradientStop","com/ibm/init/fork!./nativeImpl/BasicFactory","com/ibm/init/fork!./grammar/units/UnitConverter","com/ibm/init/fork!./util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_a97,_a98,_a99,_a9a,_a9b,_a9c,_a9d,_a9e){
var _a9f=_a9e("com.ibm.vis.engine.internal.Gradient",null,{type:null,global:false,angle:0,focusX:null,focusY:null,geometry:null,wScale:0,hScale:0,stops:null,constructor:function(){
},isUnusablySmall:function(){
if(this.type.CPVisEngineEquals("radial")){
var _aa0=this.global?1:Math.min(this.wScale,this.hScale);
return this.geometry.radius*_aa0<1;
}else{
var _aa1=this.global?1:this.wScale;
var _aa2=this.global?1:this.hScale;
return this.geometry.width*_aa1<1||this.geometry.height*_aa2<1;
}
},scale:function(_aa3,_aa4){
this.wScale*=_aa3;
this.hScale*=_aa4;
},modifyGradientWithSolid:function(_aa5){
this.stops=_a99.m.modifyGradientWithSolid(this.stops,_aa5);
},modifySolidWithGradient:function(_aa6){
this.stops=_a99.m.modifySolidWithGradient(this.stops,_aa6);
},toJSON:function(){
var _aa7=_a9a.m.createJSONObject();
if(this.type.CPVisEngineEquals("radial")){
_a9a.m.put(_aa7,"type","radial");
var cx=this.geometry.cx;
var cy=this.geometry.cy;
var r=this.geometry.radius;
if(!this.global){
r*=Math.min(this.wScale,this.hScale);
}
if(this.focusX!=null||this.focusY!=null){
var d=_a9b.m.convertLength(this.focusX,2*r,2*r);
if(d!=null){
cx=cx-r+d;
}
d=_a9b.m.convertLength(this.focusY,2*r,2*r);
if(d!=null){
cy=cy-r+d;
}
}
_a9a.m.put(_aa7,"cx",_a9c.m.r3(cx));
_a9a.m.put(_aa7,"cy",_a9c.m.r3(cy));
_a9a.m.put(_aa7,"r",_a9c.m.r3(r));
}else{
_a9a.m.put(_aa7,"type","linear");
var cx=this.geometry.x+this.geometry.width/2;
var cy=this.geometry.y+this.geometry.height/2;
var _aa8=this.geometry.width;
var _aa9=this.geometry.height;
if(!this.global){
_aa8*=this.wScale;
_aa9*=this.hScale;
}
var sin=Math.sin(this.angle);
var cos=Math.cos(this.angle);
var r=_aa9*Math.abs(sin)/2+_aa8*Math.abs(cos)/2;
var x1=cx-cos*r;
var y1=cy+sin*r;
var x2=cx+cos*r;
var y2=cy-sin*r;
_a9a.m.put(_aa7,"x1",_a9c.m.r3(x1));
_a9a.m.put(_aa7,"y1",_a9c.m.r3(y1));
_a9a.m.put(_aa7,"x2",_a9c.m.r3(x2));
_a9a.m.put(_aa7,"y2",_a9c.m.r3(y2));
}
_a9a.m.put(_aa7,"colors",_a99.m.toJSON(this.stops));
return _aa7;
},isGlobal:function(){
return this.global;
},getType:function(){
return this.type;
},setGeometry:function(g){
this.geometry=g;
this.wScale=this.hScale=1;
}});
_a9f.makeFromSpec=function(spec,_aaa){
var g=new _a9f();
if(spec.type!=null){
if(!"linear".CPVisEngineEquals(spec.type)&&!"radial".CPVisEngineEquals(spec.type)){
throw new _a97.m(spec.type,_a97.m.SPEC_INVALID_VALUE);
}
}
g.type="linear";
if(spec.type!=null&&spec.type.CPVisEngineEquals("radial")){
g.type="radial";
}
g.global=false;
if(spec.global!=null&&spec.global){
g.global=true;
}
g.angle=0;
if(spec.angle!=null){
g.angle=spec.angle/180*3.141592653589793;
}
g.focusX=null;
g.focusY=null;
if(spec.focus!=null){
g.focusX=spec.focus.x;
g.focusY=spec.focus.y;
}
if(g.global&&_aaa.getGlobalGradientGeometry()!=null){
g.geometry=_a98.m.makeFromGradientGeometry(_aaa.getGlobalGradientGeometry());
}else{
g.geometry=_a98.m.makeFromGradientGeometry(_aaa.getLocalGradientGeometry(g.type));
}
g.wScale=g.hScale=1;
g.stops=_a99.m.fromSpec(spec.colors);
return g;
};
return _a9f;
});
},"com/ibm/vis/internal/json/Diagnostic":function(){
define("com/ibm/vis/internal/json/Diagnostic",["com/ibm/init/fork!../../engine/internal/nativeImpl/List","com/ibm/init/fork!../../engine/internal/nativeImpl/StringBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_aab,_aac,_aad,_aae){
var _aaf=_aae("com.ibm.vis.internal.json.Diagnostic",null,{severity:0,message:null,children:null,path:null,constructor:function(_ab0,_ab1,path){
this.severity=_ab0;
this.message=_ab1;
this.path=path;
},getSeverity:function(){
return this.severity;
},setMessage:function(_ab2){
this.message=_ab2;
},getMessage:function(){
return this.message;
},setPath:function(path){
this.path=path;
},getPath:function(){
return this.path;
},getChildren:function(){
return this.children;
},add:function(_ab3){
if(this.children==null){
this.children=new _aab.m();
}
this.children.add(_ab3);
var _ab4=_ab3.severity;
if(_ab4>this.severity){
this.severity=_ab4;
}
},isOK:function(){
return this.severity==0;
},toString:function(){
var _ab5=new _aac.m();
var _ab6=(this.message!=null&&!this.message.CPVisEngineIsEmpty());
if(_ab6||this.children==null){
if(this.severity==0){
_ab5.append("OK");
}else{
if(this.severity==1){
_ab5.append("WARNING");
}else{
if(this.severity==2){
_ab5.append("ERROR");
}else{
_ab5.append(this.severity);
}
}
}
if(_ab6){
if(this.path!=null&&!this.path.CPVisEngineIsEmpty()){
_ab5.append(" ");
_ab5.append(this.path);
_ab5.append(":");
}
_ab5.append(" ");
_ab5.append(this.message);
}
}
if(this.children!=null){
for(var _ab7=0,_ab8=this.children,_ab9=_ab8.size();_ab7<_ab9;++_ab7){
var _aba=_ab8.get(_ab7);
if(_ab5.length()>0){
_ab5.append("\n");
}
_ab5.append(_aba);
}
}
return _ab5.toString();
}});
_aad.add("com/ibm/vis/internal/json/Diagnostic",[],function(){
_aaf.OK=0;
_aaf.WARNING=1;
_aaf.ERROR=2;
});
return _aaf;
});
},"url:com/ibm/vis/widget/templates/AnimationControl.html":"<div>\r\n\r\n<table>\r\n\t<tr>\r\n\t\t<td><select data-dojo-type=\"dijit.form.ComboBox\"\r\n\t\t\tdata-dojo-attach-point=\"fieldCombo\"\r\n\t\t\tdata-dojo-attach-event=\"onChange:_setFacetVariable\">\r\n\t\t</select></td>\r\n\r\n\t\t<td>\r\n\t\t<div data-dojo-attach-point=\"slider\" data-dojo-attach-event=\"onChange:_showScene\" data-dojo-type=\"dijit.form.HorizontalSlider\" value=\"6\" data-dojo-props=\"minimum:-10, maximum:10, discreteValues:11, intermediateChanges:true, showButtons:false\" style=\"width: 300px;\"></div>\r\n\t\t</td>\r\n\r\n\t\t<td>\r\n\t\t<button data-dojo-type=\"dijit.form.Button\" data-dojo-attach-point=\"runButton\" data-dojo-attach-event=\"onClick:playOrStop\">Run</button>\r\n\t\t</td>\r\n\t\t<td><span data-dojo-attach-point=\"variableName\"></span>=<span data-dojo-attach-point=\"variableValue\"></span></td>\r\n\t</tr>\r\n</table>\r\n</div>\r\n\r\n","com/ibm/vis/engine/internal/grammar/coordinate/cluster/ClusterLayout":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/cluster/ClusterLayout",["com/ibm/init/fork!../../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_abb,_abc,_abd){
var _abe=_abd("com.ibm.vis.engine.internal.grammar.coordinate.cluster.ClusterLayout",null,{layout:function(_abf,_ac0){
var _ac1=_ac0+_abf.getAlignedStart()+_abf.padding;
if(_abf.nodeIsDirty){
this.layoutShapes(_abf,_ac0);
}
for(var _ac2=0,_ac3=_abf.getChildren(),_ac4=_ac3.size();_ac2<_ac4;++_ac2){
var _ac5=_ac3.get(_ac2);
this.layout(_ac5,_ac1);
_ac1+=_ac5.preferredWidth+_abf.getGapSize();
}
return _ac1;
},layoutShapes:function(node,x){
for(var _ac6=0,_ac7=node.shapes,_ac8=_ac7.size();_ac6<_ac8;++_ac6){
var _ac9=_ac7.get(_ac6);
var _aca=_ac9.positions;
if(_aca!=null){
var poly=_ac9;
for(var _acb=0;_acb<_aca.length;++_acb){
var _acc=_aca[_acb];
if((node).positionBelongsToNode(_acc)){
var _acd=x+node.preferredWidth/2;
if(poly.x.length==_aca.length+2){
var _ace=_acb+1;
poly.x[_ace]=_acd;
if(_ace==1){
poly.x[0]=_acd;
}else{
if(_acb==(_aca.length-1)){
poly.x[_ace+1]=_acd;
}
}
}else{
poly.x[_acb]=_acd;
}
}
}
}else{
var p=this.affineSinglePositionShape(node,_ac9.position,x,_ac9.shapeIsElement,_ac9.getBounds().width);
if(_ac9.isGlyphLike()){
_ac9.affine(1,p[2],1,0,false);
}else{
_ac9.affine(p[0],p[1],1,0,false);
}
}
}
node.nodeIsDirty=false;
},affineSinglePositionShape:function(node,_acf,x,_ad0,_ad1){
var root=node.getRootNode();
var _ad2=0;
var _ad3=_ad1;
if(_ad0){
_ad3=root.maxWidth/root.getMaxNumberOfChildren();
}
_ad2=_acf.base[1]*root.maxWidth;
var _ad4;
if(_ad3==0){
_ad4=new _abb.m(_ad2-0.5,_ad2+0.5);
}else{
_ad4=new _abb.m(_ad2-_ad3/2,_ad2+_ad3/2);
}
var _ad5=new _abb.m(x,x+node.preferredWidth);
var _ad6=_ad5.range/_ad4.range;
var _ad7=[_ad6,_ad5.min-_ad4.min*_ad6,_ad5.mid()-_ad4.mid()];
return _ad7;
}});
return _abe;
});
},"com/ibm/vis/engine/internal/grammar/element/PathBuilder":function(){
define("com/ibm/vis/engine/internal/grammar/element/PathBuilder",["./Builder","com/ibm/init/fork!../coordinate/Position","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../struct/Poly","com/ibm/init/fork!../../struct/Schema","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/fork!../coordinate/functions/LinearFunctionalPath","com/ibm/init/statics","dojo/_base/declare"],function(_ad8,_ad9,_ada,_adb,_adc,_add,_ade,_adf,_ae0,_ae1){
var _ae2=_ae1("com.ibm.vis.engine.internal.grammar.element.PathBuilder",[_ad8],{sort:false,close:false,drop:false,swatchPositions:null,pathMaker:null,cachedPolys:null,curveTopFunctionalPath:null,constructor:function(_ae3,_ae4,_ae5,sort,_ae6,drop,_ae7,_ae8){
this.snap=_ae8;
this.sort=sort;
this.close=_ae6;
this.drop=drop;
this.pathMaker=_ae7;
if(drop){
this.swatchPositions=[_ad9.m.makeSimple([0,0]),_ad9.m.makeSimple([0.25,0.6]),_ad9.m.makeSimple([0.75,0.4]),_ad9.m.makeSimple([1,1])];
}else{
this.swatchPositions=[_ad9.m.makeSimple([0.5,0]),_ad9.m.makeSimple([0.5,1])];
}
this.cachedPolys=new _ada.m();
this.curveTopFunctionalPath=null;
},getBase:function(_ae9){
var base=this.coords==null?0:this.coords.scales[0].getBase();
base=Math.max(0,Math.min(1,base));
var y=this.extent.height-base*this.extent.height;
return y;
},makeContinuousShapes:function(_aea,_aeb,rows){
var _aec=new _ada.m();
var _aed=new _ada.m();
var _aee=new _ada.m();
if(_aea==null){
return _aec;
}
if(_aea.length>0&&_aea[0].length()==1){
this.make1dShape(_aec,_aea,_aeb);
return _aec;
}
_aea=this.filterPositions(_aea);
var _aef=Array.create([_aea.length],0);
var _af0=null;
if(this.sort){
for(var i=0;i<_aea.length;++i){
if(_aea[i].length()<2||_aea[i].X()==null){
return _aec;
}
_aef[i]=this.getSymbolizedXPositions(_aea[i]);
}
_af0=_adb.m.makeSortOrder(_aef);
}
var cx=new _ada.m();
var _af1=new _ada.m();
var _af2=new _ada.m();
for(var i=0;i<_aea.length;++i){
var _af3=_af0!=null?_af0[i]:i;
var _af4=_aea[_af3];
if(_af4.X()==null){
return _aec;
}
if(_af4.Y()==null||(_af4.hasY2()&&_af4.Y2()==null)){
this.addShape(_aec,_aed,_aee,cx,_af1,_af2);
cx=new _ada.m();
_af1=new _ada.m();
_af2=new _ada.m();
_aed=new _ada.m();
_aee=new _ada.m();
}else{
if(_aeb!=null){
_aed.add(_aeb[_af3]);
_aee.add(_af4);
}
cx.add(_af4.X()*this.extent.width);
var y=this.extent.height-_af4.Y()*this.extent.height;
_af1.add(y);
if(_af4.hasY2()){
y=this.extent.height-_af4.Y2()*this.extent.height;
_af2.add(y);
}
}
}
this.addShape(_aec,_aed,_aee,cx,_af1,_af2);
return _aec;
},make1dShape:function(_af5,_af6,_af7){
var _af8=new _ada.m();
var _af9=Array.create([_af6.length],0);
var xs=new _ada.m(_af6.length);
var cx=this.extent.width/2;
for(var i=0;i<_af6.length;++i){
_af8.add(_af6[i]);
_af9[i]=this.extent.height-_af6[i].Y()*this.extent.height;
xs.add(cx);
}
if(this.sort){
_adb.m.sortArray(_af9);
}
var ys=new _ada.m(_af6.length);
for(var i=0;i<_af6.length;++i){
ys.add(_af9[i]);
}
var _afa=new _ada.m();
if(_af7!=null){
for(var i=0;i<_af7.length;++i){
_afa.add(_af7[i]);
}
}
var _afb=this.createShape(xs,ys,_afa);
_afb.positions=_af6;
_af5.add(_afb);
this.cacheShape(_afb);
},addShape:function(_afc,_afd,_afe,cx,_aff,_b00){
if(cx.size()==0){
return;
}
var _b01=_b00.isEmpty()?this.createShape(cx,_aff,_afd):this.createTwoSidedShape(cx,_aff,_b00,_afd);
_b01.positions=_afe.toArray(new Array(_afe.size()));
_afc.add(_b01);
this.cacheShape(_b01);
},getSymbolizedXPositions:function(_b02){
var _b03=0;
var _b04=Math.pow(10,_b02.base.length-1);
for(var i=1;i<_b02.base.length;++i){
_b03+=_b02.base[i]*_b04;
_b04=_b04/10;
}
return _b03;
},filterPositions:function(_b05){
var _b06=new _ada.m();
for(var _b07=0,_b08=_b05.length;_b07<_b08;++_b07){
var _b09=_b05[_b07];
if(_b09.X()!=null){
_b06.add(_b09);
}
}
return _b06.toArray(new Array(_b06.size()));
},createShape:function(cx,cy,_b0a){
var size=cx.size();
var x=Array.create([size],0);
var y=Array.create([size],0);
for(var i=0;i<size;++i){
x[i]=cx.get(i);
y[i]=cy.get(i);
}
if(this.drop){
var tcx=Array.create([x.length+2],0);
var tcy=Array.create([x.length+2],0);
for(var i=0;i<x.length;++i){
tcx[i+1]=x[i];
tcy[i+1]=y[i];
}
y=tcy;
x=tcx;
x[0]=x[1];
x[x.length-1]=x[x.length-2];
var zero=this.coords==null?0:this.coords.scales[0].getBase();
y[0]=this.extent.height-zero*this.extent.height;
y[x.length-1]=y[0];
}
var _b0b=this.getShape(x,y);
if(this.drop&&"poly".CPVisEngineEquals(_b0b.getType())){
(_b0b).nonTopPointsCount=-1;
}
return this.addRowsInfo(_b0a,_b0b);
},addRowsInfo:function(_b0c,_b0d){
if(_b0c.size()>0){
var rows=Array.create([_b0c.size()],0);
for(var i=0;i<_b0c.size();++i){
rows[i]=_b0c.get(i);
}
_b0d.setRows(rows);
}
return _b0d;
},createTwoSidedShape:function(cx,_b0e,_b0f,_b10){
var size=cx.size();
var x=Array.create([size*2],0);
var y=Array.create([size*2],0);
for(var i=0;i<size;++i){
x[i]=cx.get(i);
y[i]=_b0e.get(i);
var j=size-1-i;
x[i+size]=cx.get(j);
y[i+size]=_b0f.get(j);
}
var _b11=this.getShape(x,y);
return this.addRowsInfo(_b10,_b11);
},getShape:function(x,y){
var _b12=new _adc.m(x,y,this.close,this.pathMaker);
_b12.snap=this.snap;
return _b12;
},makesContinuousShapes:function(){
return true;
},makeShapeInside:function(b,_b13){
var x=[b.x,b.x+b.width,b.x+b.width,b.x];
var y=[b.y,b.y,b.y+b.height,b.y+b.height];
return new _adc.m(x,y,false,null);
},makeAugmentedShape:function(_b14,_b15){
var _b16=_b14.featurePolygons(_b15);
if(_b16==null){
return null;
}
if(_b16.length==1){
return _b16[0];
}
var b=_b14.featureBounds(_b15);
return new _add.m(b.x,b.y,b.width,b.height,_b16,this.close);
},makeSwatch:function(_b17){
var _b18=this.makeContinuousShapes(this.swatchPositions,null,null);
if(_b17!=null){
_b18.get(0).setMeta("part","line");
var _b19=_b17.makeSwatch(null).get(0);
_b19.affine(1,(this.extent.width-_b17.extent.width)/2,1,(this.extent.height-_b17.extent.height)/2,false);
_b18.add(_b19);
_b19.setMeta("part","symbol");
}
return _b18;
},makeShape:function(_b1a,_b1b){
return null;
},getDerivedValue:function(_b1c,_b1d,_b1e){
if(_b1d==null){
return null;
}
if("curveTop".CPVisEngineEquals(_b1c)){
this.makeCurveTopFunction();
if(this.curveTopFunctionalPath==null){
return null;
}
var _b1f=this.coords.scales[1].toZeroOne(_b1d,null,_b1e);
if(_b1f==null||_ade.m.isNaN(_b1f)){
return null;
}
var _b20=_b1f*this.extent.width;
var _b21=this.curveTopFunctionalPath.getY(_b20);
if(_ade.m.isNaN(_b21)){
return null;
}
var _b22=this.coords.scales[0].dimensionValueToDataValue(this.extent.height-_b21,this.extent.height);
if(_b22==null||_ade.m.isNaN(_b22)){
return null;
}
return _b22;
}
return null;
},makeCurveTopFunction:function(){
if(this.curveTopFunctionalPath!=null){
return;
}
if(this.cachedPolys.size()!=1){
return;
}
var poly=this.cachedPolys.get(0);
this.curveTopFunctionalPath=new _adf.m(NaN);
var len=poly.x.length;
if(len>0){
this.curveTopFunctionalPath.moveTo(poly.x[0],poly.y[0]);
for(var i=0;i<len-1;++i){
this.curveTopFunctionalPath.lineTo(poly.x[i],poly.y[i]);
}
if(poly.x[len-2]<poly.x[len-1]){
this.curveTopFunctionalPath.lineTo(poly.x[len-1],poly.y[len-1]);
}
}
},cacheShape:function(s){
if("poly".CPVisEngineEquals(s.getType())){
var _b23=s;
var len=_b23.x.length;
var x=Array.create([len],0);
var y=Array.create([len],0);
_adb.m.arraycopy(_b23.x,0,x,0,len);
_adb.m.arraycopy(_b23.y,0,y,0,len);
this.cachedPolys.add(new _adc.m(x,y,_b23.filled,_b23.pathMaker));
}
}});
return _ae2;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/MapProjection":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/MapProjection",["./SimplePointTransform","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!../../struct/Point","com/ibm/init/statics","dojo/_base/declare"],function(_b24,_b25,_b26,_b27,_b28){
var _b29=_b28("com.ibm.vis.engine.internal.grammar.coordinate.MapProjection",[_b24],{type:0,cosLambda0:0,fromScX:0,fromOffX:0,fromScY:0,fromOffY:0,outSc:0,outOffX:0,outOffY:0,constructor:function(name,_b2a,_b2b,_b2c,_b2d,_b2e,_b2f){
if(name==null){
this.type=0;
}else{
if(name.CPVISEngineStartsWith("winkel")){
this.type=2;
}else{
if(name.CPVISEngineStartsWith("mercator")){
this.type=1;
}else{
if(name.CPVISEngineStartsWith("mercator")){
this.type=4;
}else{
if(name.CPVISEngineStartsWith("cyl")){
this.type=3;
}else{
this.type=0;
}
}
}
}
}
if(_b2a==null){
this.cosLambda0=Math.cos(40*3.141592653589793/180);
}else{
this.cosLambda0=Math.cos(_b2a*3.141592653589793/180);
}
this.fromScX=(_b2c-_b2b)/_b2f.width;
this.fromOffX=_b2b;
this.fromScY=(_b2d-_b2e)/_b2f.height;
this.fromOffY=_b2e;
var p1=this.t(_b2b,_b2d);
var p2=this.t(_b2c,_b2e);
var h=new _b25.m(Math.min(p1.x,p2.x),Math.max(p1.x,p2.x));
var v=new _b25.m(Math.min(p1.y,p2.y),Math.max(p1.y,p2.y));
if(_b2e>0&&_b2d<0){
p1=this.t(_b2b,0);
p2=this.t(_b2c,0);
h=h.unionValue(p1.x);
h=h.unionValue(p2.x);
}
var _b30=_b2f.width/h.range;
var _b31=_b2f.height/v.range;
this.outSc=Math.min(_b30,_b31);
this.outOffX=-h.min*this.outSc+_b2f.width/2*(1-this.outSc/_b30);
this.outOffY=v.max*this.outSc+_b2f.height/2*(1-this.outSc/_b31);
},transform:function(px,py){
var x=px*this.fromScX+this.fromOffX;
var y=py*this.fromScY+this.fromOffY;
var q=this.t(x,y);
q.x=q.x*this.outSc+this.outOffX;
q.y=-q.y*this.outSc+this.outOffY;
return q;
},preservesLines:function(){
return this.type!=2;
},t:function(_b32,phi){
_b32=3.141592653589793*_b32/180;
phi=3.141592653589793*phi/180;
if(this.type==2){
var _b33=Math.acos(Math.cos(phi)*Math.cos(_b32/2));
var _b34=Math.abs(_b33)<0.000001?1:Math.sin(_b33)/_b33;
var x=_b32*this.cosLambda0+2*Math.cos(phi)*Math.sin(_b32/2)/_b34;
var y=phi+Math.sin(phi)/_b34;
return new _b26.m(x/2,y/2);
}else{
if(this.type==1){
return new _b26.m(_b32,Math.log(Math.tan(3.141592653589793/4+phi/2)));
}else{
if(this.type==4){
return new _b26.m(_b32,1.25*Math.log(Math.tan(3.141592653589793/4+0.4*phi)));
}else{
if(this.type==3){
return new _b26.m(_b32*this.cosLambda0,Math.sin(phi)/this.cosLambda0);
}else{
return new _b26.m(_b32,phi);
}
}
}
}
}});
_b27.add("com/ibm/vis/engine/internal/grammar/coordinate/MapProjection",["com/ibm/vis/engine/internal/grammar/coordinate/SimplePointTransform"],function(){
_b29.SIMPLE=0;
_b29.MERCATOR=1;
_b29.WINKEL=2;
_b29.CYLINDRICAL=3;
_b29.MILLER=4;
});
return _b29;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/functions/MinOperation":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/functions/MinOperation",["./CompositeOperation","com/ibm/init/statics","dojo/_base/declare"],function(_b35,_b36,_b37){
var _b38=_b37("com.ibm.vis.engine.internal.grammar.coordinate.functions.MinOperation",[_b35],{combineValues:function(y1,y2){
return Math.min(y1,y2);
}});
return _b38;
});
},"com/ibm/vis/exp/Navigation":function(){
define("com/ibm/vis/exp/Navigation",["dojo/_base/declare","dojo/_base/array","./FeatureNavigation","./NeighborhoodNavigation","./IdOrderNavigation","../interaction/HighlightRepresentation","../interaction/internal/SceneItemImpl"],function(_b39,_b3a,_b3b,_b3c,_b3d,_b3e,_b3f){
var _b40=_b39("com.ibm.vis.exp.Navigation",null,{visControl:null,navigationMap:null,selectedStack:null,selected:null,sceneTreeMap:null,featureArray:null,constructor:function(_b41){
this.visControl=_b41;
this.navigationMap={};
this.selectedStack=[];
this.sceneTreeMap=_b41._renderer.originalSceneMap;
this.setHighlight();
},back:function(){
if(this.selectedStack.length>0){
this.selected=this.selectedStack.pop();
this._highlightSelected();
}
return this.selected;
},move:function(_b42,_b43){
if(this.selected==null){
var _b44=this._getFirst();
this.setSelected(_b44);
return this.selected;
}
var _b45=this.getBaseId(this.selected.id);
var _b46=this._getNavigation(_b45);
var _b47=null;
switch(_b42){
case _b3b.GREATER_X:
_b47=_b46.nextGreaterX(this.selected,_b43);
break;
case _b3b.LESSER_X:
_b47=_b46.nextLesserX(this.selected,_b43);
break;
case _b3b.GREATER_Y:
_b47=_b46.nextGreaterY(this.selected,_b43);
break;
case _b3b.LESSER_Y:
_b47=_b46.nextLesserY(this.selected,_b43);
break;
}
this.setSelected(_b47);
return this.selected;
},clearSelectedStack:function(){
delete this.selectedStack;
this.selectedStack=[];
},nextFeature:function(_b48){
if(this.selected==null){
var _b49=this._getFirst();
this.setSelected(_b49);
return this.selected;
}
var _b4a=this._getFeatureArray();
var _b4b=this.getBaseId(this.selected.id);
var _b4c=_b3a.indexOf(_b4a,_b4b);
if(_b4c==-1||_b4a.length==1){
var _b49=this._getFirst();
this.setSelected(_b49);
return this.selected;
}
if(_b48){
_b4c++;
if(_b4c<_b4a.length){
var nav=this._getNavigation(_b4a[_b4c]);
this.setSelected(nav.getFirst());
}else{
var nav=this._getNavigation(_b4a[0]);
this.setSelected(nav.getFirst());
}
}else{
if(_b4c>0){
var nav=this._getNavigation(_b4a[_b4c-1]);
this.setSelected(nav.getFirst());
}else{
var nav=this._getNavigation(_b4a[_b4a.length-1]);
this.setSelected(nav.getFirst());
}
}
return this.selected;
},getBaseId:function(id){
if(_b40.isLegend(id)){
var _b4d=id.indexOf("LE");
if(_b4d>0){
return id.substring(0,_b4d+2);
}
return id;
}
var _b4e=id.indexOf("E");
if(_b4e>-1){
var _b4f=id.indexOf("S");
if(_b4f>0){
return id.substring(0,_b4f+1);
}
var _b50=id.indexOf("L");
if(_b50>0){
return id.substring(0,_b50+1);
}
}
var _b51=id.indexOf("A");
if(_b51>-1){
var _b52=id.indexOf("T");
if(_b52>0){
return id.substring(0,_b52+1);
}
var _b53=id.indexOf("G",_b51);
if(_b53>0){
return id.substring(0,_b53+1);
}
var _b54=id.indexOf("M");
if(_b54>0){
var base=id.substring(0,_b54)+"T";
return base;
}
var _b50=id.indexOf("L");
if(_b50>0){
var base=id.substring(0,_b50)+"T";
return base;
}
}
},_getFirst:function(){
var _b55=this.visControl._getScene();
var _b56=_b55.length;
for(var i=0;i<_b56;i++){
var item=_b55[i];
var type=item.type;
if(type=="element"){
var _b57=item.children[0];
var _b58=this.getBaseId(_b57.id);
var _b59=this._getNavigation(_b58);
return _b59.getFirst();
}
}
},_getFeatureArray:function(){
if(this.featureArray==null){
this.featureArray=this._buildFeatureArray();
}
return this.featureArray;
},_buildFeatureArray:function(){
var _b5a=new Array();
var axes=new Array();
var _b5b=new Array();
var _b5c=this.visControl._getScene();
var _b5d=_b5c.length;
for(var i=0;i<_b5d;i++){
var item=_b5c[i];
var type=item.type;
if(type=="element"){
var _b5e=item.children;
var _b5f=_b5e[0].id;
var _b60=this.getBaseId(_b5f);
_b5a.push(_b60);
for(var j=1;j<_b5e.length;j++){
var _b61=_b5e[j].id;
var _b62=this.getBaseId(_b61);
if(_b3a.indexOf(_b5a,_b62)==-1){
_b5a.push(_b62);
}
}
}else{
if(type=="axis"){
var _b5e=item.children;
for(var j=0;j<_b5e.length;j++){
var _b63=_b5e[j];
var _b64=_b63.type;
if(_b64=="axis-label"){
var _b65=_b63.children;
var alId=_b65[0].id;
var _b60=this.getBaseId(alId);
axes.push(_b60);
}
}
}else{
if(type=="legend"){
var _b5e=item.children;
for(var j=0;j<_b5e.length;j++){
var _b63=_b5e[j];
var _b66=_b63.children;
if(_b66!=null&&_b66.length>0){
var _b5f=_b66[0].id;
var _b67=_b5f.indexOf("LE");
if(_b67==-1){
continue;
}
var _b60=this.getBaseId(_b5f);
_b5b.push(_b60);
}
}
}
}
}
}
for(var i=0;i<axes.length;i++){
_b5a.push(axes[i]);
}
for(var i=0;i<_b5b.length;i++){
_b5a.push(_b5b[i]);
}
return _b5a;
},_getNavigation:function(id){
var _b68=this.navigationMap[id];
if(_b68==null){
_b68=this._buildNavigation(id);
this.navigationMap[id]=_b68;
}
return _b68;
},_buildNavigation:function(id){
var type=_b3f.getSceneType(id);
if(type=="element"){
return new _b3c(this.visControl,id);
}else{
if(type=="axis"){
var nav=new _b3d(this.visControl,id);
var _b69=id.indexOf("A");
var dim=id.substring(_b69+1,_b69+2);
if(dim==0){
this._setDirectionVertical(nav,false);
}else{
this._setDirectionHorizontal(nav);
}
return nav;
}else{
if(type=="legend"){
var _b6a=id.indexOf("LE");
if(_b6a>0){
id=id.substring(0,_b6a+2);
var nav=new _b3d(this.visControl,id);
this._setDirectionVertical(nav,true);
return nav;
}
}
}
}
},setSelected:function(_b6b){
if(this.selected!=null){
this.selectedStack.push(this.selected);
}
this.selected=_b6b;
this._highlightSelected();
},setHighlight:function(){
var _b6c="rgba(255, 0, 255,0.5)";
var _b6d="rgba(255, 0, 255,1)";
var _b6e=new _b3e(_b6c,_b6d,"4   ");
var _b6f=this.visControl.getInteractivity();
_b6f.setHighlightRepresentation(0,_b6e);
},_highlightSelected:function(){
var _b70=this.visControl.getInteractivity();
var _b71=_b70.makeHighlightState();
_b71.setSingle(this.selected,0);
_b71.apply();
},_setDirectionVertical:function(_b72,_b73){
var dirs=new Array();
dirs[_b3b.GREATER_X]=_b3b.NOT_APPLICABLE;
dirs[_b3b.LESSER_X]=_b3b.NOT_APPLICABLE;
if(_b73){
dirs[_b3b.GREATER_Y]=_b3b.FORWARD;
dirs[_b3b.LESSER_Y]=_b3b.REVERSE;
}else{
dirs[_b3b.GREATER_Y]=_b3b.REVERSE;
dirs[_b3b.LESSER_Y]=_b3b.FORWARD;
}
_b72.setDirections(dirs);
},_setDirectionHorizontal:function(_b74){
var dirs=new Array();
dirs[_b3b.GREATER_X]=_b3b.FORWARD;
dirs[_b3b.LESSER_X]=_b3b.REVERSE;
dirs[_b3b.GREATER_Y]=_b3b.NOT_APPLICABLE;
dirs[_b3b.LESSER_Y]=_b3b.NOT_APPLICABLE;
_b74.setDirections(dirs);
}});
_b40.isLegend=function(id){
return id.indexOf("L")==0;
};
return _b40;
});
},"com/ibm/vis/engine/internal/grammar/values/DefaultValueProvider":function(){
define("com/ibm/vis/engine/internal/grammar/values/DefaultValueProvider",["./ValueProvider","com/ibm/init/statics","dojo/_base/declare"],function(_b75,_b76,_b77){
var _b78=_b77("com.ibm.vis.engine.internal.grammar.values.DefaultValueProvider",[_b75],{includeInRange:false,unit:null,constructor:function(_b79,_b7a,unit){
this.includeInRange=_b7a;
this.unit=unit;
},getNumber:function(row){
return null;
},getLabel:function(){
return "";
},getBaseField:function(){
return null;
},getIncludeInRange:function(){
return this.includeInRange;
},getGranularity:function(){
return null;
},isCategorical:function(){
return this.unit!=null?this.unit.measure.categorical:false;
},getUnit:function(){
return this.unit;
},enableOrdering:function(_b7b){
}});
return _b78;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/SparseConstantVector":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/SparseConstantVector",["./Vector","com/ibm/init/statics","dojo/_base/declare"],function(_b7c,_b7d,_b7e){
var _b7f=_b7e("com.ibm.vis.engine.internal.grammar.layout.graph.stress.matrix.SparseConstantVector",[_b7c],{index:null,values:null,constructor:function(d){
this.index=Array.create([d.size()],0);
this.values=Array.create([this.index.length],0);
var m=0;
for(var _b80=0,_b81=d.keySet(),_b82=_b81.size();_b80<_b82;++_b80){
var i=_b81.get(_b80);
this.index[m]=i;
this.values[m]=d.get(i);
m++;
}
},set:function(i,_b83){
throw new Error("Cannot modify a constant vector");
},get:function(i){
for(var m=0;m<this.index.length;++m){
if(this.index[m]==i){
return this.values[m];
}
}
return 0;
},dot:function(x){
var v=0;
for(var i=0;i<this.index.length;++i){
v+=this.values[i]*x[this.index[i]];
}
return v;
}});
return _b7f;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/MultilevelCoarsener":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/MultilevelCoarsener",["com/ibm/init/fork!../../../../nativeImpl/List","com/ibm/init/fork!./LiteGraph","com/ibm/init/fork!../../../../nativeImpl/HashcodeMap","com/ibm/init/fork!./GroupedNode","com/ibm/init/fork!../Link","com/ibm/init/statics","dojo/_base/declare"],function(_b84,_b85,_b86,_b87,_b88,_b89,_b8a){
var _b8b=_b8a("com.ibm.vis.engine.internal.grammar.layout.graph.stress.MultilevelCoarsener",null,{graphs:null,model:null,constructor:function(_b8c){
this.model=_b8c;
this.graphs=new _b84.m();
this.graphs.add(new _b85.m(_b8c.nodes,_b8c.links));
},run:function(_b8d){
var _b8e=this.peekTopGraph().getNodesCount();
while(_b8e>_b8d){
this.coarsen(this.peekTopGraph());
var _b8f=_b8e/this.peekTopGraph().getNodesCount();
if(_b8f<1.1){
this.graphs.remove(this.graphs.size()-1);
break;
}
_b8e=this.peekTopGraph().getNodesCount();
}
return this.graphs;
},coarsen:function(g){
var _b90=this.createNodeMatching(g);
this.graphs.add(_b90);
},peekTopGraph:function(){
return this.graphs.get(this.graphs.size()-1);
},placeInCenterOfChildren:function(_b91){
var cx=0;
var cy=0;
for(var i=0;i<_b91.getChildCount();++i){
cx+=_b91.getChild(i).getCurrentBounds().getCenterX();
cy+=_b91.getChild(i).getCurrentBounds().getCenterY();
}
_b91.moveTo(cx/_b91.getChildCount(),cy/_b91.getChildCount());
},createNodeMatching:function(g){
if(g.getLinksCount()==0){
return g;
}
var _b92=new _b86.m();
var _b93=new _b84.m();
var _b94=new _b85.m(null,null);
for(var _b95=0,_b96=g.nodes,_b97=_b96.size();_b95<_b97;++_b95){
var n=_b96.get(_b95);
_b92.put(n,null);
_b93.add(n);
}
var _b98=0;
while(_b93.size()>0){
var _b99=_b93.get(_b93.size()-1);
var _b9a=null;
var _b9b=1.7976931348623157e+308;
for(var _b9c=0,_b9d=_b99.getLinks(),_b9e=_b9d.length;_b9c<_b9e;++_b9c){
var edge=_b9d[_b9c];
var _b9f=edge.getOpposite(_b99);
if(_b92.containsKey(_b9f)&&_b9f.weight<_b9b){
_b9a=_b9f;
_b9b=_b9f.weight;
}
}
var _ba0=new _b87.m(--_b98);
_b94.addNode(_ba0);
_ba0.addChild(_b99);
_ba0.weight=_b99.weight+(_b9a==null?0:_b9a.weight);
_b93.remove(_b99);
_b92.remove(_b99);
if(_b9a!=null){
_ba0.addChild(_b9a);
_b93.remove(_b9a);
_b92.remove(_b9a);
}
this.placeInCenterOfChildren(_ba0);
}
for(var _ba1=0,_ba2=g.links,_ba3=_ba2.size();_ba1<_ba3;++_ba1){
var link=_ba2.get(_ba1);
var p1=link.from.parent;
var p2=link.to.parent;
if(p1!=p2){
var _ba4=_b94.getLinkBetween(p1,p2);
if(_ba4==null){
var edge=new _b88.m(p1,p2);
edge.weight=link.weight;
p1.addOutEdge(edge);
p2.addInEdge(edge);
_b94.addLink(edge);
}else{
_ba4.weight=_ba4.weight+link.weight;
}
}
}
return _b94;
}});
return _b8b;
});
},"com/ibm/vis/interaction/PanZoom":function(){
define("com/ibm/vis/interaction/PanZoom",["com/ibm/init/statics","dojo/_base/declare"],function(_ba5,_ba6){
var _ba7=_ba6("com.ibm.vis.interaction.PanZoom",null,{panBy:function(dx,dy){
},panByProportion:function(fx,fy){
},setCanvasDimensions:function(_ba8,_ba9){
},scaleBy:function(_baa){
},setScale:function(_bab){
},scaleAroundAPoint:function(_bac,x,y){
},scaleAroundCenter:function(_bad){
},centerAroundPoint:function(x,y){
},getCurrentBounds:function(){
},reset:function(){
},fitToCanvas:function(){
}});
return _ba7;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/stack/DataStack":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/stack/DataStack",["com/ibm/init/fork!../functions/FunctionalPath","com/ibm/init/fork!../../../struct/PolyPathMaker","com/ibm/init/fork!../functions/LinearFunctionalPath","com/ibm/init/fork!../functions/CompositeFunctionalPath","com/ibm/init/fork!../functions/FunctionalPathUtil","com/ibm/init/fork!../../../nativeImpl/Double","com/ibm/init/fork!../functions/DoubleOrderedSet","com/ibm/init/statics","dojo/_base/declare"],function(_bae,_baf,_bb0,_bb1,_bb2,_bb3,_bb4,_bb5,_bb6){
var _bb7=_bb6("com.ibm.vis.engine.internal.grammar.coordinate.stack.DataStack",null,{prevAestheticGroupId:-1,stack:null,top:null,op:null,constructor:function(){
this.stack=new _bb0.m(0);
this.top=new _bb0.m(0);
this.__constructor_com_ibm_vis_engine_internal_grammar_coordinate_stack_DataStack.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_grammar_coordinate_stack_DataStack:function(_bb8){
if(_bb8){
this.op=_bb1.m.MAX;
}else{
this.op=_bb1.m.MIN;
}
},updateStackInfo:function(_bb9){
if(this.prevAestheticGroupId!=_bb9){
this.stack=this.top;
this.prevAestheticGroupId=_bb9;
}
},getStackingOffset:function(x,y){
var _bba=this.stack.getY(x);
var path=new _bb0.m(0);
path.moveTo(x,y+_bba);
path.lineTo(x,y+_bba);
this.top=new _bb1.m(this.top,path,this.op);
return _bba;
},stackPath:function(_bbb,zero,_bbc,_bbd){
var path=this.makeStackedPath(_bbb,this.stack);
this.top=new _bb1.m(this.top,path,this.op);
if(_bbc){
return _bb2.m.createSubPoly(path,this.stack,zero,_bbd);
}else{
return _bb2.m.createSubPoly(path,null,zero,_bbd);
}
},makeStackedPath:function(_bbe,_bbf){
var _bc0=this.findValidXSamples(_bbe,_bbf);
var path=new _bb0.m(NaN);
for(var i=0;i<_bc0.size();++i){
var x=_bc0.get(i);
var _bc1=_bbe.getRightY(x)+_bbf.getRightY(x);
var y=_bbe.getY(x)+_bbf.getY(x);
var _bc2=_bbe.getLeftY(x)+_bbf.getLeftY(x);
if(!_bb3.m.isNaN(_bc2)){
path.lineTo(x,_bc2);
}
if(!_bb3.m.isNaN(y)&&!(_bc2==y)){
path.moveTo(x,y);
path.lineTo(x,y);
}
if(!_bb3.m.isNaN(_bc1)&&!(_bc1==y)){
path.moveTo(x,_bc1);
}
}
return path;
},findValidXSamples:function(_bc3,_bc4){
var _bc5=_bc3.getXSamples();
var _bc6=new _bb4.m(_bc5.size());
_bc6.addAll(_bc5);
var _bc7=_bc6.getDomain();
var _bc8=_bc4.getXSamples();
for(var i=0;i<_bc8.size();++i){
var _bc9=_bc8.get(i);
if(_bc7.contains(_bc9)){
_bc6.add(_bc9);
}
}
return _bc6;
}});
return _bb7;
});
},"com/ibm/vis/engine/internal/interaction/effect/EffectEndEvent":function(){
define("com/ibm/vis/engine/internal/interaction/effect/EffectEndEvent",["../../../../interaction/internal/events/RaveEventImpl","com/ibm/init/statics","dojo/_base/declare"],function(_bca,_bcb,_bcc){
var _bcd=_bcc("com.ibm.vis.engine.internal.interaction.effect.EffectEndEvent",[_bca],{effect:null,constructor:function(_bce,_bcf){
this.effect=_bcf;
},notifyListener:function(_bd0){
(_bd0).onEffectEnd(this.effect);
}});
return _bcd;
});
},"com/ibm/vis/engine/internal/interaction/defender/DefenderFocus":function(){
define("com/ibm/vis/engine/internal/interaction/defender/DefenderFocus",["com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../../../actions/internal/ZoomAction","com/ibm/init/statics","dojo/_base/declare"],function(_bd1,_bd2,_bd3,_bd4){
var _bd5=_bd4("com.ibm.vis.engine.internal.interaction.defender.DefenderFocus",null,{vis:null,rowMap:null,thumbnailDataUnit:null,constructor:function(vis){
this.vis=vis;
this.rowMap=new _bd1.m();
this.thumbnailDataUnit=this.getThumbnailDataUnit(vis.grammar);
},updateSpec:function(_bd6){
if(_bd6.length==2){
var _bd7=this.vis.grammar;
for(var i=0;i<_bd7.length;++i){
if(!this.isThumbnail(_bd7[i])){
var za=new _bd2.m(_bd7[i]);
za.zoomToCoordinatesWithDataFilter([null,_bd6[0]],[null,_bd6[1]],true,this.thumbnailDataUnit);
}
}
}
return this.vis.currentSpec;
},getThumbnailDataUnit:function(_bd8){
var unit=null;
for(var i=0;i<_bd8.length;++i){
if(this.isThumbnail(_bd8[i])){
var _bd9=this.vis.grammar[i];
var _bda=_bd9.elements;
for(var j=0;j<_bda.length;++j){
var _bdb=_bda[j].positions[1];
var _bdc=_bdb.getBaseField();
if(_bdc!=null){
if(unit==null){
unit=_bdc.unit.name;
break;
}
}
}
}
}
return unit;
},isThumbnail:function(_bdd){
var flag=false;
var type="scrollUnit";
var _bde=_bdd.elements;
for(var _bdf=0,_be0=_bde.length;_bdf<_be0;++_bdf){
var _be1=_bde[_bdf];
if(type.CPVisEngineEquals(_be1.interactionType)){
flag=true;
break;
}
}
return flag;
}});
return _bd5;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/MetaValueProducer":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/MetaValueProducer",["./AestheticValueProducer","com/ibm/init/fork!../../data/Row","com/ibm/init/statics","dojo/_base/declare"],function(_be2,_be3,_be4,_be5){
var _be6=_be5("com.ibm.vis.engine.internal.grammar.aesthetic.MetaValueProducer",[_be2],{key:null,categories:null,constructor:function(key,_be7){
this.key=key;
if(_be7.getBaseField()!=null){
this.categories=_be7.getBaseField().categories;
}else{
this.categories=new Array(1);
this.categories[0]=_be7.getNumber(_be3.m.createEmptyRow(0,0)).toString();
}
},make:function(spec){
return null;
},forPalette:function(o){
return null;
},modify:function(item,o,_be8){
item.setMeta(this.key,o);
return item;
},getDefaultForCategory:function(_be9,_bea){
if(this.categories.length>_be9){
return this.categories[_be9];
}else{
return this.categories[0];
}
},interpolate:function(a,b,p){
return p;
}});
return _be6;
});
},"com/ibm/vis/engine/internal/nativeImpl/HashcodeMap":function(){
define("com/ibm/vis/engine/internal/nativeImpl/HashcodeMap",["dojo/_base/declare","./Map","./hash"],function(_beb,Map,hash){
var Map=_beb("com.ibm.vis.engine.internal.nativeImpl.HashcodeMap",Map,{_hash:hash});
return Map;
});
},"com/ibm/vis/engine/internal/struct/SmoothPolyPathMaker":function(){
define("com/ibm/vis/engine/internal/struct/SmoothPolyPathMaker",["./PolyPathMaker","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../nativeImpl/StringBuilder","com/ibm/init/fork!../util/MathUtil","com/ibm/init/fork!./Point","com/ibm/init/statics","dojo/_base/declare"],function(_bec,_bed,_bee,_bef,_bf0,_bf1,_bf2){
var _bf3=_bf2("com.ibm.vis.engine.internal.struct.SmoothPolyPathMaker",[_bec],{makeSmoothPath:function(x,y,_bf4){
if(_bf4){
var t=x;
x=y;
y=t;
}
var newX=new _bed.m();
var newY=new _bed.m();
_bf3.interpolateSmoothPath(x,y,newX,newY);
if(_bf4){
var t=newX;
newX=newY;
newY=t;
}
if(newX.size()==0||newY.size()==0){
return null;
}
var path=new _bee.m();
var num=newX.size()/4;
path.append("M");
path.append(_bef.m.r3(newX.get(0)));
path.append(",");
path.append(_bef.m.r3(newY.get(0)));
for(var c=0;c<num;++c){
var i=(c*4);
path.append("C");
for(var j=i+1;j<i+4;++j){
path.append(_bef.m.r3(newX.get(j)));
path.append(",");
path.append(_bef.m.r3(newY.get(j)));
if(j<(i+3)){
path.append(",");
}
}
}
return path.toString();
},makePath:function(poly){
return this.makeSmoothPath(poly.x,poly.y,poly.transposeApplied);
},getControlPoints:function(poly){
return this.findControlPoints(poly.x,poly.y,poly.transposeApplied);
},findControlPoints:function(x,y,_bf5){
if(_bf5){
var t=x;
x=y;
y=t;
}
var newX=new _bed.m();
var newY=new _bed.m();
_bf3.interpolateSmoothPath(x,y,newX,newY);
if(_bf5){
var t=newX;
newX=newY;
newY=t;
}
var _bf6=new _bed.m();
for(var i=1;i<newX.size()-1;i+=4){
_bf6.add(new _bf0.m(newX.get(i),newY.get(i)));
_bf6.add(new _bf0.m(newX.get(i+1),newY.get(i+1)));
}
return _bf6;
},toString:function(){
return "smoothPolyPathMaker";
}});
_bf3.interpolateSmoothPath=function(cx,cy,_bf7,_bf8){
if(cx.length>cy.length){
return;
}
var n=cx.length;
for(var i=0;i<n-1;++i){
if(i==0){
var x3=0;
var y3=0;
var x1=cx[i];
var x2=cx[i+1];
var y1=cy[i];
var y2=cy[i+1];
if(_bf3.delta(x2,x1)==0){
_bf3.addControlPointsForVerticalLine(x1,y1,x2,y2,_bf7,_bf8);
}else{
if(i<n-2){
x3=cx[i+2];
y3=cy[i+2];
}
var _bf9=0;
if(i!=n-2){
_bf9=_bf3.fodAtIntermediatePoints(x1,y1,x2,y2,x3,y3);
}
var _bfa=_bf3.fodAtStartPoint(x1,y1,x2,y2,_bf9);
var _bfb=_bf3.sodAtIntervalStartPoint(x1,y1,x2,y2,_bfa,_bf9);
var _bfc=_bf3.sodAtIntervalEndPoint(x1,y1,x2,y2,_bfa,_bf9);
var d=_bf3.d(x1,x2,_bfb,_bfc);
var c=_bf3.c(x1,x2,_bfb,_bfc);
var b=_bf3.b(x1,y1,x2,y2,c,d);
var a=_bf3.a(x1,y1,b,c,d);
_bf3.addControlPoints(a,b,c,d,x1,y1,x2,y2,_bf7,_bf8);
}
}else{
if(i==n-2){
var x1=0;
var y1=0;
var x2=cx[i];
var y2=cy[i];
var x3=cx[i+1];
var y3=cy[i+1];
if(_bf3.delta(x3,x2)==0){
_bf3.addControlPointsForVerticalLine(x2,y2,x3,y3,_bf7,_bf8);
}else{
if(i>0){
x1=cx[i-1];
y1=cy[i-1];
}
var _bfa=_bf3.fodAtIntermediatePoints(x1,y1,x2,y2,x3,y3);
var _bf9=_bf3.fodAtEndPoint(x2,y2,x3,y3,_bfa);
var _bfb=_bf3.sodAtIntervalStartPoint(x2,y2,x3,y3,_bfa,_bf9);
var _bfc=_bf3.sodAtIntervalEndPoint(x2,y2,x3,y3,_bfa,_bf9);
var d=_bf3.d(x2,x3,_bfb,_bfc);
var c=_bf3.c(x2,x3,_bfb,_bfc);
var b=_bf3.b(x2,y2,x3,y3,c,d);
var a=_bf3.a(x2,y2,b,c,d);
_bf3.addControlPoints(a,b,c,d,x2,y2,x3,y3,_bf7,_bf8);
}
}else{
var x1=cx[i-1];
var y1=cy[i-1];
var x2=cx[i];
var y2=cy[i];
var x3=cx[i+1];
var y3=cy[i+1];
var x4=cx[i+2];
var y4=cy[i+2];
if(_bf3.delta(x3,x2)==0){
_bf3.addControlPointsForVerticalLine(x2,y2,x3,y3,_bf7,_bf8);
}else{
var _bfa=_bf3.fodAtIntermediatePoints(x1,y1,x2,y2,x3,y3);
var _bf9=_bf3.fodAtIntermediatePoints(x2,y2,x3,y3,x4,y4);
var _bfb=_bf3.sodAtIntervalStartPoint(x2,y2,x3,y3,_bfa,_bf9);
var _bfc=_bf3.sodAtIntervalEndPoint(x2,y2,x3,y3,_bfa,_bf9);
var d=_bf3.d(x2,x3,_bfb,_bfc);
var c=_bf3.c(x2,x3,_bfb,_bfc);
var b=_bf3.b(x2,y2,x3,y3,c,d);
var a=_bf3.a(x2,y2,b,c,d);
_bf3.addControlPoints(a,b,c,d,x2,y2,x3,y3,_bf7,_bf8);
}
}
}
}
};
_bf3.addControlPoints=function(a,b,c,d,x1,y1,x2,y2,cx,cy){
var dx=x2-x1;
var u=0.25,v=0.75;
var fx=x1+((dx)*u);
var fy=a+(b*fx)+(c*(_bf3.pow(fx,2)))+(d*(_bf3.pow(fx,3)));
var gx=x1+((dx)*v);
var gy=a+(b*gx)+(c*(Math.pow(gx,2)))+(d*(Math.pow(gx,3)));
var x=Array.create([2],0);
var y=Array.create([2],0);
_bf3.calculateControlPoints(x1,y1,fx,fy,gx,gy,x2,y2,u,v,x,y);
cx.add(x1);
cy.add(y1);
for(var i=0;i<2;++i){
cx.add(x[i]);
cy.add(y[i]);
}
cx.add(x2);
cy.add(y2);
};
_bf3.addControlPointsForVerticalLine=function(x1,y1,x2,y2,cx,cy){
var u=0.25,v=0.75;
var fx=x1+((x2-x1)*u);
var fy=y1+(y2-y1)*u;
var gx=x1+((x2-x1)*v);
var gy=y1+(y2-y1)*v;
var x=Array.create([2],0);
var y=Array.create([2],0);
_bf3.calculateControlPoints(x1,y1,fx,fy,gx,gy,x2,y2,u,v,x,y);
cx.add(x1);
cy.add(y1);
for(var i=0;i<2;++i){
cx.add(x[i]);
cy.add(y[i]);
}
cx.add(x2);
cy.add(y2);
};
_bf3.calculateControlPoints=function(x1,y1,x2,y2,x3,y3,x4,y4,u,v,x,y){
var cx=x2-(_bf3.pow(1-u,3)*x1+_bf3.pow(u,3)*x4);
var cy=y2-(_bf3.pow(1-u,3)*y1+_bf3.pow(u,3)*y4);
var dx=x3-(_bf3.pow(1-v,3)*x1+_bf3.pow(v,3)*x4);
var dy=y3-(_bf3.pow(1-v,3)*y1+_bf3.pow(v,3)*y4);
var tl=3*(1-v)*_bf3.pow(v,2);
var bl=-3*_bf3.pow(1-v,2)*v;
var tr=-3*(1-u)*_bf3.pow(u,2);
var br=3*_bf3.pow(1-u,2)*u;
var det=tl*br-tr*bl;
x[0]=(1/det)*((tl*cx)+(tr*dx));
y[0]=(1/det)*((tl*cy)+(tr*dy));
x[1]=(1/det)*((bl*cx)+(br*dx));
y[1]=(1/det)*((bl*cy)+(br*dy));
};
_bf3.fodAtIntermediatePoints=function(x1,y1,x2,y2,x3,y3){
var m1=(y2-y1)/(x2-x1);
var m2=(y3-y2)/(x3-x2);
if(m1==0||m2==0){
return 0;
}
if(m1>0&&m2<0){
return 0;
}
if(m1<0&&m2>0){
return 0;
}
return (y3-y1)/(x3-x1);
};
_bf3.fodAtStartPoint=function(x1,y1,x2,y2,_bfd){
return (3*(y2-y1))/(2*(x2-x1))-(_bfd/2);
};
_bf3.fodAtEndPoint=function(x1,y1,x2,y2,_bfe){
return (3*(y2-y1))/(2*(x2-x1))-(_bfe/2);
};
_bf3.sodAtIntervalStartPoint=function(x1,y1,x2,y2,_bff,_c00){
var p=2*(_c00+(2*_bff));
var q=x2-x1;
var r=6*(y2-y1);
var s=_bf3.pow((x2-x1),2);
return (-p/q)+(r/s);
};
_bf3.sodAtIntervalEndPoint=function(x1,y1,x2,y2,_c01,_c02){
var p=2*((2*_c02)+_c01);
var q=x2-x1;
var r=6*(y2-y1);
var s=_bf3.pow((x2-x1),2);
return (p/q)-(r/s);
};
_bf3.d=function(x1,x2,_c03,_c04){
return (_c04-_c03)/(6*(x2-x1));
};
_bf3.c=function(x1,x2,_c05,_c06){
var p=x2*_c05;
var q=x1*_c06;
var r=(2*(x2-x1));
return (p-q)/r;
};
_bf3.b=function(x1,y1,x2,y2,c,d){
var p=y2-y1;
var q=c*(_bf3.pow(x2,2)-_bf3.pow(x1,2));
var r=d*(_bf3.pow(x2,3)-_bf3.pow(x1,3));
var s=x2-x1;
return (p-q-r)/s;
};
_bf3.a=function(x1,y1,b,c,d){
return y1-(b*x1)-(c*_bf3.pow(x1,2))-(d*_bf3.pow(x1,3));
};
_bf3.pow=function(n,p){
if(p==0){
return 1;
}
var d=1;
for(var i=0;i<p;++i){
d*=n;
}
return d;
};
_bf3.delta=function(x1,x2){
var n1=_bef.m.r3(x1);
var n2=_bef.m.r3(x2);
return n1-n2;
};
return _bf3;
});
},"com/ibm/vis/engine/internal/facet/FacetAxisInfo":function(){
define("com/ibm/vis/engine/internal/facet/FacetAxisInfo",["com/ibm/init/statics","dojo/_base/declare"],function(_c07,_c08){
var _c09=_c08("com.ibm.vis.engine.internal.facet.FacetAxisInfo",null,{facetIndex:0,axisIndex:0,axisMethod:null,axisTickHeight:0});
return _c09;
});
},"com/ibm/vis/engine/internal/migration/JSONMigration":function(){
define("com/ibm/vis/engine/internal/migration/JSONMigration",["./MigrationStrategy","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../util/Version","com/ibm/init/fork!./MigrationStrategyComparator","com/ibm/init/statics","dojo/_base/declare"],function(_c0a,_c0b,_c0c,_c0d,_c0e,_c0f,_c10){
var _c11=_c10("com.ibm.vis.engine.internal.migration.JSONMigration",[_c0a],{strategies:null,constructor:function(){
this.strategies=new _c0b.m();
},migrate:function(json){
return this.doMigrate(json,false)!=null;
},getMigrated:function(json){
return this.doMigrate(json,true);
},doMigrate:function(json,_c12){
this.sortStrategies();
var _c13=this.getTargetVersion();
var _c14=false;
var _c15=null;
if(!this.strategies.isEmpty()&&_c0c.m.containsKey(json,"version")){
var _c16=_c0d.m.parseVersion(_c0c.m.getItem(json,"version"));
var _c17=null;
for(var i=0;i<this.strategies.size();++i){
var _c18=this.strategies.get(i);
if(_c18.getTargetVersion().compareTo(_c13)<=0&&_c16.compareTo(_c18.getTargetVersion())<0){
if(_c15==null){
if(_c12){
_c15=_c0c.m.deepClone(json);
}else{
_c15=json;
}
}
if(_c17!=null&&_c17.compareTo(_c18.getTargetVersion())<0){
_c0c.m.put(_c15,"version",_c17.toString());
_c17=null;
}
if(_c18.migrate(_c15)){
_c17=_c18.getTargetVersion();
_c14=true;
}
}
}
if(_c17!=null){
_c0c.m.put(_c15,"version",_c17.toString());
}
}
return _c14?_c15:null;
},getStrategies:function(){
return this.strategies;
},addStrategy:function(_c19){
this.strategies.add(_c19);
},getTargetVersion:function(){
if(this.strategies.isEmpty()){
return null;
}
this.sortStrategies();
return this.strategies.get(this.strategies.size()-1).getTargetVersion();
},sortStrategies:function(){
_c0c.m.sortList(this.strategies,new _c0e.m());
}});
_c0f.add("com/ibm/vis/engine/internal/migration/JSONMigration",["com/ibm/vis/engine/internal/migration/MigrationStrategy"],function(){
_c11.VERSION="version";
});
return _c11;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/AssignLayerFromSpec":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/AssignLayerFromSpec",["./DAGLayerAssignmentAlgorithm","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_c1a,_c1b,_c1c,_c1d){
var _c1e=_c1d("com.ibm.vis.engine.internal.grammar.layout.graph.AssignLayerFromSpec",[_c1a],{layerField:null,adapter:null,idField:null,constructor:function(_c1f){
this.adapter=_c1f;
this.layerField=(_c1f.getSpec().layer==null)?null:_c1f.getSpec().layer.$ref;
this.idField=(_c1f.getSpec().id==null)?null:_c1f.getSpec().id.$ref;
},assignLayers:function(_c20){
var _c21=this.adapter.getAllFieldValuesAsNumeric(this.layerField);
var _c22=new _c1b.m();
for(var _c23=0,_c24=_c20.nodes,_c25=_c24.length;_c23<_c25;++_c23){
var node=_c24[_c23];
if(!node.isDummy()){
var _c26=_c21[node.row];
if(_c26!=null){
var d=Math.floor(_c26);
node.layer=d;
_c22.add(node);
}
}else{
_c22.add(node);
}
}
_c20.nodes=_c22.toArray(new Array(_c22.size()));
_c20.removeUnwantedLinks();
_c20.reverseLinksIfNeeded();
return 1+Math.floor(this.adapter.getFieldRange(this.layerField).max);
}});
return _c1e;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/cluster/ClusterShapeGroup":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/cluster/ClusterShapeGroup",["../ShapeGroup","com/ibm/init/fork!../../../nativeImpl/Map","com/ibm/init/fork!../../../spechelper/ClusterGapSizeSpecHelper","com/ibm/init/fork!../../../spechelper/ClusterWidthSizeSpecHelper","com/ibm/init/fork!../../../../../exceptions/RaveException","com/ibm/init/fork!../../../nativeImpl/Double","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_c27,_c28,_c29,_c2a,_c2b,_c2c,_c2d,_c2e,_c2f){
var _c30=_c2f("com.ibm.vis.engine.internal.grammar.coordinate.cluster.ClusterShapeGroup",[_c27],{indexToShapeNode:null,gapSpecHelper:null,fullVizWidth:0,preferredGapWidth:NaN,leafSize:NaN,categoryWidthSpecHelper:null,nodeNested:false,constructor:function(){
this.indexToShapeNode=new _c28.m();
this.gapSpecHelper=new _c29.m(null);
this.categoryWidthSpecHelper=new _c2a.m(null);
this.__constructor_com_ibm_vis_engine_internal_grammar_coordinate_cluster_ClusterShapeGroup.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_grammar_coordinate_cluster_ClusterShapeGroup:function(_c31){
this.fullVizWidth=_c31;
},calculateSizeAndGaps:function(_c32,_c33){
if(this.nodeIsDirty){
this.calculateSizing(_c32,_c33);
this.calculateGaps(_c33);
}
},calculateSizing:function(_c34,_c35){
var _c36=_c35-this.padding*2;
var _c37=0;
if(this.getChildren().size()>1){
_c37=this.getMinGapWidth(_c36);
}
var _c38=_c36-_c37*this.getNumberOfGapsAtLevel();
if(_c38<0){
throw new _c2b.m("minimum cluster gap sizes will not fit in bounds",_c2b.m.LAYOUT_CANNOT_FIT);
}
this.setMaxWidth(_c38);
var _c39=_c34-this.getPreferredGapWidth(_c34)*this.getNumberOfGapsAtLevel();
this.setPreferredWidth(_c39);
var _c3a=0;
for(var _c3b=0,_c3c=this.getChildren(),_c3d=_c3c.size();_c3b<_c3d;++_c3b){
var node=_c3c.get(_c3b);
_c3a+=node.calculateSizing(this.preferredWidth,_c38);
}
if(this.getChildren().size()==0){
var _c3e=this.getRootNode();
_c3a=_c3e.leafSize;
if(_c2c.m.isNaN(_c3a)){
var _c3f=this.getRootNode().getNodesAtLevel(this.getLevel(),0);
_c3a=this.preferredWidth/_c3f;
}
}
this.setPreferredWidth(_c3a);
return this.preferredWidth;
},calculateGaps:function(_c40){
var _c41=this.getLevel();
var root=this.getRootNode();
var _c42=root.getSizeOfNodesAtLevel(_c41,0);
var _c43=0;
if(this.getChildren().size()>1){
_c43=root.getGapSizeAtLevel(_c41);
if(_c2c.m.isNaN(_c43)){
_c43=this.calculateGapSizing(_c42,_c40);
root.setGapSizeAtLevel(_c41,_c43);
}
}
var _c44=_c43*this.getNumberOfGaps();
if(Math.round(_c42+_c44)<_c40){
for(var _c45=0,_c46=this.getChildren(),_c47=_c46.size();_c45<_c47;++_c45){
var node=_c46.get(_c45);
_c44+=node.calculateGaps(_c40-_c43*this.getNumberOfGapsAtLevel());
}
}
this.setPreferredWidth(this.preferredWidth+_c44);
this.setGapSize(_c43);
return _c44;
},calculateGapSizing:function(_c48,_c49){
var _c4a=this.getPreferredGapWidth(_c49);
var _c4b=this.getMinGapWidth(_c49);
var _c4c=this.getNumberOfGapsAtLevel();
if(_c4c>0&&_c4a>0){
var _c4d=(_c49-_c48)/_c4c;
_c4d=Math.min(_c4d,_c4a);
_c4d=Math.max(_c4d,0);
if(_c4d<_c4b){
throw new _c2b.m("minimum cluster gap sizes will not fit in bounds",_c2b.m.LAYOUT_CANNOT_FIT);
}
_c4a=_c4d;
}
return _c4a;
},addShapeToMatchingNode:function(_c4e){
if(!this.includeShape(_c4e)){
return false;
}
var _c4f=this.findShapeNodes(_c4e,1);
if(_c4f.size()>0){
for(var _c50=0,_c51=_c4f.size();_c50<_c51;++_c50){
var node=_c4f.get(_c50);
node.addShape(_c4e);
}
return true;
}
return false;
},add:function(_c52,_c53){
this.inherited(arguments,[_c52,_c53]);
this.mapLocationToNode(_c53,_c52);
},findShapeNodes:function(_c54,_c55){
var _c56=this.getIndexesFromShape(_c54,_c55);
var _c57=this.getNodesFromIndexes(_c56);
if(_c57.size()==0||this.isLastShapePosition(_c54,_c55)){
return _c57;
}
var _c58=new _c2d.m();
for(var _c59=0,_c5a=_c57.size();_c59<_c5a;++_c59){
var _c5b=_c57.get(_c59);
var _c5c=(_c5b).findShapeNodes(_c54,_c55+1);
_c58.addAll(_c5c);
}
return _c58;
},getIndexesFromShape:function(_c5d,_c5e){
var _c5f=new _c2d.m();
var _c60=_c5d.positions;
var _c61=_c5e;
if(_c5d.position!=null){
if(_c61<0){
_c61=_c5d.position.index.length+_c5e;
}
var _c62=_c5d.position.index[_c5e];
_c5f.add(_c62);
}else{
if(_c60!=null){
if(_c61<0){
_c61=_c60[0].index.length+_c5e;
}
for(var _c63=0;_c63<_c60.length;++_c63){
var _c64=_c60[_c63].index[_c5e];
_c5f.add(_c64);
}
}
}
return _c5f;
},isLastShapePosition:function(_c65,_c66){
var _c67=false;
if(_c65.position!=null){
_c67=_c66==_c65.position.base.length-1;
}else{
_c67=_c66==_c65.positions[0].base.length-1;
}
return _c67;
},mapLocationToNode:function(_c68,node){
this.indexToShapeNode.put(_c68,node);
node.id=_c68;
},getNodesFromIndexes:function(_c69){
var _c6a=new _c2d.m(_c69.size());
for(var _c6b=0;_c6b<_c69.size();++_c6b){
var _c6c=this.indexToShapeNode.get(_c69.get(_c6b));
if(_c6c!=null){
_c6a.add(_c6c);
}
}
return _c6a;
},setGapSpecHelper:function(_c6d){
if(_c6d!=null){
this.gapSpecHelper=_c6d;
}
},getPreferredGapWidth:function(_c6e){
if(_c2c.m.isNaN(this.preferredGapWidth)){
this.preferredGapWidth=this.gapSpecHelper.getPreferred(_c6e,this.fullVizWidth);
}
return this.preferredGapWidth;
},getMinGapWidth:function(_c6f){
return this.gapSpecHelper.getMin(_c6f,this.fullVizWidth);
},getIndexMap:function(){
return this.indexToShapeNode;
},setLeafSize:function(_c70){
this.leafSize=_c70;
},getLeafSize:function(){
return this.leafSize;
},isNested:function(){
return this.nodeNested;
},setWidthSpecHelper:function(_c71){
if(_c71!=null){
this.categoryWidthSpecHelper=_c71;
}
},getWidthSpecHelper:function(){
return this.categoryWidthSpecHelper;
},fixOrdering:function(){
if(!this.nodeIsDirty){
return;
}
for(var _c72=0;_c72<this.getChildren().size();++_c72){
this.getChildren().get(_c72).fixOrdering();
}
},includeShape:function(_c73){
var _c74=_c73.positions;
var _c75=true;
if(_c74!=null){
for(var _c76=0,_c77=_c74.length;_c76<_c77;++_c76){
var _c78=_c74[_c76];
if(_c78.containsUndefinedXValues()){
return false;
}
}
}else{
_c75=_c73.position.containsUndefinedXValues()==false;
}
return _c75;
}});
return _c30;
});
},"com/ibm/vis/engine/internal/grammar/label/FontMetric":function(){
define("com/ibm/vis/engine/internal/grammar/label/FontMetric",["com/ibm/init/statics","dojo/_base/declare"],function(_c79,_c7a){
var _c7b=_c7a("com.ibm.vis.engine.internal.grammar.label.FontMetric",null,{getAmountThatFits:function(text,size,bold,_c7c){
},getAscent:function(size){
},getHeight:function(size){
},getWidth:function(text,size,bold){
},getActualFamily:function(){
}});
return _c7b;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/GridGraphLayout":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/GridGraphLayout",["./AbstractGraphLayout","com/ibm/init/fork!../../../nativeImpl/BasicFactory","com/ibm/init/fork!./Crossings","com/ibm/init/fork!./Node","com/ibm/init/fork!../../../struct/Point","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_c7d,_c7e,_c7f,_c80,_c81,_c82,_c83,_c84){
var _c85=_c84("com.ibm.vis.engine.internal.grammar.layout.graph.GridGraphLayout",[_c7d],{gridPts:null,extraGrid:0,constructor:function(_c86){
this.extraGrid=0;
},getGridOverlapCount:function(node){
var n=0;
for(var _c87=0,_c88=node.inLink,_c89=_c88.length;_c87<_c89;++_c87){
var link=_c88[_c87];
if(link.from.x==link.to.x){
n+=Math.floor(Math.abs(link.from.y-link.to.y)-0.5);
}
if(link.from.y==link.to.y){
n+=Math.floor(Math.abs(link.from.x-link.to.x)-0.5);
}
}
for(var _c8a=0,_c8b=node.outLink,_c8c=_c8b.length;_c8a<_c8c;++_c8a){
var link=_c8b[_c8a];
if(link.from.x==link.to.x){
n+=Math.floor(Math.abs(link.from.y-link.to.y)-0.5);
}
if(link.from.y==link.to.y){
n+=Math.floor(Math.abs(link.from.x-link.to.x)-0.5);
}
}
return n;
},layoutNodes:function(_c8d){
this.sortNodes();
var _c8e=this.adapter.getElementSize();
var _c8f=this.getColumnCount(_c8e,_c8d);
var _c90=Math.ceil((this.nodes.length)/_c8f);
if(_c90*_c8f<this.nodes.length){
_c90++;
}
_c8f+=this.extraGrid;
_c90+=this.extraGrid;
var D=Math.sqrt(Math.max(_c8f,_c90));
this.gridPts=this.makeGridPoints(_c8f,_c90);
this.initialPlacement(D);
var _c91=this.nodes;
this.nodes=this.makeAugmentedNodes();
this.simpleSwaps();
this.nodes=_c91;
this.placeInExtent(_c8d);
},sortNodes:function(){
var x=Array.create([this.nodes.length],0);
for(var i=0;i<this.nodes.length;++i){
x[i]=this.nodes[i].degree()-i/1000000;
}
var _c92=_c7e.m.makeSortOrder(x);
var temp=new Array(this.nodes.length);
for(var i=0;i<_c92.length;++i){
temp[_c92.length-1-i]=this.nodes[_c92[i]];
}
this.nodes=temp;
},simpleSwaps:function(){
var t=_c7e.m.getSystemTimer();
var _c93=this.links.length*(this.links.length-1)/2;
var _c94=Math.round(2000000/_c93);
this.doSwaps(_c94);
if(this.adapter.hasListeners()){
var diff=_c7e.m.getSystemTimer()-t;
this.adapter.logDetail("Time used for swapping","time (ms)",diff);
}
},doSwaps:function(_c95){
var _c96=new _c7f.m(this.nodes,this.links);
var _c97=Array.create([this.nodes.length],0);
for(var k=0;k<this.nodes.length;++k){
_c97[k]=this.getGridOverlapCount(this.nodes[k]);
}
var _c98=0;
var _c99=true;
while(_c99&&_c98<_c95){
_c99=false;
for(var i=0;_c98<_c95&&i<this.nodes.length;++i){
if(_c97[i]+_c96.counts[i]>0){
for(var j=0;j<this.nodes.length;++j){
if(i!=j){
_c98++;
this.nodes[i].swapWith(this.nodes[j]);
var _c9a=this.getGridOverlapCount(this.nodes[i])+this.getGridOverlapCount(this.nodes[j])-_c97[i]-_c97[j];
this.nodes[i].swapWith(this.nodes[j]);
if(_c96.swap(i,j,_c9a)){
_c99=true;
for(var k=0;k<this.nodes.length;++k){
_c97[k]=this.getGridOverlapCount(this.nodes[k]);
}
}
}
}
}
}
}
},makeAugmentedNodes:function(){
var _c9b=new Array(this.gridPts.size()+this.nodes.length);
for(var i=0;i<this.nodes.length;++i){
_c9b[i]=this.nodes[i];
}
var n=this.nodes.length;
for(var _c9c=0,_c9d=this.gridPts,_c9e=_c9d.size();_c9c<_c9e;++_c9c){
var _c9f=_c9d.get(_c9c);
_c9b[n++]=_c80.m.makeFake(_c9f);
}
return _c9b;
},initialPlacement:function(d){
for(var _ca0=0,_ca1=this.nodes,_ca2=_ca1.length;_ca0<_ca2;++_ca0){
var node=_ca1[_ca0];
node.info=node.degree();
}
for(var _ca3=0,_ca4=this.nodes,_ca5=_ca4.length;_ca3<_ca5;++_ca3){
var node=_ca4[_ca3];
if(node.info==null){
continue;
}
var _ca6=this.gridPts.get(0);
this.placeNode(node,_ca6);
_ca6.x-=0.002;
_ca6.y-=0.001;
for(var _ca7=0,_ca8=node.outLink,_ca9=_ca8.length;_ca7<_ca9;++_ca7){
var edge=_ca8[_ca7];
this.placeOther(d,_ca6,edge.to);
}
for(var _caa=0,_cab=node.inLink,_cac=_cab.length;_caa<_cac;++_caa){
var edge=_cab[_caa];
this.placeOther(d,_ca6,edge.from);
}
}
},placeOther:function(d,_cad,_cae){
if(_cae.info!=null){
var p=this.findClosestEmpty(_cad,d);
if(p!=null){
this.placeNode(_cae,p);
}
}
},getColumnCount:function(_caf,_cb0){
var _cb1=(_cb0.width/_caf.width)/(_cb0.height/_caf.height);
return Math.round(Math.sqrt(this.nodes.length*_cb1));
},makeGridPoints:function(_cb2,_cb3){
var c=new _c81.m((_cb2-1)/2-0.00001,(_cb3-1)/2-0.000001);
var all=new Array(_cb2*_cb3);
var d=Array.create([_cb2*_cb3],0);
for(var i=0;i<_cb2;++i){
for(var j=0;j<_cb3;++j){
var p=new _c81.m(i,j);
all[i*_cb3+j]=p;
d[i*_cb3+j]=p.dist(c);
}
}
var _cb4=_c7e.m.makeSortOrder(d);
var _cb5=new _c82.m();
for(var _cb6=0,_cb7=_cb4.length;_cb6<_cb7;++_cb6){
var i=_cb4[_cb6];
_cb5.add(all[i]);
}
return _cb5;
},findClosestEmpty:function(base,D){
var _cb8=null;
var _cb9=D;
for(var _cba=0,_cbb=this.gridPts,_cbc=_cbb.size();_cba<_cbc;++_cba){
var pt=_cbb.get(_cba);
var d=base.dist(pt);
if(d<_cb9){
_cb9=d;
_cb8=pt;
}
}
return _cb8;
},placeNode:function(node,p){
node.setX(p.x);
node.setY(p.y);
this.gridPts.remove(p);
node.info=null;
}});
return _c85;
});
},"com/ibm/vis/interaction/internal/HighlightMaker":function(){
define("com/ibm/vis/interaction/internal/HighlightMaker",["com/ibm/init/fork!../../engine/internal/nativeImpl/SpecUtil","com/ibm/init/fork!../../engine/internal/ColorUtil","com/ibm/init/fork!../../engine/internal/nativeImpl/BasicFactory","com/ibm/init/fork!../../engine/internal/util/SceneUtil","com/ibm/init/fork!../../engine/internal/struct/Rect","com/ibm/init/fork!../../engine/internal/scene/StyleBuilder","com/ibm/init/fork!../../engine/internal/nativeImpl/HashcodeMap","com/ibm/init/statics","dojo/_base/declare"],function(_cbd,_cbe,_cbf,_cc0,_cc1,_cc2,_cc3,_cc4,_cc5){
var _cc6=_cc5("com.ibm.vis.interaction.internal.HighlightMaker",null,{hiRep:null,visSceneMap:null,helper:null,fill:null,stroke:null,expandWidth:0,constructor:function(_cc7,_cc8,_cc9){
this.hiRep=_cc7;
this.visSceneMap=_cc8;
this.helper=_cc9;
var _cca=this.hiRep.getStyle();
var _ccb=_cbd.m.toJSONObject(_cca);
this.fill=this.buildFill(_cca,_ccb);
this.stroke=this.buildStroke(_cca,_ccb);
var _ccc=this.hiRep.getStroke();
this.expandWidth=_ccc!=null?(_ccc+1)/2:0;
},buildStroke:function(_ccd,_cce){
var _ccf=null;
var _cd0=_ccd.outline;
var _cd1=_cbe.m.toCanonicalColor(_cd0);
_ccf=_cbf.m.getItem(_cce,"stroke");
if(_cd1!=null&&_ccf!=null){
_cbf.m.put(_ccf,"color",_cd1.toJSON());
}
return _ccf;
},buildFill:function(_cd2,_cd3){
var _cd4=_cd2.fill;
if(_cbf.m.isString(_cd4)){
var _cd5=_cbe.m.toCanonicalColor(_cd4);
return _cd5.toJSON();
}
return _cbf.m.getItem(_cd3,"fill");
},makeHighlight:function(item){
if(item==null){
return null;
}
var _cd6=null;
var _cd7=true;
var type=this.getType(item);
if(type!=null){
var id=_cbf.m.getItem(item,"id");
if(id.indexOf("LC")>-1&&id.indexOf("E")>-1){
var _cd8=this.helper.getParent(item);
if(_cd8!=null){
var _cd9=this.helper.getItemFromScene(_cd8);
var _cda=this.getType(_cd9);
if(_cda!=null&&_cda.indexOf("legendEntry")>-1){
item=_cd8;
}
}
_cd6=this.makeHighlightForLegendEntry(item);
}else{
if(type.indexOf("text")>-1){
_cd6=this.makeHighlightForText(item);
}else{
var _cdb=_cbf.m.getItem(item,"shape");
if(_cdb!=null){
_cd6=this.makeHighlightForShape(item);
}else{
_cd6=this.makeCompositeHighlight(item);
_cd7=false;
}
}
}
}else{
var _cdb=_cbf.m.getItem(item,"shape");
if(_cdb!=null){
_cd6=this.makeHighlightForShape(item);
}else{
_cd6=this.makeCompositeHighlight(item);
_cd7=false;
}
}
if(_cd7){
this.helper.addTransformsToHighlight(_cd6,item);
this.helper.addClipToHighlight(_cd6,item);
}
return _cd6;
},getType:function(item){
var type=_cbf.m.getItem(item,"type");
if(type!=null){
return type;
}
var _cdc=_cbf.m.getItem(item,"shape");
if(_cdc==null){
return null;
}
type=this.getType(_cdc);
return type;
},makeHighlightForShape:function(item){
var _cdd=null;
var _cde=_cc0.m.getBounds(item);
if(_cde==null&&!this.isOpenPath(item)){
_cde=new _cc1.m(5,5,10,10);
}
if(_cde!=null){
this.prepareDummyShape(item,_cde);
_cdd=dojo.mixin({},item);
_cbf.m.remove(_cdd,"id");
this.applyHighlightToJSON(_cde,_cdd);
}
return _cdd;
},applyHighlightToJSON:function(_cdf,_ce0){
var _ce1=_cdf.toJSON();
var _ce2=_cbf.m.getItem(_ce1,"fill");
var _ce3=_cbf.m.getItem(_ce1,"stroke");
var _ce4=_cbf.m.getItem(_ce1,"effect");
if(_ce2!=null&&!this.isOpenPath(_ce0)){
_cbf.m.put(_ce0,"fill",_ce2);
}
if(_ce3!=null){
_cbf.m.put(_ce0,"stroke",_ce3);
}
if(_ce4!=null){
_cbf.m.put(_ce0,"effect",_ce4);
}
},setFill:function(fill,_ce5){
var type=this.getType(fill);
var _ce6=new Object();
if(type!=null){
var _ce7=_cbd.m.createSpecObject(fill,"com.ibm.vis.spec.FillSpec");
_ce6.fill=_ce7;
}else{
var _ce8=_cbd.m.createSpecObject(fill,"com.ibm.vis.spec.ColorSpec");
_ce6.fill=_ce8;
}
_cc2.m.modifyPaletteFill(_ce5,_ce6);
},setEffect:function(_ce9,_cea){
_cea.effect=_ce9;
},setOutlineColor:function(_ceb,_cec){
if(_ceb!=null){
var _ced=_cbe.m.createColorFromJSON(_ceb);
_cec.outline=_ced;
}
},prepareDummyShape:function(item,_cee){
var fill=_cbf.m.getItem(item,"fill");
var type=this.getType(item);
if("text".CPVisEngineEquals(type)){
fill=null;
}
var _cef=_cbf.m.getItem(item,"stroke");
var _cf0=_cbf.m.getItem(_cef,"color");
var _cf1=_cbf.m.getItem(item,"effect");
if(fill!=null){
this.setFill(fill,_cee);
}
if(_cf0!=null){
this.setOutlineColor(_cf0,_cee);
}
if(_cef!=null){
_cee.stroke=_cef;
}
if(_cf1!=null){
this.setEffect(_cf1,_cee);
}
_cc2.m.modifyShapeStyle(_cee,this.hiRep.getStyle());
},makeHighlightForLegendEntry:function(item){
var id=_cbf.m.getItem(item,"id");
var _cf2=this.getBoundsForLegendEntry(item);
if(_cf2==null){
return null;
}
var _cf3=id.indexOf("SW");
var _cf4=id.indexOf("T");
var _cf5="";
if(_cf3>-1){
var _cf6=id.substring(_cf3+2);
_cf5=id.substring(0,_cf3)+"T"+_cf6;
}else{
if(_cf4>-1){
var _cf7=id.substring(_cf4+1);
_cf5=id.substring(0,_cf4)+"SW"+_cf7;
}
}
if(_cf5.CPVisEngineLength()>0){
var text=this.visSceneMap.get(_cf5);
if(text!=null){
var _cf8=this.getBoundsForLegendEntry(text);
_cf2.extendToRect(_cf8);
}
}
this.expandBoundsForOutlineStroke(_cf2);
this.prepareDummyShape(item,_cf2);
var _cf9=_cf2.toJSON();
this.applyHighlightToJSON(_cf2,_cf9);
var fill=_cbf.m.getItem(_cf9,"fill");
_cbf.m.put(fill,"a",0.4);
return _cf9;
},makeCompositeHighlight:function(_cfa){
var _cfb=_cbf.m.getItem(_cfa,"children");
var sz=_cfb.length;
if(null==_cfb||0==sz){
return null;
}
var _cfc=_cbf.m.createSizedJSONArray(sz);
var ix=0;
for(var _cfd=0,_cfe=_cfb.length;_cfd<_cfe;++_cfd){
var _cff=_cfb[_cfd];
var part=_cff;
_cbf.m.addAt(_cfc,this.makeHighlight(part),ix);
}
var _d00=_cbf.m.createJSONObject();
_cbf.m.put(_d00,"children",_cfc);
return _d00;
},makeHighlightForText:function(item){
var _d01=_cc0.m.getPlaqueBounds(this.visSceneMap,item);
if(_d01==null){
return null;
}
this.expandBoundsForOutlineStroke(_d01);
this.prepareDummyShape(item,_d01);
var _d02=_d01.toJSON();
this.applyHighlightToJSON(_d01,_d02);
var fill=_cbf.m.getItem(_d02,"fill");
if(fill!=null){
_cbf.m.put(fill,"a",0.4);
}
return _d02;
},expandBoundsForOutlineStroke:function(_d03){
var _d04=_d03.getType();
if(_d04.CPVisEngineEquals("path")){
if(this.expandWidth>0){
for(var i=0;i<(_d03).x.length;++i){
(_d03).x[i]-=this.expandWidth;
(_d03).y[i]-=this.expandWidth;
}
}
}else{
if(this.expandWidth>0){
(_d03).x-=this.expandWidth;
(_d03).width+=this.expandWidth*2;
(_d03).y-=this.expandWidth;
(_d03).height+=this.expandWidth*2;
}
}
},applyHighlightToJSONObject:function(_d05){
if(this.stroke!=null){
_cbf.m.put(_d05,"stroke",this.stroke);
}
if(this.fill!=null&&!this.isOpenPath(_d05)){
_cbf.m.put(_d05,"fill",this.fill);
}
},isOpenPath:function(_d06){
var _d07=_cbf.m.getItem(_d06,"shape");
if(_d07==null){
return false;
}
var path=_cbf.m.getItem(_d07,"path");
if(path==null){
return false;
}
return !path.CPVISEngineEndsWith("Z");
},getBoundsForLegendEntry:function(_d08){
var _d09=this.helper.getItemFromScene(_d08);
var _d0a=_cbf.m.getItem(_d09,"children");
if(_d0a==null){
return this.getBoundsForLegendEntryChild(_d08);
}
var size=_d0a.length;
var _d0b=this.getBoundsForLegendChildren(_d0a,size);
return _d0b;
},getBoundsForLegendChildren:function(_d0c,size){
var _d0d=_d0c[0];
var _d0e=this.getBoundsForLegendEntryChild(_d0d);
for(var i=1;i<size;++i){
var _d0f=_d0c[i];
var rect=this.getBoundsForLegendEntryChild(_d0f);
var minX=Math.min(_d0e.x,rect.x);
var minY=Math.min(_d0e.y,rect.y);
var maxX=Math.max(_d0e.x+_d0e.width,rect.x+rect.width);
var maxY=Math.max(_d0e.y+_d0e.height,rect.y+rect.height);
_d0e.x=minX;
_d0e.y=minY;
_d0e.width=maxX-minX;
_d0e.height=maxY-minY;
}
return _d0e;
},getBoundsForLegendEntryChild:function(_d10){
var _d11=this.helper.getItemFromScene(_d10);
var _d12=_cc0.m.getBounds(_d11);
if(_d12!=null){
var _d13=_cbf.m.getItem(_d11,"transform");
if(_d13!=null){
var newX=_cbf.m.getItem(_d13,"dx");
if(newX!=null){
_d12.x+=newX;
}
var newY=_cbf.m.getItem(_d13,"dy");
if(newY!=null){
_d12.y+=newY;
}
}
return _d12;
}
var _d14=_cbf.m.getItem(_d11,"children");
if(_d14==null){
return null;
}
var size=_d14.length;
return this.getBoundsForLegendChildren(_d14,size);
}});
_cc6.makeParentMap=function(_d15){
var _d16=new _cc3.m();
for(var _d17=0,_d18=_d15.length;_d17<_d18;++_d17){
var _d19=_d15[_d17];
var _d1a=_d19;
_cc6.addChildrenToParentMap(_d1a,_d1a,_d16);
}
return _d16;
};
_cc6.addChildrenToParentMap=function(_d1b,_d1c,_d1d){
var _d1e=_cbf.m.getItem(_d1b,"children");
if(_d1e==null){
return;
}
for(var _d1f=0,_d20=_d1e.length;_d1f<_d20;++_d1f){
var _d21=_d1e[_d1f];
var _d22=_d21;
_d1d.put(_d22,_d1c);
_cc6.addChildrenToParentMap(_d22,_d22,_d1d);
}
};
_cc4.add("com/ibm/vis/interaction/internal/HighlightMaker",[],function(){
_cc6.FILL="fill";
_cc6.STROKE="stroke";
_cc6.COLOR="color";
_cc6.EFFECT="effect";
_cc6.CHILDREN="children";
_cc6.SHAPE="shape";
_cc6.PATH="path";
_cc6.ID="id";
_cc6.TEXT="text";
_cc6.BOUNDING_RECT_OPACITY=0.4;
});
return _cc6;
});
},"com/ibm/init/wait":function(){
define("com/ibm/init/wait",["./forkloader","./statics"],function(_d23,_d24){
return {load:function(id,_d25,_d26){
_d23.wait(function(){
_d24.init();
_d26();
});
}};
});
},"com/ibm/vis/monitor/LogLevel":function(){
define("com/ibm/vis/monitor/LogLevel",["com/ibm/init/statics","dojo/_base/declare"],function(_d27,_d28){
var _d29=_d28("com.ibm.vis.monitor.LogLevel",null,{name:null,code:0,grammar:false,constructor:function(name,code,_d2a){
this.name=name;
this.code=code;
this.grammar=_d2a;
},toString:function(){
return this.name;
},getName:function(){
return this.name;
},getCode:function(){
return this.code;
},isGrammar:function(){
return this.grammar;
}});
_d27.add("com/ibm/vis/monitor/LogLevel",[],function(){
_d29.Error=new _d29("Error",50,false),_d29.Warning=new _d29("Warning",40,false),_d29.Info=new _d29("Info",30,false),_d29.Detail=new _d29("Detail",20,false),_d29.Trace=new _d29("Trace",10,false);
_d29.GrammarError=new _d29("GrammarError",50,true),_d29.GrammarWarning=new _d29("GrammarWarning",40,true),_d29.GrammarInfo=new _d29("GrammarInfo",30,true);
});
return _d29;
});
},"com/ibm/vis/engine/internal/data/geo/GeoMatcher":function(){
define("com/ibm/vis/engine/internal/data/geo/GeoMatcher",["com/ibm/init/statics","dojo/_base/declare"],function(_d2b,_d2c){
var _d2d=_d2c("com.ibm.vis.engine.internal.data.geo.GeoMatcher",null,{totalRowCount:function(){
},getFeatures:function(_d2e){
}});
return _d2d;
});
},"com/ibm/vis/engine/internal/util/VisUtil":function(){
define("com/ibm/vis/engine/internal/util/VisUtil",["com/ibm/init/fork!../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_d2f,_d30,_d31){
var _d32=_d31("com.ibm.vis.engine.internal.util.VisUtil",null,{});
_d32.getPossibleAnimationFields=function(vis){
var ids=new _d2f.m();
for(var _d33=0,_d34=vis.data[0].fields,_d35=_d34.length;_d33<_d35;++_d33){
var _d36=_d34[_d33];
if(_d36.isCategorical()&&!_d36.isKey){
ids.add(_d36.id);
}
}
return ids;
};
return _d32;
});
},"com/ibm/init/fork":function(){
define("com/ibm/init/fork",["./forkloader"],function(_d37){
return {load:function(id,_d38,_d39){
_d37.fork(id,_d38,_d39);
}};
});
},"com/ibm/vis/engine/internal/interaction/effect/EffectStartEvent":function(){
define("com/ibm/vis/engine/internal/interaction/effect/EffectStartEvent",["../../../../interaction/internal/events/RaveEventImpl","com/ibm/init/statics","dojo/_base/declare"],function(_d3a,_d3b,_d3c){
var _d3d=_d3c("com.ibm.vis.engine.internal.interaction.effect.EffectStartEvent",[_d3a],{effect:null,constructor:function(_d3e,_d3f){
this.effect=_d3f;
},notifyListener:function(_d40){
(_d40).onEffectStart(this.effect);
}});
return _d3d;
});
},"com/ibm/vis/engine/internal/interaction/effect/ChangeEffectListener":function(){
define("com/ibm/vis/engine/internal/interaction/effect/ChangeEffectListener",["com/ibm/init/statics","dojo/_base/declare"],function(_d41,_d42){
var _d43=_d42("com.ibm.vis.engine.internal.interaction.effect.ChangeEffectListener",null,{onEffectStart:function(_d44){
},onEffectEnd:function(_d45){
}});
return _d43;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/DefaultDAGNodeWrappingAlgorithm":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/DefaultDAGNodeWrappingAlgorithm",["./DAGNodeWrappingAlgorithm","com/ibm/init/fork!../../../nativeImpl/Map","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!./Layer","com/ibm/init/fork!../../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_d46,_d47,_d48,_d49,_d4a,_d4b,_d4c){
var _d4d=_d4c("com.ibm.vis.engine.internal.grammar.layout.graph.DefaultDAGNodeWrappingAlgorithm",[_d46],{adapter:null,constructor:function(_d4e){
this.adapter=_d4e;
},assignRows:function(_d4f){
var _d50=this.extractLayers(_d4f);
return this.wrapNodes(_d4f,_d50);
},extractLayers:function(_d51){
var _d52,_d53,_d54;
_d54=(this.adapter.getSpec().swimLanes.id==null)?null:this.adapter.getSpec().swimLanes.id.$ref;
_d52=(this.adapter.getSpec().swimLanes.maxRowValue==null)?null:this.adapter.getSpec().swimLanes.maxRowValue.$ref;
_d53=(this.adapter.getSpec().swimLanes.idealNodeCountValue==null)?null:this.adapter.getSpec().swimLanes.idealNodeCountValue.$ref;
var _d55=this.adapter.getAllFieldValuesAsNumeric(_d54);
var _d56=this.adapter.getAllFieldValuesAsNumeric(_d52);
var _d57=this.adapter.getAllFieldValuesAsNumeric(_d53);
var _d58=new _d47.m();
for(var _d59=0,_d5a=_d51.nodes,_d5b=_d5a.length;_d59<_d5b;++_d59){
var node=_d5a[_d59];
if(!_d58.containsKey(node.layer)){
_d58.put(node.layer,new _d48.m());
}
_d58.get(node.layer).add(node);
}
var _d5c=new Array(_d55.length);
for(var i=0;i<_d55.length;++i){
var _d5d=new _d49.m(_d55[i]);
if((_d56[i]!=null)&&(_d56[i]>1)){
_d5d.maxRowCount=Math.floor(_d56[i]);
}
if(_d57[i]!=null){
_d5d.idealNodeCount=Math.floor(_d57[i]);
}
_d5d.nodeList=_d58.get(_d5d.id);
_d5c[i]=_d5d;
}
return _d5c;
},wrapNodes:function(_d5e,_d5f){
for(var _d60=0,_d61=_d5f.length;_d60<_d61;++_d60){
var _d62=_d5f[_d60];
if(this.nodeWrappingRequired(_d62)){
this.assignRowsToNodes(_d62);
}else{
if(_d62.nodeList!=null){
_d62.rows=new Array(1);
_d62.rows[0]=_d62.nodeList.toArray(new Array(_d62.nodeList.size()));
}
}
}
var _d63=this.updateLayerOfNodes(_d5f);
var _d64=this.getTotalLayerCount(_d5f);
_d5e.nodes=_d63.toArray(new Array(_d63.size()));
_d5e.reverseLinksIfNeeded();
return _d64;
},nodeWrappingRequired:function(_d65){
return (_d65.nodeList!=null)&&(_d65.nodeList.size()>0)&&(_d65.maxRowCount>1)&&(_d65.idealNodeCount<_d65.nodeList.size());
},getTotalLayerCount:function(_d66){
var _d67=0;
for(var _d68=0,_d69=_d66.length;_d68<_d69;++_d68){
var _d6a=_d66[_d68];
if(_d6a.rows!=null){
_d67+=_d6a.rows.length;
}else{
_d67++;
}
}
return _d67;
},updateLayerOfNodes:function(_d6b){
var _d6c=new _d48.m();
var _d6d=0;
for(var _d6e=_d6b.length-1;_d6e>=0;--_d6e){
var _d6f=_d6b[_d6e].rows;
if(_d6f!=null){
for(var _d70=_d6f.length-1;_d70>=0;--_d70){
for(var _d71=0,_d72=_d6f[_d70].length;_d71<_d72;++_d71){
var node=_d6f[_d70][_d71];
node.layer=node.layer+_d6d;
_d6c.add(node);
}
if(_d70!=0){
_d6d++;
}
}
}
}
return _d6c;
},assignRowsToNodes:function(_d73){
var _d74=this.getRowSkeleton(_d73);
var _d75=this.arrangeNodesByLinkDirection(_d73);
_d73.rows=this.fillNodesIntoRowSlots(_d74,_d75);
},fillNodesIntoRowSlots:function(rows,_d76){
var _d77=0;
for(var _d78=0;_d78<rows.length;++_d78){
for(var _d79=0;_d79<rows[_d78].length;++_d79){
rows[_d78][_d79]=_d76[_d77++];
}
}
return rows;
},arrangeNodesByLinkDirection:function(_d7a){
var _d7b=new Array(_d7a.nodeList.size());
var _d7c=Array.create([_d7a.nodeList.size()],0);
var i=0;
for(var _d7d=0,_d7e=_d7a.nodeList,_d7f=_d7e.size();_d7d<_d7f;++_d7d){
var node=_d7e.get(_d7d);
if(node.order!=null){
_d7c[i++]=node.order;
}else{
var _d80=0;
var _d81=0;
var _d82=0;
for(var _d83=0,_d84=node.inLink,_d85=_d84.length;_d83<_d85;++_d83){
var link=_d84[_d83];
if(link.from.layer>node.layer){
_d80++;
}else{
if(link.from.layer<node.layer){
_d81++;
}
}
}
for(var _d86=0,_d87=node.outLink,_d88=_d87.length;_d86<_d88;++_d86){
var link=_d87[_d86];
if(link.to.layer>node.layer){
_d80++;
}else{
if(link.to.layer<node.layer){
_d81++;
}
}
}
_d82=_d81-_d80;
_d7c[i++]=_d82;
}
}
var _d89=_d4a.m.makeSortOrder(_d7c);
for(var j=0;j<_d89.length;++j){
_d7b[j]=_d7a.nodeList.get(_d89[j]);
}
return _d7b;
},getRowSkeleton:function(_d8a){
var _d8b=0;
var _d8c=0;
var rows=null;
if(_d8a.nodeList.size()/_d8a.idealNodeCount>_d8a.maxRowCount){
_d8b=_d8a.nodeList.size()/_d8a.maxRowCount;
_d8c=_d8a.maxRowCount;
var _d8d=(_d8a.nodeList.size()%_d8c);
rows=new Array(_d8c);
for(var i=0;i<_d8c;++i){
if(i<_d8d){
rows[i]=new Array(Math.ceil(_d8b));
}else{
rows[i]=new Array(Math.floor(_d8b));
}
}
}else{
if(_d8a.nodeList.size()/_d8a.idealNodeCount<=_d8a.maxRowCount){
_d8c=Math.ceil(_d8a.nodeList.size()/_d8a.idealNodeCount);
rows=new Array(_d8c);
var _d8e=_d8a.nodeList.size();
for(var i=0;i<_d8c;++i){
_d8e=(_d8a.nodeList.size()-(i*_d8a.idealNodeCount));
rows[i]=new Array(Math.min(_d8e,_d8a.idealNodeCount));
}
}
}
return rows;
}});
return _d4d;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/PolarTransform":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/PolarTransform",["./CoordinateTransform","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!../../struct/MultiPartPoly","com/ibm/init/fork!../../../../exceptions/EngineException","com/ibm/init/fork!../../../../exceptions/ErrorCode","com/ibm/init/fork!../../struct/Arc","com/ibm/init/fork!../../struct/Wedge","com/ibm/init/fork!../../struct/Point","com/ibm/init/fork!../../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_d8f,_d90,_d91,_d92,_d93,_d94,_d95,_d96,_d97,_d98,_d99,_d9a,_d9b){
var _d9c=_d9b("com.ibm.vis.engine.internal.grammar.coordinate.PolarTransform",[_d8f],{mapResponseToAngle:false,startAngleRadian:0,clockWise:false,diameter:null,constructor:function(_d9d,_d9e,_d9f,_da0){
var _da1=(_d9d==null)?0:_d9d;
this.mapResponseToAngle=_d9e<2;
this.startAngleRadian=-_da1*3.141592653589793/180;
this.clockWise=_d9f;
this.diameter=_da0;
},isPolar:function(){
return true;
},needsInsideAxes:function(){
return true;
},getStartAngle:function(){
return this.startAngleRadian;
},transformShape:function(_da2,_da3,_da4){
var _da5=Math.min(_da3.width,_da3.height);
var _da6=Math.min(_da3.width,_da3.height);
var _da7=_d90.m.getPreferredSize(this.diameter,_da5,false,_da6);
var R=_da7/2;
var _da8=_da2.stroke;
if(_da8!=null){
var _da9=_d91.m.getItem(_da8,"width");
if(_da9!=null){
R=R-(_d92.m.convertLength(_da9,null,null)/2);
}
}
var _daa=null;
if(_da2.isGlyphLike()){
_daa=this.transformGlyph(_da2,_da3,R);
}else{
var _dab=_da2.getType();
if(_dab.CPVISEngineStartsWith("rect")||"square".CPVisEngineEquals(_dab)){
_daa=this.makeWedge(_da2,_da3,R);
}else{
if("circle".CPVisEngineEquals(_dab)){
_daa=this.transformCircle(_da2,_da3,R);
}else{
if("text".CPVisEngineEquals(_dab)||"multitext".CPVisEngineEquals(_dab)){
_daa=this.transformText(_da2,_da3,R);
}else{
if("line".CPVisEngineEquals(_dab)){
_daa=this.transformLine(_da2,_da3,R);
}else{
if(_d93.m.MULTIPOLY_NAME.CPVisEngineEquals(_dab)){
_daa=this.transformMultiPartPolyShape(_da2,_da3,R);
}else{
if(_da2.isTypeOf("poly")||_da2.isTypeOf("path")){
_daa=this.transformPolyShape(_da2,_da3,R);
}else{
if("schema".CPVisEngineEquals(_dab)){
_daa=this.transformSchema(_da2,_da3);
}else{
throw new _d94.m(null,_d95.m.ENGINE_UNSUPPORTED_OPERATION,("Cannot polar transform: "+_da2),null);
}
}
}
}
}
}
}
}
_daa.setGlobalGradientFromCircle(_da3.width/2,_da3.height/2,R);
return _daa;
},transformGlyph:function(_dac,_dad,R){
var p=_dac.getCenter();
var ox=p.x;
var oy=p.y;
this.transformPoint(p,_dad,R);
_dac.affine(1,p.x-ox,1,p.y-oy,false);
return _dac;
},transformSchema:function(_dae,_daf){
var _db0=_dae.parts;
for(var i=0;i<_db0.length;++i){
var _db1=this.transformShape(_db0[i],_daf,null);
if(_db1!=null){
_db0[i]=_db1;
}
}
return _dae;
},transformLine:function(_db2,_db3,R){
var line=_db2;
if(this.mapResponseToAngle){
if(line.x[0]==line.x[1]){
var r=R*line.x[0]/_db3.width;
var a=3.141592653589793*2*(1-line.y[0]/_db3.height);
var b=3.141592653589793*2*(1-line.y[1]/_db3.height);
var arc=new _d96.m(_db3.width/2,_db3.height/2,R*r,a+this.startAngleRadian,b+this.startAngleRadian);
arc.copyInfoFrom(line);
return arc;
}
}else{
if(line.y[0]==line.y[1]&&!line.isRadial){
var r=1-line.y[0]/_db3.height;
var a=3.141592653589793*2*(line.x[0]/_db3.width);
var b=3.141592653589793*2*(line.x[1]/_db3.width);
var arc=new _d96.m(_db3.width/2,_db3.height/2,R*r,a+this.startAngleRadian,b+this.startAngleRadian);
arc.copyInfoFrom(line);
return arc;
}
}
this.transformPolyShape(_db2,_db3,R);
return _db2;
},isTickInLeftHalf:function(_db4){
return (_db4<0.75&&_db4>0.25);
},isTickAtTopOrBottom:function(_db5){
return (_db5==0.25||_db5==0.75);
},transformText:function(_db6,_db7,R){
var c=_db6;
var _db8=this.mapResponseToAngle?1-c.p.y/_db7.height:c.p.x/_db7.width;
var a=3.141592653589793*2*_db8;
this.transformPoint(c.p,_db7,R);
var _db9=a+this.startAngleRadian+3.141592653589793/(c.vertical?1:2);
c.setTransform(this.makeRotateTransform(c.p,_db9));
if(c.tickLabelOrientation!=null){
_db8+=this.startAngleRadian/(2*3.141592653589793);
var _dba="start";
if("horizontal".CPVisEngineEquals(c.tickLabelOrientation)){
c.updateTransform(this.makeHorizontalTickLabelTransform(c.p,_db9));
}else{
if("auto".CPVisEngineEquals(c.tickLabelOrientation)){
if(this.isTickInLeftHalf(_db8)){
_dba="end";
}else{
if(this.isTickAtTopOrBottom(_db8)){
_dba="middle";
}
}
c.align=_dba;
c.updateTransform(this.makeAutoTickLabelTransform(c.p,_db9));
}else{
if("vertical".CPVisEngineEquals(c.tickLabelOrientation)){
if(this.isTickInLeftHalf(_db8)||this.isTickAtTopOrBottom(_db8)){
_dba="end";
}
c.align=_dba;
c.updateTransform(this.makeVerticalTickLabelTransform(c.p,_db9));
}
}
}
}
return _db6;
},transformCircle:function(_dbb,_dbc,R){
var c=_dbb;
var p=c.getCenter();
this.transformPoint(p,_dbc,R);
c.x=p.x;
c.y=p.y;
return _dbb;
},makeWedge:function(_dbd,_dbe,R){
var r=_dbd;
var _dbf;
var _dc0=this.calculateWedgeX(_dbe);
var _dc1=this.calculateWedgeY(_dbe);
var _dc2=this.calculateWedgeInnerRadius(R,r,_dbe);
var _dc3=this.calculateWedgeOuterRadius(R,r,_dbe);
var _dc4=this.calculateWedgeStartAngle(r,_dbe);
var _dc5=this.calculateWedgeEndAngle(r,_dbe);
_dbf=new _d97.m(_dc0,_dc1,_dc2,_dc3,_dc4,_dc5);
_dbf.copyInfoFrom(_dbd);
return _dbf;
},calculateWedgeOuterRadius:function(R,r,_dc6){
var r2=0;
if(this.mapResponseToAngle){
r2=(r.x+r.width)/_dc6.width;
}else{
r2=1-r.y/_dc6.height;
}
return R*r2;
},calculateWedgeInnerRadius:function(R,r,_dc7){
var r1=0;
if(this.mapResponseToAngle){
r1=r.x/_dc7.width;
}else{
r1=1-(r.y+r.height)/_dc7.height;
}
return R*r1;
},calculateWedgeEndAngle:function(r,_dc8){
var a2=0;
if(this.mapResponseToAngle){
if(this.clockWise){
a2=3.141592653589793*2*(1-(r.y+r.height)/_dc8.height);
}else{
a2=3.141592653589793*2*((r.y+r.height)/_dc8.height);
}
}else{
a2=(r.x+r.width)*3.141592653589793*2/_dc8.width;
}
return a2+this.startAngleRadian;
},calculateWedgeStartAngle:function(r,_dc9){
var a1=0;
if(this.mapResponseToAngle){
if(this.clockWise){
a1=3.141592653589793*2*(1-r.y/_dc9.height);
}else{
a1=3.141592653589793*2*(r.y/_dc9.height);
}
}else{
a1=r.x*3.141592653589793*2/_dc9.width;
}
return a1+this.startAngleRadian;
},calculateWedgeY:function(_dca){
return _dca.height/2;
},calculateWedgeX:function(_dcb){
return _dcb.width/2;
},transformPolyShape:function(poly,_dcc,R){
for(var i=0;i<poly.x.length;++i){
var p=new _d98.m(poly.x[i],poly.y[i]);
this.transformPoint(p,_dcc,R);
poly.x[i]=p.x;
poly.y[i]=p.y;
}
return poly;
},transformMultiPartPolyShape:function(_dcd,_dce,r){
for(var _dcf=0,_dd0=_dcd.subPolys,_dd1=_dd0.size();_dcf<_dd1;++_dcf){
var _dd2=_dd0.get(_dcf);
this.transformPolyShape(_dd2,_dce,r);
}
return _dcd;
},makeRotateTransform:function(c,_dd3){
var r=_d91.m.createJSONObject();
var cos=Math.cos(_dd3);
var sin=Math.sin(_dd3);
_d91.m.put(r,"xx",_d99.m.r3(cos));
_d91.m.put(r,"yx",_d99.m.r3(sin));
_d91.m.put(r,"xy",_d99.m.r3(-sin));
_d91.m.put(r,"yy",_d99.m.r3(cos));
_d91.m.put(r,"dx",_d99.m.r3(c.x-c.x*cos+c.y*sin));
_d91.m.put(r,"dy",_d99.m.r3(c.y-c.x*sin-c.y*cos));
return r;
},transformPoint:function(p,_dd4,R){
var r=this.calculateRadius(p,_dd4,R);
var _dd5=this.calculateTheta(p,_dd4);
p.x=_dd4.width/2+r*Math.cos(_dd5+this.startAngleRadian);
p.y=_dd4.height/2+r*Math.sin(_dd5+this.startAngleRadian);
},calculateTheta:function(p,_dd6){
var _dd7=0;
if(this.mapResponseToAngle){
_dd7=3.141592653589793*2*(1-p.y/_dd6.height);
}else{
_dd7=3.141592653589793*2*(p.x/_dd6.width);
}
return _dd7;
},calculateRadius:function(p,_dd8,R){
var r=0;
if(this.mapResponseToAngle){
r=R*(p.x/_dd8.width);
}else{
r=R*(1-p.y/_dd8.height);
}
return r;
},inverseTransform:function(pt,_dd9,_dda){
var a=Math.atan2(pt[0]-_dd9.height/2,pt[1]-_dd9.width/2);
a-=this.startAngleRadian;
if(a<0){
a+=3.141592653589793*2;
}
a=a/(3.141592653589793*2);
if(this.mapResponseToAngle){
a=_dd9.height-a*_dd9.height;
pt[0]=a;
pt[1]=_dd9.width/2;
}else{
a*=_dd9.width;
var dy=pt[0]-_dd9.height/2;
var dx=pt[1]-_dd9.width/2;
var dr=Math.sqrt(dx*dx+dy*dy);
var R=Math.min(_dd9.width,_dd9.height)/2;
var r=(1-dr/R)*_dd9.height;
pt[0]=a;
pt[1]=r;
}
return pt;
},getDiameterSpec:function(){
return this.diameter;
},getClockwise:function(){
return this.clockWise;
},calculateGapSize:function(_ddb,_ddc){
return 0;
},makeAutoTickLabelTransform:function(p,ang){
return this.makeRotateTransform(p,-ang);
},makeHorizontalTickLabelTransform:function(p,ang){
if(this.isTickAngleInLowerHalf(ang)){
return this.makeRotateTransform(p,3.141592653589793);
}else{
return this.makeRotateTransform(p,0);
}
},makeVerticalTickLabelTransform:function(p,ang){
ang-=3.141592653589793;
if(this.isTickAngleInRightHalf(ang)){
return this.makeRotateTransform(p,3.141592653589793);
}else{
return this.makeRotateTransform(p,0);
}
},isTickAngleInLowerHalf:function(_ddd){
return (_ddd>3.141592653589793*0.5&&_ddd<3.141592653589793*1.5);
},isTickAngleInRightHalf:function(_dde){
return (_dde<0.5*3.141592653589793||_dde>1.5*3.141592653589793);
}});
return _d9c;
});
},"com/ibm/vis/engine/internal/SceneParts":function(){
define("com/ibm/vis/engine/internal/SceneParts",["com/ibm/init/fork!./nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_ddf,_de0,_de1){
var _de2=_de1("com.ibm.vis.engine.internal.SceneParts",null,{beforeAxis:null,afterAxis:null,outerClipBounds:null,sceneParent:null,axis:null,elementsBeforeAxis:null,elementsAfterAxis:null,constructor:function(){
this.beforeAxis=new _ddf.m();
this.afterAxis=new _ddf.m();
this.axis=new _ddf.m();
this.elementsBeforeAxis=new _ddf.m();
this.elementsAfterAxis=new _ddf.m();
this.__constructor_com_ibm_vis_engine_internal_SceneParts.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_SceneParts:function(_de3){
this.sceneParent=_de3;
},addBeforeAxesItems:function(){
this.addItems(this.beforeAxis);
},addAfterAxesItems:function(){
this.addItems(this.afterAxis);
},addAxesItems:function(){
this.addItems(this.axis);
},addItems:function(_de4){
for(var _de5=0,_de6=_de4.size();_de5<_de6;++_de5){
var _de7=_de4.get(_de5);
this.sceneParent.push(_de7);
}
}});
return _de2;
});
},"com/ibm/vis/engine/internal/nativeImpl/SpecUtil":function(){
define("com/ibm/vis/engine/internal/nativeImpl/SpecUtil",["dojo/_base/declare","./BasicFactory","dojo/_base/xhr","dojo/json","exports"],function(_de8,BF,xhr,_de9,_dea){
_dea.resourcePath="";
_dea.findByID=function(obj,id){
if(obj.id==id){
return obj;
}
if(BF.isArray(obj)){
for(var i=0;i<obj.length;i++){
var _deb=_dea.findByID(obj[i],id);
if(_deb!=null){
return _deb;
}
}
}
for(var attr in obj){
if(!BF.isString(obj[attr])){
var _deb=_dea.findByID(obj[attr],id);
if(_deb!=null){
return _deb;
}
}
}
return null;
};
_dea.getConvertedValue=function(obj,attr){
if(obj._converted==null){
return null;
}else{
return obj._converted[attr];
}
};
_dea.setConvertedValue=function(obj,attr,_dec){
if((obj._converted==null)){
obj._converted={};
}
obj._converted[attr]=_dec;
};
_dea.extractFill=function(obj){
return BF.deepClone(obj);
};
_dea.getFillType=function(obj){
if(BF.containsKey(obj,"colors")||BF.containsKey(obj,"type")){
return "fill";
}
};
_dea.getTransformType=function(obj){
var type=obj["type"];
if(type=="inset"){
return "inset";
}
return "transform";
};
_dea.isEmpty=function(obj){
return BF.isEmpty(obj);
};
_dea.fromJSONObject=function(obj){
return obj;
};
_dea.createSpecObject=function(json){
return json;
};
_dea._changeToArray=function(obj,_ded){
if(!BF.isArray(obj[_ded])){
obj[_ded]=[obj[_ded]];
return {obj:obj,attr:_ded};
}
return null;
};
_dea.toJSONObject=function(obj){
return obj;
};
_dea.loadJSONSpec=function(_dee){
var _def=_dea.getResourcePath()+_dee;
xhr.contentHandlers.overrideJson=function(req){
return _de9.parse(req.responseText);
};
var _df0=null;
var _df1={url:_def,sync:true,handleAs:"overrideJson",load:function(data){
_df0=data;
}};
xhr.get(_df1);
return _df0;
};
_dea.getResourcePath=function(){
return this.resourcePath;
};
_dea.setResourcePath=function(path){
this.resourcePath=path;
};
_dea.copySpecObject=function(obj){
return BF.deepClone(obj);
};
});
},"com/ibm/vis/interaction/GraphInteractivity":function(){
define("com/ibm/vis/interaction/GraphInteractivity",["com/ibm/init/statics","dojo/_base/declare"],function(_df2,_df3){
var _df4=_df3("com.ibm.vis.interaction.GraphInteractivity",null,{hideChildrenOf:function(_df5,rows,_df6,_df7){
},hideParentsOf:function(_df8,rows,_df9,_dfa){
},showChildrenOf:function(_dfb,rows,_dfc,_dfd){
},showChildrenForExpandLevel:function(_dfe,rows,_dff,_e00,_e01){
},showParentsOf:function(_e02,rows,_e03,_e04){
},showParentsForExpandLevel:function(_e05,rows,_e06,_e07,_e08){
},showOnly:function(_e09,_e0a,_e0b,_e0c){
},showAll:function(_e0d,_e0e,_e0f){
},expandLineage:function(_e10,_e11,_e12,_e13,_e14,_e15){
},collapseLineageAll:function(_e16,_e17){
},getNodeLineageFieldValues:function(_e18){
},getEdgeLineageFieldValues:function(_e19){
}});
return _df4;
});
},"com/ibm/vis/interaction/ChangeEffects":function(){
define("com/ibm/vis/interaction/ChangeEffects",["com/ibm/init/statics","dojo/_base/declare"],function(_e1a,_e1b){
var _e1c=_e1b("com.ibm.vis.interaction.ChangeEffects",null,{makeTransitionEffect:function(_e1d){
},makeGrowEffect:function(_e1e){
},makeRevealEffect:function(_e1f){
},makeFadeInEffect:function(_e20){
},makeFadeOutEffect:function(_e21){
},makeFlyInEffect:function(_e22){
},makeSimultaneous:function(a,b){
},makeSequential:function(a,b){
},setChangeEffect:function(a,_e23){
},getChangeEffect:function(_e24){
},addListener:function(_e25){
},removeListener:function(_e26){
},getListeners:function(){
}});
_e1a.add("com/ibm/vis/interaction/ChangeEffects",[],function(){
_e1c.DEFAULT=0;
_e1c.ALTERNATE=1;
});
return _e1c;
});
},"com/ibm/vis/engine/internal/grammar/layout/LinkLengthComparator":function(){
define("com/ibm/vis/engine/internal/grammar/layout/LinkLengthComparator",["../../nativeImpl/Comparator","com/ibm/init/statics","dojo/_base/declare"],function(_e27,_e28,_e29){
var _e2a=_e29("com.ibm.vis.engine.internal.grammar.layout.LinkLengthComparator",[_e27],{compare:function(o1,o2){
var d1=(o1).getLinkLength();
var d2=(o2).getLinkLength();
if(d2-d1<0){
return 1;
}else{
if(d2-d1>0){
return -1;
}
}
return 0;
}});
return _e2a;
});
},"com/ibm/vis/engine/internal/nativeImpl/RAVEFormatter":function(){
define("com/ibm/vis/engine/internal/nativeImpl/RAVEFormatter",["dojo/_base/declare","./BasicFactory","./DateUtil","../grammar/units/Unit","./Map","../data/Range"],function(_e2b,BF,_e2c,Unit,Map,_e2d){
var _e2e=_e2b("com.ibm.vis.engine.internal.nativeImpl.RAVEFormatter",null,{numericPattern:null,suffix:null,prefix:null,decimal:null,scientific:null,constructor:function(_e2f,_e30,_e31){
this.numericPattern=_e2f;
this.suffix=_e31;
this.prefix=_e30;
this.decimal=new Map();
this.scientific=new Map();
},_parsePattern:function(_e32){
if(_e2e._numericPatternCache.hasOwnProperty(_e32)){
return _e2e._numericPatternCache[_e32];
}
var o={comma:-1,point:-1,minInt:1,minFrac:0,maxFrac:0,decimalSymbol:".",longSymbol:",",prefix:"",suffix:"",pattern:_e32};
o.pattern=_e32;
var pat=_e32;
for(var i=0;i<pat.length;i++){
if(pat.charAt(i)=="#"||pat.charAt(i)=="0"){
o.prefix=pat.substring(0,i);
pat=pat.substring(i);
break;
}
}
o.suffix=pat.replace(/[0]|[#]|[,]|[.]/g,"");
var nstr=pat.replace(/[^0#,\.]/g,"");
var _e33=nstr.split(/\./);
var _e34=_e33.shift();
var _e35=_e33.length>0?_e33.join(""):"";
o.point=_e35?_e34.length:-1;
o.comma=_e34.lastIndexOf(",");
if(o.comma!=-1){
o.comma=_e34.length-1-o.comma;
}
_e34=_e34.replace(/[,]/g,"");
_e35=_e35.replace(/[,]|[.]+/g,"");
o.maxFrac=_e35.length;
var tmp=_e34.replace(/[^0]/g,"");
if(tmp.length>o.minInt){
o.minInt=tmp.length;
}
o.minFrac=_e35.replace(/[^0]/g,"").length;
if(o.minFrac>0){
if(o.minInt==1){
o.minInt=tmp.length;
}
}
_e2e._numericPatternCache[_e32]=o;
return o;
},formatDecimal:function(opts,_e36){
var o=this._parsePattern(opts.pattern);
if(_e36===null||isNaN(_e36)){
return null;
}
var str=""+_e36;
var _e37=_e36<0;
if(_e37){
str=str.substring(1);
}
var _e38=str.split(/\./);
var _e39=_e38.shift();
var _e3a=_e38.join("");
var _e3b=0;
if(_e3a.length>o.maxFrac){
if(o.maxFrac>0){
_e3a=""+this.roundNumber(new Number("0."+_e3a),o.maxFrac);
if(_e3a==="1"){
_e3b=1;
}
_e3a=_e3a.substring(2);
}else{
if(_e3a.length>0){
if(_e3a.charAt(0)>"4"){
_e39=""+(new Number(_e39)+1);
}
}
_e3a="";
}
}
for(var i=_e3a.length;i<o.minFrac;i++){
_e3a=_e3a+"0";
}
while(_e3a.length>o.minFrac&&_e3a.charAt(_e3a.length-1)=="0"){
_e3a=_e3a.substring(0,_e3a.length-1);
}
if(_e3b>0){
_e39=""+(new Number(_e39)+_e3b);
}
while(_e39.length<o.minInt){
_e39="0"+_e39;
}
while(_e39.length>o.minInt&&_e39.charAt(0)=="0"){
_e39=_e39.substring(1);
}
if(o.comma>-1){
var j=0;
for(var i=_e39.length;i>0;i--){
if(j!=0&&j%o.comma==0){
_e39=_e39.substring(0,i)+o.longSymbol+_e39.substring(i);
j=0;
}
j++;
}
}
var _e3c=(_e37?"-":"")+o.prefix+_e39+((_e3a.length>0)?o.decimalSymbol+_e3a:"")+o.suffix;
return _e3c;
},formatDate:function(date,_e3d,_e3e,_e3f){
if(date===null){
return "";
}
var unit=Unit.get(_e3f,null);
var s=_e2c.INSTANCE.formatDate(date,unit);
return this.formatString(s,_e3d,_e3e);
},formatNumber:function(_e40,_e41,_e42,min,max,_e43){
if(_e40===null){
return null;
}
var s=null;
if(this.numericPattern==null){
s=this.format(_e40,min,max);
}else{
var opts={pattern:this.numericPattern};
if(this.numericPattern!=null){
if(this.numericPattern.indexOf("E")>0){
s=this.scientificFormat(_e40,this.numericPattern);
}else{
s=this.formatDecimal(opts,_e40);
}
}
}
var unit=Unit.get(_e43,null);
if(unit.abbreviation!=null){
}
if(unit.isPrefixAbbrev()){
s=unit.abbreviation+s;
}else{
s=s+unit.abbreviation;
}
return this.formatString(s,_e41,_e42);
},format:function(_e44,min,max){
var _e45;
var v=Math.max(Math.abs(max),Math.abs(min));
var _e46=(v!=0&&(v<0.0001||v>100000))?true:false;
var _e47=new _e2d(min,max);
if(_e46){
if(this.numericPattern==null){
_e45=this.scientificFormat(_e44,this.getDefaultFormattingPattern(_e47,true));
}else{
_e45=this.scientificFormat(_e44,this.numericPattern);
}
}else{
var _e48={pattern:this.getDefaultFormattingPattern(_e47,false)};
return this.formatDecimal(_e48,_e44);
}
return _e45;
},getDefaultFormattingPattern:function(_e49,_e4a){
var _e4b=_e49.getFormattingPrecision();
var _e4c;
if(_e4a){
_e4c=this.scientific.get(_e4b);
}else{
_e4c=this.decimal.get(_e4b);
}
if(_e4c==null){
if(_e4a){
_e4c="0.####";
}else{
_e4c="#.###";
}
for(var k=3;k<_e4b;k++){
_e4c=_e4c+"#";
}
if(_e4a){
_e4c=_e4c+"E0";
}
if(_e4a){
this.scientific.put(_e4b,_e4c);
}else{
this.decimal.put(_e4b,_e4c);
}
}
return _e4c;
},formatString:function(_e4d,_e4e,_e4f){
if(_e4d===null){
return null;
}
if(this.prefix!=null){
_e4d=this.prefix+_e4d;
}
if(this.suffix!=null){
_e4d=_e4d+this.suffix;
}
return _e4d;
},getNumberOfDigitsAfterDot:function(_e50){
var _e51=_e50.toString().indexOf(".");
var _e52=_e50.toString().indexOf("E");
var _e53=_e50.toString().substring(_e51,_e52);
var _e54=_e53.toString().length-1;
return _e54;
},getIndexOfFirstNonZero:function(_e55){
var _e56=0;
_e55=_e55+"";
for(var i=0;i<_e55.length;i++){
var _e57=_e55.charAt(i)+"";
if(BF.parseDouble(_e57)>0){
_e56=i;
break;
}
}
return _e56;
},getValueAfterDotForSmallerThanOne:function(_e58,_e59,_e5a){
var _e58=_e58+"";
var _e5b="0";
var _e5c=_e58.substring(_e58.indexOf(".")+1);
var _e5d=this.getIndexOfFirstNonZero(_e5c);
var _e5e=_e5d+_e59+_e5a;
if(_e5e>_e5c.length){
_e5e=_e5c.length;
}
if(_e5d+_e59==_e5c.length){
_e5b="0";
}else{
_e5b=_e5c.substring(_e5d+_e59,_e5e);
}
return _e5b;
},getValueBeforeDotForSmallerThanOne:function(_e5f,_e60){
_e5f=_e5f+"";
var _e61=_e5f.indexOf(".");
var _e62=_e5f.substring(_e61+1);
var _e63="";
if(_e5f!=null){
for(var i=0;i<_e62.length;i++){
if(BF.parseDouble(_e62.charAt(i)+"")>0){
_e63=_e62.substring(i,i+_e60);
break;
}
}
}
return _e63;
},getNumberOfDigitsBeforeDot:function(_e64){
return _e64.toString().indexOf(".");
},hasDecimal:function(_e65){
return (_e65.toString().indexOf(".")>=0);
},roundNumber:function(num,dec){
var _e66=Math.round(num*Math.pow(10,dec))/Math.pow(10,dec);
return _e66;
},scientificFormat:function(_e67,_e68){
var _e69="";
var _e6a=0;
var _e6b=_e67;
var _e6c=_e68;
var _e6d=0;
var _e6e=0;
var _e6f="";
var _e70="";
var _e71="";
var _e72=0;
var _e73;
var _e74=0;
var _e75="";
var _e76=0;
var _e77=0;
var _e78="";
var _e79=false;
var x=BF.parseDouble(_e6b);
if(_e67==0){
return "0E0";
}
if(_e6b<0){
_e6b=-_e6b.valueOf();
_e78=_e6b.valueOf();
_e79=true;
x=-x;
}else{
_e78=_e6b.valueOf();
_e79=false;
}
var _e7a=this.hasDecimal(_e78);
if(_e7a){
if(x<=1){
}else{
if(x>100000){
_e69=_e78.toString().substring(0,_e6b.toString().indexOf("."));
_e6a=_e69.toString().CPVisEngineLength();
}else{
_e69=_e78.toString().substring(0,_e6b.toString().indexOf("."));
_e6a=_e69.toString().CPVisEngineLength();
}
}
}else{
_e6a=_e78.toString().CPVisEngineLength();
_e69=_e78.toString();
}
_e6d=this.getNumberOfDigitsBeforeDot(_e6c);
_e6e=this.getNumberOfDigitsAfterDot(_e6c);
if(x<1){
_e6f=this.getValueBeforeDotForSmallerThanOne(x,_e6d);
valueAfterDot=this.getValueAfterDotForSmallerThanOne(x,_e6d,_e6e);
var _e7b=this.getIndexOfFirstNonZero(x);
_e77=-1*(_e7b-1);
_e74=valueAfterDot;
}else{
if(x>1){
_e6f=_e69.toString().substring(0,_e6d);
_e70=_e69.toString().substring(_e6d);
if(_e6e>_e69.length){
var _e7c=_e6e-_e69.length+1;
for(var j=0;j<=_e7c;j++){
_e70+="0";
}
}
_e71=_e70.toString().substring(0,_e6e);
_e72=_e6e;
_e73=_e70.charAt(_e72);
_e71=this.roundNumber(BF.parseDouble("."+_e70),_e6e).toString();
if(_e71.toString().length<3){
_e74=_e71.toString().substring(0);
}else{
_e74=_e71.toString().substring(2);
}
}
}
if(x<1){
var _e7b=this.getIndexOfFirstNonZero(x);
_e77=-1*(_e7b-1);
_e74=valueAfterDot;
}else{
if(x>100000){
_e77=_e6a-_e6d;
}else{
_e77=_e6a-_e6d;
}
}
var _e7d=BF.parseDouble("."+_e74).valueOf();
var _e7e=_e7d.toString().substring(2);
var _e7f=_e7e!=""?"."+_e7e:"";
_e75=_e6f.toString().substring(0,1)+_e7f+"E"+_e77.toString();
if(x<=1||x>100000){
return ((_e79?"-":"")+_e75);
}
return (_e79)?"-"+_e75:_e75;
}});
_e2e._numericPatternCache={};
_e2e.makeFromSpec=function(_e80){
var _e81="";
var _e82="";
var _e83=null;
if(_e80!=null){
_e83=_e80.numericPattern==null?null:_e80.numericPattern;
_e81=_e80.prefix;
_e82=_e80.suffix;
}
return new _e2e(_e83,_e81,_e82);
};
_e2e.makeFormatSpecFromRAVEFormatter=function(_e84){
var _e85=null;
if(_e84!=null){
_e85=new Object();
_e85.numericPattern=_e84.numericPattern==null?null:_e84.numericPattern;
_e85.prefix=_e84.prefix;
_e85.suffix=_e84.suffix;
}
return _e85;
};
_e2e.make=function(_e86,_e87,_e88){
return new _e2e(_e86,_e87,_e88);
};
return _e2e;
});
},"com/ibm/vis/engine/internal/struct/PolyGeom":function(){
define("com/ibm/vis/engine/internal/struct/PolyGeom",["com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!./Point","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/fork!../nativeImpl/StringBuilder","com/ibm/init/fork!../util/MathUtil","com/ibm/init/fork!./Rect","com/ibm/init/fork!../../../exceptions/EngineException","com/ibm/init/fork!../../../exceptions/ErrorCode","com/ibm/init/fork!./Path","com/ibm/init/statics","dojo/_base/declare"],function(_e89,_e8a,_e8b,_e8c,_e8d,_e8e,_e8f,_e90,_e91,_e92,_e93,_e94){
var _e95=_e94("com.ibm.vis.engine.internal.struct.PolyGeom",null,{x:null,y:null,types:null,snap:false,constructor:function(x,y,_e96){
this.x=x;
this.y=y;
this.types=_e96;
},applyPointTransform:function(t){
for(var i=0;i<this.x.length;++i){
var p=t.transform(this.x[i],this.y[i]);
this.x[i]=p.x;
this.y[i]=p.y;
}
},makePath:function(){
var _e97=new _e8d.m();
for(var i=0;i<this.x.length;++i){
_e97.append(this.types[i]);
if(this.types[i]!="Z"){
_e97.append(_e8e.m.r3(this.x[i])+","+_e8e.m.r3(this.y[i]));
}
}
return _e97.toString();
},getMorphPath:function(_e98,t,_e99){
if(t<=0){
return this;
}
if(t>=1){
return _e98;
}
var n1=this.x.length;
var n2=_e98.x.length;
if(n2<n1){
return _e98.getMorphPath(this,1-t,_e99);
}
var px=Array.create([_e98.x.length],0);
var py=Array.create([_e98.y.length],0);
for(var i=0;i<n2;++i){
var _e9a=Math.round(i*n1/n2);
_e9a=Math.min(_e9a,n1-1);
if(this.types[_e9a]=="Z"&&_e98.types[i]=="Z"){
px[i]=NaN;
py[i]=NaN;
}else{
var x1=this.getValue(this.x,_e9a);
var x2=this.getValue(_e98.x,i);
var y1=this.getValue(this.y,_e9a);
var y2=this.getValue(_e98.y,i);
var _e9b=t;
if(_e99.CPVisEngineEquals(_e95.MORPH_GROW_WITH_SAME_SPEED)){
var _e9c=this.x.length==2?this.x[0]==this.x[1]:this.x[1]==this.getValue(this.x,2);
_e9b=_e9c?t*this.getMaxDistance(this.x,_e98.x)/Math.abs(x1-x2):t*this.getMaxDistance(this.y,_e98.y)/Math.abs(y1-y2);
if(_e8c.m.isInfinite(_e9b)||_e8c.m.isNaN(_e9b)||_e9b>1){
_e9b=1;
}
}
px[i]=(1-_e9b)*x1+_e9b*x2;
py[i]=(1-_e9b)*y1+_e9b*y2;
}
}
return new _e95(px,py,_e98.types);
},getMaxDistance:function(_e9d,_e9e){
var _e9f=0;
var n1=_e9d.length;
var n2=_e9e.length;
for(var i=0;i<n2;++i){
var _ea0=Math.round(i*n1/n2);
_ea0=Math.min(_ea0,n1-1);
_e9f=Math.max(_e9f,Math.abs(this.getValue(_e9d,_ea0)-this.getValue(_e9e,i)));
}
return _e9f;
},getValue:function(list,_ea1){
if(!_e8c.m.isNaN(list[_ea1])){
return list[_ea1];
}else{
return this.getValue(list,_ea1-1);
}
},projectToLine:function(x0,y0,x1,y1){
var len=this.x.length;
var _ea2=Array.create([len],0);
var _ea3=Array.create([len],0);
var _ea4=Array.create([len],"\x00");
if(x0==x1&&y0==y1){
for(var i=0;i<len;++i){
if(_e8c.m.isNaN(this.x[i])||_e8c.m.isNaN(this.y[i])){
_ea2[i]=NaN;
_ea3[i]=NaN;
}else{
_ea2[i]=x0;
_ea3[i]=y0;
}
}
}else{
if(x0==x1){
for(var i=0;i<len;++i){
if(_e8c.m.isNaN(this.x[i])||_e8c.m.isNaN(this.y[i])){
_ea2[i]=NaN;
_ea3[i]=NaN;
}else{
_ea2[i]=x0;
_ea3[i]=this.y[i];
}
}
}else{
if(y0==y1){
for(var i=0;i<len;++i){
if(_e8c.m.isNaN(this.x[i])||_e8c.m.isNaN(this.y[i])){
_ea2[i]=NaN;
_ea3[i]=NaN;
}else{
_ea2[i]=this.x[i];
_ea3[i]=y0;
}
}
}else{
var dx=x1-x0;
var dy=y1-y0;
var ll=dx*dx+dy*dy;
for(var i=0;i<len;++i){
if(_e8c.m.isNaN(this.x[i])||_e8c.m.isNaN(this.y[i])){
_ea2[i]=NaN;
_ea3[i]=NaN;
}else{
var u=((this.x[i]-x0)*dx+(this.y[i]-y0)*dy)/ll;
_ea2[i]=x0+u*dx;
_ea3[i]=y0+u*dy;
}
}
}
}
}
for(var i=0;i<len;++i){
_ea4[i]=this.types[i];
}
return new _e95(_ea2,_ea3,_ea4);
},getBounds:function(){
var len=this.x.length;
if(len==0){
return new _e8f.m(0,0,0,0);
}
var xmin=this.x[0];
var ymin=this.y[0];
var xmax=this.x[0];
var ymax=this.y[0];
for(var i=1;i<len;++i){
if(this.types[i]!="Z"){
xmin=Math.min(xmin,this.x[i]);
ymin=Math.min(ymin,this.y[i]);
xmax=Math.max(xmax,this.x[i]);
ymax=Math.max(ymax,this.y[i]);
}
}
var _ea5=new _e8f.m(xmin,ymin,xmax-xmin,ymax-ymin);
_ea5.snap=this.snap;
return _ea5;
},getPathForShape:function(){
var path=new _e92.m(this.x,this.y,false,this.types);
path.snap=this.snap;
return path;
},setSnap:function(_ea6){
this.snap=_ea6;
}});
_e95.makeJSONPath=function(geom){
var _ea7=_e89.m.createJSONObject();
_e89.m.put(_ea7,"type","path");
_e89.m.put(_ea7,"path",geom.makePath());
var _ea8=geom.getBounds();
_e89.m.put(_ea7,"x",_ea8.x);
_e89.m.put(_ea7,"y",_ea8.y);
_e89.m.put(_ea7,"width",_ea8.width);
_e89.m.put(_ea7,"height",_ea8.height);
return _ea7;
};
_e95.makeSegmented=function(x,y,_ea9){
var _eaa=new _e8a.m();
var _eab=new _e8a.m();
var last=new _e8b.m(x[0],y[0]);
var _eac=last;
for(var i=0;i<x.length;++i){
var type=_ea9==null?(i==0?"M":"L"):_ea9[i];
var p=new _e8b.m(x[i],y[i]);
if(type=="Z"){
p=_eac;
}
if(type=="M"){
_eab.add(type);
_eaa.add(p);
_eac=p;
}else{
if(type=="C"){
i++;
p=new _e8b.m(x[i],y[i]);
}else{
if(type=="Q"){
i+=2;
p=new _e8b.m(x[i],y[i]);
}else{
var N=Math.ceil(p.dist(last)/25);
for(var j=1;j<N+0.5;++j){
var _ead=last.interpolateTo(p,j/N);
_eaa.add(_ead);
_eab.add(type=="Z"&&j==N?"Z":"L");
}
}
}
}
last=p;
}
var N=_eaa.size();
var _eae=Array.create([N],0);
var _eaf=Array.create([N],0);
var _eb0=Array.create([N],"\x00");
for(var i=0;i<N;++i){
var p=_eaa.get(i);
_eb0[i]=_eab.get(i);
_eae[i]=p.x;
_eaf[i]=p.y;
}
return new _e95(_eae,_eaf,_eb0);
};
_e95.makePolyGeom=function(path){
var _eb1=new _e8a.m();
var _eb2=new _e8a.m();
var _eb3=new _e8a.m();
_eb3.add(path.charAt(0));
var sub=path.substring(1,path.indexOf(","));
_eb1.add(_e8c.m.parseDouble(sub));
var _eb4="x";
var _eb5=path.substring(path.indexOf(",")+1);
while(_eb5.indexOf(",")!=-1){
sub=_eb5.substring(0,_eb5.indexOf(","));
var _eb6=false;
for(var i=0;i<sub.CPVisEngineLength();++i){
if(_e95.isTypeChar(sub.charAt(i))){
_eb6=true;
_eb3.add(sub.charAt(i));
_eb2.add(_e8c.m.parseDouble(sub.substring(0,i)));
if(sub.charAt(i)!="Z"){
_eb1.add(_e8c.m.parseDouble(sub.substring(i+1)));
}else{
_eb1.add(NaN);
_eb2.add(NaN);
_eb3.add(sub.charAt(i+1));
_eb1.add(_e8c.m.parseDouble(sub.substring(i+2)));
}
break;
}
}
if(!_eb6){
if(_eb4.CPVisEngineEquals("x")){
_eb2.add(_e8c.m.parseDouble(sub));
_eb4="y";
}else{
_eb1.add(_e8c.m.parseDouble(sub));
_eb4="x";
_eb3.add(",");
}
}
_eb5=_eb5.substring(_eb5.indexOf(",")+1);
}
if(_eb5.charAt(_eb5.CPVisEngineLength()-1)=="Z"){
_eb2.add(_e8c.m.parseDouble(_eb5.substring(0,_eb5.CPVisEngineLength()-1)));
_eb3.add("Z");
_eb1.add(NaN);
_eb2.add(NaN);
}else{
_eb2.add(_e8c.m.parseDouble(_eb5));
}
var N=_eb3.size();
var _eb7=Array.create([N],0);
var _eb8=Array.create([N],0);
var _eb9=Array.create([N],"\x00");
for(var i=0;i<N;++i){
_eb9[i]=_eb3.get(i);
_eb7[i]=_eb1.get(i);
_eb8[i]=_eb2.get(i);
}
return new _e95(_eb7,_eb8,_eb9);
};
_e95.isTypeChar=function(c){
return c=="M"||c=="L"||c=="C"||c=="Q"||c=="Z";
};
_e95.area=function(x,y){
var sum=0;
for(var i=1;i<=x.length;++i){
var xi=i<x.length?x[i]:x[0];
var yi=i<y.length?y[i]:y[0];
sum+=x[i-1]*yi-xi*y[i-1];
}
return Math.abs(sum/2);
};
_e95.centroid=function(x,y){
var cx=0;
var cy=0;
var sx=0;
var sy=0;
var a=0;
for(var i=1;i<=x.length;++i){
var xi=i<x.length?x[i]:x[0];
var yi=i<y.length?y[i]:y[0];
var v=(x[i-1]*yi-xi*y[i-1]);
a+=v;
cx+=(x[i-1]+xi)*v;
cy+=(y[i-1]+yi)*v;
sx+=x[i-1];
sy+=y[i-1];
}
if(Math.abs(a)<1e-8){
return new _e8b.m(sx/x.length,sy/y.length);
}
return new _e8b.m(cx/a/3,cy/a/3);
};
_e95.makePolyGeomForLine=function(x1,y1,x2,y2){
return new _e95([x1,x2],[y1,y2],["M","L"]);
};
_e95.makePolyGeomForRect=function(x,y,_eba,_ebb){
return new _e95([x,x+_eba,x+_eba,x,NaN],[y,y,y+_ebb,y+_ebb,NaN],["M","L","L","L","Z"]);
};
_e95.makePolyGeomForCircle=function(cx,cy,r){
var N=Math.round(r*3.141592653589793/2);
if(N<8){
N=8;
}
var x=Array.create([N+1],0);
var y=Array.create([N+1],0);
var _ebc=Array.create([N+1],"\x00");
var t0=1.25*3.141592653589793;
for(var i=0;i<N;++i){
var t=t0+(2*3.141592653589793*i)/N;
x[i]=cx+r*Math.cos(t);
y[i]=cy+r*Math.sin(t);
_ebc[i]="L";
}
_ebc[0]="M";
x[N]=NaN;
y[N]=NaN;
_ebc[N]="Z";
return new _e95(x,y,_ebc);
};
_e95.makePathForShape=function(_ebd){
var type=_e89.m.getItem(_ebd,"type");
if("path".CPVisEngineEquals(type)){
return _e89.m.deepClone(_ebd);
}
return _e95.makeJSONPath(_e95.makePolyGeomForShape(_ebd));
};
_e95.makePolyGeomForShape=function(_ebe){
var type=_e89.m.getItem(_ebe,"type");
if("line".CPVisEngineEquals(type)){
var x1=_e89.m.getNumberWithDefault(_ebe,"x1",0);
var y1=_e89.m.getNumberWithDefault(_ebe,"y1",0);
var x2=_e89.m.getNumberWithDefault(_ebe,"x2",0);
var y2=_e89.m.getNumberWithDefault(_ebe,"y2",0);
return _e95.makePolyGeomForLine(x1,y1,x2,y2);
}
if("rect".CPVisEngineEquals(type)){
var x=_e89.m.getNumberWithDefault(_ebe,"x",0);
var y=_e89.m.getNumberWithDefault(_ebe,"y",0);
var _ebf=_e89.m.getNumberWithDefault(_ebe,"width",0);
var _ec0=_e89.m.getNumberWithDefault(_ebe,"height",0);
return _e95.makePolyGeomForRect(x,y,_ebf,_ec0);
}
if("circle".CPVisEngineEquals(type)){
var cx=_e89.m.getNumberWithDefault(_ebe,"cx",0);
var cy=_e89.m.getNumberWithDefault(_ebe,"cy",0);
var r=_e89.m.getNumberWithDefault(_ebe,"r",0);
return _e95.makePolyGeomForCircle(cx,cy,r);
}
if("path".CPVisEngineEquals(type)){
return _e95.makePolyGeom(_e89.m.getItem(_ebe,"path"));
}
throw new _e90.m(type,_e91.m.ENGINE_ILLEGAL_ARGUMENT,null,null);
};
_e93.add("com/ibm/vis/engine/internal/struct/PolyGeom",["com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/struct/Point","com/ibm/vis/engine/internal/nativeImpl/Double","com/ibm/vis/exceptions/EngineException","com/ibm/vis/exceptions/ErrorCode"],function(){
_e95.FAKE_TYPE=",";
_e95.MORPH_STANDARD="finishAtSameTime";
_e95.MORPH_GROW_WITH_SAME_SPEED="growWithSameSpeed";
});
return _e95;
});
},"com/ibm/vis/engine/internal/facet/FacetField":function(){
define("com/ibm/vis/engine/internal/facet/FacetField",["com/ibm/init/statics","dojo/_base/declare"],function(_ec1,_ec2){
var _ec3=_ec2("com.ibm.vis.engine.internal.facet.FacetField",null,{spec:null,field:null,constructor:function(spec,_ec4){
this.spec=spec;
this.field=_ec4;
},getFacetFieldSpec:function(){
return this.spec;
},getField:function(){
return this.field;
}});
return _ec3;
});
},"com/ibm/vis/engine/internal/scene/ItemBuilder":function(){
define("com/ibm/vis/engine/internal/scene/ItemBuilder",["com/ibm/init/fork!../struct/Insets","com/ibm/init/fork!../struct/Line","com/ibm/init/fork!./StyleBuilder","com/ibm/init/fork!../struct/Poly","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!../struct/Text","com/ibm/init/fork!../struct/MultiLineText","com/ibm/init/fork!../struct/PolyGeom","com/ibm/init/fork!../struct/ShapeFactory","com/ibm/init/fork!../struct/Path","com/ibm/init/statics","dojo/_base/declare"],function(_ec5,_ec6,_ec7,_ec8,_ec9,_eca,_ecb,_ecc,_ecd,_ece,_ecf,_ed0){
var _ed1=_ed0("com.ibm.vis.engine.internal.scene.ItemBuilder",null,{});
_ed1.makeLine=function(x1,y1,x2,y2,_ed2){
var base=new _ec6.m([x1,x2],[y1,y2],false);
if(_ed2==null){
_ec7.m.setDefaultStrokeStyle(base);
}else{
_ec7.m.setUnfilled(base,_ed2,null);
}
base.snap=_ec7.m.getSnap(_ed2);
return base;
};
_ed1.makePoly=function(x,y,_ed3){
var poly=new _ec8.m(x,y,true,null);
if(_ed3!=null){
_ec7.m.setFilled(poly,_ed3);
poly.snap=_ec7.m.getSnap(_ed3);
}
return poly;
};
_ed1.makeRectangle=function(x,y,_ed4,_ed5,_ed6){
var r=_ec7.m.getRectangleCornerRadius(_ed6,_ed4,_ed5);
var s=null;
if(r>0){
s=_ed1.makeRoundedRectangle(x,y,_ed4,_ed5,r);
}else{
s=new _ec9.m(x,y,_ed4,_ed5);
}
if(_ed6==null){
_ec7.m.setDefaultFillStyle(s);
}else{
_ec7.m.setFilled(s,_ed6);
}
s.snap=_ec7.m.getSnap(_ed6);
return s;
};
_ed1.makeText=function(_ed7,x,y,_ed8,_ed9,font,_eda,size,clip,_edb,_edc){
var base;
var _edd=null;
if(_ed7!=null){
_edd=_eca.m.createTextWithUnshapedValue(_ed7,x,y,_ed8,_ed9,font,_eda,_edb,_edc,size);
}
if(_ed1.isMultiLineText(font,_edd,size)){
base=_ecb.m.createMultiLineTextWithShapedValue(_edd.text,x,y,_ed8,_ed9,font,_eda,_edb,size,clip);
}else{
base=_edd;
}
if(base.getNumLines()==0){
return null;
}
base.snap=_ec7.m.getSnap(_eda);
return base;
};
_ed1.isMultiLineText=function(font,_ede,size){
if(size.width<=0||size.height<=0||_ede==null){
return false;
}
if(_ede.text.indexOf("\n")>=0){
return true;
}
if(size!=null){
if(font.getWidth(_ede)>size.width&&2*font.getHeight()<=size.height){
return true;
}
}
return false;
};
_ed1.makeRoundedRectangle=function(xc,yc,_edf,_ee0,r){
var p=_ecc.m.makePolyGeom(_ecd.m.makeRoundedRectanglePath(xc,yc,_edf,_ee0,r));
var base=new _ece.m(p.x,p.y,true,p.types);
base.setRoundedRectangle(true);
return base;
};
_ed1.createOutlineShape=function(_ee1,_ee2,id){
var _ee3=_ee2.fill;
_ee2.fill=_ed1.FILL_TRANSPARENT;
_ec7.m.expandStroke(_ee2,0.5);
var _ee4=_ee1.getExtent();
var _ee5=_ed1.createBackgroundShape(_ee4.makeRect(),_ee2,id);
_ec7.m.expandStroke(_ee2,-0.5);
_ee2.fill=_ee3;
return _ee5;
};
_ed1.createFillShape=function(_ee6,_ee7,id){
var _ee8=_ee6.getExtent();
var _ee9=_ec5.m.makeForStyleStroke(_ee7.stroke,_ee7.outline,_ee8,_ee8,_ee7.outlineMethod);
var _eea=_ee9.insetRect(new _ec9.m(0,0,_ee6.width,_ee6.height));
if(_eea.x>1){
_eea=_ed1.OVERLAP_INSETS.insetRect(_eea);
}
var _eeb=_ee7.stroke;
var _eec=_ee7.outline;
_ee7.stroke=null;
_ee7.outline=null;
var _eed=_ed1.createBackgroundShape(_eea,_ee7,id);
_ee7.stroke=_eeb;
_ee7.outline=_eec;
return _eed;
};
_ed1.createBackgroundShape=function(rect,_eee,id){
var r=_ed1.makeRectangle(0,0,rect.width,rect.height,_eee);
r.setID(id);
if(_eee==null){
r.fill=null;
r.outline=null;
}
var _eef=r.toJSON();
rect.getTopLeft().translate(_eef);
return _eef;
};
_ecf.add("com/ibm/vis/engine/internal/scene/ItemBuilder",["com/ibm/vis/engine/internal/struct/Insets","com/ibm/vis/engine/internal/scene/StyleBuilder","com/ibm/vis/engine/internal/struct/Rect","com/ibm/vis/engine/internal/struct/Text","com/ibm/vis/engine/internal/struct/MultiLineText"],function(){
_ed1.RECT_STROKE_OVERLAP=0.5;
_ed1.OVERLAP_INSETS=_ec5.m.makeUniform(0.5);
_ed1.FILL_TRANSPARENT="transparent";
_ed1.tt=["M","C",",",",","L","C",",",",","L","C",",",",","L","C",",",",","Z"];
});
return _ed1;
});
},"com/ibm/vis/engine/internal/oldlegends/LegendContainer":function(){
define("com/ibm/vis/engine/internal/oldlegends/LegendContainer",["./LegendContent","com/ibm/init/fork!../oldlegendlayout/OldFlow","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!./LegendTitle","com/ibm/init/fork!./Legend","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!../oldlegendlayout/OldContentLayoutFactory","com/ibm/init/fork!./OldContentFrame","com/ibm/init/fork!../grammar/scale/ContentLayoutSpec","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../MutableInt","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_ef0,_ef1,_ef2,_ef3,_ef4,_ef5,_ef6,_ef7,_ef8,_ef9,_efa,_efb,_efc,_efd){
var _efe=_efd("com.ibm.vis.engine.internal.oldlegends.LegendContainer",[_ef0],{content:null,isHorizontalFlow:false,legend:null,legendTitle:null,constructor:function(_eff,_f00,vis,_f01,flow){
if(_f01.orientation!=null){
this.isHorizontalFlow=_ef1.m.valueOf(_f01.orientation)==_ef1.m.horizontal;
}else{
this.isHorizontalFlow=(flow==_ef1.m.horizontal);
}
this.content=new _ef2.m();
this.addItems(vis,_f01);
},addItems:function(vis,_f02){
var _f03=_f02.title;
var _f04=this.getAestheticsFromSpec(vis,_f02.aesthetics);
var _f05=false;
if(_f03!=null){
_f05=true;
if(_f03.length>0){
this.legendTitle=new _ef3.m(null,_f02.titleStyle,vis,_f03,this.isHorizontalFlow);
this.content.add(this.legendTitle);
}
}else{
if(_f04!=null){
var _f06=_f04[0].valueProvider.getLabel();
this.legendTitle=new _ef3.m(null,_f02.titleStyle,vis,[_f06],this.isHorizontalFlow);
this.content.add(this.legendTitle);
}
}
if(_f04!=null){
this.legend=new _ef4.m(null,this.style,vis,_f04,_f02,this.isHorizontalFlow);
this.content.add(this.legend);
}
if(_f04==null&&vis.grammar!=null){
var _f07=this.getLegendableAesthetics(vis);
for(var _f08=0,_f09=_f07.size();_f08<_f09;++_f08){
var aes=_f07.get(_f08);
if(aes[0].valueProvider.getBaseField()!=null){
var _f06=aes[0].valueProvider.getLabel();
if(!_f05){
this.legendTitle=new _ef3.m(null,_f02.titleStyle,vis,[_f06],this.isHorizontalFlow);
this.content.add(this.legendTitle);
}
this.legend=new _ef4.m(null,this.style,vis,this.getLegendAesthetics(aes,_f07),_f02,this.isHorizontalFlow);
this.content.add(this.legend);
}
}
}
},getLegendAesthetics:function(aes,_f0a){
if(!aes[0].type.CPVisEngineEquals("visibility")){
for(var _f0b=0,_f0c=_f0a.size();_f0b<_f0c;++_f0b){
var _f0d=_f0a.get(_f0b);
if(_f0d[0].type.CPVisEngineEquals("visibility")){
return [aes[0],_f0d[0]];
}
}
}
return aes;
},getAestheticsFromSpec:function(vis,_f0e){
if(_f0e==null){
return null;
}
var _f0f=new _ef2.m();
for(var i=0;i<_f0e.length;++i){
var aes=vis.getByID(_f0e[i].aesthetic.$ref);
if(!this.ignoreAesthetic(aes)){
_f0f.add(aes);
}
}
return _f0f.toArray(new Array(_f0f.size()));
},getShapes:function(_f10,id,_f11){
var _f12=this.getPaddedBounds(new _ef5.m(0,0,_f10.width,_f10.height));
return this.layoutShapes(_f12,this.content,"legendContent",id+"LC");
},hasContents:function(){
return this.content.size()>0;
},getLegendableAesthetics:function(vis){
var _f13=new _ef2.m();
var _f14=vis.grammar;
for(var _f15=0,_f16=_f14.length;_f15<_f16;++_f15){
var g=_f14[_f15];
var _f17=g.elements;
for(var _f18=0,_f19=_f17.length;_f18<_f19;++_f18){
var e=_f17[_f18];
var _f1a=e.getAesthetics();
for(var _f1b=0,_f1c=_f1a.length;_f1b<_f1c;++_f1b){
var a=_f1a[_f1b];
if(this.ignoreAesthetic(a)){
continue;
}
var _f1d=null;
var type=a.type;
if(e.pointOnLineAesthetic!=null){
if(a.valueProvider.getBaseField()!=null&&e.pointOnLineAesthetic.valueProvider.getBaseField()!=null&&a.valueProvider.getBaseField()==e.pointOnLineAesthetic.valueProvider.getBaseField()){
_f1d=e.pointOnLineAesthetic;
}
}
var _f1e=_f1d!=null?[a,_f1d]:[a];
if(!type.CPVisEngineEquals("meta")&&!type.CPVisEngineEquals("split")&&!type.CPVisEngineEquals("offset")&&(a!=_f1d||_f1a.length==1)){
_f13.add(_f1e);
}
}
for(var _f1f=0,_f20=e.labelProducers,_f21=_f20.size();_f1f<_f21;++_f1f){
var _f22=_f20.get(_f1f);
var _f23=_f22.getAesthetics();
if(_f23==null){
continue;
}
for(var _f24=0,_f25=_f23.length;_f24<_f25;++_f24){
var a=_f23[_f24];
_f13.add([a]);
}
}
}
}
return _f13;
},ignoreAesthetic:function(aes){
if(!aes.scale.localScale||this.vis==null){
return false;
}else{
for(var _f26=0,_f27=this.vis.grammar,_f28=_f27.length;_f26<_f28;++_f26){
var _f29=_f27[_f26];
if(_f29.isFacetChart()){
return true;
}
}
return false;
}
},layoutChildren:function(){
var _f2a=this.preferredSize;
var _f2b=new _ef5.m(0,0,_f2a.width,_f2a.height);
var _f2c=this.getPaddedBounds(_f2b);
var _f2d=_ef6.m.makeLayout(this.layoutSpec);
var _f2e=new _ef7.m();
_f2e.setPreferredSize(_f2c.getExtent());
_f2e.layoutMethod=_f2d;
_f2e.resizeToFit=true;
this.add(_f2e);
for(var _f2f=0,_f30=this.content,_f31=_f30.size();_f2f<_f31;++_f2f){
var _f32=_f30.get(_f2f);
if(_f32.layoutSpec==null){
var _f33=new _ef8.m();
_f33.flow=this.layoutSpec.flow;
this.layoutSpec=_f33;
}
_f32.createLayout(_f2c.getExtent(),null);
_f2e.add(_f32);
}
this.resizeLegendTitle(_f2c);
},resizeLegendTitle:function(_f34){
if(this.legendTitle!=null&&this.legend!=null){
var _f35=this.legend;
var _f36=new _ef5.m(0,0,_f35.getPreferredSize().width,_f35.getPreferredSize().height);
_f35.layoutWithBounds(_f36);
var _f37=_f35.getBounds();
_f35.resetLayout();
var _f38=new _ef9.m(0,0);
var _f39=this.legendTitle.preferredSize;
if(this.isHorizontalFlow){
_f38.height=_f39.height;
_f38.width=Math.max(_f34.width-_f37.width,_f34.width*0.2);
var _f3a=this.legendTitle.textLabeler.font.getEllipsisSize();
_f38.width=Math.max(_f3a,_f38.width);
_f38.width=Math.min(_f39.width,_f38.width);
}else{
_f38.height=Math.max(_f34.height-_f37.height,_f34.height*0.2);
_f38.width=_f39.width;
var _f3b=this.legendTitle.textLabeler.font.getHeight();
_f38.height=Math.max(_f3b,_f38.height);
_f38.height=Math.min(_f39.height,_f38.height);
}
this.legendTitle.setPreferredSize(_f38);
}
},calculateExtent:function(_f3c){
if(!this.isDefinedPositionalBounds()){
var _f3d=this.outerBounds;
var _f3e=_f3d.getValue("width");
var _f3f=_f3d.getValue("height");
if(this.isHorizontalFlow){
if(_f3f==null){
_f3c.height*=0.2;
}
}else{
if(_f3e==null){
_f3c.width*=0.2;
}
}
}
var _f40=this.inherited(arguments,[_f3c]);
_f40.width=Math.min(_f3c.width,_f40.width);
_f40.height=Math.min(_f3c.height,_f40.height);
return _f40;
},createShapesInScene:function(_f41,id,_f42){
var _f43=_f42;
if(_f42==null){
_f43=this.getTranslatedBounds();
}
if(_f43!=null){
this.createBackground(_f43,_f41,id+"-backoutline",id+"-back");
var _f44=_f43.getTopLeft();
var _f45=new _efa.m();
var _f46=this.getShapes(_f43.getExtent(),id,_f45);
var _f47=_efb.m.createJSONObject();
_efb.m.put(_f47,"type","legend");
_efb.m.put(_f47,"children",_f46);
var _f48=this.getPaddedBounds(_f43).getExtent();
this.translateByStyle(_f44,_f48);
_f44.translate(_f47);
_f41.push(_f47);
}
},createLayout:function(_f49,_f4a){
var _f4b=this.layoutSpec;
if(_f4b==null){
_f4b=new _ef8.m();
this.layoutSpec=_f4b;
}
if(_f4b.flow==null){
_f4b.flow=this.isHorizontalFlow?_ef1.m.horizontal.toString():_ef1.m.vertical.toString();
}
this.inherited(arguments,[_f49,_f4a]);
return this;
}});
_efc.add("com/ibm/vis/engine/internal/oldlegends/LegendContainer",["com/ibm/vis/engine/internal/oldlegends/LegendContent"],function(){
_efe.DEFAULT_LEGEND_SIZE_MODIFIER=0.2;
});
return _efe;
});
},"com/ibm/vis/engine/internal/struct/ArrowType":function(){
define("com/ibm/vis/engine/internal/struct/ArrowType",["com/ibm/init/fork!../nativeImpl/Map","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_f4c,_f4d,_f4e,_f4f,_f50){
var _f51=_f50("com.ibm.vis.engine.internal.struct.ArrowType",null,{name:null,filled:false,path:null,length:0,miterFactor:0,constructor:function(name,path,_f52,_f53,_f54){
this.miterFactor=_f53;
this.name=name;
this.path=path;
this.length=_f52;
this.filled=_f54;
_f51.arrows.put(name,this);
},getName:function(){
return this.name;
},getLength:function(){
return this.length;
},toJSON:function(_f55,geom,_f56){
var _f57=_f4d.m.deepClone(_f55);
var _f58=_f4d.m.createJSONObject();
_f4d.m.put(_f58,"path",this.path);
_f4d.m.put(_f58,"type","path");
_f4d.m.put(_f57,"shape",_f58);
_f4d.m.put(_f57,"transform",_f4e.m.makeRotation(geom.getAngle(),0,0));
_f4e.m.translate(_f57,geom.getX(),geom.getY());
_f4e.m.scale(_f57,geom.getSize());
var _f59=_f4d.m.getItem(_f57,"stroke");
var fill=_f4d.m.getItem(_f57,"fill");
if(_f59==null){
_f4d.m.put(_f57,"stroke",_f59=_f4d.m.createJSONObject());
}else{
if(_f4d.m.getItem(_f59,"style")!=null){
_f4d.m.remove(_f59,"style");
}
if(fill==null&&this.isFilled()){
var _f5a=_f4d.m.getItem(_f59,"color");
if(_f5a!=null){
_f4d.m.put(_f57,"fill",_f5a);
}
}
}
var _f5b=_f4d.m.getItem(_f59,"width");
var w=_f5b==null?1:_f5b;
_f4d.m.put(_f59,"width",w);
_f4d.m.put(_f57,"id",_f56);
return _f57;
},isFilled:function(){
return this.filled;
},getMiterFactor:function(){
return this.miterFactor;
},nameHashCode:function(){
if(this.name==null){
return 0;
}
if(_f51.ARROW.CPVisEngineEquals(this.name)){
return 1;
}else{
if(_f51.ARROW_FILLED.CPVisEngineEquals(this.name)){
return 2;
}else{
if(_f51.ARROW_CLOSED.CPVisEngineEquals(this.name)){
return 3;
}else{
if(_f51.CIRCLE.CPVisEngineEquals(this.name)){
return 4;
}else{
if(_f51.CIRCLE_FILLED.CPVisEngineEquals(this.name)){
return 5;
}else{
if(_f51.SQUARE.CPVisEngineEquals(this.name)){
return 6;
}else{
if(_f51.SQUARE_FILLED.CPVisEngineEquals(this.name)){
return 7;
}else{
if(_f51.DIAMOND.CPVisEngineEquals(this.name)){
return 8;
}else{
if(_f51.DIAMOND_FILLED.CPVisEngineEquals(this.name)){
return 9;
}
}
}
}
}
}
}
}
}
return 0;
},hashCode:function(){
var _f5c=31;
var _f5d=1;
_f5d=_f5c*_f5d+((this.name==null)?0:this.nameHashCode());
return _f5d;
}});
_f51.byName=function(name){
return _f51.arrows.get(name);
};
_f51.arrowType=function(name,path,_f5e,_f5f){
return new _f51(name,path,1,_f5e,_f5f);
};
_f51.arrowTypeLen=function(name,path,_f60,_f61,_f62){
return new _f51(name,path,_f62,_f60,_f61);
};
_f4f.add("com/ibm/vis/engine/internal/struct/ArrowType",["com/ibm/vis/engine/internal/nativeImpl/Map"],function(){
_f51.NONE="none";
_f51.ARROW="arrow";
_f51.ARROW_CLOSED="closedArrow";
_f51.ARROW_FILLED="filledArrow";
_f51.DIAMOND="diamond";
_f51.DIAMOND_FILLED="filledDiamond";
_f51.SQUARE="square";
_f51.SQUARE_FILLED="filledSquare";
_f51.CIRCLE="circle";
_f51.CIRCLE_FILLED="filledCircle";
_f51.arrows=new _f4c.m();
_f51.ArrowTypes=[_f51.arrowTypeLen(_f51.ARROW,"M0.86,0.5L0,0L0.86,-0.5M0,0L0.92,0",2,false,0.9),_f51.arrowTypeLen(_f51.ARROW_CLOSED,"M1.86,0.5L0,0L0.86,-0.5Z",2,false,0.86),_f51.arrowTypeLen(_f51.ARROW_FILLED,"M0.86,0.5L0,0L0.86,-0.5Z",2,true,0.86),_f51.arrowType(_f51.DIAMOND,"M0.5,0.5L0,0L0.5,-0.5L1,0Z",1.4,false),_f51.arrowType(_f51.DIAMOND_FILLED,"M0.5,0.5L0,0L0.5,-0.5L1,0Z",1.4,true),_f51.arrowType(_f51.SQUARE,"M0,0.5L0,-0.5L1,-0.5L1,0.5Z",1,false),_f51.arrowType(_f51.SQUARE_FILLED,"M0,0.5L0,-0.5L1,-0.5L1,0.5Z",1,true),_f51.arrowType(_f51.CIRCLE,"M1.000,0.000L0.983,0.129L0.933,0.250L0.854,0.354L0.750,0.433L0.629,0.483L0.500,0.500L0.371,0.483L0.250,0.433L0.146,0.354L0.067,0.250L0.017,0.129L0.000,0.000L0.017,-0.129L0.067,-0.250L0.146,-0.354L0.250,-0.433L0.371,-0.483L0.500,-0.500L0.629,-0.483L0.750,-0.433L0.854,-0.354L0.933,-0.250L0.983,-0.129Z",1,false),_f51.arrowType(_f51.CIRCLE_FILLED,"M1.000,0.000L0.983,0.129L0.933,0.250L0.854,0.354L0.750,0.433L0.629,0.483L0.500,0.500L0.371,0.483L0.250,0.433L0.146,0.354L0.067,0.250L0.017,0.129L0.000,0.000L0.017,-0.129L0.067,-0.250L0.146,-0.354L0.250,-0.433L0.371,-0.483L0.500,-0.500L0.629,-0.483L0.750,-0.433L0.854,-0.354L0.933,-0.250L0.983,-0.129Z",1,true)];
});
return _f51;
});
},"com/ibm/vis/engine/internal/struct/GeomShape":function(){
define("com/ibm/vis/engine/internal/struct/GeomShape",["com/ibm/init/statics","dojo/_base/declare"],function(_f63,_f64){
var _f65=_f64("com.ibm.vis.engine.internal.struct.GeomShape",null,{getType:function(){
}});
return _f65;
});
},"com/ibm/vis/widget/VisControlLifecycleListener":function(){
define("com/ibm/vis/widget/VisControlLifecycleListener",["dojo/_base/declare","com/ibm/vis/widget/VisControl"],function(_f66,_f67){
var _f68=_f66("com.ibm.vis.widget.VisControlLifecycleListener",null,{onStartup:function(_f69){
},onBeingDestroyed:function(_f6a){
},onDestroy:function(_f6b){
}});
return _f68;
});
},"com/ibm/vis/engine/internal/struct/Point":function(){
define("com/ibm/vis/engine/internal/struct/Point",["com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../util/MathUtil","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_f6c,_f6d,_f6e,_f6f,_f70){
var _f71=_f70("com.ibm.vis.engine.internal.struct.Point",null,{x:0,y:0,constructor:function(dx,dy){
this.x=dx;
this.y=dy;
},add:function(dx,dy){
return new _f71(this.x+dx,this.y+dy);
},affine:function(xx,dx,yy,dy){
this.x=this.x*xx+dx;
this.y=this.y*yy+dy;
},reflect:function(size,_f72){
if(_f72){
this.y=size.height-this.y;
}else{
this.x=size.width-this.x;
}
},translate:function(item){
var _f73=_f6c.m.getItem(item,"transform");
var oldX=_f6c.m.getItem(_f73,"dx");
var oldY=_f6c.m.getItem(_f73,"dy");
var newX=this.x;
var newY=this.y;
if(oldX!=null){
newX+=oldX;
}
if(oldY!=null){
newY+=oldY;
}
if(newX!=0||newY!=0){
_f6c.m.put(item,"transform",_f6d.m.makeTransform(newX,newY,1));
}
},intTranslate:function(item){
var _f74=_f6c.m.getItem(item,"transform");
var oldX=_f6c.m.getItem(_f74,"dx");
var oldY=_f6c.m.getItem(_f74,"dy");
var newX=this.x;
var newY=this.y;
if(oldX!=null){
newX+=oldX;
}
if(oldY!=null){
newY+=oldY;
}
if(newX!=0||newY!=0){
_f6c.m.put(item,"transform",_f6d.m.makeIntTransform(newX,newY,1));
}
},transpose:function(b){
var _f75=this.x/b.width;
var _f76=this.y/b.height;
this.x=b.width-b.width*_f76;
this.y=b.height-b.height*_f75;
},toString:function(){
return "("+this.x+", "+this.y+")";
},dist:function(o){
return Math.sqrt((this.x-o.x)*(this.x-o.x)+(this.y-o.y)*(this.y-o.y));
},angle:function(o){
return Math.atan2(o.y-this.y,o.x-this.x);
},interpolateTo:function(o,d){
return new _f71(this.x+(o.x-this.x)*d,this.y+(o.y-this.y)*d);
},equals:function(o){
if(o==null){
return false;
}
if(o instanceof _f71){
var _f77=o;
return this.x==_f77.x&&this.y==_f77.y;
}
return false;
},hashCode:function(){
var _f78;
var temp;
temp=this.x!=0?_f6e.m.doubleToLongBits(this.x):0;
_f78=(temp^(temp>>>32));
temp=this.y!=0?_f6e.m.doubleToLongBits(this.y):0;
_f78=31*_f78+(temp^(temp>>>32));
return _f78;
},snapPosition:function(){
this.x=Math.round(this.x);
this.y=Math.round(this.y);
}});
return _f71;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/AestheticMapping":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/AestheticMapping",["com/ibm/init/fork!../../../../exceptions/SpecException","com/ibm/init/fork!../../../../exceptions/ErrorCode","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_f79,_f7a,_f7b,_f7c,_f7d,_f7e,_f7f){
var _f80=_f7f("com.ibm.vis.engine.internal.grammar.aesthetic.AestheticMapping",null,{stops:null,values:null,isSupportedVersion:true,rangeMin:0,rangeMax:0,constructor:function(_f81,_f82,_f83,_f84,_f85){
if(_f85!=null){
this.isSupportedVersion=this.checkVersionSupported(_f85,_f82);
}
if(!this.isSupportedVersion){
throw new _f79.m(null,_f7a.m.SPEC_INVALID_VERSION,"Mapping attribute at is not supported in current version",null,null,null,null);
}
this.calculateRange(_f83,_f84);
var _f86=new _f7b.m();
var _f87=new _f7b.m();
this.stops=new _f7b.m();
this.values=new _f7b.m();
this.applyDivergentColorRanges(_f82,_f83);
for(var i=0;i<_f82.length;++i){
var _f88=_f82[i].at;
if(_f7c.m.isNumber(_f88)){
if(_f83!=null){
if(_f83.isCategorical()){
this.stops.add(_f88);
this.values.add(_f81.make(_f82[i]));
_f86.add(i);
}else{
this.stops.add(_f83.toZeroOne(_f88,_f84.getUnit(),_f84.span));
this.values.add(_f81.make(_f82[i]));
_f87.add(i);
}
}
}else{
if(_f7c.m.isString(_f88)){
var _f89=_f88;
if(_f89.CPVISEngineEndsWith("%")){
_f89=_f89.substring(0,_f89.CPVisEngineLength()-1);
var off=_f7d.m.parseDouble(_f89)/100;
this.stops.add(off);
this.values.add(_f81.make(_f82[i]));
_f86.add(i);
}
}
}
}
for(var i=0;i<_f82.length;++i){
if((_f7c.m.isNumber(_f82[i].at))&&!(_f83!=null&&_f83.isCategorical())&&_f84!=null){
var _f8a=_f82[i].at;
if(_f84.getBaseField()==null||(_f8a<=this.rangeMin)){
for(var j=0;j<_f87.size();++j){
var _f8b=_f87.get(j);
for(var k=0;k<_f86.size();++k){
var _f8c=_f86.get(k);
if(_f8c<_f8b){
this.stops.remove(this.stops.get(_f8c));
this.values.remove(this.values.get(_f8c));
}
}
}
}else{
if(_f84.getBaseField()==null||(_f8a>=this.rangeMax)){
for(var j=0;j<_f87.size();++j){
var _f8b=_f87.get(j);
for(var k=0;k<_f86.size();++k){
var _f8c=_f86.get(k);
if(_f8c>_f8b){
this.stops.remove(this.stops.get(_f8c));
this.values.remove(this.values.get(_f8c));
}
}
}
}
}
}
}
},calculateRange:function(_f8d,_f8e){
if(_f8e!=null&&_f8e.getBaseField()!=null&&_f8e.getBaseField().range!=null){
this.rangeMin=_f8e.getBaseField().range.min;
this.rangeMax=_f8e.getBaseField().range.max;
}
if(_f8d!=null&&_f8d.spans.size()>0){
var _f8f=_f8d.spans.get(0).getAdjustedInputRange();
if(_f8f!=null){
this.rangeMin=_f8f.min;
this.rangeMax=_f8f.max;
}
}
},applyDivergentColorRanges:function(_f90,_f91){
var _f92=-1;
var _f93=-1;
var _f94=-1,_f95=-1;
var _f96=0;
var _f97=0;
var _f98=false;
for(var i=0;i<_f90.length;++i){
var _f99=_f90[i].at;
if(_f7c.m.isString(_f99)){
var _f9a=_f99;
if(_f9a.CPVisEngineEquals(_f80.SYMMETRIC_LOWER)){
_f98=true;
_f94=i;
if(i+1<_f90.length&&_f7c.m.isNumber(_f90[i+1].at)){
_f96=(_f90[i+1].at);
_f92=_f96-this.rangeMin;
}else{
throw new _f79.m(null,_f7a.m.SPEC_INVALID_VALUE,"symmetricLower is not provided with a threshold. A threshold"+" offset must be provided after symmetricLower value to calculate the Divergent Color Range.",null,null,null,null);
}
}else{
if(_f9a.CPVisEngineEquals(_f80.SYMMETRIC_UPPER)){
_f98=true;
_f95=i;
if(i-1>=0&&_f7c.m.isNumber(_f90[i-1].at)){
_f97=(_f90[i-1].at);
_f93=this.rangeMax-_f97;
}else{
throw new _f79.m(null,_f7a.m.SPEC_INVALID_VALUE,"symmetricUpper is not provided with a threshold. A threshold"+" offset must be provided before symmetricUpper value to calculate the Divergent Color Range.",null,null,null,null);
}
}
}
}
}
if(_f91!=null&&_f91.isCategorical()&&_f98){
throw new _f79.m(null,_f7a.m.SPEC_INVALID_VALUE,"symmetricUpper/symmetricLower is not applicable to categorical scale span",null,null,null,null);
}
if(_f92>_f93){
if(_f94!=-1){
_f90[_f94].at=_f96-_f92;
}
if(_f95!=-1){
_f90[_f95].at=_f97+_f92;
}
}else{
if(_f95!=-1){
_f90[_f95].at=_f97+_f93;
}
if(_f94!=-1){
_f90[_f94].at=_f96-_f93;
}
}
},checkVersionSupported:function(_f9b,_f9c){
var _f9d=false;
if(_f9b.CPVisEngineEquals("1.2")||_f9b.CPVisEngineEquals("1.1")){
_f9d=true;
}
for(var _f9e=0,_f9f=_f9c.length;_f9e<_f9f;++_f9e){
var _fa0=_f9c[_f9e];
if(_fa0.at!=null&&_f9d){
return false;
}
}
return true;
},getCategoryValue:function(_fa1){
for(var i=0;i<this.stops.size();++i){
if(Math.round(this.getStop(i))==_fa1){
return this.values.get(i);
}
}
return null;
},getStop:function(i){
var stop=this.stops.get(i);
return stop;
},getValue:function(i){
return this.values.get(i);
},size:function(){
return this.stops.size();
}});
_f80.makeMapping=function(_fa2,spec,_fa3,_fa4,_fa5){
if(spec.mapping==null){
return null;
}else{
return new _f80(_fa2,spec.mapping,_fa3,_fa4,_fa5);
}
};
_f7e.add("com/ibm/vis/engine/internal/grammar/aesthetic/AestheticMapping",[],function(){
_f80.SYMMETRIC_LOWER="symmetricLower";
_f80.SYMMETRIC_UPPER="symmetricUpper";
});
return _f80;
});
},"com/ibm/vis/engine/internal/grammar/scale/Tick":function(){
define("com/ibm/vis/engine/internal/grammar/scale/Tick",["com/ibm/init/fork!../../scene/ItemBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_fa6,_fa7,_fa8){
var Tick=_fa8("com.ibm.vis.engine.internal.grammar.scale.Tick",null,{name:null,location:0,value:0,constructor:function(name,_fa9,_faa){
this.name=name;
this.location=_fa9;
this.value=_faa;
},getName:function(){
return this.name;
},toString:function(){
return this.name+": "+this.location;
},makeText:function(p,_fab,_fac,_fad,_fae,_faf,clip){
return _fa6.m.makeText(this.name,p.x,p.y,_fab,_fac,_fad.font,_fae,_faf,clip,_fad.clipSymbol,_fad.shapingInfo);
},getLocation:function(_fb0,_fb1){
if(_fb1){
return (1-this.location)*_fb0.height;
}
return this.location*_fb0.width;
},isZeroth:function(_fb2,tick){
return _fb2==0&&tick.location==0;
},isTickAtExtent:function(_fb3,_fb4){
if(_fb3){
return this.getLocation(_fb4,true)==0;
}
return this.getLocation(_fb4,false)==_fb4.width;
},getAdjacentTickSpace:function(_fb5,_fb6){
var _fb7=1;
if(_fb5>0){
var d=Math.abs(this.location-_fb6.get(_fb5-1).location);
while(d==0&&_fb5>0){
d=Math.abs(this.location-_fb6.get(--_fb5).location);
}
_fb7=d;
}
if(_fb5<_fb6.size()-1){
var d=Math.abs(this.location-_fb6.get(_fb5+1).location);
while(d==0&&_fb5<_fb6.size()-1){
d=Math.abs(this.location-_fb6.get(++_fb5).location);
}
_fb7=Math.min(_fb7,d);
}
return _fb7;
}});
Tick.getTicksLocation=function(_fb8,_fb9,_fba){
var x=Array.create([_fb8.size()],0);
for(var i=0;i<_fb8.size();++i){
x[i]=_fb8.get(i).getLocation(_fb9,_fba);
}
return x;
};
return Tick;
});
},"com/ibm/vis/engine/internal/grammar/layout/LayoutAdapter":function(){
define("com/ibm/vis/engine/internal/grammar/layout/LayoutAdapter",["com/ibm/init/statics","dojo/_base/declare"],function(_fbb,_fbc){
var _fbd=_fbc("com.ibm.vis.engine.internal.grammar.layout.LayoutAdapter",null,{getSpec:function(){
},getStyle:function(){
},getFieldNumericValue:function(id,_fbe){
},getFieldStringValue:function(id,_fbf){
},getAllFieldValuesAsNumeric:function(id){
},getAllFieldValuesAsString:function(id){
},makeItemInRect:function(_fc0,_fc1){
},makeItemAtSimpleCoordinates:function(_fc2,_fc3,_fc4){
},makeItemFromPath:function(x,y,_fc5,_fc6,_fc7){
},makeLabelShape:function(spec,_fc8){
},makeLabelBackgroundShape:function(spec,_fc9,_fca){
},copyOrientationFrom:function(_fcb){
},getSharedLayoutInfo:function(){
},hasListeners:function(){
},logInfo:function(_fcc,key,_fcd){
},logDetail:function(_fce,key,_fcf){
},logWarn:function(_fd0,key,_fd1){
},logError:function(_fd2,key,_fd3){
},isOriented:function(){
},isSwapXY:function(){
},isReflectY:function(){
},setOrientation:function(_fd4){
},getOtherElementItems:function(){
},getElementItems:function(id){
},getAttachPoint:function(item,q,_fd5){
},getAttachExtent:function(item,_fd6,_fd7){
},getPadding:function(item,_fd8){
},getPaddedBounds:function(_fd9){
},getElementSize:function(){
},connect:function(rows,_fda,_fdb){
},getFieldRange:function(id){
},applyAffineTransform:function(_fdc,xx,dx,yy,dy,_fdd){
},isNodePruned:function(_fde){
},isLinkPruned:function(from,to){
},hasPrunedNodeOrEdge:function(){
},getStyledShape:function(id,_fdf,row){
},getLinkStyle:function(){
}});
return _fbd;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/TextInterpolatorData":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/TextInterpolatorData",["com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_fe0,_fe1,_fe2){
var _fe3=_fe2("com.ibm.vis.engine.internal.interaction.interpolation.TextInterpolatorData",null,{item:null,text:null,whitespace:false,constructor:function(item){
this.item=item;
this.text=_fe0.m.getItemWithDefault(_fe0.m.getItem(item,"shape"),"text","");
this.whitespace=_fe0.m.isWhitespaceString(this.text);
},getItem:function(){
return this.item;
},getText:function(){
return this.text;
},isWhitespace:function(){
return this.whitespace;
}});
_fe3.makeTextInterpolatorData=function(item){
return new _fe3(item);
};
return _fe3;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/ShapeNode":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/ShapeNode",["com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_fe4,_fe5,_fe6){
var _fe7=_fe6("com.ibm.vis.engine.internal.grammar.coordinate.ShapeNode",null,{shapes:null,nodeIsDirty:false,parent:null,preferredWidth:0,maxWidth:0,padding:0,nodeContainsElement:false,id:0,nodeIsLeaf:true,constructor:function(){
this.shapes=new _fe4.m();
this.__constructor_com_ibm_vis_engine_internal_grammar_coordinate_ShapeNode.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_grammar_coordinate_ShapeNode:function(_fe8){
this.setMaxWidth(_fe8);
},getParent:function(){
return this.parent;
},setParent:function(_fe9){
this.parent=_fe9;
},calculateSizeAndGaps:function(_fea,_feb){
this.calculateSizing(_fea,_feb);
},calculateSizing:function(_fec,_fed){
this.setPreferredWidth(Math.min(_fed,_fec));
this.setMaxWidth(_fed);
return this.preferredWidth;
},calculateGaps:function(_fee){
return 0;
},preProcess:function(){
},hasChildren:function(){
return false;
},getShapes:function(){
return this.shapes;
},addShape:function(_fef){
this.shapes.add(_fef);
this.nodeIsDirty=true;
if(_fef.shapeIsElement){
this.nodeContainsElement=true;
}
},setDirty:function(_ff0){
this.nodeIsDirty=_ff0;
},isDirty:function(){
return this.nodeIsDirty;
},setPreferredWidth:function(_ff1){
var _ff2=Math.min(this.maxWidth,_ff1);
this.preferredWidth=Math.max(0,_ff2);
},getPreferredWidth:function(){
return this.preferredWidth;
},setMaxWidth:function(_ff3){
this.maxWidth=Math.max(0,_ff3);
},getMaxWidth:function(){
return this.maxWidth;
},getRootNode:function(){
var node=this;
while(node.parent!=null){
node=node.parent;
}
return node;
},setPadding:function(_ff4){
this.padding=_ff4;
},getPadding:function(){
return this.padding;
},getAlignedStart:function(){
return 0;
},getChildren:function(){
return _fe7.EMPTY_CHILD_LIST;
},getGapSize:function(){
return 0;
},setContainsElement:function(_ff5){
this.nodeContainsElement=_ff5;
},containsElement:function(){
return this.nodeContainsElement;
},getNodesAtLevel:function(_ff6,_ff7){
return this.calculateNodesAtLevel(_ff6,_ff7);
},calculateNodesAtLevel:function(_ff8,_ff9){
if(_ff8==_ff9){
return 1;
}
return 0;
},getSizeOfNodesAtLevel:function(_ffa,_ffb){
if(_ffa==_ffb){
return this.preferredWidth;
}
return 0;
},setIndex:function(_ffc){
this.id=_ffc;
},getIndex:function(){
return this.id;
},getLevel:function(){
var _ffd=0;
var node=this;
while(node.parent!=null){
node=node.parent;
_ffd++;
}
return _ffd;
},fixOrdering:function(){
},isLeaf:function(){
return this.nodeIsLeaf;
}});
_fe5.add("com/ibm/vis/engine/internal/grammar/coordinate/ShapeNode",["com/ibm/vis/engine/internal/nativeImpl/List"],function(){
_fe7.EMPTY_CHILD_LIST=new _fe4.m();
});
return _fe7;
});
},"com/ibm/vis/engine/internal/interaction/effect/FadeInEffect":function(){
define("com/ibm/vis/engine/internal/interaction/effect/FadeInEffect",["./Effect","com/ibm/init/statics","dojo/_base/declare"],function(_ffe,_fff,_1000){
var _1001=_1000("com.ibm.vis.engine.internal.interaction.effect.FadeInEffect",[_ffe],{constructor:function(time,_1002){
this.setTarget(_1002);
},install:function(_1003){
this.inherited(arguments,[_1003]);
for(var _1004=0,_1005=this.targetIDs,_1006=_1005.size();_1004<_1006;++_1004){
var id=_1005.get(_1004);
var item=this.items.get(id);
var _1007=this.makeFadingKeyFrames(item,0,0,1,1);
_1003.addAnimatedStyle(id,_1007);
}
}});
return _1001;
});
},"com/ibm/vis/engine/internal/interaction/morph/MorphablePairComparator":function(){
define("com/ibm/vis/engine/internal/interaction/morph/MorphablePairComparator",["../../nativeImpl/Comparator","com/ibm/init/statics","dojo/_base/declare"],function(_1008,_1009,_100a){
var _100b=_100a("com.ibm.vis.engine.internal.interaction.morph.MorphablePairComparator",[_1008],{compare:function(o1,o2){
return (o2).score-(o1).score;
}});
return _100b;
});
},"com/ibm/vis/engine/internal/struct/Schema":function(){
define("com/ibm/vis/engine/internal/struct/Schema",["./Rect","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_100c,_100d,_100e,_100f){
var _1010=_100f("com.ibm.vis.engine.internal.struct.Schema",[_100c],{parts:null,filled:false,constructor:function(left,top,w,h,parts,fill){
this.parts=parts;
for(var _1011=0,_1012=parts.length;_1011<_1012;++_1011){
var part=parts[_1011];
part.parent=this;
}
this.filled=fill;
},getType:function(){
return "schema";
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("schema".CPVisEngineEquals(type)){
return true;
}
return false;
},makeGeometryClone:function(){
return new _1010(this.x,this.y,this.width,this.height,this.parts,this.filled);
},isFilled:function(){
return this.filled;
},affine:function(xx,dx,yy,dy,_1013){
this.inherited(arguments,[xx,dx,yy,dy,_1013]);
var newXX=xx;
var newYY=yy;
if(!_1013){
if(!this.canScaleX()){
newXX=1;
}
if(!this.canScaleY()){
newYY=1;
}
}
for(var _1014=0,_1015=this.parts,_1016=_1015.length;_1014<_1016;++_1014){
var part=_1015[_1014];
part.affine(newXX,dx,newYY,dy,false);
}
},copyInfoFrom:function(other){
this.inherited(arguments,[other]);
for(var _1017=0,_1018=this.parts,_1019=_1018.length;_1017<_1019;++_1017){
var part=_1018[_1017];
part.copyInfoFrom(other);
}
},getBounds:function(){
var _101a=null;
if(this.parts.length>1){
_101a=this.calculateBounds();
}else{
_101a=new _100c(this.x,this.y,this.width,this.height);
}
_101a.copyInfoFrom(this);
return _101a;
},calculateBounds:function(){
var minX,maxX,minY,maxY;
minX=this.parts[0].getBounds().x;
minY=this.parts[0].getBounds().y;
maxX=this.parts[0].getBounds().x+this.parts[0].getBounds().width;
maxY=this.parts[0].getBounds().y+this.parts[0].getBounds().height;
for(var i=1;i<this.parts.length;++i){
var shape=this.parts[i];
var _101b=shape.getBounds();
minX=(minX>_101b.x)?_101b.x:minX;
minY=(minY>_101b.y)?_101b.y:minY;
var x2=_101b.x+_101b.width;
var y2=_101b.y+_101b.height;
maxX=(maxX<x2)?x2:maxX;
maxY=(maxY<y2)?y2:maxY;
}
return new _100c(minX,minY,maxX-minX,maxY-minY);
},setRows:function(rows){
this.rows=rows;
for(var _101c=0,_101d=this.parts,_101e=_101d.length;_101c<_101e;++_101c){
var part=_101d[_101c];
part.rows=rows;
part.key=this.key;
}
},setID:function(ID){
this.id=ID;
for(var i=0,_101f=this.parts.length;i<_101f;++i){
this.parts[i].id=ID+"_"+i;
}
},setShapeParameters:function(o){
},getParts:function(){
return this.parts;
},toJSON:function(){
var o=this.makeBasicItem();
_100d.m.put(o,"type","schema");
this.getBounds().setShapeParameters(o);
var _1020=_100d.m.createSizedJSONArray(this.parts.length);
for(var _1021=0,_1022=this.parts,_1023=_1022.length;_1021<_1023;++_1021){
var part=_1022[_1021];
_1020.push(part.toJSON());
}
_100d.m.put(o,"children",_1020);
return o;
},transpose:function(b){
this.inherited(arguments,[b]);
for(var _1024=0,_1025=this.parts,_1026=_1025.length;_1024<_1026;++_1024){
var part=_1025[_1024];
part.transpose(b);
}
},setLocalGradientGeometry:function(){
this.inherited(arguments,[]);
for(var _1027=0,_1028=this.parts,_1029=_1028.length;_1027<_1029;++_1027){
var part=_1028[_1027];
part.setLocalGradientGeometry();
}
}});
_100e.add("com/ibm/vis/engine/internal/struct/Schema",["com/ibm/vis/engine/internal/struct/Rect"],function(){
_1010.SCHEMA_FLAGS=0;
_1010.SCHEMA_NAME="schema";
});
return _1010;
});
},"com/ibm/vis/engine/internal/grammar/units/UnitConverter":function(){
define("com/ibm/vis/engine/internal/grammar/units/UnitConverter",["com/ibm/init/fork!./Measure","com/ibm/init/fork!./Unit","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_102a,_102b,_102c,_102d,_102e,_102f,_1030){
var _1031=_1030("com.ibm.vis.engine.internal.grammar.units.UnitConverter",null,{});
_1031.convert=function(_1032,from,to){
if(from==to){
return _1032;
}
if(from.measure==_102a.m.TIME&&to.measure==_102a.m.DATETIME){
if(to==_102b.m.DATE){
return _1031.convert(_1032,from,_102b.m.DAY);
}
if(to==_102b.m.TIMESTAMP){
return _1031.convert(_1032,from,_102b.m.SECOND);
}
}
if(to.measure==_102a.m.TIME&&from.measure==_102a.m.DATETIME){
if(from==_102b.m.DATE){
return _1031.convert(_1032,_102b.m.DAY,to);
}
if(from==_102b.m.TIMESTAMP){
return _1031.convert(_1032,_102b.m.SECOND,to);
}
}
if(from.measure!=to.measure){
if(from.measure.matches(to.measure)){
return _1032;
}else{
return NaN;
}
}
var _1033=from.baseConversionFactor;
var _1034=to.baseConversionFactor;
if(_1033==0||_1034==0){
return _1031.convertSpecialCases(_1032,from,to);
}else{
return _1032*_1033/_1034;
}
};
_1031.convertRange=function(range,from,to){
var min=_1031.convert(range.min,from,to);
var max=_1031.convert(range.max,from,to);
return new _102c.m(min,max);
};
_1031.convertSpecialCases=function(_1035,from,to){
if(from.measure==_102a.m.TEMPERATURE){
if(from==_102b.m.CELSIUS&&to==_102b.m.FAHRENHEIT){
return _1035*1.8+32;
}
if(from==_102b.m.FAHRENHEIT&&to==_102b.m.CELSIUS){
return (_1035-32)/1.8;
}
if(from==_102b.m.CELSIUS&&to==_102b.m.KELVIN){
return _1035+273.15;
}
if(from==_102b.m.KELVIN&&to==_102b.m.CELSIUS){
return _1035-273.15;
}
if(from==_102b.m.FAHRENHEIT&&to==_102b.m.KELVIN){
return ((_1035-32)/1.8)+273.15;
}
if(from==_102b.m.KELVIN&&to==_102b.m.FAHRENHEIT){
return (_1035-273.15)*1.8+32;
}
}else{
if(from.measure==_102a.m.TIME){
if(from==_102b.m.MONTH&&to==_102b.m.YEAR){
return _1035/12;
}
if(from==_102b.m.YEAR&&to==_102b.m.MONTH){
return _1035*12;
}
}
}
return NaN;
};
_1031.convertLength=function(val,size,_1036){
if(val==null){
return null;
}
if(_102d.m.isNumber(val)){
var num=val;
var v=num;
return _102e.m.isNaN(v)?null:v;
}
if(_102d.m.isString(val)){
var str=val;
var n=str.CPVisEngineLength();
if(str.CPVISEngineEndsWith("%")){
var _1037=null;
if(size!=null){
_1037=_1031.tryParse(str.substring(0,n-1),size/100);
if(_1037!=null){
return _1037;
}
}
if(str.CPVISEngineEndsWith("%%")){
if(_1036==null){
return null;
}
return _1031.tryParse(str.substring(0,n-2),_1036/100);
}
return null;
}else{
if(str.CPVISEngineEndsWith("px")){
return _1031.tryParse(str.substring(0,n-2),1);
}else{
if(str.CPVISEngineEndsWith("pt")){
return _1031.tryParse(str.substring(0,n-2),0.0138888889*96);
}else{
if(str.CPVISEngineEndsWith("pc")){
return _1031.tryParse(str.substring(0,n-2),0.1666666667*96);
}else{
if(str.CPVISEngineEndsWith("cm")){
return _1031.tryParse(str.substring(0,n-2),0.3937007874*96);
}else{
if(str.CPVISEngineEndsWith("mm")){
return _1031.tryParse(str.substring(0,n-2),0.0393700787*96);
}else{
if(str.CPVISEngineEndsWith("in")){
return _1031.tryParse(str.substring(0,n-2),96);
}else{
return _1031.tryParse(str,1);
}
}
}
}
}
}
}
}
var spec=val;
var _1038=(spec.preferred==null)?null:_1031.convertLength(spec.preferred,size,_1036);
var max=(spec.max==null)?null:_1031.convertLength(spec.max,size,_1036);
var min=(spec.min==null)?null:_1031.convertLength(spec.min,size,_1036);
if(_1038==null){
if(max!=null&&min!=null){
_1038=(max+min)/2;
}else{
_1038=(max==null)?min:max;
}
}else{
if(max!=null){
_1038=(_1038>max)?max:_1038;
}
if(min!=null){
_1038=(_1038<min)?min:_1038;
}
}
return _1038;
};
_1031.isNegativeLength=function(val){
if(val==null){
return false;
}
if(_102d.m.isNumber(val)){
return (val)<0;
}
var str=val;
return (str.CPVISEngineStartsWith("-"));
};
_1031.tryParse=function(str,_1039){
try{
var v=_102e.m.parseDouble(str)*_1039;
return _102e.m.isNaN(v)?null:v;
}
catch(e){
if(e instanceof Error){
return null;
}else{
throw e;
}
}
};
_102f.add("com/ibm/vis/engine/internal/grammar/units/UnitConverter",["com/ibm/vis/engine/internal/grammar/units/Measure","com/ibm/vis/engine/internal/grammar/units/Unit","com/ibm/vis/engine/internal/data/Range","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/nativeImpl/Double"],function(){
_1031.IN_PX=96;
});
return _1031;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/functions/DoubleOrderedSet":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/functions/DoubleOrderedSet",["com/ibm/init/fork!../../../nativeImpl/BasicFactory","com/ibm/init/fork!../../../nativeImpl/Double","com/ibm/init/fork!../../../nativeImpl/StringBuilder","com/ibm/init/fork!../../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_103a,_103b,_103c,_103d,_103e,_103f){
var _1040=_103f("com.ibm.vis.engine.internal.grammar.coordinate.functions.DoubleOrderedSet",null,{values:null,used:0,constructor:function(_1041){
this.values=Array.create([_1041],0);
this.used=0;
},addAll:function(other){
var _1042=Array.create([this.used+other.used],0);
var i=0;
var j=0;
var count=0;
while(i<this.used||j<other.used){
if(i>=this.used){
_1042[count]=other.values[j];
j++;
}else{
if(j>=other.used){
_1042[count]=this.values[i];
i++;
}else{
if(this.values[i]<other.values[j]){
_1042[count]=this.values[i];
i++;
}else{
if(this.values[i]>other.values[j]){
_1042[count]=other.values[j];
j++;
}else{
_1042[count]=this.values[i];
i++;
j++;
}
}
}
}
count++;
}
this.values=_1042;
this.used=count;
},ensureCapacity:function(_1043){
if(this.values.length<_1043){
var _1044=Array.create([Math.max(_1043,2*this.values.length)],0);
_103a.m.arraycopy(this.values,0,_1044,0,this.values.length);
this.values=_1044;
}
},add:function(x){
this.ensureCapacity(this.used+1);
if(!_103b.m.isNaN(x)){
var index=this.findIndexOf(x);
if(index<0){
var _1045=-(index+1);
_103a.m.arraycopy(this.values,_1045,this.values,_1045+1,this.used-_1045);
this.used++;
this.values[_1045]=x;
}
}
},size:function(){
return this.used;
},get:function(index){
return this.values[index];
},contains:function(v){
return this.findIndexOf(v)>=0;
},asArray:function(){
var _1046=Array.create([this.used],0);
_103a.m.arraycopy(this.values,0,_1046,0,this.used);
return _1046;
},remove:function(x){
var index=this.findIndexOf(x);
if(index<0){
return false;
}else{
this.used-=1;
_103a.m.arraycopy(this.values,index+1,this.values,index,this.used-index);
return true;
}
},findIndexOf:function(x){
if(this.used==0||x<this.values[0]){
return -1;
}
if(x>this.values[this.used-1]){
return -this.used-1;
}
var _1047=0;
var top=this.used-1;
var index=Math.floor((this.used-1)/2);
while(top>_1047){
var value=this.values[index];
if(value==x){
return index;
}else{
if(value>x){
top=index-1;
index=Math.floor((top+_1047)/2);
}else{
_1047=index+1;
index=Math.floor((top+_1047)/2);
}
}
}
if(this.values[index]==x){
return index;
}else{
if(this.values[index]>x){
return -(index+1);
}else{
return -(index+2);
}
}
},toString:function(){
if(this.used==0){
return "{}";
}
var b=new _103c.m();
b.append("{");
for(var i=0;i<this.used;++i){
var value=this.values[i];
b.append(value);
b.append(",");
}
b.replace(b.length()-1,b.length(),"}");
return b.toString();
},equals:function(o){
if(this==o){
return true;
}
if(o==null){
return false;
}
try{
var that=o;
if(this.used!=that.used){
return false;
}
for(var i=0;i<this.used;++i){
if(this.values[i]!=that.values[i]){
return false;
}
}
return true;
}
catch(e){
if(e instanceof Error){
return false;
}else{
throw e;
}
}
},hashCode:function(){
return this.used;
},getDomain:function(){
if(this.used==0){
return _103d.m.EMPTY;
}else{
return new _103d.m(this.values[0],this.values[this.used-1]);
}
},retain:function(range){
if(this.used<=0){
return;
}
var _1048=this.getDomain();
if(_1048.contains(range.min)||_1048.contains(range.max)||range.contains(_1048.min)||range.contains(_1048.max)){
var _1049=this.findIndexOf(range.min);
if(_1049<0){
_1049=-_1049-1;
}
var _104a=this.findIndexOf(range.max);
if(_104a<0){
_104a=-_104a-1;
}else{
_104a=_104a+1;
}
_103a.m.arraycopy(this.values,_1049,this.values,0,_104a-_1049);
this.used=_104a-_1049;
}else{
this.used=0;
}
}});
return _1040;
});
},"com/ibm/vis/engine/internal/migration/spec/SpecMigration":function(){
define("com/ibm/vis/engine/internal/migration/spec/SpecMigration",["com/ibm/init/fork!../../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./SpecMigrationExtensionFactory","com/ibm/init/fork!../JSONMigration","com/ibm/init/fork!../../nativeImpl/ResourceUtil","com/ibm/init/fork!../DeclarativeMigrationStrategy","com/ibm/init/statics","dojo/_base/declare"],function(_104b,_104c,_104d,_104e,_104f,_1050,_1051){
var _1052=_1051("com.ibm.vis.engine.internal.migration.spec.SpecMigration",null,{});
_1052.getInstance=function(){
if(_1052.instance==null){
if(_1052.instance==null){
_104b.m.INSTANCE.registerDefaultFactory(new _104c.m());
var _1053=new _104d.m();
var _1054=_104e.m.getDeclarativeSpecMigrationStrategies();
if(_1054!=null){
for(var _1055=0,_1056=_104f.m.parse(_1054),_1057=_1056.size();_1055<_1057;++_1055){
var _1058=_1056.get(_1055);
_1053.addStrategy(_1058);
}
}
_1052.instance=_1053;
}
}
return _1052.instance;
};
_1050.add("com/ibm/vis/engine/internal/migration/spec/SpecMigration",["com/ibm/vis/extension/internal/RAVEExtensionManager","com/ibm/vis/engine/internal/migration/spec/SpecMigrationExtensionFactory","com/ibm/vis/engine/internal/migration/DeclarativeMigrationStrategy"],function(){
_1052.instance=null;
});
return _1052;
});
},"com/ibm/vis/exceptions/ErrorCode":function(){
define("com/ibm/vis/exceptions/ErrorCode",["../engine/internal/nativeImpl/Enum","com/ibm/init/statics","dojo/_base/declare"],function(_1059,_105a,_105b){
var _105c=_105b("com.ibm.vis.exceptions.ErrorCode",[_1059],{});
_105c.DATA_OVERFLOW=new _105c();
_105c.DATA_CONVERSION=new _105c();
_105c.ERROR_UNKNOWN=new _105c();
_105c.ENGINE_LAYOUT_DOES_NOT_FIT=new _105c();
_105c.ENGINE_UNMATCHED_KEY=new _105c();
_105c.ENGINE_TRANSITION_UNSUPPORTED_TARGET=new _105c();
_105c.ENGINE_LEGENDS_ERROR=new _105c();
_105c.ENGINE_LOCALIZATION_ERROR=new _105c();
_105c.ENGINE_ILLEGAL_ARGUMENT=new _105c();
_105c.ENGINE_UNSUPPORTED_OPERATION=new _105c();
_105c.SPEC_PARSE_FAIL=new _105c();
_105c.SPEC_INVALID_VALUE=new _105c();
_105c.SPEC_INVALID_LENGTH=new _105c();
_105c.SPEC_IS_EMPTY=new _105c();
_105c.SPEC_IS_NULL=new _105c();
_105c.SPEC_INVALID_LEGENDS=new _105c();
_105c.SPEC_DUPLICATE_ID=new _105c();
_105c.SPEC_INVALID_VERSION=new _105c();
_105c.SPEC_INVALID_NUMBER_OF_VALUES_IN_ROW=new _105c();
_105c.RENDERER_UNSUPPORTED=new _105c();
_105c.RENDERER_UNAVAILABLE=new _105c();
_105c.MIGRATION_INVALID_PATH_EXPRESSION=new _105c();
_105c.JSONPATH_INVALID_PATH=new _105c();
_105c.JSONPATH_UNSUPPORTED_FEATURE=new _105c();
_105c.JSONPATH_BAD_ARRAY_INDEX=new _105c();
_105c.JSONPATH_OBJECT_DOES_NOT_EXIST=new _105c();
_105c.TEMPLATE_INVALID_JSON=new _105c();
_105c.TEMPLATE_CANNOT_BE_RESOLVED=new _105c();
_105c.PARAMETER_NOT_FOUND=new _105c();
_105c.PARAMETER_VALUE_TYPE_MISMATCH=new _105c();
_105c.PARAMETER_ID_INVALID_TYPE=new _105c();
_105c.PARAMETER_DEFAULT_VALUE_TYPE_MISMATCH=new _105c();
_105c.SWIM_LANE_ELEMENT_ORDER=new _105c();
_105c.SWIM_LANE_DATA=new _105c();
return _105c;
});
},"com/ibm/vis/engine/internal/spechelper/PreferredSizeSpecHelper":function(){
define("com/ibm/vis/engine/internal/spechelper/PreferredSizeSpecHelper",["./SpecHelper","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/statics","dojo/_base/declare"],function(_105d,_105e,_105f,_1060,_1061){
var _1062=_1061("com.ibm.vis.engine.internal.spechelper.PreferredSizeSpecHelper",[_105d],{spec:null,constructor:function(spec){
if(spec==null){
spec=new Object();
}
this.spec=spec;
},getPreferred:function(width,_1063){
var _1064=this.spec.preferred;
if(_1064==null){
if(this.spec.max!=null){
_1064=this.spec.max;
}else{
if(this.spec.min!=null){
_1064=this.spec.min;
}
}
}
var value=_105f.m.convertLength(this.spec,width,_1063);
if(value==null){
return NaN;
}
return value;
},getMin:function(width,_1065){
var value=_105f.m.convertLength(this.spec.min,width,_1065);
if(value==null){
return NaN;
}
return value;
},getMax:function(width,_1066){
var value=_105f.m.convertLength(this.spec.max,width,_1066);
if(value==null){
return NaN;
}
return value;
},getSpec:function(){
return this.spec;
},isSpecDefined:function(){
return this.specDefined&&(this.spec.preferred!=null||this.spec.min!=null||this.spec.max!=null);
}});
_1062.createHelper=function(spec){
var _1067=new Object();
if(spec!=null){
if(_105e.m.isNumber(spec)||_105e.m.isString(spec)){
_1067.preferred=spec;
}else{
_1067=spec;
}
}
return new _1062(_1067);
};
return _1062;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/ShapeGroup":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/ShapeGroup",["./ShapeNode","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../util/CollectionsUtil","com/ibm/init/statics","dojo/_base/declare"],function(_1068,_1069,_106a,_106b,_106c,_106d){
var _106e=_106d("com.ibm.vis.engine.internal.grammar.coordinate.ShapeGroup",[_1068],{children:null,levelGapSize:null,gapsAtLevel:null,nodesAtLevel:null,gapSize:0,alignment:null,nodesReversed:false,nodeContainsLeaves:false,constructor:function(){
this.children=new _1069.m();
this.levelGapSize=new _106a.m();
this.gapsAtLevel=new _106a.m();
this.nodesAtLevel=new _106a.m();
this.alignment="start";
this.__constructor_com_ibm_vis_engine_internal_grammar_coordinate_ShapeGroup.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_grammar_coordinate_ShapeGroup:function(width){
this.nodeIsLeaf=false;
},add:function(shape,index){
this.children.add(shape);
if(shape.nodeIsLeaf){
this.setContainsLeaves(true);
}
shape.parent=this;
this.nodeIsDirty=true;
this.clearCache();
},setContainsLeaves:function(_106f){
this.nodeContainsLeaves=_106f;
},containsLeaves:function(){
return this.nodeContainsLeaves;
},clearCache:function(){
var _1070=this.getRootNode();
_1070.gapsAtLevel.clear();
_1070.nodesAtLevel.clear();
},reverse:function(){
_106b.m.reverse(this.children);
},setIsReversed:function(_1071){
this.nodesReversed=_1071;
},isReversed:function(){
return this.nodesReversed;
},getChildren:function(){
return this.children;
},hasChildren:function(){
return this.children.size()>0;
},preProcess:function(){
for(var _1072=0,_1073=this.children,_1074=_1073.size();_1072<_1074;++_1072){
var node=_1073.get(_1072);
node.preProcess();
}
},getMaxNumberOfChildren:function(){
return this.children.size();
},getAlignedStart:function(){
var _1075=0;
if("middle".CPVisEngineEquals(this.alignment)){
_1075=(this.maxWidth-this.preferredWidth)/2;
}else{
if("end".CPVisEngineEquals(this.alignment)){
_1075=this.maxWidth-this.preferredWidth;
}
}
return _1075;
},setGapSize:function(size){
this.gapSize=size;
},getGapSize:function(){
if(this.children.size()==0){
return 0;
}
return this.gapSize;
},setAlignment:function(align){
this.alignment=align;
},getAlignment:function(){
return this.alignment;
},getNodesAtLevel:function(_1076,_1077){
var _1078=0;
var _1079=this.getRootNode();
var _107a=_1079.nodesAtLevel.get(_1076);
if(_107a!=null){
_1078=_107a;
}else{
_1078=this.calculateNodesAtLevel(_1076,_1077);
_1079.nodesAtLevel.put(_1076,_1078);
}
return _1078;
},calculateNodesAtLevel:function(_107b,_107c){
var _107d=0;
if(_107b==_107c){
if(this.children.size()==0){
_107d=1;
}else{
_107d=this.children.size();
}
}else{
for(var _107e=0,_107f=this.children,_1080=_107f.size();_107e<_1080;++_107e){
var child=_107f.get(_107e);
_107d+=child.calculateNodesAtLevel(_107b,_107c+1);
}
if(this.children.size()==0){
_107d+=1;
}
}
return _107d;
},getSizeOfNodesAtLevel:function(_1081,_1082){
if(_1081==_1082){
return this.preferredWidth;
}
var _1083=0;
for(var _1084=0,_1085=this.getChildren(),_1086=_1085.size();_1084<_1086;++_1084){
var child=_1085.get(_1084);
var _1087=child.getSizeOfNodesAtLevel(_1081,_1082+1);
if(_1087>0&&child.nodeIsLeaf){
return _1087*this.getChildren().size();
}
_1083+=_1087;
}
return _1083;
},getNumberOfGaps:function(){
if(this.children.size()>0){
return this.children.size()-1;
}
return 0;
},setGapSizeAtLevel:function(level,_1088){
this.levelGapSize.put(level,_1088);
},getGapSizeAtLevel:function(level){
var _1089=this.levelGapSize.get(level);
if(_1089==null){
return NaN;
}
return _1089;
},getNumberOfGapsAtLevel:function(){
var _108a=this.getRootNode();
var _108b=_108a.gapsAtLevel.get(this.getLevel());
if(_108b!=null){
return _108b;
}
_108b=_108a.getNodesAtLevel(this.getLevel(),0)-1;
var _108c=0;
var _108d=this.parent;
var _108e=this.getLevel()-1;
if(_108d!=null){
_108c=_108a.getNodesAtLevel(_108e--,0)-1;
}
_108b-=_108c;
_108a.gapsAtLevel.put(this.getLevel(),_108b);
return _108b;
}});
return _106e;
});
},"com/ibm/vis/engine/internal/migration/ConverterReference":function(){
define("com/ibm/vis/engine/internal/migration/ConverterReference",["com/ibm/init/fork!../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_108f,_1090,_1091,_1092){
var _1093=_1092("com.ibm.vis.engine.internal.migration.ConverterReference",null,{id:null,parameters:null,constructor:function(id,_1094){
this.id=id;
this.parameters=_1094;
},get:function(){
return _108f.m.INSTANCE.newInstance(this.id,this.parameters);
}});
_1093.parse=function(_1095){
var _1096=null;
if(_1095!=null){
_1096=new _1093(_1090.m.getItem(_1095,"id"),_1090.m.getItem(_1095,"parameters"));
}
return _1096;
};
return _1093;
});
},"com/ibm/vis/engine/internal/grammar/layout/BubbleLayout":function(){
define("com/ibm/vis/engine/internal/grammar/layout/BubbleLayout",["./Layout","com/ibm/init/fork!../../struct/Insets","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../geom/Distance","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../struct/Point","com/ibm/init/fork!../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_1097,_1098,_1099,_109a,_109b,_109c,_109d,_109e,_109f){
var _10a0=_109f("com.ibm.vis.engine.internal.grammar.layout.BubbleLayout",[_1097],{padding:null,radii:null,extent:null,edges:null,locations:null,squarify:false,constructor:function(_10a1,_10a2){
this.squarify=_10a2;
},needsAestheticsPreApplied:function(){
return true;
},makeShapes:function(_10a3,_10a4){
this.extent=_10a4;
var style=this.adapter.getStyle();
if(style!=null){
this.padding=_1098.m.makeForStylePadding(style.padding,_10a4,_10a4);
}else{
this.padding=_1098.m.NONE;
}
var _10a5=new _1099.m();
var _10a6=new _1099.m(_10a3);
for(var i=0;i<_10a3;++i){
var s=this.adapter.makeItemAtSimpleCoordinates([0,0],i,true);
if(s!=null){
_10a5.add(s);
var c=_109a.m.getBoundingCircle(s);
_10a6.add(c.r+Math.max(this.padding.getHorizontal(),this.padding.getVertical())/2);
}
}
this.radii=_10a6.toArray();
this.place();
var items=new _1099.m();
var n=0;
for(var _10a7=0,_10a8=_10a5.size();_10a7<_10a8;++_10a7){
var s=_10a5.get(_10a7);
var p=s.getCenter();
var q=this.locations[n];
if(q!=null){
s.affine(1,_10a4.width/2+q.x-p.x,1,_10a4.width/2+q.y-p.y,false);
items.add(s);
}
n++;
}
this.scaleTo(_10a5);
return items;
},placeSimpleCircles:function(radii,_10a9){
this.radii=radii;
this.extent=_10a9;
this.place();
return this.locations;
},place:function(){
var N=this.radii.length;
var o=_109b.m.makeSortOrder(this.radii);
var order=Array.create([N],0);
for(var i=0;i<N;++i){
order[i]=o[N-i-1];
}
this.locations=new Array(N);
this.edges=new _1099.m();
if(N>0){
this.locations[order[0]]=new _109c.m(0,0);
}
if(N>1){
var d=this.radii[order[0]]+this.radii[order[1]];
this.locations[order[1]]=new _109c.m(d,0);
}
if(N>2){
var r0=this.radii[order[0]];
var r1=this.radii[order[1]];
var r2=this.radii[order[2]];
var q=this.getLocationForCanonicalCircles(r2,r0,r1);
this.locations[order[2]]=q;
this.edges.add([order[0],order[1]]);
this.edges.add([order[1],order[0]]);
this.edges.add([order[0],order[2]]);
this.edges.add([order[2],order[0]]);
this.edges.add([order[1],order[2]]);
this.edges.add([order[2],order[1]]);
var w=r0*r0+r1*r1+r2*r2;
var sx=r1*r1*(r1+r0)+r2*r2*q.x;
var sy=r2*r2*q.y;
for(var i=0;i<3;++i){
this.locations[order[i]].x-=sx/w;
this.locations[order[i]].y-=sy/w;
}
}
for(var i=3;i<N;++i){
this.placeOnEdge(i,order[i],order);
}
},placeOnEdge:function(_10aa,n,order){
var r=this.radii[n];
for(var i=0;i<this.edges.size();++i){
var edge=this.edges.get(i);
var e1=edge[0];
var e2=edge[1];
var q=this.placeTouching(this.locations[e1],this.radii[e1],this.locations[e2],this.radii[e2],r);
if(!this.intersectsExisting(q,r,_10aa,order)){
this.locations[n]=q;
this.addEdge([n,edge[1]]);
this.addEdge([edge[0],n]);
return;
}
}
},addEdge:function(e){
var dp=this.getTouchPointDistance(e);
var a=0;
if(dp<this.getTouchPointDistance(this.edges.get(a))){
this.edges.add(0,e);
return;
}
var b=this.edges.size()-1;
if(dp>=this.getTouchPointDistance(this.edges.get(b))){
this.edges.add(e);
return;
}
while(b>a+1){
var c=Math.floor((a+b)/2);
var dc=this.getTouchPointDistance(this.edges.get(c));
if(dp<dc){
b=c;
}else{
a=c;
}
}
this.edges.add(b,e);
},getTouchPointDistance:function(e){
var a=this.locations[e[0]];
var b=this.locations[e[1]];
var ra=this.radii[e[0]];
var rb=this.radii[e[1]];
var x=(a.x*rb+b.x*ra)/(ra+rb);
var y=(a.y*rb+b.y*ra)/(ra+rb);
if(this.squarify){
var dx=Math.abs(x)/this.extent.width;
var dy=Math.abs(y)/this.extent.height;
return Math.max(dx,dy);
}else{
return x*x+y*y;
}
},intersectsExisting:function(p,r,n,order){
for(var i=0;i<n;++i){
if(p.dist(this.locations[order[i]])<r+this.radii[order[i]]-0.01){
return true;
}
}
return false;
},placeTouching:function(c0,r0,c1,r1,r){
var x1=c1.x-c0.x;
var y1=c1.y-c0.y;
var R=r0+r1;
var cosA=x1/R;
var sinA=y1/R;
var p=this.getLocationForCanonicalCircles(r,r0,r1);
var x=p.x*cosA-p.y*sinA+c0.x;
var y=p.x*sinA+p.y*cosA+c0.y;
return new _109c.m(x,y);
},getLocationForCanonicalCircles:function(r,r0,r1){
var A=r0+r1;
var B=r0+r;
var C=r1+r;
var x=(A*A+B*B-C*C)/2/A;
var y=Math.sqrt(B*B-x*x);
return new _109c.m(x,y);
},scaleTo:function(_10ab){
var _10ac=this.getShapeRanges(_10ab);
var _10ad=this.extent.width/_10ac[0].range;
var _10ae=this.extent.height/_10ac[1].range;
var s=Math.min(_10ad,_10ae);
var xoff=-_10ac[0].min;
var yoff=-_10ac[1].min;
var dx=(this.extent.width-s*_10ac[0].range)/2;
var dy=(this.extent.height-s*_10ac[1].range)/2;
for(var _10af=0,_10b0=_10ab.size();_10af<_10b0;++_10af){
var shape=_10ab.get(_10af);
shape.affine(s,xoff*s+dx,s,yoff*s+dy,true);
}
},getShapeRanges:function(_10b1){
var _10b2=[_109d.m.EMPTY,_109d.m.EMPTY];
for(var _10b3=0,_10b4=_10b1.size();_10b3<_10b4;++_10b3){
var s=_10b1.get(_10b3);
var b=s.getBounds();
_10b2[0]=_10b2[0].unionValue(b.x).unionValue(b.x+b.width);
_10b2[1]=_10b2[1].unionValue(b.y).unionValue(b.y+b.height);
}
return _10b2;
}});
return _10a0;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/functions/CompositeFunctionalPath":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/functions/CompositeFunctionalPath",["./FunctionalPath","com/ibm/init/fork!./SumOperation","com/ibm/init/fork!./MinOperation","com/ibm/init/fork!./MaxOperation","com/ibm/init/fork!./DoubleOrderedSet","com/ibm/init/fork!../../../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_10b5,_10b6,_10b7,_10b8,_10b9,_10ba,_10bb,_10bc){
var _10bd=_10bc("com.ibm.vis.engine.internal.grammar.coordinate.functions.CompositeFunctionalPath",[_10b5],{a:null,b:null,op:null,constructor:function(a,b,op){
this.a=a;
this.b=b;
this.op=op;
},isNonNegative:function(){
var _10be=this.getXSamples();
for(var i=0;i<_10be.size();++i){
if(this.getY(_10be.get(i))<0){
return false;
}
}
return true;
},isNonPositive:function(){
var _10bf=this.getXSamples();
for(var i=0;i<_10bf.size();++i){
if(this.getY(_10bf.get(i))>0){
return false;
}
}
return true;
},getXSamples:function(){
var _10c0=this.a.getXSamples();
var _10c1=this.b.getXSamples();
var _10c2=new _10b9.m(Math.max(1,_10c0.size()+_10c1.size()));
_10c2.addAll(_10c0);
_10c2.addAll(_10c1);
return _10c2;
},getY:function(x){
return this.combineValues(this.a.getY(x),this.b.getY(x));
},getRightY:function(x){
return this.combineValues(this.a.getRightY(x),this.b.getRightY(x));
},getLeftY:function(x){
return this.combineValues(this.a.getLeftY(x),this.b.getLeftY(x));
},combineValues:function(ay,by){
if(_10ba.m.isNaN(ay)&&_10ba.m.isNaN(by)){
return NaN;
}
if(_10ba.m.isNaN(ay)){
return by;
}
if(_10ba.m.isNaN(by)){
return ay;
}
return this.op.combineValues(ay,by);
},isDiscontinuity:function(x){
var y=this.getY(x);
var leftY=this.getLeftY(x);
var _10c3=this.getRightY(x);
var _10c4;
if(_10ba.m.isNaN(y)){
_10c4=!_10ba.m.isNaN(_10c3)||!_10ba.m.isNaN(leftY);
}else{
if(_10ba.m.isNaN(leftY)||_10ba.m.isNaN(_10c3)){
_10c4=true;
}else{
_10c4=leftY!=y||_10c3!=y;
}
}
return _10c4;
}});
_10bb.add("com/ibm/vis/engine/internal/grammar/coordinate/functions/CompositeFunctionalPath",["com/ibm/vis/engine/internal/grammar/coordinate/functions/FunctionalPath","com/ibm/vis/engine/internal/grammar/coordinate/functions/SumOperation","com/ibm/vis/engine/internal/grammar/coordinate/functions/MinOperation","com/ibm/vis/engine/internal/grammar/coordinate/functions/MaxOperation"],function(){
_10bd.SUM=new _10b6.m();
_10bd.MIN=new _10b7.m();
_10bd.MAX=new _10b8.m();
});
return _10bd;
});
},"com/ibm/vis/engine/internal/grammar/scale/ScaleFitInfo":function(){
define("com/ibm/vis/engine/internal/grammar/scale/ScaleFitInfo",["com/ibm/init/fork!../units/Unit","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/fork!../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_10c5,_10c6,_10c7,_10c8,_10c9){
var _10ca=_10c9("com.ibm.vis.engine.internal.grammar.scale.ScaleFitInfo",null,{canExpand:false,elementNeedsZero:false,padPixels:0,padPercent:0,geometry:null,constructor:function(_10cb,_10cc){
this.canExpand=_10cb;
this.elementNeedsZero=_10cc;
this.padPixels=0;
this.padPercent=0;
},finalizeRange:function(_10cd,nice){
return (this.canExpand)?nice:_10cd;
},zeroRequired:function(unit){
return this.canExpand&&unit.measure.zeroMeaningful&&(this.elementNeedsZero||unit==_10c5.m.COUNT);
},zeroDesirable:function(unit){
return this.canExpand&&unit.measure.zeroMeaningful;
},expandRange:function(base,unit,_10ce){
if(!this.canExpand||this.geometry==null){
return base;
}
var extra;
if(_10c6.m.isNaN(this.geometry.len)){
extra=this.padPercent;
}else{
extra=1.5*this.padPixels/this.geometry.len+this.padPercent;
}
if(extra<0.01){
extra=0.01;
}
if(extra>0.2){
extra=0.2;
}
if(_10ce){
extra=0;
}
var _10cf=this.zeroRequired(unit)?base.unionValue(0):base;
_10cf=_10cf.expand(extra*_10cf.range);
if(this.zeroDesirable(unit)){
if(_10cf.min>0&&_10cf.min/_10cf.max<=0.25){
_10cf=new _10c7.m(0,_10cf.max);
}
if(_10cf.max<0&&_10cf.max/_10cf.min<=0.25){
_10cf=new _10c7.m(_10cf.min,0);
}
if(_10cf.min<0&&base.min>=0){
_10cf=new _10c7.m(0,_10cf.max);
}
if(_10cf.max>0&&base.max<=0){
_10cf=new _10c7.m(_10cf.min,0);
}
}
return _10cf;
},requirePixelPadding:function(v){
this.padPixels=Math.max(v,this.padPixels);
},requireFractionPadding:function(v){
this.padPercent=Math.max(v,this.padPercent);
}});
return _10ca;
});
},"com/ibm/vis/engine/internal/grammar/label/AbstractLabelProducer":function(){
define("com/ibm/vis/engine/internal/grammar/label/AbstractLabelProducer",["com/ibm/init/fork!../../../../exceptions/RaveException","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../nativeImpl/WebEngineException","com/ibm/init/statics","dojo/_base/declare"],function(_10d0,_10d1,_10d2,_10d3,_10d4){
var _10d5=_10d4("com.ibm.vis.engine.internal.grammar.label.AbstractLabelProducer",null,{data:null,vis:null,part:null,isCategorical:false,constructor:function(data,vis,part){
this.data=data;
this.vis=vis;
this.part=part;
this.isCategorical=true;
},makeStringFor:function(_10d6,shape){
if(this.part!=null){
if(shape.getElementPart()!=null&&!this.part.CPVisEngineEquals(shape.getElementPart())){
return null;
}
}
if(shape.rows!=null&&shape.rows.length>0){
var _10d7=this.makeLabelString(_10d6,shape.rows[0]);
for(var i=1;i<shape.rows.length;++i){
var _10d8=this.makeLabelString(_10d6,shape.rows[i]);
if(!_10d7.CPVisEngineEquals(_10d8)){
var _10d9="Label consistency error - a label or tooltip cannot be created for this element and data (see \"Label\" in the VizJSON Reference Guide)";
throw new _10d0.m(_10d9,17);
}
}
return _10d7;
}
return this.makeLabelString(_10d6,-1);
},makeLabelString:function(_10da,_10db){
var label="";
for(var _10dc=0,_10dd=_10da.length;_10dc<_10dd;++_10dc){
var o=_10da[_10dc];
if(_10d1.m.isNumber(o)||_10d1.m.isString(o)){
label+=o;
}else{
if(o instanceof Object){
var _10de=this.addFieldReference(_10db,o);
if(_10de==null){
return null;
}
label+=_10de;
}
}
}
return label;
},addFieldReference:function(_10df,ref){
var f=this.vis.getByID(ref.$ref);
if(f==null){
throw new _10d2.m("Unknown field "+ref.$ref);
}
if(!f.isCategorical()){
this.isCategorical=false;
}
if(_10df!=-1){
return f.getFormattedStringValue(this.data.rows[_10df].data[f.index],this.data.rows[_10df].index);
}
if(f.label!=null){
return f.label;
}
return f.id;
}});
return _10d5;
});
},"com/ibm/vis/engine/internal/grammar/scale/ScaleBuilder":function(){
define("com/ibm/vis/engine/internal/grammar/scale/ScaleBuilder",["com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!./Scale","com/ibm/init/fork!./ScaleSpanBuilder","com/ibm/init/fork!./ScaleFitInfo","com/ibm/init/fork!../units/Unit","com/ibm/init/fork!./CategoricalDomain","com/ibm/init/fork!../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_10e0,_10e1,_10e2,_10e3,_10e4,_10e5,_10e6,_10e7,_10e8){
var _10e9=_10e8("com.ibm.vis.engine.internal.grammar.scale.ScaleBuilder",null,{target:null,fields:null,fitToData:false,visContext:null,reverseCategoricalScales:false,constructor:function(_10ea,_10eb,_10ec,_10ed){
this.target=_10ea;
this.fields=_10eb;
this.fitToData=_10ec;
this.visContext=_10ed;
},createSpansFromProvider:function(value){
var _10ee=new _10e3.m(true,false);
if(value.isCategorical()){
this.addCategoricalSpan(value.getUnit(),value.getCategories(),value.getFormatter(),_10ee);
}else{
this.addNumericSpan(value.getUnit(),value.getRange(),value.getFormatter(),_10ee,value.getGranularity());
}
this.target.defineSpanOutputRanges();
},addNumericSpan:function(unit,range,_10ef,_10f0,_10f1){
var s;
if(unit==null){
unit=_10e4.m.RATIO;
}
if(this.fitToData){
range=this.fitRangeToData(range,unit.measure);
}
if(_10f0.canExpand&&_10f1!=null){
var _10f2=new _10e3.m(false,false);
s=_10e2.m.createForRange(range,unit,_10f2,null,_10f1,_10ef,this.visContext);
}else{
s=_10e2.m.createForRange(range,unit,_10f0,null,null,_10ef,this.visContext);
}
this.target.addSpan(s);
},addCategoricalSpan:function(unit,cats,_10f3,_10f4){
var _10f5=cats==null?-1:cats.length;
var _10f6=new _10e5.m(_10f5,this.reverseCategoricalScales);
var s=_10e2.m.createForCategories(_10f6,cats,unit,_10f4,_10f3,this.visContext);
_10f6.restrictToExisting=this.fitToData;
for(var _10f7=0,_10f8=this.fields,_10f9=_10f8.size();_10f7<_10f9;++_10f7){
var field=_10f8.get(_10f7);
if(s.isApplicable(field.unit)){
_10f6.basedOnField(field);
}
}
this.target.addSpan(s);
},fitRangeToData:function(range,_10fa){
var d=_10e6.m.EMPTY;
for(var _10fb=0,_10fc=this.fields,_10fd=_10fc.size();_10fb<_10fd;++_10fb){
var field=_10fc.get(_10fb);
if(_10fa.matches(field.unit.measure)){
var fr=field.getDataRange();
d=d.unionValue(fr.min);
d=d.unionValue(fr.max);
}
}
if(d.min>range.min){
range=new _10e6.m(d.min,range.max);
}
if(d.max<range.max){
range=new _10e6.m(range.min,d.max);
}
return range;
}});
_10e9.makeForProvider=function(_10fe,value,_10ff,_1100){
var _1101=new _10e0.m();
var field=value.getBaseField();
if(field!=null){
_1101.add(field);
}
return new _10e9(_10fe,_1101,_10ff,_1100);
};
_10e9.makeForMany=function(_1102,_1103,_1104,_1105){
return new _10e9(_1102,_1103,_1104,_1105);
};
_10e9.createFromSpec=function(spec,_1106,_1107,units,vis){
var _1108=new _10e1.m(spec,vis);
if(spec.spans!=null){
for(var i=0;i<spec.spans.length;++i){
var ss=spec.spans[i];
var _1109=(units==null||i>=units.size())?null:units.get(i);
_1108.addSpan(_10e2.m.createFromSpec(ss,_1106,vis.visContext,_1107,_1109));
}
}
return _1108;
};
return _10e9;
});
},"com/ibm/vis/engine/internal/grammar/scale/transform/ScaleTransformBuilder":function(){
define("com/ibm/vis/engine/internal/grammar/scale/transform/ScaleTransformBuilder",["../../../../../extension/ExtensionFactory","com/ibm/init/fork!../../../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./LinearScaleTransform","com/ibm/init/fork!./LogScaleTransform","com/ibm/init/statics","dojo/_base/declare"],function(_110a,_110b,_110c,_110d,_110e,_110f){
var _1110=_110f("com.ibm.vis.engine.internal.grammar.scale.transform.ScaleTransformBuilder",[_110a],{newInstance:function(name,_1111){
if(name!=null){
var t=null;
if("linear".CPVisEngineEquals(name)){
t=new _110c.m();
}else{
if("log".CPVisEngineEquals(name)){
t=new _110d.m();
}
}
return t;
}
return null;
}});
_1110.registerExtensions=function(){
if(!_1110.initialized){
if(!_1110.initialized){
_110b.m.INSTANCE.registerDefaultFactory(new _1110());
_1110.initialized=true;
}
}
};
_1110.create=function(_1112){
var t=null;
if(_1112!=null){
t=_110b.m.INSTANCE.newInstance(_1112,null);
}
if(t==null){
t=_110b.m.INSTANCE.newInstance("linear",null);
}
return t;
};
_110e.add("com/ibm/vis/engine/internal/grammar/scale/transform/ScaleTransformBuilder",["com/ibm/vis/extension/ExtensionFactory","com/ibm/vis/extension/internal/RAVEExtensionManager"],function(){
_1110.TRANSFORM_LOG="log";
_1110.TRANSFORM_LINEAR="linear";
_1110.initialized=false;
});
return _1110;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/FullMatrix":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/FullMatrix",["./Matrix","com/ibm/init/statics","dojo/_base/declare"],function(_1113,_1114,_1115){
var _1116=_1115("com.ibm.vis.engine.internal.grammar.layout.graph.stress.matrix.FullMatrix",[_1113],{d:null,symmetric:false,constructor:function(n,_1117){
this.symmetric=_1117;
this.d=Array.create([n*n],0);
for(var i=0;i<this.d.length;++i){
this.d[i]=0;
}
},set:function(i,j,v){
this.d[i*this.n+j]=v;
if(this.symmetric){
this.d[j*this.n+i]=v;
}
},get:function(i,j){
return this.d[i*this.n+j];
},fill:function(v){
for(var i=0;i<this.d.length;++i){
this.d[i]=v;
}
},multiply:function(x,y){
if(y==null){
y=Array.create([this.n],0);
}
for(var i=0;i<this.n;++i){
var v=0;
var off=i*this.n;
for(var j=0;j<this.n;++j){
v+=this.d[off+j]*x[j];
}
y[i]=v;
}
return y;
},getRawData:function(){
return this.d;
}});
return _1116;
});
},"com/ibm/vis/exceptions/RaveException":function(){
define("com/ibm/vis/exceptions/RaveException",["com/ibm/init/statics","dojo/_base/declare"],function(_1118,_1119){
var _111a=_1119("com.ibm.vis.exceptions.RaveException",[Error],{errorCode:0,context:null,constructor:function(_111b,_111c){
this.errorCode=_111c;
this.context=_111b;
},getErrorCode:function(){
return this.errorCode;
},getContext:function(){
return this.context;
}});
_1118.add("com/ibm/vis/exceptions/RaveException",[],function(){
_111a.LAYOUT_CANNOT_FIT=1;
_111a.SPEC_PARSE_FAILS=2;
_111a.SPEC_INVALID_VALUE=3;
_111a.SPEC_INVALID_LENGTH=4;
_111a.DATA_OVERFLOW=5;
_111a.UNMATCHED_KEY_IN_GEO_AUGMENT=6;
_111a.UNMATCHED_PROPERTY_IN_GEO_AUGMENT=7;
_111a.EMPTY_GEO_JSON=8;
_111a.TRANSITION_UNSUPPORTED_TARGETS=9;
_111a.TRANSITION_UNSUPPORTED_SIMULTANEOUS_EFFECT=10;
_111a.SIMULTANEOUS_EFFECT_SAME_TARGET=11;
_111a.COMPOSITE_EFFECT_NO_CHILD=12;
_111a.FACET_TOO_MANY_FIELDS=13;
_111a.FACET_INVALID_DATA_SOURCE=14;
_111a.FACET_NO_FIELDS=15;
_111a.FACET_INVALID_DATA=16;
_111a.ROWS_CREATE_CONFLICTING_LABEL=17;
});
return _111a;
});
},"com/ibm/vis/widget/VisWidget":function(){
define("com/ibm/vis/widget/VisWidget",["dojo/_base/declare","./VisControl"],function(_111d,_111e){
var _111f=_111d("com.ibm.vis.widget.VisWidget",[_111e],{});
return _111f;
});
},"com/ibm/vis/widget/AnimationControlMobile":function(){
define("com/ibm/vis/widget/AnimationControlMobile",["dojo/_base/declare","dojo/_base/lang","dojo/on","dojo/dom-construct","./_AnimationControlBase","dojox/mobile"],function(_1120,lang,on,_1121,_1122,_1123){
var _1124=_1120("com.ibm.vis.widget.AnimationControlMobile",[_1122],{buildRendering:function(){
this.inherited(arguments);
this.focusNode=this.domNode;
var _1125=_1121.create("span",{innerHTML:"Animate Over"},this.domNode,"last");
this.variableSelection=_1121.create("select",null,this.domNode,"last");
this.slider=new _1123.Slider({min:0,max:10,value:5,style:"display:inline-block;width:150px;vertical-align: middle;"});
this.slider.valueNode.type="hidden";
_1121.place(this.slider.domNode,this.domNode,"last");
this.runButton=new _1123.Button({label:"Run"});
_1121.place(this.runButton.domNode,this.domNode,"last");
this.variableName=_1121.create("span",null,this.domNode,"last");
var _1126=_1121.create("span",{innerHTML:"="},this.domNode,"last");
this.variableValue=_1121.create("span",null,this.domNode,"last");
},postCreate:function(){
this.inherited(arguments);
on(this.slider.domNode,"focus",lang.hitch(this,"_onSliderFocus"));
on(this.slider.domNode,"blur",lang.hitch(this,"_onSliderBlur"));
on(this.runButton,"click",lang.hitch(this,"playOrStop"));
on(this.variableSelection,"change",lang.hitch(this,"setFacetVariable"));
on(this.slider,"change",lang.hitch(this,"_showScene"));
},setFacetVariable:function(){
this._setFacetVariable(this.variableSelection.options[this.variableSelection.selectedIndex].value);
},initializeDropDown:function(ids){
this.inherited(arguments);
this.variableSelection.options=[];
for(var i=0;i<ids.length;i++){
var _1127=new Option(ids[i],ids[i]);
if(i==0){
_1127.selected="true";
}
this.variableSelection.options[i]=_1127;
}
},setDisabled:function(_1128){
this.inherited(arguments);
this.slider.set("disabled",_1128);
this.variableSelection.disabled=_1128;
this.runButton.set("disabled",_1128);
this.variableName.innerHTML="";
this.variableValue.innerHTML="";
},setRunButtonLabel:function(label){
this.runButton.set("label",label);
},getSliderValue:function(){
return this.slider.get("value");
},getSliderMax:function(){
return this.slider.get("max");
},initializeForKey:function(key){
this.slider.set("min",0);
this.slider.set("max",this.faceting.getCellCount()-1);
this.slider.set("value",0);
this.variableName.innerHTML=key;
},_showScene:function(index){
if(this.faceting==null||this.currentSceneIndex==index){
return;
}
this.inherited(arguments);
if(this.slider.get("value")!=index){
this.slider.set("value",index);
}
this.variableValue.innerHTML=this.faceting.getFacetTitle(index);
}});
return _1124;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/Interpolator":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/Interpolator",["com/ibm/init/statics","dojo/_base/declare"],function(_1129,_112a){
var _112b=_112a("com.ibm.vis.engine.internal.interaction.interpolation.Interpolator",null,{interpolate:function(id,t){
},getNormalizedTime:function(t,start,end){
if(start==end){
return (t<start)?0:1;
}
if(start>end){
return this.getNormalizedTime(t,end,start);
}
if(start>=end){
return 1;
}
if(t<start){
return 0;
}
if(t>end){
return 1;
}
return (t-start)/(end-start);
},interpolateDouble:function(v0,v1,t){
if(v0==v1){
return v0;
}
return v0*(1-t)+v1*t;
}});
return _112b;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/NodeComparator":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/NodeComparator",["../../../nativeImpl/Comparator","com/ibm/init/statics","dojo/_base/declare"],function(_112c,_112d,_112e){
var _112f=_112e("com.ibm.vis.engine.internal.grammar.layout.graph.NodeComparator",[_112c],{compare:function(arg0,arg1){
var _1130=arg0;
var _1131=arg1;
var d1=_1130.x;
var d2=_1131.x;
if(d2-d1<0){
return 1;
}else{
if(d2-d1>0){
return -1;
}
}
return 0;
}});
return _112f;
});
},"com/ibm/vis/engine/internal/struct/SmoothAreaPathMaker":function(){
define("com/ibm/vis/engine/internal/struct/SmoothAreaPathMaker",["./SmoothPolyPathMaker","com/ibm/init/fork!../nativeImpl/StringBuilder","com/ibm/init/fork!../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_1132,_1133,_1134,_1135,_1136){
var _1137=_1136("com.ibm.vis.engine.internal.struct.SmoothAreaPathMaker",[_1132],{makePath:function(poly){
var x=Array.create([poly.x.length-2],0);
var y=Array.create([poly.y.length-2],0);
for(var i=0;i<x.length;++i){
x[i]=poly.x[i+1];
y[i]=poly.y[i+1];
}
var path=this.makeSmoothPath(x,y,poly.transposeApplied);
path=this.addFirstPoint(poly.x[0],poly.y[0],path);
path=this.addLastPoint(poly.x[poly.x.length-1],poly.y[poly.y.length-1],path);
return path;
},getControlPoints:function(poly){
var x=Array.create([poly.x.length-2],0);
var y=Array.create([poly.y.length-2],0);
for(var i=0;i<x.length;++i){
x[i]=poly.x[i+1];
y[i]=poly.y[i+1];
}
return this.findControlPoints(x,y,poly.transposeApplied);
},addFirstPoint:function(x,y,path){
var _1138=new _1133.m();
_1138.append("M");
_1138.append(_1134.m.r3(x));
_1138.append(",");
_1138.append(_1134.m.r3(y));
_1138.append("L");
_1138.append(path.substring(1));
return _1138.toString();
},addLastPoint:function(x,y,path){
var _1139=new _1133.m();
_1139.append(path);
_1139.append("L");
_1139.append(_1134.m.r3(x));
_1139.append(",");
_1139.append(_1134.m.r3(y));
return _1139.toString();
},toString:function(){
return "smoothAreaPathMaker";
}});
return _1137;
});
},"com/ibm/vis/engine/internal/interaction/effect/Effect":function(){
define("com/ibm/vis/engine/internal/interaction/effect/Effect",["../../../../interaction/ChangeEffect","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../../../interaction/internal/events/EventDispatcherImpl","com/ibm/init/fork!../../struct/Rect","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../util/SceneUtil","com/ibm/init/fork!./EffectStartEvent","com/ibm/init/fork!./EffectEndEvent","com/ibm/init/statics","dojo/_base/declare"],function(_113a,_113b,_113c,_113d,_113e,_113f,_1140,_1141,_1142,_1143,_1144){
var _1145=_1144("com.ibm.vis.engine.internal.interaction.effect.Effect",[_113a],{builder:null,sceneSize:null,items:null,bounds:null,targetIDs:null,newTargetIds:null,targetShapes:0,animated:false,duration:0,effectTargets:null,changeEffectListeners:null,eventDispatcher:null,constructor:function(_1146){
this.duration=_1146;
this.animated=true;
this.targetIDs=new _113b.m();
this.newTargetIds=new _113b.m();
this.changeEffectListeners=new _113b.m();
this.eventDispatcher=new _113c.m();
},setTargetIDs:function(_1147){
this.targetIDs=_1147;
this.setTarget(3);
},getTargetIDs:function(){
return this.targetIDs;
},getTargetShapes:function(){
return this.targetShapes;
},isAnimated:function(){
return this.animated;
},clear:function(){
this.targetIDs=this.newTargetIds;
this.newTargetIds=new _113b.m();
},apply:function(){
},install:function(_1148){
this.builder=_1148;
this.builder.addEffect(this);
var back=_1148.visScene[0];
this.sceneSize=_113d.m.toRect(_113e.m.getItem(back,"shape")).getExtent();
this.items=this.builder.getVisSceneMap();
if(this.targetShapes!=3){
this.targetIDs=new _113b.m();
for(var _1149=0,_114a=this.items.keySet(),_114b=_114a.size();_1149<_114b;++_1149){
var id=_114a.get(_1149);
if(this.isTarget(id)){
this.targetIDs.add(id);
this.builder.addTargetDurationMap(id,this.getTime());
}
}
}
},installWithPrevious:function(_114c,_114d){
this.install(_114c);
},uninstall:function(_114e){
},addToScene:function(_114f){
for(var _1150=0,_1151=_114f.length;_1150<_1151;++_1150){
var o=_114f[_1150];
this.builder.visScene.push(o);
}
this.builder.addToNativeScene(_114f);
},clearScene:function(){
_113e.m.clearJSONArray(this.builder.visScene);
this.builder.clearNativeScene();
},getInnerBounds:function(_1152){
if(this.bounds==null){
this.bounds=new _113f.m();
}
var rect=this.bounds.get(_1152);
if(rect==null){
var _1153=this.items.get(_1152+"Coords");
rect=_113d.m.toRect(_113e.m.getItem(_1153,"shape"));
this.bounds.put(_1152,rect);
}
return rect;
},makeSimpleStyleKeyFrames:function(start,end){
var array=new Array(2);
array[0]=this.makeStyleKeyFrame(0,start);
array[1]=this.makeStyleKeyFrame(1,end);
return array;
},makeStroke:function(w){
var _1154=_113e.m.createJSONObject();
_113e.m.put(_1154,"width",w);
return _1154;
},makeStyleKeyFrame:function(step,style){
var _1155=dojo.mixin({},style);
_113e.m.put(_1155,"stop",step);
return _1155;
},makeFadingKeyFrames:function(item,stop0,mult0,stop1,mult1){
if(stop0<0){
stop0=0;
}else{
if(stop0>1){
stop0=1;
}
}
if(stop1<0){
stop1=0;
}else{
if(stop1>1){
stop1=1;
}
}
if(stop0>stop1){
return this.makeFadingKeyFrames(item,stop1,mult1,stop0,mult0);
}
var _1156=2;
if(stop0>0){
_1156++;
}
if(stop1<1){
_1156++;
}
var _1157=new Array(_1156);
var _1158=0;
if(stop0>0){
_1157[_1158++]=this.makeFadingKeyFrame(item,0,mult0);
}
_1157[_1158++]=this.makeFadingKeyFrame(item,stop0,mult0);
_1157[_1158++]=this.makeFadingKeyFrame(item,stop1,mult1);
if(stop1<1){
_1157[_1158++]=this.makeFadingKeyFrame(item,1,mult1);
}
return _1157;
},makeFadingKeyFrame:function(item,stop,mult){
var kf=_113e.m.createJSONObject();
_113e.m.put(kf,"stop",stop);
var fill=_113e.m.getItem(item,"fill");
if(fill!=null){
_113e.m.put(kf,"fill",this.makeFadingFill(fill,mult));
}
if(_113e.m.getItem(item,"outline")!=null||_113e.m.getItem(item,"stroke")!=null){
var _1159=_113e.m.createJSONObject();
_113e.m.put(_1159,"a",mult);
_113e.m.put(kf,"outline",_1159);
}
return kf;
},makeFadingFill:function(fill,mult){
if(fill==null){
return _113e.m.createJSONObject();
}
var _115a=_113e.m.deepClone(fill);
var _115b=_113e.m.getItem(_115a,"colors");
if(_115b!=null){
var len=_115b.length;
for(var i=0;i<len;++i){
this.multiplyColorAlpha(_113e.m.getItem(_115b[i],"color"),mult);
}
return _115a;
}
return this.multiplyColorAlpha(_115a,mult);
},multiplyColorAlpha:function(color,mult){
var a=(_113e.m.getItem(color,"a"));
if(a!=null){
_113e.m.put(color,"a",a*mult);
}else{
_113e.m.put(color,"a",mult);
}
if(_113e.m.getItem(color,"r")==null){
_113e.m.put(color,"r",0);
}
if(_113e.m.getItem(color,"g")==null){
_113e.m.put(color,"g",0);
}
if(_113e.m.getItem(color,"b")==null){
_113e.m.put(color,"b",0);
}
return color;
},setStyle:function(item,style){
_113e.m.put(item,"fill",_113e.m.getItem(style,"fill"));
_113e.m.put(item,"stroke",_113e.m.getItem(style,"stroke"));
},isTarget:function(id){
if(this.targetShapes==-1){
return false;
}
var _115c=_1140.m.identifiesElement(id);
if(this.targetShapes==2&&_115c){
return false;
}
if(this.targetShapes==1&&!_115c){
return false;
}
if(this.effectTargets==null||this.effectTargets.length==0){
return true;
}
for(var _115d=0,_115e=this.effectTargets,_115f=_115e.length;_115d<_115f;++_115d){
var _1160=_115e[_115d];
if(_1160.affectsId(id)){
return true;
}
}
return false;
},setRepresentation:function(_1161){
},addTargetId:function(id){
if(!this.newTargetIds.contains(id)){
this.newTargetIds.add(id);
}
this.targetShapes=3;
},hasChanged:function(){
if(this.targetIDs.size()!=this.newTargetIds.size()){
return true;
}
for(var _1162=0,_1163=this.newTargetIds,_1164=_1163.size();_1162<_1164;++_1162){
var id=_1163.get(_1162);
if(!this.targetIDs.contains(id)){
return true;
}
}
return false;
},setTarget:function(_1165){
this.targetShapes=_1165;
},setTargets:function(_1166,_1167){
this.targetShapes=_1166;
this.effectTargets=_1167;
},getTime:function(){
return this.duration;
},addChangeEffectEventListener:function(_1168){
if(!this.changeEffectListeners.contains(_1168)){
this.changeEffectListeners.add(_1168);
}
},addChangeEffectEventListeners:function(_1169){
for(var _116a=0,_116b=_1169.size();_116a<_116b;++_116a){
var _116c=_1169.get(_116a);
this.addChangeEffectEventListener(_116c);
}
},removeChangeEffectEventListener:function(_116d){
this.changeEffectListeners.remove(_116d);
},getChangeEffectListeners:function(){
return this.changeEffectListeners;
},getEventDispatcher:function(){
return this.eventDispatcher;
},fireOnEffectStartEvent:function(){
var event=new _1141.m(this.changeEffectListeners,this);
this.eventDispatcher.notify(event);
},fireOnEffectEndEvent:function(){
var event=new _1142.m(this.changeEffectListeners,this);
this.eventDispatcher.notify(event);
}});
return _1145;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/DAGNodeInfoSameLayer":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/DAGNodeInfoSameLayer",["com/ibm/init/statics","dojo/_base/declare"],function(_116e,_116f){
var _1170=_116f("com.ibm.vis.engine.internal.grammar.layout.graph.DAGNodeInfoSameLayer",null,{origFrom:null,origTo:null,belongsTo:null,level:0,constructor:function(){
this.level=0;
},getOrigFrom:function(){
return this.origFrom;
},setOrigFrom:function(_1171){
this.origFrom=_1171;
},getOrigTo:function(){
return this.origTo;
},setOrigTo:function(_1172){
this.origTo=_1172;
},getLevel:function(){
return this.level;
},setLevel:function(level){
this.level=level;
},getBelongsTo:function(){
return this.belongsTo;
},setBelongsTo:function(_1173){
this.belongsTo=_1173;
},updateBelongsToNodeX:function(_1174){
var sign=this.origFrom.x<this.origTo.x?1:-1;
var _1175=this.belongsTo==this.origFrom?1:-1;
_1174.setX(this.belongsTo.x+_1175*sign*0.1);
}});
return _1170;
});
},"com/ibm/vis/engine/internal/data/transform/Percent":function(){
define("com/ibm/vis/engine/internal/data/transform/Percent",["./Transform","com/ibm/init/fork!../../grammar/units/Unit","com/ibm/init/statics","dojo/_base/declare"],function(_1176,_1177,_1178,_1179){
var _117a=_1179("com.ibm.vis.engine.internal.data.transform.Percent",[_1176],{constructor:function(_117b,_117c,_117d){
for(var _117e=0,_117f=_117c.size();_117e<_117f;++_117e){
var def=_117c.get(_117e);
if(def.parameters.summaryFunction!=null){
def.outputGranularity=0;
}
}
},getRowsCreated:function(){
return -1;
},setValues:function(input,_1180,_1181,start,_1182){
for(var _1183=0,_1184=this.outputs,_1185=_1184.size();_1183<_1185;++_1183){
var def=_1184.get(_1183);
var func=def.parameters.summaryFunction;
if(func==null){
var n=start;
for(var index=0;index<_1180.size();++index){
var i=_1180.get(index);
var v=input[i].data[def.inputIndex];
_1181[n++].data[def.outputIndex]=v;
}
}else{
var pos=0;
var neg=0;
for(var index=0;index<_1180.size();++index){
var i=_1180.get(index);
var v=input[i].data[def.inputIndex];
if(v==null){
continue;
}
if(v>0){
pos+=v;
}else{
neg+=v;
}
}
var n=start;
for(var index=0;index<_1180.size();++index){
var i=_1180.get(index);
var v=input[i].data[def.inputIndex];
var _1186=null;
if(v!=null){
if(v>0){
_1186=100*v/pos;
}else{
if(v<0){
_1186=-100*v/neg;
}else{
_1186=0;
}
}
}
_1181[n++].data[def.outputIndex]=_1186;
}
}
}
},getUnit:function(){
return _1177.m.RATIO;
}});
return _117a;
});
},"com/ibm/vis/exceptions/SpecException":function(){
define("com/ibm/vis/exceptions/SpecException",["./VisException","com/ibm/init/statics","dojo/_base/declare"],function(_1187,_1188,_1189){
var _118a=_1189("com.ibm.vis.exceptions.SpecException",[_1187],{specVersion:null,specPath:null,specification:null,constructor:function(_118b,_118c,_118d,_118e,_118f,_1190,_1191){
this.specVersion=_1190;
this.specPath=_1191;
this.specification=_118f;
},getSpecVersion:function(){
return this.specVersion;
},getSpecPath:function(){
return this.specPath;
},getSpecification:function(){
return this.specification;
}});
return _118a;
});
},"com/ibm/vis/widget/Interactivity":function(){
define("com/ibm/vis/widget/Interactivity",["dojo/_base/declare","./VisControlInteractivity"],function(_1192,_1193){
var _1194=_1192("com.ibm.vis.widget.Interactivity",[_1193],{});
return _1194;
});
},"com/ibm/vis/engine/internal/legend/SizeMappingStopComparator":function(){
define("com/ibm/vis/engine/internal/legend/SizeMappingStopComparator",["../nativeImpl/Comparator","com/ibm/init/fork!./SizeMappingStop","com/ibm/init/statics","dojo/_base/declare"],function(_1195,_1196,_1197,_1198){
var _1199=_1198("com.ibm.vis.engine.internal.legend.SizeMappingStopComparator",[_1195],{compare:function(o1,o2){
var _119a=0;
var _119b=0;
var _119c=0;
if(o1==null){
if(o2!=null){
return 1;
}
}else{
if(o2==null){
return -1;
}
}
if(o1!=null&&o2!=null){
if(o1 instanceof _1196.m){
_119a=(o1).at;
}
if(o2 instanceof _1196.m){
_119b=(o2).at;
}
_119c=(_119a-_119b);
return _119c;
}
return _119c;
}});
return _1199;
});
},"com/ibm/vis/engine/internal/interaction/defender/DefenderViewPortEvent":function(){
define("com/ibm/vis/engine/internal/interaction/defender/DefenderViewPortEvent",["../../../../interaction/internal/events/InteractivityEventImpl","com/ibm/init/statics","dojo/_base/declare"],function(_119d,_119e,_119f){
var _11a0=_119f("com.ibm.vis.engine.internal.interaction.defender.DefenderViewPortEvent",[_119d],{x:0,y:0,interactivity:null,type:null,constructor:function(_11a1,x,y,_11a2,type){
this.x=x;
this.y=y;
this.interactivity=_11a2;
this.type=type;
},getDefenderViewPortEndPoints:function(){
var d=Array.create([2],0);
var sur=this.interactivity.getScrollUnitRenderer();
var _11a3=sur.getFirstGrabber();
var _11a4=sur.getSecondGrabber();
var _11a5=sur.getMainGrabber();
var _11a6=sur.getMedian();
var _11a7=_11a3.makeGeometryClone();
var _11a8=_11a4.makeGeometryClone();
var _11a9=_11a5.makeGeometryClone();
var _11aa=_11a6.makeGeometryClone();
var _11ab=this.interactivity.updateScrollUnit(this.x,_11a7,_11a8,_11a9,_11aa,false);
d=this.interactivity.getXCordinatesForSliderEndPoints(_11ab);
return d;
},getX:function(){
return this.x;
},getY:function(){
return this.y;
},getInteractivity:function(){
return this.interactivity;
},getType:function(){
return this.type;
}});
return _11a0;
});
},"com/ibm/vis/engine/internal/util/DefenderUtil":function(){
define("com/ibm/vis/engine/internal/util/DefenderUtil",["com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../nativeImpl/WebEngineException","com/ibm/init/statics","dojo/_base/declare"],function(_11ac,_11ad,_11ae,_11af){
var _11b0=_11af("com.ibm.vis.engine.internal.util.DefenderUtil",null,{mainGrabberString:null,firstGrabberString:null,secondGrabberString:null,medianString:null,rectLeftString:null,rectRightString:null,median:null,constructor:function(){
this.medianString="median";
this.mainGrabberString="mainGrabber";
this.firstGrabberString="firstGrabber";
this.secondGrabberString="secondGrabber";
this.rectLeftString="rectLeft";
this.rectRightString="rectRight";
},isDefenderJson:function(_11b1){
var _11b2=_11ac.m.getItem(_11b1,"shape");
for(var i=0;i<_11b2.length;++i){
var shape=_11b2[i];
var part=_11ac.m.getItem(shape,"part");
if(part!=null){
if(part.CPVisEngineEquals(this.mainGrabberString)||part.CPVisEngineEquals(this.firstGrabberString)||part.CPVisEngineEquals(this.secondGrabberString)||part.CPVisEngineEquals(this.medianString)){
return true;
}
}
}
return false;
},isDefenderParts:function(parts){
for(var i=0;i<parts.length;++i){
var part=parts[i].getElementPart();
if(part!=null){
if(part.CPVisEngineEquals(this.mainGrabberString)||part.CPVisEngineEquals(this.firstGrabberString)||part.CPVisEngineEquals(this.secondGrabberString)||part.CPVisEngineEquals(this.medianString)){
return true;
}
}
}
return false;
},addTransparentRectangles:function(_11b3,_11b4){
var _11b5=false;
var _11b6=false;
var _11b7=false;
var _11b8=false;
var _11b9=null;
var clone=_11ac.m.deepClone(_11b3);
var _11ba=_11ac.m.getItem(clone,"shape");
for(var i=0;i<_11ba.length;++i){
var shape=_11ba[i];
var part=_11ac.m.getItem(shape,"part");
if("median".CPVisEngineEquals(part)){
_11b5=true;
_11b9=shape;
}else{
if("firstGrabber".CPVisEngineEquals(part)){
_11b6=true;
}else{
if("secondGrabber".CPVisEngineEquals(part)){
_11b7=true;
}else{
if("mainGrabber".CPVisEngineEquals(part)){
_11b8=true;
}
}
}
}
}
if(!_11b5||!_11b6||!_11b7||!_11b8){
throw new _11ad.m("Bad definition for custom shape for Defender. Please specify all of \"median\", \"firstGrabber\", \"secondGrabber\", and \"mainGrabber\" as its parts.");
}
_11ac.m.removeFromArray(_11ba,_11b9);
_11ac.m.addAt(_11ba,_11b9,0);
_11ac.m.addAt(_11ba,this.buildLeftRectPart(0,0,_11b4.width,_11b4.height),1);
_11ac.m.addAt(_11ba,this.buildRightRectPart(0,0,_11b4.width,_11b4.height),2);
return clone;
},buildLeftRectPart:function(x,y,width,_11bb){
var _11bc=_11ac.m.createJSONObject();
_11ac.m.put(_11bc,"x",x);
_11ac.m.put(_11bc,"y",y);
_11ac.m.put(_11bc,"width",width);
_11ac.m.put(_11bc,"height",_11bb);
_11ac.m.put(_11bc,"part","rectLeft");
var _11bd=_11ac.m.createJSONObject();
var _11be=_11ac.m.createJSONObject();
_11ac.m.put(_11be,"r",255);
_11ac.m.put(_11be,"g",255);
_11ac.m.put(_11be,"b",255);
_11ac.m.put(_11be,"a",0.5);
_11ac.m.put(_11bd,"fill",_11be);
_11ac.m.put(_11bc,"style",_11bd);
return _11bc;
},buildRightRectPart:function(x,y,width,_11bf){
var _11c0=_11ac.m.createJSONObject();
_11ac.m.put(_11c0,"x",x);
_11ac.m.put(_11c0,"y",y);
_11ac.m.put(_11c0,"width",width);
_11ac.m.put(_11c0,"height",_11bf);
_11ac.m.put(_11c0,"part","rectRight");
var _11c1=_11ac.m.createJSONObject();
var _11c2=_11ac.m.createJSONObject();
_11ac.m.put(_11c2,"r",255);
_11ac.m.put(_11c2,"g",255);
_11ac.m.put(_11c2,"b",255);
_11ac.m.put(_11c2,"a",0.5);
_11ac.m.put(_11c1,"fill",_11c2);
_11ac.m.put(_11c0,"style",_11c1);
return _11c0;
},isDefenderPart:function(part){
if(part.CPVisEngineEquals(this.mainGrabberString)||part.CPVisEngineEquals(this.firstGrabberString)||part.CPVisEngineEquals(this.secondGrabberString)||part.CPVisEngineEquals(this.medianString)||part.CPVisEngineEquals(this.rectLeftString)||part.CPVisEngineEquals(this.rectRightString)){
return true;
}
return false;
},affineDefenderPart:function(shape,xx,dx,yy,dy){
var part=shape.getElementPart();
if(!part.CPVisEngineEquals(this.rectLeftString)&&!part.CPVisEngineEquals(this.rectRightString)){
shape.affine(xx,dx,yy,dy,false);
if(part.CPVisEngineEquals(this.medianString)){
this.median=shape;
}
}else{
if(part.CPVisEngineEquals(this.rectLeftString)){
var _11c3=shape;
_11c3.width=this.median.x-_11c3.x;
}else{
if(part.CPVisEngineEquals(this.rectRightString)){
var _11c4=shape;
var _11c5=_11c4.width;
_11c4.x=this.median.x+this.median.width;
_11c4.width=_11c5-_11c4.x;
}
}
}
}});
return _11b0;
});
},"com/ibm/vis/engine/internal/legend/SizeAxisScaleMaker":function(){
define("com/ibm/vis/engine/internal/legend/SizeAxisScaleMaker",["com/ibm/init/fork!../data/Range","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_11c6,_11c7,_11c8,_11c9,_11ca,_11cb){
var _11cc=_11cb("com.ibm.vis.engine.internal.legend.SizeAxisScaleMaker",null,{aesthetic:null,scale:null,unit:null,dataRange:null,scaleRange:null,mappingRange:null,minimumTickDistance:0,modifiesWidth:false,modifiesHeight:false,elementSize:null,axisLength:0,axisRange:null,constructor:function(_11cd,_11ce,_11cf,_11d0){
this.aesthetic=_11cd;
this.minimumTickDistance=1.25*_11ce;
this.modifiesWidth=_11cf;
this.modifiesHeight=_11d0;
this.scale=_11cd.scale;
var field=_11cd.valueProvider.getBaseField();
this.unit=_11cd.valueProvider.getUnit();
this.dataRange=field.getDataRange();
this.scaleRange=this.scale.spans.get(0).getAdjustedInputRange();
this.mappingRange=this.getMappingRange(_11cd.spec.mapping);
this.elementSize=null;
this.axisLength=0;
this.axisRange=null;
},getUnit:function(){
return this.unit;
},getAxisLength:function(){
return this.axisLength;
},getAxisRange:function(){
return this.axisRange;
},makeScaleSpecForNumerical:function(){
this.axisLength=0;
this.axisRange=null;
var _11d1=this.scale.spans.get(0).getInputRange();
if(this.dataRange==null||this.dataRange.isEmpty()){
if(!(this.aesthetic.spec.scale!=null&&this.aesthetic.spec.scale.spans!=null&&this.aesthetic.spec.scale.spans.length>0&&(this.aesthetic.spec.scale.spans[0].min!=null||this.aesthetic.spec.scale.spans[0].max!=null))){
return null;
}
}
this.elementSize=this.aesthetic.element.calculateDefaultShapeSize(this.aesthetic.element.spec.style);
var _11d2;
var _11d3;
var _11d4;
var _11d5;
if(this.mappingRange==null){
_11d2=_11d1.min;
_11d3=_11d1.max;
_11d4=_11d2;
_11d5=_11d3;
}else{
if(_11d1.min>this.mappingRange.max){
_11d2=_11d1.min;
_11d3=_11d1.min;
_11d4=_11d2;
_11d5=_11d3;
}else{
if(_11d1.max<this.mappingRange.min){
_11d2=_11d1.max;
_11d3=_11d1.max;
_11d4=_11d2;
_11d5=_11d3;
}else{
if(this.mappingRange.range==0){
_11d2=_11d1.min;
_11d3=_11d1.max;
_11d4=this.mappingRange.min;
_11d5=this.mappingRange.max;
}else{
_11d2=Math.max(_11d1.min,this.mappingRange.min);
_11d3=Math.min(_11d1.max,this.mappingRange.max);
_11d4=_11d2;
_11d5=_11d3;
}
}
}
}
var _11d6=this.getElementSizeForValue(_11d2);
var _11d7=this.getElementSizeForValue(_11d3);
this.axisLength=Math.max(_11d6,_11d7);
if(this.axisLength==0){
this.axisLength=1;
_11d7=1;
}
this.axisRange=new _11c6.m(_11d2,_11d3);
var _11d8=Math.max(_11d6,_11d7);
if(Math.abs(_11d7-_11d6)<this.minimumTickDistance||_11d8<=30||(this.mappingRange!=null&&this.mappingRange.range==0)){
return this.makeDiscreteScaleSpecForContinuous(_11d4,_11d6,_11d5,_11d7);
}
return this.makeContinuousScaleSpec(_11d4,_11d6,_11d5,_11d7);
},makeContinuousScaleSpec:function(_11d9,_11da,_11db,_11dc){
var _11dd=Math.min(_11da,_11dc);
var span=new Object();
span.fit="exact";
span.outRange=new Object();
var _11de=_11dc<_11da;
if(_11de){
span.min=_11db;
span.max=_11d9;
span.outRange.min=0;
span.outRange.max=Math.max(0.00001,1-_11dd/this.axisLength);
}else{
span.min=_11d9;
span.max=_11db;
span.outRange.min=Math.min(1-0.00001,_11dd/this.axisLength);
span.outRange.max=1;
}
if(this.aesthetic.spec!=null&&this.aesthetic.spec.scale!=null&&this.aesthetic.spec.scale.spans!=null&&this.aesthetic.spec.scale.spans.length>0){
var _11df=this.aesthetic.spec.scale.spans[0];
if(_11df!=null){
span.tickDelta=_11df.tickDelta;
}
}
var _11e0=new Object();
_11e0.spans=[span];
_11e0.reverse=_11de;
return _11e0;
},makeDiscreteScaleSpecForContinuous:function(_11e1,_11e2,_11e3,_11e4){
var _11e5=new Object();
var _11e6=Math.abs(_11e4-_11e2)>=this.minimumTickDistance;
if(_11e6){
_11e5.spans=[this.makeSolitaryTickSpan(_11e4,_11e3),this.makeSolitaryTickSpan(_11e2,_11e1)];
return _11e5;
}
if(_11e4>=_11e2){
_11e5.spans=[this.makeSolitaryTickSpan(_11e4,_11e3)];
return _11e5;
}
_11e5.spans=[this.makeSolitaryTickSpan(_11e2,_11e1)];
return _11e5;
},makeSolitaryTickSpan:function(_11e7,_11e8){
var span=new Object();
span.tickDelta=1;
span.outRange=new Object();
var v=Math.min(1-0.00001,_11e7/this.axisLength);
span.outRange.min=v;
span.outRange.max=v+0.00001;
span.min=_11e8;
span.max=_11e8;
return span;
},getElementSizeForValue:function(_11e9){
var _11ea=this.scale.toZeroOneClamped(_11e9,this.unit);
var v;
if(_11ea==null){
v=1;
}else{
v=_11ea;
}
var shape;
if(this.modifiesWidth!=this.modifiesHeight){
shape=new _11c7.m(0,0,this.elementSize.width,this.elementSize.height);
}else{
var min=Math.min(this.elementSize.width,this.elementSize.height);
shape=new _11c7.m(0,0,min,min);
}
this.aesthetic.element.styleShape(shape);
var rect=this.aesthetic.applyValue(shape,v,_11e9,false).getBounds();
var size=this.modifiesWidth?rect.width:rect.height;
return size;
},getMappingRange:function(_11eb){
if(_11eb==null||_11eb.length==0){
return null;
}
var _11ec=_11c6.m.EMPTY;
for(var i=0;i<_11eb.length;++i){
var v=this.getMappingAt(_11eb[i]);
if(!_11c8.m.isNaN(v)){
_11ec=_11ec.unionValue(v);
}
}
if(_11ec.isEmpty()){
return null;
}
return _11ec;
},getMappingAt:function(_11ed){
var at=_11ed.at;
if(_11c9.m.isNumber(at)){
return (at);
}
if(_11c9.m.isString(at)){
var ats=at;
if(ats.CPVISEngineEndsWith("%")){
if(this.scaleRange==null||this.scaleRange.isEmpty()){
return NaN;
}
var v=_11c8.m.parseDouble(ats.substring(0,ats.CPVisEngineLength()-1))/100;
return this.scaleRange.fromZeroOne(v);
}
return _11c8.m.parseDouble(ats);
}
return this.scaleRange.min;
}});
return _11cc;
});
},"com/ibm/vis/engine/internal/scene/SymbolBuilder":function(){
define("com/ibm/vis/engine/internal/scene/SymbolBuilder",["com/ibm/init/fork!../struct/Circle","com/ibm/init/fork!./ItemBuilder","com/ibm/init/fork!../util/MathUtil","com/ibm/init/fork!../nativeImpl/WebEngineException","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!./StyleBuilder","com/ibm/init/fork!../struct/Poly","com/ibm/init/fork!../struct/Triangle","com/ibm/init/fork!../struct/Cross","com/ibm/init/fork!../struct/Plus","com/ibm/init/fork!../struct/Star","com/ibm/init/fork!../struct/I_Beam","com/ibm/init/fork!../struct/T_Beam","com/ibm/init/statics","dojo/_base/declare"],function(_11ee,_11ef,_11f0,_11f1,_11f2,_11f3,_11f4,_11f5,_11f6,_11f7,_11f8,_11f9,_11fa,_11fb,_11fc){
var _11fd=_11fc("com.ibm.vis.engine.internal.scene.SymbolBuilder",null,{});
_11fd.makeSymbol=function(_11fe,cx,cy,_11ff,_1200,style){
var _1201;
var r=Math.min(_11ff,_1200)/2;
if("circle".CPVisEngineEquals(_11fe)){
_1201=new _11ee.m(cx,cy,r);
}else{
if("square".CPVisEngineEquals(_11fe)){
var d=Math.min(_11ff,_1200);
_1201=_11ef.m.makeRectangle(cx-d/2,cy-d/2,d,d,style);
_1201.fill=null;
}else{
if(_11fe.CPVISEngineStartsWith("rect")){
_1201=_11ef.m.makeRectangle(cx-_11ff/2,cy-_1200/2,_11ff,_1200,style);
_1201.fill=null;
}else{
if("i-beam".CPVisEngineEquals(_11fe)){
_1201=_11fd.buildIBeam(cx,cy,_11ff,_1200);
}else{
if("t-beam".CPVisEngineEquals(_11fe)){
_1201=_11fd.buildTBeam(cx,cy,_11ff,_1200);
}else{
if(_11fe.CPVISEngineStartsWith("poly")){
_1201=_11fd.buildPolygon(cx,cy,r,_11f0.m.getSuffixNumber(_11fe));
}else{
if(_11fe.CPVISEngineStartsWith("star")){
_1201=_11fd.buildStar(cx,cy,r,_11f0.m.getSuffixNumber(_11fe));
}else{
if("cross".CPVisEngineEquals(_11fe)){
_1201=_11fd.buildCross(cx,cy,r);
}else{
if("plus".CPVisEngineEquals(_11fe)){
_1201=_11fd.buildPlus(cx,cy,r);
}else{
if(_11fe.CPVISEngineStartsWith("tri")){
_1201=_11fd.buildTriangle(cx,cy,r);
}else{
throw new _11f1.m("unknown symbol "+_11fe);
}
}
}
}
}
}
}
}
}
}
_1201.setGlyphLike();
_1201.setActualDim(new _11f2.m(_11ff,_1200));
_1201.snap=_11f3.m.getSnap(style);
return _1201;
};
_11fd.buildPolygon=function(cx,cy,_1202,n){
var d=_11fd.calcHeightAdjust(n);
var cy2=cy;
if(n%2==1){
cy2+=2*_1202*d;
}
var x=Array.create([n],0);
var y=Array.create([n],0);
var maxY=0;
for(var i=0;i<n;++i){
var a=i*2*3.141592653589793/n;
if(Math.round(n/2)==(n/2)){
a-=3.141592653589793/n;
}
x[i]=cx+_1202*(1+d)*Math.sin(a);
y[i]=cy2-_1202*(1+d)*Math.cos(a);
maxY=Math.max(maxY,y[i]-cy2);
}
return new _11f4.m(x,y,true,null);
};
_11fd.buildTriangle=function(cx,cy,_1203){
var d=_11fd.calcHeightAdjust(3);
var cy2=cy+(2*_1203*d);
var x=Array.create([3],0);
var y=Array.create([3],0);
var maxY=0;
for(var i=0;i<3;++i){
var a=i*2*3.141592653589793/3;
if(Math.round(3/2)==(3/2)){
a-=3.141592653589793/3;
}
x[i]=cx+_1203*(1+d)*Math.sin(a);
y[i]=cy2-_1203*(1+d)*Math.cos(a);
maxY=Math.max(maxY,y[i]-cy2);
}
return new _11f5.m(x,y,true,null);
};
_11fd.calcHeightAdjust=function(n){
return (1-Math.cos(3.141592653589793/n/2));
};
_11fd.buildCross=function(cx,cy,R){
var r=R/4;
var h=(R+r)/Math.sqrt(2);
var R2=R*R/h;
var x=Array.create([12],0);
var y=Array.create([12],0);
var a=3.141592653589793/4;
for(var i=0;i<12;i+=3){
var cos=Math.cos(a);
var sin=Math.sin(a);
x[i]=r;
y[i]=-r;
x[i+1]=R2;
y[i+1]=-r;
x[i+2]=R2;
y[i+2]=r;
for(var j=i;j<i+3;++j){
var px=x[j];
var py=y[j];
x[j]=cx+cos*px-sin*py;
y[j]=cy+sin*px+cos*py;
}
a+=3.141592653589793/2;
}
return new _11f6.m(x,y,true,null);
};
_11fd.buildPlus=function(cx,cy,R){
var r=R/4;
var x=Array.create([12],0);
var y=Array.create([12],0);
var a=0;
for(var i=0;i<12;i+=3){
var cos=Math.cos(a);
var sin=Math.sin(a);
x[i]=r;
y[i]=-r;
x[i+1]=R;
y[i+1]=-r;
x[i+2]=R;
y[i+2]=r;
for(var j=i;j<i+3;++j){
var px=x[j];
var py=y[j];
x[j]=cx+cos*px-sin*py;
y[j]=cy+sin*px+cos*py;
}
a+=3.141592653589793/2;
}
return new _11f7.m(x,y,true,null);
};
_11fd.buildStar=function(cx,cy,_1204,n){
var d=_11fd.calcHeightAdjust(n);
var cy2=cy;
if(n%2==1){
cy2+=2*_1204*d;
}
var x=Array.create([2*n],0);
var y=Array.create([2*n],0);
for(var i=0;i<n;++i){
var a1=i*2*3.141592653589793/n;
if(Math.round(n/2)==(n/2)){
a1-=3.141592653589793/n;
}
var a2=a1+3.141592653589793/n;
x[2*i]=cx+_1204*(1+d)*Math.sin(a1);
y[2*i]=cy2-_1204*(1+d)*Math.cos(a1);
x[2*i+1]=cx+(1+d)*_1204/2.5*Math.sin(a2);
y[2*i+1]=cy2-(1+d)*_1204/2.5*Math.cos(a2);
}
return new _11f8.m(x,y,true,null);
};
_11fd.buildIBeam=function(cx,cy,width,_1205){
var x=cx-width/2;
var y=cy-_1205/2;
var rx=x+width;
var _1206=y+_1205;
var xx=[x,rx,cx,cx,x,rx];
var yy=[y,y,y,_1206,_1206,_1206];
var ops=["M","L","M","L","M","L"];
return new _11f9.m(xx,yy,false,ops);
};
_11fd.buildTBeam=function(cx,cy,width,_1207){
var _1208=_1207<0;
var ht=_1207;
if(_1208){
ht=-ht;
}
var x=cx-width/2;
var y=cy-ht/2;
var rx=x+width;
var _1209=y+ht;
var ops=["M","L","M","L"];
var xx=[x,rx,cx,cx];
var yy;
if(_1208){
yy=[_1209,_1209,_1209,y];
}else{
yy=[y,y,y,_1209];
}
return new _11fa.m(xx,yy,false,ops);
};
return _11fd;
});
},"com/ibm/vis/engine/internal/legend/LegendFrameLayout":function(){
define("com/ibm/vis/engine/internal/legend/LegendFrameLayout",["../layout/ContentLayout","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!../struct/Dim","com/ibm/init/statics","dojo/_base/declare"],function(_120a,_120b,_120c,_120d,_120e){
var _120f=_120e("com.ibm.vis.engine.internal.legend.LegendFrameLayout",[_120a],{titleFrame:null,legendContentFrame:null,constructor:function(_1210,_1211){
this.titleFrame=_1210;
this.legendContentFrame=_1211;
},layout:function(_1212,_1213,_1214){
var _1215=(_1212).getContentBounds();
var _1216=this.titleFrame.getMaximumSize();
var _1217=this.legendContentFrame.getMaximumSize();
var _1218=Math.min(_1215.width,_1216.width);
var _1219=Math.min(_1215.height,this.titleFrame.getPreferredSize().height);
if(this.titleFrame.getMinimumSize().greaterThan(_1218,_1219)){
_1218=0;
_1219=0;
}
var _121a=Math.min(_1215.width,_1217.width);
var _121b=_1215.height-_1219;
if(_121b>_1217.height){
_121b=_1217.height;
}
if(this.legendContentFrame.getMinimumSize().greaterThan(_121a,_121b)){
_121a=0;
_121b=0;
}
this.titleFrame.layoutWithBounds(new _120b.m(0,0,_1218,_1219),_1213,_1214);
this.legendContentFrame.layoutWithBounds(new _120b.m(0,_1219,_121a,_121b),_1213,_1214);
},getPreferredSize:function(_121c){
var _121d=this.titleFrame.getPreferredSize();
var _121e=this.legendContentFrame.getPreferredSize();
var _121f=Math.max(_121d.width,_121e.width);
var _1220=_121d.height+_121e.height;
return new _120c.m(_121f,_1220);
},getMinimumSize:function(_1221){
return new _120c.m(0,0);
},getMaximumSize:function(_1222){
return new _120c.m(Infinity,Infinity);
}});
return _120f;
});
},"com/ibm/vis/widget/VisControlInteractivity":function(){
define("com/ibm/vis/widget/VisControlInteractivity",["dojo/_base/declare","../engine/internal/nativeImpl/EffectBuilder","../engine/internal/nativeImpl/EventCoordinateHelper","../interaction/internal/InteractivityImpl","../interaction/ChangeEffects","../engine/internal/struct/Dim"],function(_1223,_1224,_1225,_1226,_1227,Dim){
var _1228=_1223("com.ibm.vis.widget.VisControlInteractivity",[_1226],{visControl:null,effectsBuilder:null,startEffect:null,startTime:0,onStartEasing:null,highlightDuration:null,highlightEasing:null,scene:null,lastScene:null,constructor:function(_1229){
this.visControl=_1229;
this.vis=this.visControl._vis;
this.coordHelper=new _1225(_1229);
this.eventDispatcher=_1229._getEventDispatcher();
},getHighlightEffect:function(){
return this.highlightEffect;
},setSceneWithTransition:function(scene,_122a){
this.lastScene=this.scene;
this.scene=scene;
var _122b=this.getChangeEffects().getChangeEffect(_122a);
this.setStartEffect(_122b);
this.installStartEffects();
this.installMoreEffects();
this.updateState(this.scene);
},installMoreEffects:function(){
var _122c=this.highlightEffect.values();
if(_122c.size()<1){
return;
}
var _122d=this.highlightEffect.get(0);
if(_122d==null){
_122d=_122c.get(0);
}
if(_122d.isAnimated()){
this.effectsBuilder=new _1224(this.visControl._scene,this.visControl,this.visControl._renderer.nativeSceneMap,true,null,this.highlightDuration,this.highlightEasing,-1);
}else{
this.effectsBuilder=new _1224(this.visControl._scene,this.visControl,this.visControl._renderer.nativeSceneMap,false,this.visControl._renderer,0,0,-1);
}
if(this.visControl._scene==null){
return;
}
if(this.scrollUnitRenderer!=null&&this.scrollUnitRenderer.getScrollUnit()==null){
this.scrollUnitRenderer.install(new _1224(this.visControl._scene,this.visControl,this.visControl._renderer.nativeSceneMap,true,null,this.highlightDuration,this.highlightEasing,-1),this.vis);
}
for(var i=0;i<_122c.size();i++){
var _122e=_122c.get(i);
_122e.install(this.effectsBuilder);
}
},installStartEffects:function(){
if(this.startEffect!=null&&this.startTime>0){
var _122f=new _1224(this.visControl._scene,this.visControl,this.visControl._renderer.nativeSceneMap,true,null,this.startTime,this.onStartEasing);
this.startEffect.installWithPrevious(_122f,this.lastScene);
_122f.start();
}
},rendererShowHighligths:function(){
},setStartEffect:function(_1230,_1231){
this.startEffect=_1230;
if(this.startEffect==null){
this.startTime=0;
}else{
this.startTime=this.startEffect.getTime();
}
this.onStartEasing=_1231;
},getValue:function(_1232,key){
var _1233=this.visControl._renderer.originalSceneMap[_1232];
if(_1233==null){
return;
}
return _1233[key];
},getItemsMatching:function(_1234,_1235,_1236){
return this.visControl._renderer.getHitItemsMatching(_1234,_1235,_1236);
},nativeGetItemsMatchingAnyRows:function(rows){
return this.visControl._renderer.getItemsMatchingAnyRows(rows,this.vis);
},getCanvasDimensions:function(){
return new Dim(this.visControl.width,this.visControl.height);
},getScene:function(){
return this.visControl._getScene();
},setScene:function(scene){
this.visControl._setScene(scene);
}});
return _1228;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/ComponentSplitting":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/ComponentSplitting",["com/ibm/init/fork!./LiteGraph","com/ibm/init/fork!../../BubbleLayout","com/ibm/init/fork!../../../../struct/Point","com/ibm/init/fork!../../../../struct/Circle","com/ibm/init/statics","dojo/_base/declare"],function(_1237,_1238,_1239,_123a,_123b,_123c){
var _123d=_123c("com.ibm.vis.engine.internal.grammar.layout.graph.stress.ComponentSplitting",null,{nodes:null,components:null,constructor:function(nodes,links){
this.nodes=nodes;
var N=this.markNodesWithComponent();
this.components=new Array(N);
for(var i=0;i<N;++i){
this.components[i]=new _1237.m(null,null);
}
for(var _123e=0,_123f=nodes.length;_123e<_123f;++_123e){
var n=nodes[_123e];
var index=n.info;
this.components[index].addNode(n);
}
for(var _1240=0,_1241=links.length;_1240<_1241;++_1240){
var e=links[_1240];
var index=e.from.info;
this.components[index].addLink(e);
}
},getComponents:function(){
return this.components;
},combine:function(_1242,_1243,_1244){
var _1245=new Array(this.components.length);
var radii=Array.create([this.components.length],0);
for(var i=0;i<this.components.length;++i){
_1245[i]=this.getSpanningCircle(this.components[i]);
radii[i]=_1245[i].r+_1244/2;
}
var _1246=new _1238.m(_1242,true);
var _1247=_1246.placeSimpleCircles(radii,_1243);
for(var i=0;i<this.components.length;++i){
var dx=_1247[i].x-_1245[i].x;
var dy=_1247[i].y-_1245[i].y;
for(var _1248=0,_1249=this.components[i].nodes,_124a=_1249.size();_1248<_124a;++_1248){
var n=_1249.get(_1248);
n.moveBy(dx,dy);
}
}
},getSpanningCircle:function(g){
var sx=0,sy=0;
for(var _124b=0,_124c=g.nodes,_124d=_124c.size();_124b<_124d;++_124b){
var n=_124c.get(_124b);
sx+=n.x;
sy+=n.y;
}
var _124e=new _1239.m(sx/g.getNodesCount(),sy/g.getNodesCount());
var d=this.getFurthest(_124e,g.nodes);
return new _123a.m(_124e.x,_124e.y,d);
},getFurthest:function(_124f,list){
var best=0;
for(var _1250=0,_1251=list.size();_1250<_1251;++_1250){
var n=list.get(_1250);
var q=new _1239.m(n.x,n.y);
var b=n.getCurrentBounds();
var d=_124f.dist(q)+Math.max(b.width,b.height);
if(d>best){
best=d;
}
}
return best;
},markNodesWithComponent:function(){
for(var _1252=0,_1253=this.nodes,_1254=_1253.length;_1252<_1254;++_1252){
var n=_1253[_1252];
n.info=null;
}
var index=0;
for(var _1255=0,_1256=this.nodes,_1257=_1256.length;_1255<_1257;++_1255){
var n=_1256[_1255];
if(n.info==null){
this.markConnected(n,index);
index++;
}
}
return index;
},markConnected:function(node,index){
node.info=index;
for(var _1258=0,_1259=node.getNeighbors(),_125a=_1259.length;_1258<_125a;++_1258){
var n=_1259[_1258];
if(n.info==null){
this.markConnected(n,index);
}
}
}});
_123d.fromLayout=function(model){
return new _123d(model.nodes,model.links);
};
return _123d;
});
},"com/ibm/vis/engine/internal/migration/DeclarativeMigrationStrategy":function(){
define("com/ibm/vis/engine/internal/migration/DeclarativeMigrationStrategy",["./MigrationStrategy","com/ibm/init/fork!./EvaluationContext","com/ibm/init/fork!./StrategyReference","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../util/Version","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!./Mapping","com/ibm/init/fork!./MigrationStrategyComparator","com/ibm/init/statics","dojo/_base/declare"],function(_125b,_125c,_125d,_125e,_125f,_1260,_1261,_1262,_1263,_1264){
var _1265=_1264("com.ibm.vis.engine.internal.migration.DeclarativeMigrationStrategy",[_125b],{mappings:null,version:null,constructor:function(_1266,_1267){
this.version=_1266;
this.mappings=_1267;
},getTargetVersion:function(){
return this.version;
},migrate:function(json){
var _1268=false;
var _1269=new _125c.m(json,null);
_1269.properties.put(_125d.m.VERSION_PROPERTY,this.version);
for(var _126a=0,_126b=this.mappings,_126c=_126b.size();_126a<_126c;++_126a){
var _126d=_126b.get(_126a);
if(_126d.execute(_1269)){
_1268=true;
}
}
return _1268;
}});
_1265.parse=function(arr){
var len=arr.length;
var _126e=new _125e.m(len);
for(var i=0;i<len;++i){
var item=arr[i];
_126e.add(new _1265(_125f.m.parseVersion(_1260.m.getItem(item,"targetVersion")),_1261.m.parse(_1260.m.getItem(item,"mapping"))));
}
_1260.m.sortList(_126e,new _1262.m());
return _126e;
};
return _1265;
});
},"com/ibm/vis/engine/internal/migration/PathSegment":function(){
define("com/ibm/vis/engine/internal/migration/PathSegment",["com/ibm/init/fork!../../../exceptions/EngineException","com/ibm/init/fork!../../../exceptions/ErrorCode","com/ibm/init/fork!../nativeImpl/IntegerUtil","com/ibm/init/fork!./ArrayRange","com/ibm/init/fork!./SpecifiedArrayRange","com/ibm/init/fork!./VariableArrayRange","com/ibm/init/fork!./EvaluationResult","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!./PathExpression","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../nativeImpl/StringBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_126f,_1270,_1271,_1272,_1273,_1274,_1275,_1276,_1277,_1278,_1279,_127a,_127b){
var _127c=_127b("com.ibm.vis.engine.internal.migration.PathSegment",null,{parent:null,child:null,pathSegment:null,isArray:false,isMultiDimensionArray:false,definesRange:false,arrayItem:false,rangeStart:null,rangeEnd:null,isVariableDeclaration:false,isImplicitVariableDeclaration:false,isVariablePath:false,variableObject:null,all:false,offsetStart:0,offsetEnd:0,isRoot:false,rangeVarStr:null,constructor:function(){
this.rangeVarStr="$";
this.__constructor_com_ibm_vis_engine_internal_migration_PathSegment.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_migration_PathSegment:function(path,_127d){
this.parent=_127d;
if(_127d!=null){
_127d.child=this;
}
var _127e;
var idx=path.indexOf("[");
if(idx>=0){
_127e=path.substring(0,idx);
this.isArray=true;
this.isMultiDimensionArray=_127e.CPVisEngineLength()==0;
var _127f=path.substring(idx+1,path.CPVisEngineLength()-1);
if(_127f.CPVisEngineLength()>0){
this.arrayItem=true;
var parts=_127c.split(_127f,":");
this.rangeStart=parts[0];
this.parseOffset(true);
if("*".CPVisEngineEquals(this.rangeStart)){
this.isVariableDeclaration=true;
this.isImplicitVariableDeclaration=true;
}else{
if(this.rangeStart.CPVISEngineStartsWith("$$")){
this.isVariableDeclaration=true;
}
}
if(parts.length==2){
this.definesRange=true;
this.rangeEnd=parts[1];
this.parseOffset(false);
if("*".CPVisEngineEquals(this.rangeStart)){
throw new _126f.m(null,_1270.m.MIGRATION_INVALID_PATH_EXPRESSION,"Invalid range '"+this.rangeStart+":"+this.rangeEnd+"'.",null);
}
}
}
}else{
_127e=path;
}
if(_127e.CPVISEngineStartsWith("//")){
if(this.arrayItem){
this.parent=new _127c(_127e,this.parent);
this.parent.child=this;
this.isMultiDimensionArray=true;
_127e="";
}else{
var p=this.parent;
while(p!=null){
if(p.all){
throw new _126f.m(null,_1270.m.MIGRATION_INVALID_PATH_EXPRESSION,"Only one path segment with '"+"//"+"' is allowed in a qualified path.",null);
}
p=p.parent;
}
this.isArray=true;
this.all=true;
_127e=_127e.substring("//".CPVisEngineLength());
}
}else{
if(_127e.CPVISEngineStartsWith("/")){
if(this.parent!=null){
throw new _126f.m(null,_1270.m.MIGRATION_INVALID_PATH_EXPRESSION,"A root reference with '"+"/"+"' is only allowed as the first segment in a qualified path.",null);
}
this.isRoot=true;
_127e=_127e.substring("/".CPVisEngineLength());
}
}
if(_127e.CPVISEngineStartsWith("$")){
this.isVariablePath=true;
this.pathSegment=_127e.substring("$".CPVisEngineLength());
}else{
if(_127e.CPVISEngineStartsWith("%")){
if(this.parent!=null||this.all||this.isRoot){
throw new _126f.m(null,_1270.m.MIGRATION_INVALID_PATH_EXPRESSION,"An object reference with '"+"%"+"' is only allowed as the first segment in a qualified path.",null);
}
this.variableObject=_127e.substring("%".CPVisEngineLength());
this.pathSegment="";
}else{
this.pathSegment=_127c.unescapePath(_127e);
}
}
},convertVariableDeclarationToReference:function(){
this.isVariableDeclaration=false;
this.rangeVarStr="$$";
if(this.isImplicitVariableDeclaration){
this.rangeStart=this.rangeVarStr+this.getImplicitVariable();
}
},getImplicitVariable:function(){
var _1280=0;
var _1281=this;
while((_1281=_1281.parent)!=null){
if(_1281.isImplicitVariableDeclaration){
_1280++;
}
}
return ""+_1280;
},parseOffset:function(_1282){
var range=_1282?this.rangeStart:this.rangeEnd;
var plus=true;
var parts=_127c.split(range,"+");
if(parts.length!=2){
plus=false;
parts=_127c.split(range,"-");
}
if(parts.length==2){
var _1283=_1271.m.parseInt(parts[1],10);
if(!plus){
_1283=0-_1283;
}
if(_1282){
this.rangeStart=parts[0];
this.offsetStart=_1283;
}else{
this.rangeEnd=parts[0];
this.offsetEnd=_1283;
}
}
},getParent:function(){
return this.parent;
},evaluate:function(_1284){
return this.createAndEvaluate(_1284,false);
},getIndex:function(array,_1285){
var idx;
if(this.definesRange){
var ar=_1285.properties.get(this);
if(ar==null){
var start=this.parseRange(_1285,this.rangeStart,this.offsetStart);
var end=this.parseRange(_1285,this.rangeEnd,this.offsetEnd);
if(start==-1){
start=end;
}
if(end==-1){
end=start;
}
if(start==-1&&end==-1){
throw new _126f.m(null,_1270.m.MIGRATION_INVALID_PATH_EXPRESSION,"Invalid range ["+this.rangeStart+"-"+this.rangeEnd+"]",null);
}
ar=new _1272.m(start,end);
_1285.properties.put(this,ar);
}
idx=ar.current;
}else{
if(this.isVariableDeclaration||this.all){
var ar=_1285.properties.get(this);
if(ar==null){
var start=0;
var end=array.length-1;
if(this.all){
ar=new _1273.m(start,end,array);
}else{
var key;
if(this.isImplicitVariableDeclaration){
key=this.getImplicitVariable();
}else{
key=this.rangeStart.substring("$$".CPVisEngineLength());
}
ar=new _1274.m(start,end,key);
_1285.variables.put(key,ar.current);
}
_1285.properties.put(this,ar);
}
idx=ar.current;
}else{
idx=this.parseRange(_1285,this.rangeStart,this.offsetStart);
}
}
return idx;
},next:function(_1286){
if(this.isArray){
var ar=_1286.properties.get(this);
if(ar==null&&(this.definesRange||this.isVariableDeclaration||this.all)){
var json=this.getContextObject(_1286,false);
if(json!=null){
var array=this.getArray(json,_1286);
if(array!=null){
this.getIndex(array,_1286);
}
}
ar=_1286.properties.get(this);
}
if(ar!=null){
if(ar.current<ar.end){
ar.current++;
if(ar instanceof _1274.m){
_1286.variables.put((ar).variable,ar.current);
}
return true;
}
if(this.parent!=null){
if(this.parent.next(_1286)){
if(ar instanceof _1274.m){
_1286.variables.remove((ar).variable);
}
_1286.properties.remove(this);
return true;
}
}
return false;
}
}
return this.parent==null?false:this.parent.next(_1286);
},createAndEvaluate:function(_1287,_1288){
var _1289=_1275.m.DOES_NOT_EXIST;
if(this.variableObject!=null){
var _128a=this.getVariableObject(_1287);
if(this.isArray){
if(_1276.m.isArray(_128a)){
if(this.arrayItem){
var idx=this.getIndex(_128a,_1287);
if(idx<_128a.length){
_1289=new _1275.m(_128a[idx]);
}
}else{
_1289=new _1275.m(_128a);
}
}
}else{
_1289=new _1275.m(_128a);
}
return _1289;
}
var path=this.getPath(_1287);
var json=this.getContextObject(_1287,_1288);
if(_1276.m.isArray(json)&&"length".CPVisEngineEquals(path)){
return new _1275.m(json.length);
}
if(json!=null){
if(this.isArray&&(this.arrayItem||this.all)){
if(!(_1276.m.isArray(json)||_1276.m.isObject(json))){
_1289=_1275.m.DOES_NOT_EXIST;
}else{
var array=this.getArray(json,_1287);
if(this.arrayItem){
if(array==null&&_1288){
array=_1276.m.createJSONArray();
_1276.m.put(json,path,array);
}
if(_1288){
var idx=this.getIndex(array,_1287);
var size=array.length;
while(idx>=size){
var value=null;
if(this.child!=null&&size==idx){
if(this.child.isMultiDimensionArray){
value=_1276.m.createJSONArray();
}else{
value=_1276.m.createJSONObject();
}
}
array.push(value);
size++;
}
}
}
if(array!=null){
var idx=this.getIndex(array,_1287);
if(idx<array.length){
_1289=new _1275.m(array[idx]);
}
}
}
}else{
if(this.isMultiDimensionArray&&_1276.m.isArray(json)){
_1289=new _1275.m(json);
}else{
if(_1276.m.isObject(json)&&_1276.m.containsKey(json,path)){
_1289=new _1275.m(_1276.m.getItem(json,path));
}
}
if(_1288&&_1289.value==null){
var _128b=this.isArray?_1276.m.createJSONArray():_1276.m.createJSONObject();
_1276.m.put(json,path,_128b);
_1289=new _1275.m(_128b);
}
}
}
return _1289;
},getContextObject:function(_128c,_128d){
var json=null;
if(this.variableObject!=null){
json=_128c.getVariable(this.variableObject);
}else{
if(this.parent!=null){
var _128e=this.parent.createAndEvaluate(_128c,_128d);
if(_128e!=_1275.m.DOES_NOT_EXIST){
json=_128e.value;
}
}else{
json=_128c.context;
if(this.isRoot){
var _128f=_128c;
while((_128f=_128f.getParent())!=null){
json=_128f.context;
}
}
}
}
return json;
},getVariableObject:function(_1290){
return _1290.getVariable(this.variableObject);
},assign:function(_1291,value){
var json=this.getContextObject(_1291,true);
var path=this.getPath(_1291);
if(this.isArray&&this.arrayItem){
var array=this.getArray(json,_1291);
if(array==null){
array=_1276.m.createJSONArray();
_1276.m.put(json,path,array);
}
var idx=this.getIndex(array,_1291);
while(idx>=array.length){
array.push(null);
}
_1276.m.setAt(array,value,idx);
}else{
if(_1276.m.isObject(json)){
_1276.m.put(json,path,value);
}else{
throw new _126f.m(null,_1270.m.MIGRATION_INVALID_PATH_EXPRESSION,"Unable to assign a value to '"+path+"' due to an invalid value in the path.",null);
}
}
},concat:function(_1292,value){
if(this.isArray&&!this.arrayItem){
var _1293=this.createAndEvaluate(_1292,true);
if(_1276.m.isArray(value)){
_1276.m.addAll(_1293.value,value);
}else{
if(_1293.isArray()){
_1293.value.push(value);
}else{
throw new _126f.m(null,_1270.m.MIGRATION_INVALID_PATH_EXPRESSION,"Unable to concat a value to '"+this.getPath(_1292)+"' due to an invalid value in the path.",null);
}
}
}else{
throw new _126f.m(null,_1270.m.MIGRATION_INVALID_PATH_EXPRESSION,"Concatenation is not supported for '"+this.getPath(_1292)+"' because it is not an array.",null);
}
},remove:function(_1294){
var _1295=false;
var json;
if(this.parent==null){
json=_1294.context;
}else{
json=this.parent.createAndEvaluate(_1294,false).value;
}
if(json!=null){
if(this.isArray&&this.arrayItem){
var array=this.getArray(json,_1294);
if(array!=null){
var idx=this.getIndex(array,_1294);
if(idx<array.length){
_1295=true;
_1276.m.removeAt(array,this.getIndex(array,_1294));
var ar=_1294.properties.get(this);
if(ar!=null){
ar.current--;
ar.end--;
}
}
}
}else{
if(_1276.m.isObject(json)){
var path=this.getPath(_1294);
if(_1276.m.containsKey(json,path)){
_1295=true;
_1276.m.remove(json,path);
}
}
}
}
return _1295;
},parseRange:function(_1296,range,_1297){
if(range.CPVISEngineStartsWith(this.rangeVarStr+"(")){
var value=new _1277.m(range.substring(this.rangeVarStr.CPVisEngineLength()+1,range.CPVisEngineLength()-1)).evaluate(_1296).value;
if(value==null){
return -1;
}
return value+_1297;
}else{
if(range.CPVISEngineStartsWith(this.rangeVarStr)){
return (_1296.getVariable(range.substring(this.rangeVarStr.CPVisEngineLength())))+_1297;
}
}
return _1271.m.parseInt(range,10)+_1297;
},getPath:function(_1298){
if(this.isVariablePath){
return _1298.getVariable(this.pathSegment);
}
return this.pathSegment;
},getArray:function(json,_1299){
var _129a=null;
var path=this.getPath(_1299);
if(this.isMultiDimensionArray){
if(_1276.m.isArray(json)){
_129a=json;
}
}else{
if(this.all){
var ar=_1299.properties.get(this);
if(ar!=null){
_129a=ar.array;
}else{
_129a=_1276.m.createJSONArray();
this.objectSearch(_1299,json,_129a);
}
}else{
var item=_1276.m.getItem(json,path);
if(_1276.m.isArray(item)){
_129a=_1276.m.getItem(json,path);
}
}
}
return _129a;
},objectSearch:function(_129b,json,array){
if(_1276.m.isObject(json)){
var path=this.getPath(_129b);
if(_1276.m.containsKey(json,path)){
if(this.child==null){
array.push(json);
}else{
array.push(_1276.m.getItem(json,path));
}
}
var _129c=_1276.m.keySet(json);
for(var _129d=0,_129e=_129c.length;_129d<_129e;++_129d){
var key=_129c[_129d];
this.objectSearch(_129b,_1276.m.getItem(json,key),array);
}
}else{
if(_1276.m.isArray(json)){
var size=json.length;
for(var i=0;i<size;++i){
this.objectSearch(_129b,json[i],array);
}
}
}
}});
_127c.unescapePath=function(path){
if(path.CPVISEngineStartsWith("\\"+"$")||path.CPVISEngineStartsWith("\\"+"%")){
return path.substring(1);
}
return path;
};
_127c.split=function(_129f,_12a0){
var _12a1=new _1278.m();
var len=_129f.CPVisEngineLength();
var sb=new _1279.m();
var depth=0;
for(var i=0;i<len;++i){
var c=_129f.charAt(i);
if(c=="["||c=="("){
depth++;
}else{
if(c=="]"||c==")"){
depth--;
}else{
if(c==_12a0){
if(depth==0){
_12a1.add(sb.toString());
sb=new _1279.m();
continue;
}
}
}
}
sb.append(c);
}
_12a1.add(sb.toString());
return _12a1.toArray(new Array(_12a1.size()));
};
_127a.add("com/ibm/vis/engine/internal/migration/PathSegment",["com/ibm/vis/engine/internal/nativeImpl/StringBuilder"],function(){
_127c.ARRAY_LENGTH="length";
_127c.ALL="//";
_127c.WILD="*";
_127c.ROOT="/";
_127c.VAR="$";
_127c.VARD="$$";
_127c.VAR_OBJ="%";
_127c.RANGE=":";
_127c.PLUS="+";
_127c.MINUS="-";
});
return _127c;
});
},"url:resources/raveSchema.json":"{\r\n\t\"copyright\": \"(C) Copyright IBM Corp. 2011,2013\",\r\n\t\"version\": \"2.0.1\",\r\n\t\"type\": \"object\",\r\n\t\"classType\": \"VisJSONSpec\",\r\n\t\"properties\": {\r\n\t\t\"parameters\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"classType\": \"ParameterSpec\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"label\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"description\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"required\": {\r\n\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"type\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"required\": true,\r\n\t\t\t\t\t\t\"enum\": [ \"integer\", \"boolean\", \"double\", \"string\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"defaultValue\": {\r\n\t\t\t\t\t\t\"type\": [\"string\", \"number\", \"boolean\", \"integer\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"resolution\" : {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\" : {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"ResolutionSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"method\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"required\": true,\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"set\", \"remove\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"target\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"sourceParameter\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\"string\", \"number\", \"boolean\", \"integer\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"sourceValue\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\"string\", \"number\", \"boolean\", \"integer\"]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"parameterValues\" : {\r\n\t\t\t\"type\":  \"array\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"classType\": \"ParameterValueSpec\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"value\": {\r\n\t\t\t\t\t\t\"type\": [\"string\", \"number\", \"boolean\", \"integer\"],\r\n\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"copyright\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t},\r\n\t\t\"version\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t},\r\n\t\t\"description\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t},\r\n\t\t\"localization\": {\r\n\t\t\t\"type\": \"object\",\r\n\t\t\t\"classType\": \"LocalizationSpec\",\r\n\t\t\t\"properties\": {\r\n\t\t\t\t\"mirror\": {\r\n\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t},\r\n\t\t\t\t\"baseTextDirection\": {\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t\"nationalShaping\": {\r\n\t\t\t\t\t\"id\": \"nationalShaping\",\r\n\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\"classType\": \"NationalShapingSpec\",\r\n\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\"digits\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"contextualShaping\": {\r\n\t\t\t\t\t\"id\": \"contextualShaping\",\r\n\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\"classType\": \"ContextualShapingSpec\",\r\n\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\"digits\": {\r\n\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"defaultContext\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"legendPosition\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"enum\": [\"left\", \"right\", \"top\", \"bottom\"]\r\n\t\t},\r\n\t\t\"size\": {\r\n\t\t\t\"type\": \"object\",\r\n\t\t\t\"classType\": \"SizeSpec\",\r\n\t\t\t\"properties\": {\r\n\t\t\t\t\"height\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"number\",\r\n\t\t\t\t\t\t\t\"minimum\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"width\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"number\",\r\n\t\t\t\t\t\t\t\"minimum\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"data\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"id\": \"data\",\r\n\t\t\t\t\"classType\": \"DataSpec\",\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"fields\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"id\": \"fields\",\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"FieldSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"label\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"unit\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"categories\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"order\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"min\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"max\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"key\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"granularity\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"format\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"id\": \"format\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"FormatSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"numericPattern\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"suffix\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"prefix\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"rows\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\"null\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"type\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"source\": {\r\n\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"group\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"DerivedGroupSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"input\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"output\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"fields\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"granularity\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"input\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"DerivedInputFieldSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"field\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"role\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"output\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"id\": \"derivedOutputField\",\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"DerivedOutputFieldSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"role\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"parameters\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"DerivedParameterSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"summaryFunction\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"window\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"binStart\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"input\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"field\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"fields\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"augment\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"id\": \"augment\",\r\n\t\t\t\t\"classType\": \"AugmentSpec\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"target\": {\r\n\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"source\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"method\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"enum\": [\"intersect\", \"includeAllSource\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"thinningDistanceFraction\": {\r\n\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"dataKeys\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"sourceKeys\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"sourceFields\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"$ref\": \"fields\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"grammar\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"id\": \"grammar\",\r\n\t\t\t\t\"classType\": \"GrammarSpec\",\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"axesOverflow\": {\r\n\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"bounds\": {\r\n\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\"id\": \"bounds\",\r\n\t\t\t\t\t\t\"classType\": \"BoundsSpec\",\r\n\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\"left\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"right\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"width\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"top\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"bottom\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"height\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"coordinates\": {\r\n\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\"classType\": \"CoordinatesSpec\",\r\n\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"dimensions\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"DimensionSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"scale\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"id\": \"scale\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"ScaleSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"padding\": {\r\n\t\t\t\t\t\t\t\t\t\t\t        \"$ref\": \"padding\"\r\n\t\t\t\t\t\t\t\t\t\t        },\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"reverse\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"local\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"categoryStructure\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"CategoryStructureSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"align\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"start\", \"middle\", \"end\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"width\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"gap\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"nest\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"spans\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"span\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"SpanSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"unit\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"min\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"max\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"fit\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"outRange\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"outRange\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"SpanOutRangeSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"min\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"max\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"minorDivisions\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"tickDelta\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"categories\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"integer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"method\":{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"linear\", \"log\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"axis\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t         \t\"array\",\r\n\t\t\t\t\t\t\t\t         \t\t{\r\n\t\t\t\t\t\t\t\t\t         \t\t\"$ref\": \"axis\"\r\n\t\t\t\t\t\t\t\t         \t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"AxisSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"axis\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"method\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"horizontal\", \"vertical\", \"stagger\", \"auto\", \"between\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"lineStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"markStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"minorStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"boxStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"gridStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"tickStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"titleStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"preferredSize\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"preferredSize\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"PreferredSizeSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"max\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"min\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"preferred\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"visible\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"opposite\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"transforms\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"TransformSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"polar\", \"transpose\", \"cluster\", \"stack\", \"projection\"],\r\n\t\t\t\t\t\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"projectionParameters\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"ProjectionParametersSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"standardLongitude\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"polarParameters\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"PolarParametersSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"startAngle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"CCW\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"diameter\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"insetParameters\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"InsetParametersSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"left\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"right\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"bottom\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"top\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"elements\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"ElementsSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"interactionType\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"scrollUnit\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"clip\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"atBounds\", \"overlap\", \"none\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"type\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"point\", \"interval\", \"path\", \"line\", \"polygon\", \"area\", \"edge\", \"text\", \"schema\", \"schema:pie\", \"schema:profile\", \"schema:star\", \"schema:boxplot\", \"schema:rose\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"data\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"interpolation\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"smooth\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"positionModifier\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"dodge\", \"stack\", \"none\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"content\": {\r\n\t\t\t\t\t\t\t\t\t\"id\": \"content\",\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"DerivedValueSpec\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"components\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\"classType\": \"ComponentSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"field\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"value\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"positioning\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"LayoutSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"method\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"nodePlacement\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"symmetric\", \"maxOverlap\"]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"family\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"parent\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"size\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"leafOnly\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"padding\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"padding\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"spacing\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"layout\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"recursive\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"RecursiveSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"parent\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"child\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"levels\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"levelLabelStyles\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"LevelLabelSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"labelCollisionHandling\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"none\", \"hide\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"internal\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ElementLabelSpec\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"leaf\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ElementLabelSpec\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"levelStyles\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"LevelStyleSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"internal\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"leaf\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"swimLanes\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"SwimLaneSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"maxRowValue\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"idealNodeCountValue\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"from\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"to\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"orientation\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"top-to-bottom\", \"left-to-right\", \"bottom-to-top\", \"right-to-left\"]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"layer\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"order\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"layerPlacement\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"centered\", \"spread\", \"adaptive\"]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"attachmentPoint\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"center\", \"closestPoint\"]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"prunedNodes\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"integer\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"prunedEdges\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"integer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"color\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\"id\": \"aesthetic\",\r\n\t\t\t\t\t\t\t\t\t\t\"classType\": \"AestheticSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"scale\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"scale\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"field\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"reference\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"ReferenceSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"value\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"mapping\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"MappingSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ColorSpec\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"at\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"size\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"pattern\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"symbol\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"symbol\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"visible\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"palette\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"boolean\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ColorSpec\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"symbol\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"key\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"modifies\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"outline\", \"fill\", \"both\", \"width\", \"height\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"modifies\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"ModifiesSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"outline\", \"fill\", \"both\", \"width\", \"height\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"part\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"dashing\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"meta\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"size\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"split\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"styleBy\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"symbol\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"visibility\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"offset\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"position\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\"classType\": \"PositionSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"field\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"value\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"includeInRange\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"span\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"integer\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"derivedValue\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"DerivedValueSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"DerivedValueSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"target\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"functionName\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"variable\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"symbolStyle\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"tooltip\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\"classType\": \"TooltipSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"content\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"content\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"modifies\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"PartSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"part\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"label\": {\r\n\t\t\t\t\t\t\t\t\t\"id\": \"label\",\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"id\": \"ElementLabelSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\"classType\": \"ElementLabelSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"lineStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"backgroundStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"color\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"size\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"content\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"content\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"modifies\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"modifies\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"visibility\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"lineMinSize\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"facet\": {\r\n\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\"classType\": \"FacetSpec\",\r\n\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\"sharedAxes\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"method\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"enum\": [\"chartInChart\", \"panel\"]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"targetElement\": {\r\n\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"padding\": {\r\n\t\t\t\t\t\t\t\t\"$ref\": \"padding\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"fields\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"id\": \"facetField\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"FacetFieldSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"field\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"axis\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"axis\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"legends\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"id\": \"legend\",\r\n\t\t\t\t\"classType\": \"LegendSpec\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"aesthetics\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"AestheticReferenceSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"aesthetic\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"scale\": {\r\n\t\t\t\t\t\t\"$ref\": \"scale\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"title\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"location\": {\r\n\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"$ref\": \"bounds\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"orientation\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"method\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"mirroredLabels\": {\r\n\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"stripes\": {\r\n\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"itemStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"itemBoxStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"lineStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"tickStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"markStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"minorStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"labelStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"titleStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"boundsStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"style\": {\r\n\t\t\t\"type\": \"object\",\r\n\t\t\t\"classType\": \"StyleSpec\",\r\n\t\t\t\"id\": \"style\",\r\n\t\t\t\"properties\": {\r\n\t\t\t\t\"outlineMethod\": {\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t\"snap\": {\r\n\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t},\r\n\t\t\t\t\"align\": {\r\n\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\"enum\": [\"start\", \"middle\", \"end\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"valign\": {\r\n\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\"enum\": [\"start\", \"middle\", \"end\", \"middleOfFirstLine\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"endArrow\": {\r\n\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\"enum\": [\"none\", \"arrow\", \"closedArrow\", \"filledArrow\", \"circle\", \"filledCircle\", \"square\", \"filledSquare\", \"diamond\", \"filledDiamond\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"startArrow\": {\r\n\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\"enum\": [\"none\", \"arrow\", \"closedArrow\", \"filledArrow\", \"circle\", \"filledCircle\", \"square\", \"filledSquare\", \"diamond\", \"filledDiamond\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"location\": {\r\n\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\"enum\": [\"outside\", \"callout\", \"inside\", \"fit\", \"stretch\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"angle\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"cornerRadius\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"effect\": {\r\n\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\"classType\": \"EffectSpec\",\r\n\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\"shadow\": {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"ShadowSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"dx\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"dy\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"stdDev\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"color\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ColorSpec\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"glow\": {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"GlowSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"color\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ColorSpec\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"stdDev\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"size\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"stroke\": {\r\n\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\"classType\": \"StrokeSpec\",\r\n\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"cap\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\"enum\": [\"butt\", \"round\", \"square\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"join\": {\r\n\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"miter\", \"round\", \"bevel\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"width\": {\r\n\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"symbol\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"SymbolSpec\",\r\n\t\t\t\t\t\t\t\"id\": \"symbol\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"scaleDimensions\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"none\", \"x\", \"y\", \"both\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"shape\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"RectangleShapeSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"scaleDimensions\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"x\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"y\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"width\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"height\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"part\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"CircleShapeSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"scaleDimensions\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"x\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"y\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"r\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"part\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"PathShapeSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"scaleDimensions\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"path\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"part\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"font\": {\r\n\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\"classType\": \"FontSpec\",\r\n\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\"family\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"size\": {\r\n\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"weight\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"size\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"width\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"height\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"padding\": {\r\n\t\t\t\t\t\"id\": \"padding\",\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"id\": \"PaddinSpec\",\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"PaddingSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"left\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"right\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"top\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"bottom\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"outline\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"$ref\": \"ColorSpec\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"fill\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"ColorSpec\",\r\n\t\t\t\t\t\t\t\"id\": \"ColorSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"r\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"g\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"b\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"a\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"h\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"s\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"l\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"v\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"dAlpha\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"dSaturation\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"dLightness\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"dValue\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"FillSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"type\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"linear\", \"radial\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"colors\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\"classType\": \"ColorOffsetSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"color\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ColorSpec\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"offset\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"angle\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"focus\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"FocusSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"x\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"y\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"global\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","com/ibm/vis/engine/internal/data/geo/GeoData":function(){
define("com/ibm/vis/engine/internal/data/geo/GeoData",["com/ibm/init/fork!../../nativeImpl/WebEngineException","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../../../monitor/LogComponent","com/ibm/init/fork!../../nativeImpl/SpecUtil","com/ibm/init/fork!../../../../exceptions/RaveException","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/HashcodeMap","com/ibm/init/fork!../../struct/Path","com/ibm/init/fork!../../struct/Point","com/ibm/init/fork!../../struct/Poly","com/ibm/init/fork!../../struct/Rect","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../../../monitor/LogLevel","com/ibm/init/statics","dojo/_base/declare"],function(_12a2,_12a3,_12a4,_12a5,_12a6,_12a7,_12a8,_12a9,_12aa,_12ab,_12ac,_12ad,_12ae,_12af,_12b0){
var _12b1=_12b0("com.ibm.vis.engine.internal.data.geo.GeoData",null,{types:null,coords:null,properties:null,catPropertyMap:null,absTol:null,thinTolerance:0,context:null,globalBounds:null,size:function(){
return this.types.size();
},addFeature:function(t,g,p){
this.types.add(t);
this.coords.add(g);
this.properties.add(p);
this.increaseBounds(this.globalBounds,g);
},addMissingFeature:function(){
this.types.add(null);
this.coords.add(null);
this.properties.add(null);
},constructor:function(_12b2,_12b3){
this.context=_12b3;
this.thinTolerance=_12b2;
this.globalBounds=[Infinity,-Infinity,Infinity,-Infinity];
this.coords=new _12a7.m();
this.types=new _12a7.m();
this.properties=new _12a7.m();
this.catPropertyMap=new _12a8.m();
},featureCenter:function(i){
var all=this.featurePolygons(i);
if(all==null){
return this.simpleCenter(i);
}
var maxA=0;
var _12b4=null;
for(var _12b5=0,_12b6=all.length;_12b5<_12b6;++_12b5){
var p=all[_12b5];
var a=p.area();
if(a>maxA){
_12b4=p.centroid();
maxA=a;
}
}
return _12b4==null?this.simpleCenter(i):_12b4;
},simpleCenter:function(i){
var b=this.featureBounds(i);
return b==null?null:b.getCenter();
},featurePolygons:function(i){
if(this.absTol==null){
this.absTol=Math.min(this.globalBounds[1]-this.globalBounds[0],this.globalBounds[3]-this.globalBounds[2])*this.thinTolerance;
}
var t=this.types.get(i);
var c=this.coords.get(i);
if(c!=null&&this.context.logContext.isTracing()){
if(this.context.logContext.hasListeners()){
this.context.logContext.trace(_12a4.m.CommonGrammar,"Feature "+i+" of type '"+t+"' contains "+c.length+" parts");
}
}
if(c==null){
return null;
}
if(t.CPVisEngineEquals("LineString")){
var shape=this.makeSimplePolyShape(c,false);
return shape==null?null:[shape];
}else{
if(t.CPVisEngineEquals("MultiLineString")){
var shape=this.combineMultiplePolysIntoOne(c,false);
return shape==null?null:[shape];
}else{
if(t.CPVisEngineEquals("Polygon")){
var shape=this.combineMultiplePolysIntoOne(c,true);
return shape==null?null:[shape];
}else{
if(t.CPVisEngineEquals("MultiPolygon")){
var N=c.length;
var _12b7=new _12a7.m();
for(var j=0;j<N;++j){
var _12b8=c[j];
var shape=this.combineMultiplePolysIntoOne(_12b8,true);
if(shape!=null){
_12b7.add(shape);
}
}
if(_12b7.isEmpty()){
return null;
}
var array=new Array(_12b7.size());
for(var k=0;k<array.length;++k){
array[k]=_12b7.get(k);
}
return array;
}else{
return null;
}
}
}
}
},combineMultiplePolysIntoOne:function(c,_12b9){
var _12ba=new _12a7.m();
var M=c.length;
for(var j=0;j<M;++j){
var _12bb=c[j];
var p=this.makeSimplePolyShape(_12bb,_12b9);
if(M==1){
return p;
}
if(p!=null){
_12ba.add(p);
}
}
if(_12ba.isEmpty()){
return null;
}
var N=_12b9?_12ba.size():0;
for(var _12bc=0,_12bd=_12ba.size();_12bc<_12bd;++_12bc){
var p=_12ba.get(_12bc);
N+=p.length();
}
var x=Array.create([N],0);
var y=Array.create([N],0);
var t=Array.create([N],"\x00");
var n=0;
for(var _12be=0,_12bf=_12ba.size();_12be<_12bf;++_12be){
var p=_12ba.get(_12be);
for(var i=0;i<p.length();i++,n++){
x[n]=p.x[i];
y[n]=p.y[i];
t[n]=(i==0?"M":"L");
}
if(_12b9){
t[n++]="Z";
}
}
return new _12a9.m(x,y,_12b9,t);
},makeSimplePolyShape:function(c,_12c0){
var N=c.length;
if(_12c0){
N--;
}
var pts=new _12a7.m();
var q=new _12aa.m(Infinity,-Infinity);
for(var i=0;i<N;++i){
var point=c[i];
var p=new _12aa.m((point[0]),(point[1]));
if(p.dist(q)>this.absTol){
pts.add(p);
q=p;
}
}
var M=pts.size();
if(M<2||(M==2&&_12c0)){
return null;
}
var x=Array.create([M],0);
var y=Array.create([M],0);
for(var i=0;i<M;++i){
var p=pts.get(i);
x[i]=p.x;
y[i]=p.y;
}
return new _12ab.m(x,y,_12c0,null);
},featureBounds:function(i){
var c=this.coords.get(i);
if(c==null){
return null;
}
var xxyy=[Infinity,-Infinity,Infinity,-Infinity];
this.increaseBounds(xxyy,c);
return new _12ac.m(xxyy[0],xxyy[2],xxyy[1]-xxyy[0],xxyy[3]-xxyy[2]);
},increaseBounds:function(xxyy,arr){
if(arr==null){
return;
}
var N=arr.length;
for(var i=0;i<N;++i){
var o=arr[i];
if(_12a3.m.isNumber(o)){
var d=(o);
if(i==0){
xxyy[0]=Math.min(xxyy[0],d);
xxyy[1]=Math.max(xxyy[1],d);
}else{
xxyy[2]=Math.min(xxyy[2],d);
xxyy[3]=Math.max(xxyy[3],d);
}
}else{
this.increaseBounds(xxyy,o);
}
}
},getGlobalBounds:function(){
return new _12ac.m(this.globalBounds[0],this.globalBounds[2],this.globalBounds[1]-this.globalBounds[0],this.globalBounds[3]-this.globalBounds[2]);
},getProperty:function(index,key){
return _12a3.m.getItem(this.properties.get(index),key);
},propertyCategories:function(key){
var _12c1=false;
var _12c2=new _12ad.m();
for(var _12c3=0,_12c4=this.properties,_12c5=_12c4.size();_12c3<_12c5;++_12c3){
var p=_12c4.get(_12c3);
var o=_12a3.m.getItem(p,key);
if(o!=null){
_12c1=true;
if(_12a3.m.isString(o)){
_12c2.put(o,o);
}
}
}
if(!_12c1){
if(this.context.logContext.hasListeners()){
this.context.logContext.log(_12ae.m.Error,_12a4.m.CommonGrammar,"Could not find property in Geo Data","property",key);
}
throw new _12a6.m("Failed to find property",_12a6.m.UNMATCHED_PROPERTY_IN_GEO_AUGMENT);
}
if(_12c2.size()==0){
return null;
}
var _12c6=new Array(_12c2.size());
var n=0;
for(var _12c7=0,_12c8=_12c2.keySet(),_12c9=_12c8.size();_12c7<_12c9;++_12c7){
var s=_12c8.get(_12c7);
_12c6[n++]=s;
}
_12a3.m.sortArray(_12c6);
var map=new _12ad.m();
for(var i=0;i<_12c6.length;++i){
map.put(_12c6[i],i);
}
this.catPropertyMap.put(key,map);
return _12c6;
},getPropertyAsNumber:function(index,key){
var o=this.getProperty(index,key);
if(_12a3.m.isNumber(o)){
return o;
}else{
var map=this.catPropertyMap.get(key);
if(map==null){
this.propertyCategories(key);
map=this.catPropertyMap.get(key);
}
return map.get(o);
}
}});
_12b1.read=function(_12ca,_12cb,_12cc){
var _12cd=_12ca==null?0.001:_12ca;
var data=new _12b1(_12cd,_12cc);
var n=0;
for(var i=0;i<_12cb.totalRowCount();++i){
var _12ce=_12cb.getFeatures(i);
if(_12ce==null||_12ce.length==0){
data.addMissingFeature();
}else{
if(_12ce.length>1){
throw new _12a2.m("Cannot handle multiple matching yet -- keys must be unique in GeoJSON source");
}
var geom=_12a3.m.getItem(_12ce[0],"geometry");
data.addFeature(_12a3.m.getItem(geom,"type"),_12a3.m.getItem(geom,"coordinates"),_12a3.m.getItem(_12ce[0],"properties"));
n++;
}
}
if(_12cc.logContext.hasListeners()){
_12cc.logContext.info(_12a4.m.CommonGrammar,"Found features for "+n+" data rows");
}
return data;
};
_12b1.readFeatures=function(uri,_12cf){
var o=_12a5.m.loadJSONSpec(uri);
var _12d0=_12a3.m.getItem(o,"features");
if(_12d0==null){
if(_12cf.logContext.hasListeners()){
_12cf.logContext.error(_12a4.m.CommonGrammar,"No features in GeoJSON file");
}
throw new _12a6.m("No features found in GeoJSON file",_12a6.m.EMPTY_GEO_JSON);
}
return _12d0;
};
_12af.add("com/ibm/vis/engine/internal/data/geo/GeoData",["com/ibm/vis/engine/internal/nativeImpl/WebEngineException","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/monitor/LogComponent","com/ibm/vis/exceptions/RaveException"],function(){
_12b1.DEFAULT_THIN=0.001;
});
return _12b1;
});
},"com/ibm/vis/engine/internal/data/transform/SmoothType":function(){
define("com/ibm/vis/engine/internal/data/transform/SmoothType",["./TransformType","com/ibm/init/statics","dojo/_base/declare"],function(_12d1,_12d2,_12d3){
var _12d4=_12d3("com.ibm.vis.engine.internal.data.transform.SmoothType",[_12d1],{getRowsCreated:function(){
},setGroupMoments:function(n,xMean,yMean,sxx,sxy,syy){
},setGroupData:function(input,xI,yI,wI,_12d5){
},getPrediction:function(x){
}});
return _12d4;
});
},"com/ibm/vis/monitor/LogListener":function(){
define("com/ibm/vis/monitor/LogListener",["com/ibm/init/statics","dojo/_base/declare"],function(_12d6,_12d7){
var _12d8=_12d7("com.ibm.vis.monitor.LogListener",null,{accept:function(entry){
},isTracing:function(){
}});
return _12d8;
});
},"com/ibm/vis/engine/internal/grammar/layout/cloud/flow/FlowLayoutAlgorithm":function(){
define("com/ibm/vis/engine/internal/grammar/layout/cloud/flow/FlowLayoutAlgorithm",["../CloudAlgorithm","../Alignable","com/ibm/init/fork!./ShapeFlow","com/ibm/init/statics","dojo/_base/declare"],function(_12d9,_12da,_12db,_12dc,_12dd){
var _12de=_12dd("com.ibm.vis.engine.internal.grammar.layout.cloud.flow.FlowLayoutAlgorithm",[_12d9,_12da],{align:null,valign:null,bAlignBaseLine:false,constructor:function(){
this.align="middle";
this.valign="middle";
this.__constructor_com_ibm_vis_engine_internal_grammar_layout_cloud_flow_FlowLayoutAlgorithm.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_grammar_layout_cloud_flow_FlowLayoutAlgorithm:function(){
},layoutShapes:function(_12df,_12e0,_12e1){
this.scaleShapesToBounds(_12df,_12e0);
var flow=this.doLayout(_12df,0,1,1,_12e0,_12e1);
if(flow==null){
_12df.removeAll(_12df);
return;
}
this.align=(this.align==null)?"middle":this.align;
this.valign=(this.valign==null)?"middle":this.valign;
flow.alignRows(this.align,this.valign);
if(this.bAlignBaseLine){
flow.alignBaseLine(this.valign);
}
var _12e2=flow.getAllBounds();
var index=0;
for(var _12e3=0,_12e4=_12df.size();_12e3<_12e4;++_12e3){
var shape=_12df.get(_12e3);
if(shape==null){
continue;
}
var b=_12e2.get(index++);
var _12e5=shape.getBounds();
shape.affine(1,b.x-_12e5.x,1,b.y-_12e5.y,false);
}
},scaleShapesToBounds:function(_12e6,_12e7){
var _12e8=0;
for(var _12e9=0,_12ea=_12e6.size();_12e9<_12ea;++_12e9){
var s=_12e6.get(_12e9);
var _12eb=s.getBounds().height;
if(_12eb>_12e8){
_12e8=_12eb;
}
}
for(var _12ec=0,_12ed=_12e6.size();_12ec<_12ed;++_12ec){
var s=_12e6.get(_12ec);
var scale=_12e7.height/_12e8;
s.scale(scale,scale);
}
},doLayout:function(_12ee,low,high,prev,_12ef,_12f0){
var scale=(low+high)/2;
var flow=this.layout(_12ee,scale/prev,_12ef,_12f0);
if(flow==null){
if(high-low<=0.00001){
return flow;
}
prev=scale;
return this.doLayout(_12ee,low,scale,prev,_12ef,_12f0);
}else{
if(flow.canAddAnotherRow()){
if(high-low<=0.01){
return flow;
}
prev=scale;
return this.doLayout(_12ee,scale,high,prev,_12ef,_12f0);
}else{
return flow;
}
}
},layout:function(_12f1,_12f2,_12f3,_12f4){
var flow=new _12db.m(_12f3,_12f4);
for(var _12f5=0,_12f6=_12f1.size();_12f5<_12f6;++_12f5){
var shape=_12f1.get(_12f5);
if(shape!=null){
shape.scale(_12f2,_12f2);
}
}
for(var _12f7=0,_12f8=_12f1.size();_12f7<_12f8;++_12f7){
var shape=_12f1.get(_12f7);
if(shape==null){
continue;
}
if(!flow.addShape(shape)){
return null;
}
}
return flow;
},setHorizontalAlignment:function(align){
this.align=align;
},setVerticalAlignment:function(_12f9){
this.valign=_12f9;
},alignBaseLine:function(value){
this.bAlignBaseLine=value;
},isAlignable:function(){
return true;
}});
_12dc.add("com/ibm/vis/engine/internal/grammar/layout/cloud/flow/FlowLayoutAlgorithm",["com/ibm/vis/engine/internal/grammar/layout/cloud/CloudAlgorithm","com/ibm/vis/engine/internal/grammar/layout/cloud/Alignable"],function(){
_12de.THRESHOLD_FOR_SPACE_OVERRUN=0.00001;
_12de.THRESHOLD_FOR_SPACE_LEFT=0.01;
});
return _12de;
});
},"com/ibm/vis/engine/internal/legend/SizeAxisLegend":function(){
define("com/ibm/vis/engine/internal/legend/SizeAxisLegend",["../ContentFrame","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../../../exceptions/SpecException","com/ibm/init/fork!../../../exceptions/ErrorCode","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../oldlegends/LegendPosition","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/fork!../Bounds","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!./SizeAxisScaleMaker","com/ibm/init/fork!../Vis","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!../util/AxisToLegendConverter","com/ibm/init/fork!../struct/Point","com/ibm/init/fork!../grammar/label/LabelProducer","com/ibm/init/fork!../struct/MultiLineText","com/ibm/init/fork!../util/SceneUtil","com/ibm/init/fork!../data/Range","com/ibm/init/fork!../nativeImpl/SpecUtil","com/ibm/init/fork!../ColorUtil","com/ibm/init/statics","dojo/_base/declare"],function(_12fa,_12fb,_12fc,_12fd,_12fe,_12ff,_1300,_1301,_1302,_1303,_1304,_1305,_1306,_1307,_1308,_1309,_130a,_130b,_130c,_130d,_130e,_130f){
var _1310=_130f("com.ibm.vis.engine.internal.legend.SizeAxisLegend",[_12fa],{vis:null,legendSpec:null,aesthetic:null,legendPosition:null,legendBoundsSpec:null,field:null,horizontal:false,modifiesWidth:false,modifiesHeight:false,maker:null,legendIndex:0,constructor:function(vis,_1311,_1312){
this.vis=vis;
this.legendSpec=_1311;
this.aesthetic=_1310.getValidAesthetic(_1312);
if(this.aesthetic==null){
throw new _12fc.m(null,_12fd.m.SPEC_INVALID_LEGENDS,"The axis legend is only valid for size aesthetics using a numeric field with a linear mapping (see the VizJSON Reference Guide)",null,null,null,null);
}
this.legendPosition=vis.getLegendPosition(_1311);
if(_12fe.m.isString(_1311.location)){
this.legendBoundsSpec=null;
}else{
this.legendBoundsSpec=_1311.location;
}
this.field=this.aesthetic.valueProvider.getBaseField();
if(this.aesthetic.spec.modifies==null||!_12fe.m.isString(this.aesthetic.spec.modifies)){
this.modifiesWidth=true;
this.modifiesHeight=true;
}else{
var _1313=this.aesthetic.spec.modifies;
if("width".CPVisEngineEquals(_1313)){
this.modifiesWidth=true;
this.modifiesHeight=false;
}else{
if("height".CPVisEngineEquals(_1313)){
this.modifiesWidth=false;
this.modifiesHeight=true;
}else{
this.modifiesWidth=true;
this.modifiesHeight=true;
}
}
}
if(_1311.orientation!=null){
this.horizontal="horizontal".CPVisEngineEquals(_1311.orientation);
}else{
if(this.modifiesWidth!=this.modifiesHeight){
this.horizontal=this.modifiesWidth;
}else{
this.horizontal=this.legendPosition==_12ff.m.TOP||this.legendPosition==_12ff.m.BOTTOM;
}
}
this.maker=null;
this.legendIndex=0;
},setLegendIndex:function(index){
this.legendIndex=index;
},getLegendIndex:function(){
return this.legendIndex;
},getSizeAxisScaleMaker:function(){
return this.maker;
},isHorizontal:function(){
return this.horizontal;
},getContentPreferredSize:function(){
var _1314=this.getBoundsSize();
if(_1300.m.isNaN(_1314.width)){
if(this.horizontal){
_1314.width=_1310.HORIZONTAL_DEFAULT_SIZE.width;
}else{
_1314.width=_1310.VERTICAL_DEFAULT_SIZE.width;
}
}
if(_1300.m.isNaN(_1314.height)){
if(this.horizontal){
_1314.height=_1310.HORIZONTAL_DEFAULT_SIZE.height;
}else{
_1314.height=_1310.VERTICAL_DEFAULT_SIZE.height;
}
}
return _1314;
},getContentMaximumSize:function(){
var _1315=this.getBoundsSize();
if(_1300.m.isNaN(_1315.width)){
_1315.width=Infinity;
}
if(_1300.m.isNaN(_1315.height)){
_1315.height=Infinity;
}
return _1315;
},getBoundsSize:function(){
if(this.specifiedBounds!=null){
var r=this.specifiedBounds.getRect(new _12fb.m(NaN,NaN));
if(r!=null&&!_1300.m.isNaN(r.width)&&!_1300.m.isNaN(r.height)){
return new _12fb.m(r.width,r.height);
}
}
if(this.legendBoundsSpec==null){
return new _12fb.m(NaN,NaN);
}
var _1316=new _1301.m(this.legendBoundsSpec,this.vis.visContext.logContext);
var rect=_1316.getRect(new _12fb.m(NaN,NaN));
if(rect!=null&&!_1300.m.isNaN(rect.width)&&!_1300.m.isNaN(rect.height)){
return new _12fb.m(rect.width,rect.height);
}
var width=NaN;
var _1317=NaN;
var v=_1302.m.convertLength(this.legendBoundsSpec.width,NaN,NaN);
if(v!=null&&v>0){
width=v;
}
v=_1302.m.convertLength(this.legendBoundsSpec.height,NaN,NaN);
if(v!=null&&v>0){
_1317=v;
}
return new _12fb.m(width,_1317);
},createContent:function(){
var _1318=this.horizontal?this.getBounds().width:this.getBounds().height;
var _1319=_1310.getStyle(this.legendSpec.tickStyle,false);
var _131a=12;
if(_1319!=null&&_1319.font!=null&&_1319.font.size!=null){
var v=_1302.m.convertLength(_1319.font.size,_1318,_1318);
if(v!=null){
_131a=v;
}
}
this.maker=new _1303.m(this.aesthetic,_131a,this.modifiesWidth,this.modifiesHeight);
var _131b=this.maker.makeScaleSpecForNumerical();
if(_131b==null){
return this.postProcess(null);
}
var _131c=this.makeLegendVis(_131b);
var axis=this.makeAxisScene(this.maker.getAxisLength(),_131c);
return this.postProcess(axis);
},makeLegendVis:function(_131d){
var _131e=this.vis.currentSpec;
var _131f=new Object();
var _1320=new Object();
_131f.data=[_1320];
var _1321=-1;
var _1322=this.vis.data;
for(var i=0;i<_1322.length;++i){
if(this.field.data==_1322[i]){
_1321=i;
break;
}
}
if(_1321>=0&&_1321<_1322.length){
var _1323=_131e.data[_1321];
var _1324=this.field.index;
if(_1323.fields!=null&&_1323.fields.length>_1324){
_1320.fields=[_1323.fields[_1324]];
}
}
var _1325=new Object();
_131f.grammar=[_1325];
var _1326=new Object();
_1325.elements=[_1326];
_1326.type="point";
var _1327=new Object();
_1326.position=[_1327,_1327];
_1327.field=new Object();
_1327.field.$ref=this.field.id;
var _1328=new Object();
_1325.coordinates=_1328;
_1328.dimensions=[new Object(),new Object()];
var _1329=new Object();
var _132a;
if(this.horizontal){
_1328.dimensions[1].axis=[_1329];
_1328.dimensions[1].scale=_131d;
_132a=false;
}else{
_1328.dimensions[0].axis=[_1329];
_1328.dimensions[0].scale=_131d;
_132a=true;
}
if(this.legendSpec.mirroredLabels!=null&&this.legendSpec.mirroredLabels){
_132a=!_132a;
}
_1329.opposite=_132a;
_1329.lineStyle=_1310.getStyle(this.legendSpec.lineStyle,false);
_1329.markStyle=_1310.getStyle(this.legendSpec.markStyle,false);
_1329.tickStyle=_1310.getStyle(this.legendSpec.tickStyle,false);
var _132b=new _1304.m("vis for legend"+this.legendIndex);
_132b.setVisJSONSpec(_131f);
return _132b;
},makeAxisScene:function(_132c,_132d){
var axis=_132d.grammar[0].coordinates.axes[0];
var _132e;
var _132f;
var inner;
if(this.horizontal){
_132e=new _12fb.m(_132c,1);
inner=new _1305.m(0,0,_132c,500);
_132f=new _1305.m(0,0,_132c,500);
}else{
_132e=new _12fb.m(1,_132c);
inner=new _1305.m(0,0,500,_132c);
_132f=new _1305.m(0,0,500,_132c);
}
axis.setOutsideTickLabels(true);
axis.setLayoutForBounds(_132f,inner);
var scene=axis.getForegroundShapes(_132e,"G"+this.legendIndex);
var _1330=_12fe.m.createJSONObject();
_12fe.m.put(_1330,"type","axis");
_12fe.m.put(_1330,"children",scene);
return _1330;
},postProcess:function(axis){
var value=_1306.m.makeValueForContinuousField(this.maker.getAxisRange(),null);
var _1331;
if(value==null){
_1331=[];
}else{
_1331=[value];
}
var _1332;
if(this.aesthetic.valueProvider.getLabel()!=null){
_1332=[this.aesthetic.valueProvider.getLabel()];
}else{
_1332=["size"];
}
var _1333=new _1307.m(0,0);
var _1334=new _1307.m(0,0);
var _1335=new _1307.m(0,0);
var _1336=this.getBounds();
var title=this.makeTitle(_1336);
if(axis!=null){
var _1337=this.getAxisBounds(axis,this.maker.getAxisLength());
if(_1337==null){
_1337=new _1305.m(0,0,0,0);
}
var _1338=5+title.getHeight()+5;
var dx=(_1336.width-_1337.width)/2;
var dy=_1338;
if(_1336.width<_1337.width){
if(this.horizontal){
dx=5;
}
}
if(_1336.height<_1337.height+_1338){
if(!this.horizontal){
dy=_1336.height-_1337.height-5;
}
}
_1335=new _1307.m(dx-_1337.x,dy-_1337.y);
}
var _1339=new _1306.m(axis,this.legendIndex,true);
var _133a=_1339.createLegendWithLineSwatch(_1332,_1331,_1335,title.toJSON(),_12fe.m.createJSONObject(),_1334,_1333);
var clip=_12fe.m.createJSONObject();
var _133b=new _1305.m(0,0,_1336.width,_1336.height);
_133b.setShapeParameters(clip);
_12fe.m.put(_133a,"clip",clip);
var scene=_12fe.m.createJSONArray();
scene.push(_133a);
return scene;
},makeTitle:function(_133c){
var _133d=_1310.getStyle(this.legendSpec.titleStyle,true);
var _133e=this.legendSpec.title;
if(_133e==null){
var label=this.aesthetic.valueProvider.getLabel();
if(label!=null){
_133e=[label];
}else{
_133e=[" "];
}
}
var _133f=_1308.m.makeSimpleInside(this.vis,_133d,null,"middle","start");
var title=_133f.makeLabel(_133e,_133c);
if(title==null){
_133d.font.size=1;
_133f=_1308.m.makeSimpleInside(this.vis,_133d,null,"middle","start");
title=_133f.makeLabel([" "],_133c);
}
var _1340=title.getBounds();
var dx=(_133c.width-_1340.width)/2-_1340.x;
var dy=5-_1340.y;
if(title instanceof _1309.m){
for(var _1341=0,_1342=(title).lines,_1343=_1342.size();_1341<_1343;++_1341){
var text=_1342.get(_1341);
text.affine(1,dx,1,dy,true);
}
}else{
title.affine(1,dx,1,dy,true);
}
return title;
},getAxisBounds:function(axis,_1344){
var _1345=_12fe.m.getItem(axis,"children");
if(_1345==null||_1345.length<3){
return new _1305.m(0,0,0,0);
}
var _1346=_1345[0];
var _1347=_12fe.m.getItem(_1346,"shape");
var type=_12fe.m.getItem(_1347,"type");
if(_1347==null||!"line".CPVisEngineEquals(type)){
return new _1305.m(0,0,0,0);
}
var x1=_12fe.m.getNumberWithDefault(_1347,"x1",0);
var y1=_12fe.m.getNumberWithDefault(_1347,"y1",0);
var x2=_12fe.m.getNumberWithDefault(_1347,"x2",0);
var y2=_12fe.m.getNumberWithDefault(_1347,"y2",0);
if(this.horizontal){
}else{
}
var _1348=_130a.m.getBounds(_1346);
var _1349=new _130b.m(_1348.x,_1348.x+_1348.width);
var _134a=new _130b.m(_1348.y,_1348.y+_1348.height);
var _134b=_1345[2];
type=_12fe.m.getItem(_134b,"type");
if(!"axis-label".CPVisEngineEquals(type)){
return new _1305.m(_1349.min,_134a.min,_1349.range,_134a.range);
}
var _134c=_12fe.m.getItem(_134b,"children");
if(_134c==null||_134c.length<1){
return new _1305.m(_1349.min,_134a.min,_1349.range,_134a.range);
}
var size=_134c.length;
for(var i=0;i<size;++i){
var _134d=_130a.m.getBounds(_134c[i]);
if(_134d!=null){
_1349=_1349.unionValue(_134d.x);
_1349=_1349.unionValue(_134d.x+_134d.width);
_134a=_134a.unionValue(_134d.y);
_134a=_134a.unionValue(_134d.y+_134d.height);
}
}
return new _1305.m(_1349.min,_134a.min,_1349.range,_134a.range);
}});
_1310.getValidAesthetic=function(_134e){
if(_134e==null){
return null;
}
for(var _134f=0,_1350=_134e.size();_134f<_1350;++_134f){
var a=_134e.get(_134f);
if("size".CPVisEngineEquals(a.type)&&a.valueProvider.getBaseField()!=null&&!a.valueProvider.getBaseField().isCategorical()){
if(a.spec.mapping==null||a.spec.mapping.length==0||a.spec.mapping.length==2){
return a;
}
}
}
return null;
};
_1310.getStyle=function(_1351,_1352){
if(_1351==null){
if(!_1352){
return null;
}
_1351=new Object();
}
var _1353=new Object();
_1353.fill=_1351.fill;
if(_1351.fill==null){
_1353.fill="black";
}else{
if(!_12fe.m.isString(_1351.fill)&&!"fill".CPVisEngineEquals(_130c.m.getFillType(_1351.fill))){
if(_130d.m.createColorFromColorSpec(_1351.fill).isEmpty()){
_1353.fill="black";
}
}
}
_1353.font=_1351.font;
if(_1352&&(_1351.font==null||_1351.font.weight==null)){
_1353.font=new Object();
if(_1351.font!=null){
_1353.font.family=_1351.font.family;
_1353.font.size=_1351.font.size;
_1353.font.style=_1351.font.style;
}
_1353.font.weight="bold";
}
_1353.stroke=_1351.stroke;
_1353.effect=_1351.effect;
return _1353;
};
_130e.add("com/ibm/vis/engine/internal/legend/SizeAxisLegend",["com/ibm/vis/engine/internal/ContentFrame","com/ibm/vis/engine/internal/struct/Dim","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/nativeImpl/SpecUtil","com/ibm/vis/engine/internal/ColorUtil"],function(){
_1310.METHOD="axis";
_1310.HORIZONTAL_DEFAULT_SIZE=new _12fb.m(200,50);
_1310.VERTICAL_DEFAULT_SIZE=new _12fb.m(70,200);
_1310.MARGIN=5;
});
return _1310;
});
},"url:com/ibm/vis/widget/templates/VisControl.html":"<div data-dojo-attach-point=\"visContainer\" style=\"width:100%;height:100%;\" role=\"img\" alt=\"interactive chart\" tabindex=\"0\"></div>\r\n","com/ibm/vis/engine/internal/struct/Shape":function(){
define("com/ibm/vis/engine/internal/struct/Shape",["./VisibleItem","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../GradientGeometry","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!../util/MathUtil","com/ibm/init/fork!./Point","com/ibm/init/fork!../Fill","com/ibm/init/fork!../ColorNew","com/ibm/init/statics","dojo/_base/declare"],function(_1354,_1355,_1356,_1357,_1358,_1359,_135a,_135b,_135c,_135d){
var Shape=_135d("com.ibm.vis.engine.internal.struct.Shape",[_1354],{subTypes:0,fill:null,outline:null,effect:null,stroke:null,transform:null,data:null,rows:null,id:null,aestheticGroup:0,key:null,meta:null,scaleDimensions:0,tooltip:null,parent:null,globalGradientGeometry:null,position:null,insideStroke:false,actualDim:null,shapeIsElement:false,snap:false,applyStrokeFix:false,visible:true,positions:null,constructor:function(){
this.subTypes=0;
this.aestheticGroup=0;
this.scaleDimensions=3;
this.insideStroke=false;
this.globalGradientGeometry=null;
this.visible=true;
},getType:function(){
return "none";
},isTypeOf:function(type){
return false;
},CheckFlag:function(flag){
return false;
},isGlyphLike:function(){
return this.scaleDimensions==0;
},setGlyphLike:function(){
this.scaleDimensions=0;
},canScaleBoth:function(){
return this.scaleDimensions==3;
},canScaleX:function(){
return (this.scaleDimensions&1)>0;
},canScaleY:function(){
return (this.scaleDimensions&2)>0;
},getScaleDimensions:function(){
return this.scaleDimensions;
},setScaleDimensions:function(_135e){
this.scaleDimensions=_135e;
},getPosition:function(){
return this.position;
},getPositions:function(){
return this.positions;
},setPosition:function(_135f){
this.position=_135f;
},setPositions:function(_1360){
this.positions=_1360;
},setRow:function(row){
this.setRows([row]);
},setRows:function(rows){
this.rows=rows;
},setMeta:function(key,value){
if(this.meta==null){
this.meta=_1355.m.createJSONObject();
}
_1355.m.put(this.meta,key,value);
},getElementPart:function(){
if(this.meta!=null){
return _1355.m.getItem(this.meta,"part");
}
return null;
},setShapeParameters:function(o){
},reflect:function(size,_1361){
},transpose:function(_1362){
},isFilled:function(){
},scale:function(a,b){
var p=this.getScalingAnchor();
this.affine(a,p.x*(1-a),b,p.y*(1-b),true);
this.modifyActualDim(a,b);
},getScalingAnchor:function(){
return this.getCenter();
},modifyActualDim:function(_1363,_1364){
if(this.actualDim!=null){
this.actualDim.width*=_1363;
this.actualDim.height*=_1364;
}
},affine:function(xx,dx,yy,dy,_1365){
},makeGeometryClone:function(){
},copyInfoFrom:function(other){
this.fill=other.fill;
this.stroke=other.stroke;
this.outline=other.outline;
this.transform=other.transform;
this.effect=other.effect;
this.insideStroke=other.insideStroke;
this.rows=other.rows;
this.tooltip=other.tooltip;
this.setStartArrow(other.getStartArrow());
this.setEndArrow(other.getEndArrow());
if(other.globalGradientGeometry!=null){
this.globalGradientGeometry=_1356.m.makeFromGradientGeometry(other.globalGradientGeometry);
}
this.meta=other.meta!=null?dojo.mixin({},other.meta):null;
this.key=other.key;
this.visible=other.visible;
this.snap=other.snap;
},setGlobalGradient:function(g){
this.globalGradientGeometry=_1356.m.makeFromGradientGeometry(g);
},setGlobalGradientFromRect:function(x,y,width,_1366){
this.globalGradientGeometry=_1356.m.makeFromRect(x,y,width,_1366);
},setGlobalGradientFromCircle:function(cx,cy,r){
this.globalGradientGeometry=_1356.m.makeFromCircle(cx,cy,r);
},getGlobalGradientGeometry:function(){
return this.globalGradientGeometry;
},getLocalGradientGeometry:function(_1367){
var _1368=this.getBounds();
return _1356.m.makeFromRect(_1368.x,_1368.y,_1368.width,_1368.height);
},setID:function(ID){
this.id=ID;
},toJSON:function(){
var o=this.makeBasicItem();
var _1369=null;
if(this.stroke!=null){
var value=_1355.m.getItem(this.stroke,"width");
_1369=_1357.m.convertLength(value,null,null);
}
var _136a=(_1369!=null&&_1369==0);
var _136b=_136a?null:this.stroke;
var _136c=this.fill;
var shape=_1355.m.createJSONObject();
_1355.m.put(shape,"type",this.getType());
if(this.insideStroke&&_1369!=null){
var _136d=_1369;
var inset=_136d/2;
var _136e=this.getBounds();
var _136f=Math.min(_136e.width,_136e.height)/2;
if(_136d>=_136f){
if(_136d>1){
_136d=_136f+1;
inset=_136d/2-0.5;
}else{
_136d=_136f;
inset=_136d/2;
}
if(_136b!=null){
_1355.m.put(_136b,"width",_1358.m.r3(_136d+0.001));
}
}
this.insetForBorder(inset);
this.setShapeParameters(shape);
this.insetForBorder(-inset);
}else{
this.setShapeParameters(shape);
}
_1355.m.put(o,"shape",shape);
if(this.effect!=null){
_1355.m.put(o,"effect",this.effect);
}
if(this.isFilled()){
if(_136c!=null){
_1355.m.put(o,"fill",_136c.toJSON());
}else{
_1355.m.put(o,"fill",Shape.TRANSPARENT);
}
if(_136b!=null){
if(this.outline!=null){
_1355.m.put(_136b,"color",Shape.colorToJSON(this.outline));
}
_1355.m.put(o,"stroke",_136b);
}else{
if(this.outline!=null&&!_136a){
_136b=_1355.m.createJSONObject();
_1355.m.put(o,"stroke",_136b);
_1355.m.put(_136b,"color",Shape.colorToJSON(this.outline));
}
}
}else{
if(_136c!=null&&!_136a){
if(_136b==null){
_136b=_1355.m.createJSONObject();
_1355.m.put(o,"stroke",_136b);
}
if(_136c.solid!=null){
_1355.m.put(_136b,"color",_136c.toJSON());
}
}else{
_1355.m.put(o,"fill",Shape.TRANSPARENT);
}
if(_136b!=null){
_1355.m.put(o,"stroke",_136b);
}
}
return o;
},insetForBorder:function(inset){
},makeBasicItem:function(){
var o=_1355.m.createJSONObject();
if(this.id!=null){
_1355.m.put(o,"id",this.id);
}
if(this.key!=null){
_1355.m.put(o,"key",this.key);
}
if(this.rows!=null){
var _1370=_1355.m.createSizedJSONArray(this.rows.length);
var _1371=_1355.m.createJSONArray();
for(var _1372=0,_1373=this.rows,_1374=_1373.length;_1372<_1374;++_1372){
var row=_1373[_1372];
_1370.push(row);
if(this.data!=null&&this.data.rows.length>0){
var _1375=this.data.rows[row];
if(_1375.originalRows!=null){
for(var index=0;index<_1375.originalRows.size();++index){
var r=_1375.originalRows.get(index);
_1371.push(r);
}
}
}
}
_1355.m.put(o,"rows",_1370);
if(_1371.length>0){
_1355.m.put(o,"orows",_1371);
}
}
if(this.meta!=null){
_1355.m.put(o,"meta",this.meta);
}
if(this.tooltip!=null){
_1355.m.put(o,"tooltip",this.tooltip);
}
if(this.transform!=null){
_1355.m.put(o,"transform",this.transform);
}
if(!this.visible){
_1355.m.put(o,"visible",this.visible);
}
return o;
},getLabelShape:function(align,_1376,_1377){
return this;
},getTangentAngle:function(align,_1378){
if("start".CPVisEngineEquals(align)){
return -3.141592653589793/2;
}
if("end".CPVisEngineEquals(align)){
return 3.141592653589793/2;
}
return 0;
},getRows:function(){
return this.rows;
},applyPointTransform:function(t){
},getPart:function(i){
var parts=this.getParts();
if(parts==null||i<0||i>parts.length){
return null;
}
return parts[i];
},getParent:function(){
return this.parent;
},getParts:function(){
return null;
},getMeta:function(part){
return _1355.m.getItem(this.meta,part);
},getOuterPoint:function(){
var p=this.getCenter();
if(this.parent==null){
return p;
}
var c=this.parent.getCenter();
return new _1359.m(c.x+2*(p.x-c.x),c.y+2*(p.y-c.y));
},getFacetKey:function(){
var s="";
if(this.position!=null&&this.position.base!=null&&this.position.base.length>2){
s+=this.position.base[2];
for(var i=3;i<this.position.base.length;++i){
s+="|"+this.position.base[i];
}
}
if(this.position!=null&&this.position.facet!=null){
for(var i=0;i<this.position.facet.length;++i){
s+="|"+this.position.facet[i];
}
}
return s;
},setStartArrow:function(arrow){
},getStartArrow:function(){
return null;
},setEndArrow:function(arrow){
},getEndArrow:function(){
return null;
},contains:function(px,py){
},getBounds:function(){
},getActualDim:function(){
return this.actualDim;
},setActualDim:function(_1379){
this.actualDim=_1379;
},asBasic:function(){
},setIsElement:function(_137a){
this.shapeIsElement=_137a;
},isElement:function(){
return this.shapeIsElement;
},setLocalGradientGeometry:function(){
if(this.fill==null||this.fill.gradient==null||this.fill.gradient.global){
return;
}
this.fill.gradient.setGeometry(this.getLocalGradientGeometry(this.fill.gradient.getType()));
},getSnap:function(){
return this.snap;
},setSnap:function(_137b){
this.snap=_137b;
},snapValue:function(_137c){
var _137d=_137c;
if(this.snap){
_137d=Math.round(_137d);
}
return _137d;
},getStroke:function(){
return this.stroke;
},setStroke:function(_137e){
this.stroke=_137e;
},isInsideStroke:function(){
return this.insideStroke;
},setInsideStroke:function(_137f){
this.insideStroke=_137f;
},setApplyStrokeFix:function(_1380){
this.applyStrokeFix=_1380;
},shouldApplyStrokeFix:function(){
return this.applyStrokeFix;
},isVisible:function(){
return this.visible;
},setVisible:function(_1381){
this.visible=_1381;
}});
Shape.getTransparentColor=function(){
var t=_1355.m.createJSONObject();
_1355.m.put(t,"a",0);
return t;
};
Shape.colorToJSON=function(color){
return color.toJSON();
};
Shape.makeGhostLike=function(shape){
if(shape!=null){
var fill=_135a.m.makeSolid(new _135b.m(0,0,0,shape.getType().CPVisEngineEquals("text")?0.3:0.1));
shape.fill=fill;
var parts=shape.getParts();
if(parts!=null){
for(var _1382=0,_1383=parts.length;_1382<_1383;++_1382){
var part=parts[_1382];
part.fill=fill;
if(part.outline!=null){
part.outline=new _135b.m(0,0,0,0.3);
}
}
}
if(shape.outline!=null){
shape.outline=new _135b.m(0,0,0,0.3);
}
}
};
_135c.add("com/ibm/vis/engine/internal/struct/Shape",["com/ibm/vis/engine/internal/struct/VisibleItem","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/ColorNew"],function(){
Shape.SHAPEFLAG_ACTUALDIMENSIONS=1;
Shape.SCALE_NONE=0;
Shape.SCALE_X=1;
Shape.SCALE_Y=2;
Shape.SCALE_BOTH=3;
Shape.WIDTH="width";
Shape.HEIGHT="height";
Shape.SHAPE="shape";
Shape.STROKE="stroke";
Shape.TEXT_GHOST_ALPHA_VALUE=0.3;
Shape.SHAPE_GHOST_ALPHA_VALUE=0.1;
Shape.OUTLINE_GHOST_ALPHA_VALUE=0.3;
Shape.TRANSPARENT=Shape.getTransparentColor();
});
return Shape;
});
},"com/ibm/vis/exp/NeighborhoodNavigation":function(){
define("com/ibm/vis/exp/NeighborhoodNavigation",["dojo/_base/declare","dojo/_base/array","./FeatureNavigation","../engine/internal/struct/Point","../engine/internal/util/SceneUtil"],function(_1384,_1385,_1386,Point,_1387){
var _1388=_1384("com.ibm.vis.exp.NeighborhoodNavigation",[_1386],{sceneMap:null,visJsonSceneMap:null,_sortedByX:null,_sortedByY:null,moveWeight:3,heavyMoveWeight:27,lightMoveWeight:0.3,selected:null,BIG_DISTANCE:90000000,constructor:function(_1389,id){
this.sceneMap=_1389._renderer.nativeSceneMap;
this.visJsonSceneMap=_1389._renderer.originalSceneMap;
},nextGreaterX:function(_138a,_138b){
var _138c=this._getXSorted();
var id=_138a.id;
this.selected=this.sceneMap[id];
var index=_1385.indexOf(_138c,this.selected);
var _138d=_1388.getCenter(this.selected);
var x=_138d.x;
var _138e=this.BIG_DISTANCE;
var _138f=_138c.length;
var _1390=this.selected;
var _1391=(_138b==_1386.HEAVY_WEIGHT)?this.heavyMoveWeight:this.moveWeight;
if(_138b==_1386.LIGHT_WEIGHT){
_1391=this.lightMoveWeight;
}
for(var i=index+1;i<_138f;i++){
var item=_138c[i];
var _1392=_1388.getCenter(item);
if(x>=_1392.x){
continue;
}
var _1393=_1392.x-x;
var _1394=_1393*_1393;
if(_1394>_138e){
break;
}
var _1395=_1392.y-_138d.y;
var _1396=_1395*_1395;
if(_138b==_1386.HEAVY_WEIGHT&&_1396>_1394){
continue;
}
var _1397=_1394+_1391*_1396;
if(_1397<_138e){
_1390=item;
_138e=_1397;
}
}
return this._convertToSceneItem(_1390);
},nextLesserX:function(_1398,_1399){
var _139a=this._getXSorted();
var id=_1398.id;
this.selected=this.sceneMap[id];
var index=_1385.indexOf(_139a,this.selected);
var _139b=_1388.getCenter(this.selected);
var x=_139b.x;
var _139c=this.BIG_DISTANCE;
var _139d=this.selected;
var _139e=(_1399==_1386.HEAVY_WEIGHT)?this.heavyMoveWeight:this.moveWeight;
if(_1399==_1386.LIGHT_WEIGHT){
_139e=this.lightMoveWeight;
}
for(var i=index-1;i>-1;i--){
var item=_139a[i];
var _139f=_1388.getCenter(item);
if(x<=_139f.x){
continue;
}
var _13a0=_139f.x-x;
var _13a1=_13a0*_13a0;
if(_13a1>_139c){
break;
}
var _13a2=_139f.y-_139b.y;
var _13a3=_13a2*_13a2;
if(_1399==_1386.HEAVY_WEIGHT&&_13a3>_13a1){
continue;
}
var _13a4=_13a1+_139e*_13a3;
if(_13a4<_139c){
_139d=item;
_139c=_13a4;
}
}
return this._convertToSceneItem(_139d);
},nextGreaterY:function(_13a5,_13a6){
var _13a7=this._getYSorted();
var id=_13a5.id;
this.selected=this.sceneMap[id];
var index=_1385.indexOf(_13a7,this.selected);
var _13a8=_1388.getCenter(this.selected);
var y=_13a8.y;
var _13a9=this.BIG_DISTANCE;
var _13aa=_13a7.length;
var _13ab=this.selected;
var _13ac=(_13a6==_1386.HEAVY_WEIGHT)?this.heavyMoveWeight:this.moveWeight;
if(_13a6==_1386.LIGHT_WEIGHT){
_13ac=this.lightMoveWeight;
}
for(var i=index+1;i<_13aa;i++){
var item=_13a7[i];
var _13ad=_1388.getCenter(item);
if(y>=_13ad.y){
continue;
}
var _13ae=_13ad.y-y;
var _13af=_13ae*_13ae;
if(_13af>_13a9){
break;
}
var _13b0=_13ad.x-_13a8.x;
var _13b1=_13b0*_13b0;
if(_13a6==_1386.HEAVY_WEIGHT&&_13af<_13b1){
continue;
}
var _13b2=_13ac*_13b1+_13af;
if(_13b2<_13a9){
_13ab=item;
_13a9=_13b2;
}
}
return this._convertToSceneItem(_13ab);
},nextLesserY:function(_13b3,_13b4){
var _13b5=this._getYSorted();
var id=_13b3.id;
this.selected=this.sceneMap[id];
var index=_1385.indexOf(_13b5,this.selected);
var _13b6=_1388.getCenter(this.selected);
var y=_13b6.y;
var _13b7=this.BIG_DISTANCE;
var _13b8=this.selected;
var _13b9=(_13b4==_1386.HEAVY_WEIGHT)?this.heavyMoveWeight:this.moveWeight;
if(_13b4==_1386.LIGHT_WEIGHT){
_13b9=this.lightMoveWeight;
}
for(var i=index-1;i>-1;i--){
var item=_13b5[i];
var _13ba=_1388.getCenter(item);
if(y<=_13ba.y){
continue;
}
var _13bb=_13ba.y-y;
var _13bc=_13bb*_13bb;
if(_13bc>_13b7){
break;
}
var _13bd=_13ba.x-_13b6.x;
var _13be=_13bd*_13bd;
if(_13b4==_1386.HEAVY_WEIGHT&&_13bc<_13be){
continue;
}
var _13bf=_13b9*_13be+_13bc;
if(_13bf<_13b7){
_13b8=item;
_13b7=_13bf;
}
}
return this._convertToSceneItem(_13b8);
},getFirst:function(){
var _13c0=this._getXSorted();
var first=_13c0[0];
return this._convertToSceneItem(first);
},_convertToSceneItem:function(_13c1){
var _13c2=this.visJsonSceneMap[_13c1.id];
return this.convertToSceneItem(_13c2);
},_getXSorted:function(){
if(this._sortedByX==null){
this._sortedByX=this._makeSortedArray(this.xSort);
}
return this._sortedByX;
},_getYSorted:function(){
if(this._sortedByY==null){
this._sortedByY=this._makeSortedArray(this.ySort);
}
return this._sortedByY;
},xSort:function(a,b){
var cA=_1388.getCenter(a);
var cB=_1388.getCenter(b);
return cA.x-cB.x;
},ySort:function(a,b){
var cA=_1388.getCenter(a);
var cB=_1388.getCenter(b);
return cA.y-cB.y;
},_makeSortedArray:function(_13c3){
var array=new Array();
var index=0;
var id=this.baseId+index;
var item=this.sceneMap[id];
while(item!=null){
array.push(item);
index++;
id=this.baseId+index;
item=this.sceneMap[id];
}
array.sort(_13c3);
return array;
}});
_1388.getCenter=function(item){
var _13c4=null;
try{
_13c4=_1387.getCenter(item);
}
catch(ex){
}
if(_13c4==null){
var bbox=item.bbox;
if(bbox!=null){
var x=(bbox.l+bbox.r)/2;
var y=(bbox.t+bbox.b)/2;
_13c4=new Point(x,y);
}else{
if(item.cachedBounds!=null){
var _13c5=item.cachedBounds;
var x=_13c5.x+0.5*_13c5.width;
var y=_13c5.y+0.5*_13c5.height;
_13c4=new Point(x,y);
}
}
}
return _13c4;
};
return _1388;
});
},"com/ibm/vis/exp/Selection":function(){
define("com/ibm/vis/exp/Selection",["dojo/_base/declare","../interaction/HighlightRepresentation"],function(_13c6,_13c7){
var _13c8=_13c6("com.ibm.vis.exp.Selection",null,{visControl:null,highlights:null,highlightIndex:null,lastX:0,lastY:0,lastSelectedItem:null,constructor:function(_13c9){
this.visControl=_13c9;
this._buildHighlights();
var _13ca=this.visControl.getInteractivity();
var _13cb=this.highlights[0];
_13ca.setHighlightRepresentation(12,_13cb);
},changeHighlight:function(index){
if(this.highlightIndex>=this.highlights.length){
this.highlightIndex=0;
}
var _13cc=this.visControl.getInteractivity();
var _13cd=this.highlights[this.highlightIndex];
this.highlightIndex++;
_13cc.setHighlightRepresentation(index,_13cd);
},selectOnEvent:function(_13ce){
var _13cf=this.visControl.getInteractivity();
var x=_13ce.clientX;
var y=_13ce.clientY;
if(Math.abs(x-this.lastX)<2&&Math.abs(y-this.lastY)<2){
return this.lastSelectedItem;
}
this.lastX=x;
this.lastY=y;
var items=_13cf.getItemsAtPoint(x,y);
var _13d0=new Array();
for(var i=0;i<items.length;i++){
var item=items[i];
this._addItemsOfInterest(_13d0,item);
}
var _13d1=null;
if(_13d0.length>0){
_13d1=_13d0[0];
}
var _13d2=new Array();
for(var i=1;i<_13d0.length;i++){
var j=i-1;
_13d2[j]=_13d0[i];
}
var state=_13cf.makeHighlightState();
state.setSingle(_13d1,0);
state.apply();
this.lastSelectedItem=_13d1;
return _13d1;
},_addItemsOfInterest:function(_13d3,item){
var id=item["id"];
var back=id.indexOf("ack");
if(back>-1){
return;
}
var out=id.indexOf("Out");
if(out>-1){
return;
}
var inDex=id.indexOf("In");
if(inDex>-1){
return;
}
var coord=id.indexOf("Coords");
if(coord>-1){
return;
}
var _13d4=id.indexOf("XH");
if(_13d4>-1){
return;
}
if(id.length<3){
return;
}
_13d3.push(item);
},_buildHighlights:function(){
this.highlightIndex=0;
this.highlights=new Array();
var cyanT="rgba(0,255,255,0.2)";
var _13d5="rgba(255,255,0,0.4)";
var _13d6=this._createHighlightRepresentation(cyanT,"blue","2");
this.highlights[0]=_13d6;
_13d6=this._createHighlightRepresentation(_13d5,"#40e0d0","1");
this.highlights[1]=_13d6;
_13d6=this._createHighlightRepresentation(null,"black","4");
this.highlights[2]=_13d6;
_13d6=this._createHighlightRepresentation("rgba(240,166,48,0.4)","rgba(242,188,102,1.)","2");
this.highlights[3]=_13d6;
},_createHighlightRepresentation:function(_13d7,_13d8,_13d9){
var style=new Object();
style.fill=_13d7;
style.outline=_13d8;
var _13da=new Object();
_13da.width=_13d9;
style.stroke=_13da;
return new _13c7(style);
}});
return _13c8;
});
},"com/ibm/vis/engine/internal/migration/VariableArrayRange":function(){
define("com/ibm/vis/engine/internal/migration/VariableArrayRange",["./ArrayRange","com/ibm/init/statics","dojo/_base/declare"],function(_13db,_13dc,_13dd){
var _13de=_13dd("com.ibm.vis.engine.internal.migration.VariableArrayRange",[_13db],{variable:null,constructor:function(start,end,_13df){
this.variable=_13df;
}});
return _13de;
});
},"com/ibm/vis/engine/internal/nativeImpl/VisUtilities":function(){
define("com/ibm/vis/engine/internal/nativeImpl/VisUtilities",["exports","../Data","../data/Field"],function(_13e0,Data,Field){
_13e0.isData=function(item){
return item instanceof Data;
};
_13e0.isField=function(item){
return item instanceof Field;
};
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/MultiLevelUncoarsener":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/MultiLevelUncoarsener",["com/ibm/init/statics","dojo/_base/declare"],function(_13e1,_13e2){
var _13e3=_13e2("com.ibm.vis.engine.internal.grammar.layout.graph.stress.MultiLevelUncoarsener",null,{graphs:null,layout:null,extent:null,constructor:function(_13e4,_13e5,_13e6){
this.graphs=_13e5;
this.layout=_13e4;
this.extent=_13e6;
},run:function(){
while(this.graphs.size()>0){
var _13e7=this.graphs.get(this.graphs.size()-1);
this.graphs.remove(_13e7);
var _13e8=this.layout.copy(_13e7.nodes,_13e7.links,this.graphs.size(),false);
_13e8.doLayout(this.extent);
if(this.graphs.size()>0){
this.projectPositionsToChildren(this.graphs.get(this.graphs.size()-1));
}
}
},projectPositionsToChildren:function(graph){
var _13e9=2*3.141592653589793/graph.getNodesCount();
var index=0;
for(var _13ea=0,_13eb=graph.nodes,_13ec=_13eb.size();_13ea<_13ec;++_13ea){
var node=_13eb.get(_13ea);
var nt=node.parent;
if(nt==null){
continue;
}
var ax=nt.x;
var ay=nt.y;
var count=1;
for(var _13ed=0,_13ee=node.getLinks(),_13ef=_13ee.length;_13ed<_13ef;++_13ed){
var l=_13ee[_13ed];
var _13f0=l.getOpposite(node);
var nn=_13f0.parent;
ax+=nn.x;
ay+=nn.y;
count++;
}
ax/=count;
ay/=count;
var angle=index*_13e9;
index=(index+37)%graph.getNodesCount();
node.moveTo(ax+0.10000000149011612*Math.cos(angle),ay+0.10000000149011612*Math.sin(angle));
}
}});
_13e1.add("com/ibm/vis/engine/internal/grammar/layout/graph/stress/MultiLevelUncoarsener",[],function(){
_13e3.OFFSET_RADIUS=0.1;
});
return _13e3;
});
},"com/ibm/vis/engine/internal/util/MathUtil":function(){
define("com/ibm/vis/engine/internal/util/MathUtil",["com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_13f1,_13f2,_13f3,_13f4){
var _13f5=_13f4("com.ibm.vis.engine.internal.util.MathUtil",null,{});
_13f5.r=function(v){
if(Math.abs(v)<0.000001){
return 0;
}else{
if(Math.abs(v-1)<0.000001){
return 1;
}else{
return v;
}
}
};
_13f5.r3=function(v){
var a=Math.round(v*1000)/1000;
var i=a;
if(i==a){
return i;
}else{
return a;
}
};
_13f5.getDouble=function(item,key){
return (_13f1.m.getItem(item,key));
};
_13f5.getAngleAtLocation=function(x,y,at,dir){
return Math.atan2(y[at+dir]-y[at],x[at+dir]-x[at]);
};
_13f5.getSuffixNumber=function(_13f6){
var p=_13f6.indexOf("-");
if(p>0){
var n=_13f2.m.parseDouble(_13f6.substring(p+1,_13f6.CPVisEngineLength()));
return Math.max(2,Math.min(Math.round(n),16));
}
return 5;
};
_13f5.makeRotation=function(a,x,y){
var _13f7=_13f1.m.createJSONObject();
var c=_13f5.r(Math.cos(a));
var s=_13f5.r(Math.sin(a));
_13f1.m.put(_13f7,"xx",_13f5.r3(c));
_13f1.m.put(_13f7,"yy",_13f5.r3(c));
_13f1.m.put(_13f7,"xy",_13f5.r3(-s));
_13f1.m.put(_13f7,"yx",_13f5.r3(s));
if(x!=0&&y!=0){
_13f1.m.put(_13f7,"dx",_13f5.r3(x-c*x+s*y));
_13f1.m.put(_13f7,"dy",_13f5.r3(y-s*x-c*y));
}
return _13f7;
};
_13f5.makeTransform=function(dx,dy,scale){
var trans=_13f1.m.createJSONObject();
_13f1.m.put(trans,"dx",_13f5.r3(dx));
_13f1.m.put(trans,"dy",_13f5.r3(dy));
var s=_13f5.r3(scale);
if(s!=1){
_13f1.m.put(trans,"xx",s);
_13f1.m.put(trans,"yy",s);
}
return trans;
};
_13f5.makeIntTransform=function(dx,dy,scale){
var trans=_13f1.m.createJSONObject();
_13f1.m.put(trans,"dx",Math.round(dx));
_13f1.m.put(trans,"dy",Math.round(dy));
var _13f8=Math.round(scale);
if(_13f8!=1){
_13f1.m.put(trans,"xx",_13f8);
_13f1.m.put(trans,"yy",_13f8);
}
return trans;
};
_13f5.translate=function(item,dx,dy){
if(dx==0&&dy==0){
return;
}
var _13f9=_13f1.m.getItem(item,"transform");
if(_13f9==null){
_13f9=_13f1.m.createJSONObject();
_13f1.m.put(item,"transform",_13f9);
}
_13f5.addValue(dx,"dx",_13f9);
_13f5.addValue(dy,"dy",_13f9);
};
_13f5.scale=function(item,s){
if(s==1){
return;
}
var _13fa=_13f1.m.getItem(item,"transform");
if(_13fa==null){
_13fa=_13f1.m.createJSONObject();
_13f1.m.put(item,"transform",_13fa);
}
_13f5.mulValue(s,"xx",_13fa);
_13f5.mulValue(s,"xy",_13fa);
_13f5.mulValue(s,"yx",_13fa);
_13f5.mulValue(s,"yy",_13fa);
};
_13f5.addValue=function(value,key,_13fb){
if(value==0){
return;
}
var tDx=_13f1.m.getItem(_13fb,key);
value=(tDx==null)?value:tDx+value;
tDx=_13f5.r3(value);
_13f1.m.put(_13fb,key,tDx);
};
_13f5.mulValue=function(value,key,_13fc){
if(value==1){
return;
}
var tx=_13f1.m.getItem(_13fc,key);
value=(tx==null)?value:tx*value;
tx=_13f5.r3(value);
_13f1.m.put(_13fc,key,tx);
};
_13f5.dojoTransformToAffineArray=function(o){
var m=Array.create([6],0);
if(o==null){
m[0]=1;
m[1]=0;
m[2]=0;
m[3]=0;
m[4]=1;
m[5]=0;
}else{
m[0]=_13f1.m.getNumberWithDefault(o,"xx",1);
m[1]=_13f1.m.getNumberWithDefault(o,"xy",0);
m[2]=_13f1.m.getNumberWithDefault(o,"dx",0);
m[3]=_13f1.m.getNumberWithDefault(o,"yx",0);
m[4]=_13f1.m.getNumberWithDefault(o,"yy",1);
m[5]=_13f1.m.getNumberWithDefault(o,"dy",0);
}
return m;
};
_13f5.affineArrayToDojoTransform=function(m){
var o=_13f1.m.createJSONObject();
var v;
v=_13f5.r3(m[0]);
if(v!=1){
_13f1.m.put(o,"xx",v);
}
v=_13f5.r3(m[1]);
if(v!=0){
_13f1.m.put(o,"xy",v);
}
v=_13f5.r3(m[2]);
if(v!=0){
_13f1.m.put(o,"dx",v);
}
v=_13f5.r3(m[3]);
if(v!=0){
_13f1.m.put(o,"yx",v);
}
v=_13f5.r3(m[4]);
if(v!=1){
_13f1.m.put(o,"yy",v);
}
v=_13f5.r3(m[5]);
if(v!=0){
_13f1.m.put(o,"dy",v);
}
return o;
};
_13f5.multiplyAffineArrays=function(left,right){
var m=Array.create([6],0);
m[0]=left[0]*right[0]+left[1]*right[3];
m[1]=left[0]*right[1]+left[1]*right[4];
m[2]=left[0]*right[2]+left[1]*right[5]+left[2];
m[3]=left[3]*right[0]+left[4]*right[3];
m[4]=left[3]*right[1]+left[4]*right[4];
m[5]=left[3]*right[2]+left[4]*right[5]+left[5];
return m;
};
_13f5.multiplyAffineJSONObjects=function(left,right){
var _13fd=_13f5.dojoTransformToAffineArray(left);
var _13fe=_13f5.dojoTransformToAffineArray(right);
var _13ff=_13f5.multiplyAffineArrays(_13fd,_13fe);
var _1400=_13f5.affineArrayToDojoTransform(_13ff);
return _1400;
};
_13f5.multiplyPoint=function(m,x,y){
var r=Array.create([2],0);
r[0]=x*m[0]+y*m[1]+m[2];
r[1]=x*m[3]+y*m[4]+m[5];
return r;
};
_13f5.affineInverse=function(array){
if(array[0]==1&&array[1]==0&&array[3]==0&&array[4]==1){
var dx=(array[2]==0)?0:-array[2];
var dy=(array[5]==0)?0:-array[5];
return [1,0,dx,0,1,dy];
}
var det=array[0]*array[4]-array[1]*array[3];
var _1401=(array[1]==0)?0:-array[1];
var _1402=(array[3]==0)?0:-array[3];
return [array[4]/det,_1401/det,((array[1]*array[5])-(array[4]*array[2]))/det,_1402/det,array[0]/det,((array[3]*array[2])-(array[0]*array[5]))/det];
};
return _13f5;
});
},"com/ibm/vis/interaction/ChangeEffect":function(){
define("com/ibm/vis/interaction/ChangeEffect",["com/ibm/init/statics","dojo/_base/declare"],function(_1403,_1404){
var _1405=_1404("com.ibm.vis.interaction.ChangeEffect",null,{setTarget:function(_1406){
},setTargets:function(_1407,_1408){
}});
_1403.add("com/ibm/vis/interaction/ChangeEffect",[],function(){
_1405.NOTHING=-1;
_1405.ALL=0;
_1405.ELEMENT=1;
_1405.NON_ELEMENT=2;
_1405.DEFINED=3;
_1405.OTHERS_IN_FUTURE=4;
});
return _1405;
});
},"com/ibm/vis/engine/internal/facet/GenerateOuter":function(){
define("com/ibm/vis/engine/internal/facet/GenerateOuter",["com/ibm/init/fork!../nativeImpl/WebEngineException","com/ibm/init/fork!../Vis","com/ibm/init/fork!../struct/Insets","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../util/SceneIdUtil","com/ibm/init/fork!../nativeImpl/RAVEFormatter","com/ibm/init/statics","dojo/_base/declare"],function(_1409,_140a,_140b,_140c,_140d,_140e,_140f,_1410,_1411){
var _1412=_1411("com.ibm.vis.engine.internal.facet.GenerateOuter",null,{constructor:function(){
}});
_1412.makeTableOuterScene=function(_1413,_1414,_1415){
if(_1414.length<1||_1414.length>2){
throw new _1409.m("Composition can only be performed using one or two fields");
}
var _1416=_1414[0].field.data;
for(var _1417=0,_1418=_1414.length;_1417<_1418;++_1417){
var field=_1414[_1417];
if(field.field.data!=_1416){
throw new _1409.m("All faceting fields must come from the same data source");
}
}
_1412.computePanelSize(_1413,_1415);
var _1419=_1412.makeFacetVisSpec(_1413,_1414);
var vis=_140a.m.createVisWithContext(_1416.visContext);
vis.setVisJSONSpec(_1419);
var _141a=vis.makeSceneTree(_1415);
_1412.removeExtraFrames(_141a);
return _141a;
};
_1412.computePanelSize=function(_141b,_141c){
if(_141b.padding!=null){
var _141d=_140b.m.makeForStylePadding(_141b.padding,_141c,_141c);
var lsize=_141d.getHorizontal()/_141c.width;
var hsize=_141d.getVertical()/_141c.height;
var size=(lsize>hsize?(1-lsize)*100:(1-hsize)*100);
_1412.panelSize=size+"%";
}else{
_1412.panelSize="100%";
}
};
_1412.removeExtraFrames=function(scene){
var _141e=new _140c.m();
var size=scene.length;
for(var i=0;i<size;++i){
var obj=scene[i];
var id=_140d.m.getItem(obj,"id");
if(_140e.m.isBackId(id)||_140e.m.isOutId(id)){
_141e.add(obj);
}
}
for(var _141f=0,_1420=_141e.size();_141f<_1420;++_141f){
var _1421=_141e.get(_141f);
_140d.m.removeFromArray(scene,_1421);
}
};
_1412.makeFacetFieldSpecs=function(_1422){
var specs=new Array(_1422.length);
for(var i=0;i<_1422.length;++i){
var base=_1422[i].field;
var spec=new Object();
spec.id="facet"+(i+1);
spec.key=true;
if(base.getSpecifiedFormatter()!=null){
spec.format=_140f.m.makeFormatSpecFromRAVEFormatter(base.getSpecifiedFormatter());
}
if(base.categories!=null){
spec.categories=base.categories;
}
specs[i]=spec;
}
return specs;
};
_1412.makeFacetVisSpec=function(_1423,_1424){
var _1425=new Object();
var _1426=_1412.makeFacetDataSpec(_1424);
_1425.data=[_1426];
var _1427=_1426.rows.length;
_1425.grammar=[_1412.makeFacetGrammarSpec(_1423,_1424,_1412.anyNumeric(_1424),_1427)];
return _1425;
};
_1412.makeFacetDataSpec=function(_1428){
var _1429=new Object();
_1429.rows=_1412.makeFacetDataRows(_1428);
_1429.id="facetData";
_1429.fields=_1412.makeFacetFieldSpecs(_1428);
return _1429;
};
_1412.makeFacetGrammarSpec=function(_142a,_142b,_142c,_142d){
var _142e=_142b.length;
var _142f=new Object();
_142f.coordinates=_1412.makeFacetCoordinatesSpec(_142b);
var point=_1412.makeFacetElementSpec(_142a,_142e,_142c,_142d);
_142f.elements=[point];
var style=new Object();
if(_142a.padding!=null){
style.padding=_142a.padding;
}else{
style.padding=20;
}
style.fill=_1412.FILL_STYLE_TRANSPARENT;
_142f.style=style;
return _142f;
};
_1412.makeFacetElementSpec=function(_1430,_1431,_1432,_1433){
var point=new Object();
point.type="point";
point.position=_1412.makeFacetPositionSpec(_1431);
var _1434=new Object();
_1434.fill=_1412.FILL_STYLE_TRANSPARENT;
if(_1432){
_1433=(_1433<1)?1:_1433;
var _1435=(100*Math.sqrt(-Math.log(0.5)/_1433));
var sized=_1435+"%%";
_1434.width=sized;
_1434.height=sized;
}
_1434.size=_1412.panelSize;
_1434.symbol="rect";
point.style=_1434;
return point;
};
_1412.makeFacetPositionSpec=function(_1436){
var _1437=new Array(_1436);
for(var i=0;i<_1436;++i){
var pos=new Object();
pos.field=new Object();
pos.field.$ref="facet"+(i+1);
_1437[i]=pos;
}
return _1437;
};
_1412.makeFacetCoordinatesSpec=function(_1438){
var _1439=_1438.length;
var _143a=new Object();
var _143b=new Array(_1439);
_143a.dimensions=_143b;
for(var i=0;i<_1439;++i){
var _143c=new Object();
_143b[i]=_143c;
var _143d=_1412.makeAxisSpec(_1438[i]);
if(_143d!=null){
_143c.axis=new Array(1);
_143c.axis[0]=_143d;
}
}
return _143a;
};
_1412.makeAxisSpec=function(field){
var axis=field.spec.axis;
if(axis!=null){
if(axis.markStyle==null){
axis.markStyle=new Object();
}
if(axis.lineStyle==null){
axis.lineStyle=new Object();
}
if(axis.tickStyle==null){
axis.tickStyle=new Object();
var _143e=new Object();
_143e.weight="bold";
_143e.size=14;
axis.tickStyle.font=_143e;
}
}
return axis;
};
_1412.anyNumeric=function(_143f){
for(var _1440=0,_1441=_143f.length;_1440<_1441;++_1440){
var field=_143f[_1440];
if(!field.field.isCategorical()){
return true;
}
}
return false;
};
_1412.makeFacetDataRows=function(_1442){
var field=_1442[0].field;
var _1443=field.categories;
if(_1442.length==1){
var _1444=new Array(_1443.length);
for(var i=0;i<_1443.length;++i){
_1444[i]=[i];
}
return _1444;
}else{
if(_1442.length==2){
field=_1442[1].field;
var cats=field.categories;
var index=0;
var _1444=new Array(_1443.length*cats.length);
for(var i=0;i<_1443.length;++i){
for(var j=0;j<cats.length;++j){
var row=[i,j];
_1444[index]=row;
index++;
}
}
return _1444;
}else{
throw new _1409.m("Composition can only be performed using one or two fields");
}
}
};
_1410.add("com/ibm/vis/engine/internal/facet/GenerateOuter",["com/ibm/vis/engine/internal/nativeImpl/WebEngineException","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/util/SceneIdUtil","com/ibm/vis/engine/internal/nativeImpl/RAVEFormatter"],function(){
_1412.FIELD_ID_BASE="facet";
_1412.DEFAULT_PADDING=20;
_1412.DEFAULT_SIZE="100%";
_1412.FIELD_ID_FACET_DATA="facetData";
_1412.FILL_STYLE_TRANSPARENT="transparent";
_1412.FONT_BOLD="bold";
_1412.panelSize=null;
});
return _1412;
});
},"com/ibm/vis/engine/internal/interaction/effect/Transition":function(){
define("com/ibm/vis/engine/internal/interaction/effect/Transition",["./Effect","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../../../exceptions/RaveException","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../morph/ItemMatcher","com/ibm/init/fork!../interpolation/AxisInterpolator","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../morph/MorphablePair","com/ibm/init/fork!../interpolation/ShapeInterpolator","com/ibm/init/fork!../interpolation/TransformClipInterpolator","com/ibm/init/fork!../../util/SceneIdUtil","com/ibm/init/fork!../../struct/PolyGeom","com/ibm/init/fork!../interpolation/TextInterpolator","com/ibm/init/statics","dojo/_base/declare"],function(_1445,_1446,_1447,_1448,_1449,_144a,_144b,_144c,_144d,_144e,_144f,_1450,_1451,_1452,_1453){
var _1454=_1453("com.ibm.vis.engine.internal.interaction.effect.Transition",[_1445],{sceneCopy:null,axisInterpolators:null,fadeinDuration:null,fadeoutDuration:null,morphDuration:null,constructor:function(time){
this.setTarget(0);
this.axisInterpolators=new _1446.m();
this.fadeinDuration=[0.95,1];
this.fadeoutDuration=[0,0.05];
this.morphDuration=[0.05,0.95];
},setFadeInDuration:function(start,end){
this.fadeinDuration=this.setDuration(start,end,this.fadeinDuration);
},setFadeOutDuration:function(start,end){
this.fadeoutDuration=this.setDuration(start,end,this.fadeoutDuration);
},setMorphDuration:function(start,end){
this.morphDuration=this.setDuration(start,end,this.morphDuration);
},setDuration:function(start,end,_1455){
if(start>=end||start>1||start<0||end<0||end>1){
return _1455;
}
return [start,end];
},getFadeInDuration:function(){
return this.fadeinDuration;
},getFadeOutDuration:function(){
return this.fadeoutDuration;
},getMorphDuration:function(){
return this.morphDuration;
},setTargets:function(_1456,_1457){
throw new _1447.m("Transition can only target all shapes. No effect targets are allowed.",_1447.m.TRANSITION_UNSUPPORTED_TARGETS);
},uninstall:function(_1458){
this.clearScene();
this.addToScene(this.sceneCopy);
},installWithPrevious:function(fx,_1459){
if(_1459==null||_1459==fx.visScene){
return;
}
this.sceneCopy=_1448.m.deepClone(fx.visScene);
fx.addEffectToUninstall(this);
var _145a=new _1449.m(_1459,fx.visScene);
this.buildAxisInterpolators(_145a);
for(var _145b=0,_145c=_145a.featureGroups,_145d=_145c.size();_145b<_145d;++_145b){
var fg=_145c.get(_145b);
this.prepareTransitionsForFeatureGroup(fx,fg);
}
this.inherited(arguments,[fx,_1459]);
for(var _145e=0,_145f=_145a.featureGroups,_1460=_145f.size();_145e<_1460;++_145e){
var fg=_145f.get(_145e);
this.addTransitionsForFeatureGroup(fx,fg);
}
},buildAxisInterpolators:function(_1461){
this.axisInterpolators.clear();
for(var _1462=0,_1463=_1461.featureGroups,_1464=_1463.size();_1462<_1464;++_1462){
var fg=_1463.get(_1462);
if(_144a.m.isAxisMarkGroup(fg)){
var _1465=new _144a.m();
if(_1465.setInterpolator(fg)){
var _1466=_144a.m.getAxisGroupID(fg);
this.axisInterpolators.put(_1466,_1465);
}
}
}
for(var _1467=0,_1468=_1461.featureGroups,_1469=_1468.size();_1467<_1469;++_1467){
var fg=_1468.get(_1467);
if(_144a.m.isAxisTickGroup(fg)){
var _1466=_144a.m.getAxisGroupID(fg);
var _1465=this.axisInterpolators.get(_1466);
if(_1465!=null){
_1465.setInterpolator(fg);
}else{
_1465=new _144a.m();
if(_1465.setInterpolator(fg)){
this.axisInterpolators.put(_1466,_1465);
}
}
}
}
},prepareTransitionsForFeatureGroup:function(fx,fg){
this.prepareMatchesForTransitioning(fg);
this.addNewSceneItems(fx,fg);
},prepareMatchesForTransitioning:function(fg){
var _146a=new _144b.m();
var _146b=new _144b.m();
var _146c=new _144b.m();
var _146d=new _144b.m();
var _146e=new _144b.m();
for(var _146f=0,_1470=fg.matches,_1471=_1470.size();_146f<_1471;++_146f){
var pair=_1470.get(_146f);
if("text".CPVisEngineEquals(pair.type)){
this.processLabelMatch(pair,_146b,_146c,_146d,_146e);
}else{
if(!this.canTransitionWell(pair)){
_146a.add(pair);
}
}
}
fg.removePairs(_146a);
fg.processLabelTransition(_146b,_146c,_146d,_146e);
},processLabelMatch:function(pair,_1472,_1473,_1474,_1475){
var _1476=_1448.m.getItem(pair.source,"children");
if(_1476==null){
_1476=_1448.m.createSizedJSONArray(1);
_1476.push(pair.source);
}
var _1477=_1476.length;
var _1478=_1448.m.getItem(pair.target,"children");
if(_1478==null){
_1478=_1448.m.createSizedJSONArray(1);
_1478.push(pair.target);
}
var _1479=_1478.length;
_1472.add(pair);
var _147a=(_1477<_1479)?_1477:_1479;
for(var i=0;i<_147a;++i){
_1473.add(new _144c.m("text",_1476[i],_1478[i]));
}
for(var i=_147a;i<_1477;++i){
_1474.add(_1476[i]);
}
for(var i=_147a;i<_1479;++i){
_1475.add(_1478[i]);
}
},canTransitionWell:function(pair){
var _147b=_1448.m.getItem(_1448.m.getItem(pair.source,"shape"),"type");
var _147c=_1448.m.getItem(_1448.m.getItem(pair.target,"shape"),"type");
return _144d.m.canInterpolate(_147b)&&_144d.m.canInterpolate(_147c);
},addNewSceneItems:function(fx,fg){
fg.addUnmatchedSourcesToTargetForFading(fx,"_trans_",this.getTime());
},addTransitionsForFeatureGroup:function(fx,fg){
this.addCoordinateInterpolation(fx,fg);
if(this.addTransitionsForAxisGroup(fx,fg)){
return;
}
this.addTransitionsForMorphablePairs(fx,fg,true);
for(var _147d=0,_147e=fg.unmatchedTargets,_147f=_147e.size();_147d<_147f;++_147d){
var item=_147e.get(_147d);
var _1480=this.makeFadingKeyFrames(item,this.fadeinDuration[0],0,this.fadeinDuration[1],1);
this.addAnimatedStyle(fx,item,_1480,"");
}
for(var _1481=0,_1482=fg.unmatchedSources,_1483=_1482.size();_1481<_1483;++_1481){
var item=_1482.get(_1481);
var _1480=this.makeFadingKeyFrames(item,this.fadeoutDuration[0],1,this.fadeoutDuration[1],0);
this.addAnimatedStyle(fx,item,_1480,"_trans_");
}
},addCoordinateInterpolation:function(fx,fg){
if(fg.targetGroup!=null){
var _1484=_144e.m.makeTransformClipInterpolator(this.morphDuration[0],fg.sourceTransform,fg.sourceClip,this.morphDuration[1],fg.targetTransform,fg.targetClip);
fx.addAnimatedCoordinateTransformToGroup(fg.targetID,fg.targetGroup,_1484);
}
for(var _1485=0,_1486=fg.matches,_1487=_1486.size();_1485<_1487;++_1485){
var pair=_1486.get(_1485);
var id=_1448.m.getItem(pair.target,"id");
if(_144f.m.isCoordsId(id)||_144f.m.isOutId(id)){
var _1484=_144e.m.makeTransformClipInterpolator(this.morphDuration[0],_1448.m.getItem(pair.source,"transform"),_1448.m.getItem(pair.source,"clip"),this.morphDuration[1],_1448.m.getItem(pair.target,"transform"),_1448.m.getItem(pair.target,"clip"));
fx.addAnimatedCoordinateTransformToItem(id,_1484);
}
}
},addTransitionsForAxisGroup:function(fx,fg){
if(!_144a.m.isAxisGroup(fg)){
return false;
}
var _1488=_144a.m.getAxisGroupID(fg);
var _1489=this.axisInterpolators.get(_1488);
if(_1489==null){
return false;
}
this.addTransitionsForMorphablePairs(fx,fg,true);
for(var _148a=0,_148b=fg.unmatchedTargets,_148c=_148b.size();_148a<_148c;++_148a){
var item=_148b.get(_148a);
var id=_1448.m.getItem(item,"id");
var type=_1448.m.getItem(_1448.m.getItem(item,"shape"),"type");
var _148d=_1489.makeSourceItem(item);
var pair=new _144c.m(type,_148d,item);
this.addAnimatedMorph(fx,id,pair,false);
var _148e=_1489.getTransitionTimesForItems(pair.source,pair.target);
var _148f=this.makeAxisFadingKeyFrames(_148d,true,_148e);
fx.addAnimatedStyle(id,_148f);
}
for(var _1490=0,_1491=fg.unmatchedSources,_1492=_1491.size();_1490<_1492;++_1490){
var item=_1491.get(_1490);
var id=_1448.m.getItem(item,"id");
var type=_1448.m.getItem(_1448.m.getItem(item,"shape"),"type");
var _1493=_1489.makeTargetItem(item);
var pair=new _144c.m(type,item,_1493);
this.addAnimatedMorph(fx,"_trans_"+id,pair,false);
var _148e=_1489.getTransitionTimesForItems(pair.source,pair.target);
var _148f=this.makeAxisFadingKeyFrames(_1493,false,_148e);
fx.addAnimatedStyle("_trans_"+id,_148f);
}
return true;
},scaleByMoveDuration:function(times){
var _1494=Array.create([2],0);
_1494[0]=this.morphDuration[0]+(this.morphDuration[1]-this.morphDuration[0])*times[0];
_1494[1]=this.morphDuration[0]+(this.morphDuration[1]-this.morphDuration[0])*times[1];
return _1494;
},scaleTimeByMoveDuration:function(time){
return this.morphDuration[0]+(this.morphDuration[1]-this.morphDuration[0])*time;
},makeAxisFadingKeyFrames:function(item,_1495,times){
var _1496=this.scaleByMoveDuration(times);
if(times[0]==0&&times[1]==1){
var _1497=_1495?0.001:1;
var _1498=_1495?1:0.001;
return this.buildFadingFrames(item,[[0,_1497],[_1496[0],_1497],[_1496[1],_1498],[1,_1498]]);
}
if(_1495){
var _1499=times[0];
var _149a=_1496[0];
var _149b=(_149a+0.001<_1496[1])?_149a+0.001:((_149a+_1496[1])/2);
return this.buildFadingFrames(item,[[0,0.001],[_149a,0.001],[_149b,_1499],[_1496[1],1],[1,1]]);
}
var _1499=1-times[1];
var _149b=_1496[1];
var _149a=(_149b-0.001>_1496[0])?_149b-0.001:((_149b+_1496[0])/2);
return this.buildFadingFrames(item,[[0,1],[_1496[0],1],[_149a,_1499],[_149b,0.001],[1,0.001]]);
},buildFadingFrames:function(item,_149c){
var start=(_149c[1][0]==0)?1:0;
var end=(_149c[_149c.length-2][0]==1)?_149c.length-1:_149c.length;
var _149d=new Array(end-start);
for(var i=start;i<end;++i){
_149d[i-start]=this.makeFadingKeyFrame(item,_149c[i][0],_149c[i][1]);
}
return _149d;
},addTransitionsForMorphablePairs:function(fx,fg,_149e){
for(var _149f=0,_14a0=fg.matches,_14a1=_14a0.size();_149f<_14a1;++_149f){
var pair=_14a0.get(_149f);
var id=_1448.m.getItem(pair.target,"id");
this.addAnimatedMorph(fx,id,pair,_149e);
}
},addAnimatedMorph:function(fx,id,pair,_14a2){
var aType=_1448.m.getItem(_1448.m.getItem(pair.source,"shape"),"type");
var bType=_1448.m.getItem(_1448.m.getItem(pair.target,"shape"),"type");
if("text".CPVisEngineEquals(aType)&&"text".CPVisEngineEquals(bType)){
fx.addAnimatedText(id,this.makeTextInterpolator(this.morphDuration[0],pair.source,this.morphDuration[1],pair.target));
return;
}
var _14a3=!bType.CPVisEngineEquals("path")&&!aType.CPVisEngineEquals(bType);
if(!_14a3||fx.canAnimateChangeOfShapeType()){
fx.addAnimatedMorph(id,this.makeMorphInterpolator(this.morphDuration[0],pair.source,this.morphDuration[1],pair.target));
var s=this.makeStylePair(pair);
if(_14a2&&s!=null){
var _14a4=this.makeSimpleStyleKeyFrames(s[0],s[1]);
fx.addAnimatedStyle(id,_14a4);
}
return;
}
var _14a5=this.makeFadingKeyFrames(pair.target,0,0,1,0);
fx.addAnimatedStyle(id,_14a5);
var newID="_morph_"+_1448.m.getItem(pair.target,"id");
var _14a6=_1450.m.makePathForShape(_1448.m.getItem(pair.target,"shape"));
var _14a7=_1448.m.deepClone(pair.target);
_1448.m.put(_14a7,"id",newID);
_1448.m.put(_14a7,"shape",_14a6);
fx.newSceneItemAdded(_14a7,id);
fx.addAnimatedMorph(newID,this.makeMorphInterpolator(this.morphDuration[0],pair.source,this.morphDuration[1],_14a7));
var s=this.makeStylePair(pair);
if(_14a2&&s!=null){
var _14a4=this.makeSimpleStyleKeyFrames(s[0],s[1]);
fx.addAnimatedStyle(newID,_14a4);
}
},makeMorphInterpolator:function(t0,item0,t1,item1){
var _14a8=_1448.m.getItem(item0,"shape");
var _14a9=_1448.m.getItem(item1,"shape");
if(_144d.m.areEqualShapes(_14a8,_14a9)){
return null;
}
return _144d.m.makeShapeInterpolator(t0,_14a8,t1,_14a9);
},makeTextInterpolator:function(t0,item0,t1,item1){
if(_1451.m.areEqualTexts(item0,item1)){
return null;
}
return _1451.m.makeTextInterpolator(t0,item0,t1,item1);
},addAnimatedStyle:function(fx,item,_14aa,_14ab){
var id=_1448.m.getItem(item,"id");
if(id==null){
var _14ac=_1448.m.getItem(item,"children");
if(_14ac!=null){
var n=_14ac.length;
for(var i=0;i<n;++i){
var o=_14ac[i];
this.addAnimatedStyle(fx,o,_14aa,_14ab);
}
}
}else{
fx.addAnimatedStyle(_14ab+id,_14aa);
}
},makeStylePair:function(pair){
var oa=_1448.m.createJSONObject();
var ob=_1448.m.createJSONObject();
var _14ad=false;
var fillA=_1448.m.getItem(pair.source,"fill");
var fillB=_1448.m.getItem(pair.target,"fill");
if(!_1448.m.isEqual(fillA,fillB)){
if(fillA!=null){
_1448.m.put(oa,"fill",fillA);
}
if(fillB!=null){
_1448.m.put(ob,"fill",fillB);
}
_14ad=true;
}
return _14ad?[oa,ob]:null;
}});
_1452.add("com/ibm/vis/engine/internal/interaction/effect/Transition",["com/ibm/vis/engine/internal/interaction/effect/Effect"],function(){
_1454.TRANSITION_PREFIX="_trans_";
_1454.SHAPEMORPH_PREFIX="_morph_";
});
return _1454;
});
},"com/ibm/vis/engine/internal/grammar/layout/ShapeMaker":function(){
define("com/ibm/vis/engine/internal/grammar/layout/ShapeMaker",["com/ibm/init/statics","dojo/_base/declare"],function(_14ae,_14af){
var _14b0=_14af("com.ibm.vis.engine.internal.grammar.layout.ShapeMaker",null,{make:function(_14b1,_14b2){
},makeInside:function(_14b3,_14b4){
}});
return _14b0;
});
},"com/ibm/vis/engine/internal/facet/AbstractFaceting":function(){
define("com/ibm/vis/engine/internal/facet/AbstractFaceting",["./Faceting","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../../../exceptions/RaveException","com/ibm/init/fork!../struct/Point","com/ibm/init/fork!./Compose","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../nativeImpl/Map","com/ibm/init/fork!../Vis","com/ibm/init/fork!./FacetAxisInfo","com/ibm/init/fork!./CellElementContents","com/ibm/init/fork!./GenerateOuter","com/ibm/init/fork!../nativeImpl/LinkedHashcodeMap","com/ibm/init/fork!./FacetingHelper","com/ibm/init/fork!../data/Field","com/ibm/init/fork!../grammar/coordinate/Position","com/ibm/init/statics","dojo/_base/declare"],function(_14b5,_14b6,_14b7,_14b8,_14b9,_14ba,_14bb,_14bc,_14bd,_14be,_14bf,_14c0,_14c1,_14c2,_14c3,_14c4,_14c5,_14c6){
var _14c7=_14c6("com.ibm.vis.engine.internal.facet.AbstractFaceting",[_14b5],{facetSpec:null,logger:null,facetFields:null,targetElementID:null,generatedScene:null,keyRowMap:null,constructor:function(_14c8,_14c9,_14ca){
this.facetSpec=_14c8;
this.logger=_14c9;
this.targetElementID=(_14c8.targetElement==null)?null:_14c8.targetElement.$ref;
this.facetFields=_14ca;
},getLogger:function(){
return this.logger;
},getFacetSpec:function(){
return this.facetSpec;
},getFacetFields:function(){
return this.facetFields;
},getTargetElementId:function(){
return this.targetElementID;
},makeSharedCellsScene:function(_14cb,_14cc){
if(this.generatedScene!=null){
this.addGeneratedScene(_14cc);
}
var _14cd=this.generateSharedCellsScene(_14cb,_14cc);
this.removeExtraFrames(_14cd);
return _14cd;
},generateSharedCellsScene:function(_14ce,_14cf){
},addGeneratedScene:function(_14d0){
for(var i=0;i<this.generatedScene.length;++i){
var _14d1=this.generatedScene[i];
_14d0.push(_14d1);
}
},getFacetData:function(array){
var size=array.length;
if(size==1){
var data=array[0];
return data;
}
var _14d2=this.facetFields[0].field.data.id;
for(var i=0;i<size;++i){
var data=array[i];
var id=_14b6.m.getItem(data,"id");
if((_14d2==null&&id==null)||(_14d2!=null&&_14d2.CPVisEngineEquals(id))){
return data;
}
}
throw new _14b7.m(null,14);
},makeUnsharedCellsScene:function(_14d3,_14d4,_14d5,_14d6,_14d7){
if(this.generatedScene!=null){
this.addGeneratedScene(_14d5);
}
var _14d8=null;
var _14d9=_14d3.elements;
for(var i=0;i<_14d9.length;++i){
_14d8=this.getFacetKeyRowMap(_14d9[i]);
if(_14d8!=null){
break;
}
}
var _14da=null;
var _14db=_14d3.getBounds();
if(_14db!=null){
_14da=new _14b8.m(_14db.x,_14db.y);
}
var _14dc=new _14b9.m(_14d5,this.targetElementID,_14da);
var _14dd;
var json=_14b6.m.createJSONObject();
var _14de=_14b6.m.deepClone(_14d3.spec);
if(this.isPanel()){
this.setEmptyStyle(_14de);
}
var _14df=_14b6.m.createJSONArray();
_14df.push(_14de);
_14b6.m.put(json,"grammar",_14df);
_14b6.m.remove(_14de,"facet");
var size=_14b6.m.createJSONObject();
_14b6.m.put(size,"width",_14d4.width);
_14b6.m.put(size,"height",_14d4.height);
_14b6.m.put(json,"size",size);
var data=this.getFacetData(_14d6);
if(_14b6.m.getItem(data,"source")!=null){
data=_14c7.getSourceData(data,_14d6);
_14d8=this.updateFacetRows(_14d8);
}
var rows=_14b6.m.getItem(data,"rows");
_14b6.m.remove(data,"rows");
var _14e0=_14b6.m.deepClone(data);
_14b6.m.put(data,"rows",rows);
var _14e1=_14b6.m.createJSONArray();
var _14e2=_14d6.length;
if(_14e2==1){
_14e1.push(_14e0);
}else{
var id=_14b6.m.getItem(data,"id");
for(var i=0;i<_14e2;++i){
var item=_14d6[i];
var _14e3=_14b6.m.getItem(item,"id");
if((id==null&&_14e3==null)||(id!=null&&id.CPVisEngineEquals(_14e3))){
_14e1.push(_14e0);
}else{
_14e1.push(item);
}
}
}
_14b6.m.put(json,"data",_14e1);
_14dd=this.createContents(_14d3,_14d4,_14d8,json,_14de,rows,_14e0,_14d7,_14d5);
var _14e4=_14dc.makeInnerScene(_14dd);
this.removeExtraFrames(_14e4);
return _14e4;
},setEmptyStyle:function(_14e5){
var style=_14b6.m.createJSONObject();
_14b6.m.put(_14e5,"style",style);
},createContents:function(_14e6,_14e7,_14e8,json,_14e9,rows,_14ea,_14eb,_14ec){
var _14ed=new _14ba.m();
var _14ee=null;
var dims=null;
var _14ef=this.facetFields[0].field.categories.length;
var _14f0=null;
var _14f1=null;
var _14f2=new _14bb.m(0,0);
if(!this.isChartInChart()&&!_14e6.coordinates.containsPolar()&&this.facetSpec.sharedAxes!=null&&this.facetSpec.sharedAxes.length>0){
var _14f3=_14b6.m.getItem(_14e9,_14c7.COORDINATES_KEY);
if(_14f3!=null){
dims=_14b6.m.getItem(_14f3,"dimensions");
if(dims!=null){
_14ee=this.getUpdateSharedAxisArray(dims);
}
}
}
var _14f4=!this.isChartInChart();
var _14f5=_14e6.coordinates.containsTranspose();
var _14f6=_14f4?2:1;
var _14f7=_14f4?new _14ba.m():null;
var _14f8=new _14bc.m();
for(var pass=0;pass<_14f6;++pass){
_14ed.clear();
var _14f9=0;
var _14fa=null;
for(var _14fb=0,_14fc=_14e8.keySet(),_14fd=_14fc.size();_14fb<_14fd;++_14fb){
var key=_14fc.get(_14fb);
var sub=_14e8.get(key);
_14b6.m.put(_14ea,"rows",_14c7.subset(rows,sub));
var vis=_14bd.m.createVisWithContext(_14eb);
if(_14ee!=null){
this.handleSharedAxis(_14e6,_14ee,dims,_14f1,_14f9,_14f2,_14fa);
}
var _14fe=this.getSelectedPanelSize(_14ec,_14e6.getPreferredSize(),key,_14ee,_14e7,_14f0,_14f1,_14f2);
if(_14fe!=null){
var _14ff=_14b6.m.getItem(json,"size");
_14b6.m.put(_14ff,"width",_14fe.width);
_14b6.m.put(_14ff,"height",_14fe.height);
_14f8.put(key,_14fe);
}
vis.setSpec(json);
vis.replaceSharedScalesInGrammar(_14e6,0);
var scene=vis.makeSceneTree(_14fe);
if(_14f4){
var _1500=vis.grammar;
if(_1500.length>0&&_1500[0]!=null){
var _14f3=_1500[0].coordinates;
if(_14f3!=null){
var axes=_14f3.axes;
_14f2=this.getHiddenSpace(axes,_14f5);
if(axes.length!=0){
if(pass==0){
for(var _1501=0;_1501<axes.length;++_1501){
var axis=axes[_1501];
var info=new _14be.m();
info.facetIndex=_14f9;
info.axisIndex=_1501;
info.axisTickHeight=axis.tickHeight;
_14f7.add(info);
}
}else{
if(_14f9==0){
_14fa=new Array(axes.length);
for(var _1501=0;_1501<axes.length;++_1501){
_14fa[_1501]=axes[_1501].method;
}
}
}
}
}
}
}
_14ed.add(_14bf.m.createContentsFromScene(key,_14f9++,scene));
}
if(pass==0&&_14f4){
var _1502=new _14ba.m();
var _1503=this.isSecondPassRequired(_14ee,_14f7,_1502);
if(_1503){
_14f1=Array.create([_1502.size()],0);
_14f0=new _14bb.m(0,0);
this.processAxisForSecondPass(_14e7,json,_14ee,_14f0,_14f1,_1502,_14f5,_14f2);
}else{
break;
}
}
}
if(_14ee!=null){
this.modifyPanelSize(_14f8,_14ec);
}
return _14ed;
},getHiddenSpace:function(axes,_1504){
var _1505=new _14bb.m(0,0);
if(axes.length<2){
return _1505;
}
var axis=_1504?axes[0]:axes[1];
_1505.width=axis.getScale().getCategoryCount()>0?0:axis.getFirstTickLabelSize().width/2;
return _1505;
},isPanel:function(){
return "panel".CPVisEngineEquals(this.facetSpec.method);
},removeExtraFrames:function(scene){
if(!this.isPanel()){
return;
}
var size=scene.length;
for(var i=0;i<size;++i){
var _1506=scene[i];
var _1507=_14b6.m.getItem(_1506,"children");
if(_1507!=null){
_14c0.m.removeExtraFrames(_1507);
}
}
},isSecondPassRequired:function(_1508,_1509,_150a){
var _150b=_1508!=null;
for(var _150c=0,_150d=_1509.size();_150c<_150d;++_150c){
var info=_1509.get(_150c);
var _150e=info.axisIndex;
if(_150a.size()<=_150e){
var _150f=_150e-_150a.size()+1;
while(_150f!=0){
_150a.add(null);
_150f--;
}
}
var _1510=_150a.get(_150e);
if(_1510==null){
_150a.set(_150e,info);
}else{
if(Math.abs(info.axisTickHeight-_1510.axisTickHeight)>1){
_150b=true;
if(info.axisTickHeight>_1510.axisTickHeight){
_150a.set(_150e,info);
}
}
}
}
return _150b;
},processAxisForSecondPass:function(_1511,json,_1512,_1513,_1514,_1515,_1516,_1517){
var _1518=this.facetFields[0].field.categories.length;
var _1519=this.facetFields.length>1?this.facetFields[1].field.categories.length:1;
var _151a=_14b6.m.getItem(json,"grammar");
var gram0=_151a[0];
var _151b=_14b6.m.getItem(gram0,_14c7.COORDINATES_KEY);
var _151c=_14b6.m.getItem(_151b,"dimensions");
for(var _151d=0;_151d<_1515.size();++_151d){
var info=_1515.get(_151d);
if(info!=null){
var dim=_151c[_151d];
var axes=_14b6.m.getItem(dim,"axis");
var axis;
if(_14b6.m.isArray(axes)){
axis=axes[0];
}else{
axis=axes;
}
if(axis==null){
continue;
}
var _151e=_14b6.m.createJSONObject();
_14b6.m.put(_151e,"min",info.axisTickHeight);
_14b6.m.put(axis,"preferredSize",_151e);
if(_1512!=null&&_1512[_151d]){
if(!_1516){
_1514[_151d]=info.axisTickHeight;
if(_151d==0){
_1513.width=(_1511.width*_1519-info.axisTickHeight-_1517.width*(_1519-1))/_1519;
}else{
_1513.height=(_1511.height*_1518-info.axisTickHeight-_1517.height*(_1518-1))/_1518;
}
}else{
_1514[Math.abs(_151d-1)]=info.axisTickHeight;
if(_151d==0){
_1513.height=(_1511.height*_1518-info.axisTickHeight-_1517.height*(_1518-1))/_1518;
}else{
_1513.width=(_1511.width*_1519-info.axisTickHeight-_1517.width*(_1519-1))/_1519;
}
}
}
}
}
},handleSharedAxis:function(_151f,_1520,dims,_1521,_1522,_1523,_1524){
for(var j=0;j<_1520.length;++j){
if(_1520[j]){
var dim=dims[j];
var axes=_14b6.m.getItem(dim,"axis");
var axis;
if(_14b6.m.isArray(axes)){
axis=axes[0];
}else{
axis=axes;
}
if(axis==null){
continue;
}
var _1525=this.facetFields[0].field.categories.length;
var _1526=this.facetFields.length>1?this.facetFields[1].field.categories.length:1;
var _1527=_151f.coordinates.containsTranspose();
var _1528=_14c7.isAxisVisible(j,_1525,_1526,_1522,_1527);
_14b6.m.put(axis,"visible",_1528);
if(_1524!=null){
_14b6.m.put(axis,"method",_1524[j]);
}
var _1529=_14b6.m.createJSONObject();
if(!_1528){
var max;
if(!_1527){
max=j==0?_1523.width:_1523.height;
}else{
max=j==0?_1523.height:_1523.width;
}
_14b6.m.put(_1529,"max",max);
}else{
if(_1521!=null){
var min=_1527?_1521[Math.abs(1-j)]:_1521[j];
_14b6.m.put(_1529,"min",min);
}
}
_14b6.m.put(axis,"preferredSize",_1529);
}
}
},getUpdateSharedAxisArray:function(dims){
var _152a=true;
var _152b=Array.create([dims.length],false);
var _152c=dims.length;
for(var i=0;i<_152c;++i){
if(this.isSharedAxis(i)){
var dim=dims[i];
var axis=_14b6.m.getItem(dim,"axis");
if(axis==null){
_152b[i]=false;
}else{
var _152d=_14b6.m.getItem(axis,"visible");
_152b[i]=_152d==null||_152d;
if(_152b[i]){
var scale=_14b6.m.getItem(dim,"scale");
if(scale!=null){
var local=_14b6.m.getItem(scale,"local");
_152b[i]=local==null||!local;
}
}
}
if(_152a&&_152b[i]){
_152a=false;
}
}
}
return _152a?null:_152b;
},isSharedAxis:function(index){
if(this.facetSpec.sharedAxes!=null){
for(var i=0;i<this.facetSpec.sharedAxes.length;++i){
if(this.facetSpec.sharedAxes[i]==index){
return true;
}
}
}
return false;
},getFacetKeyRowMap:function(_152e){
this.keyRowMap=new _14c1.m();
var keys=_14c2.m.makeKeys(this.facetFields);
for(var _152f=0,_1530=keys.size();_152f<_1530;++_152f){
var key=keys.get(_152f);
this.keyRowMap.put(key,new _14ba.m());
}
var _1531=_152e.data.rows;
for(var i=0;i<_1531.length;++i){
var row=_1531[i];
var key=this.makeKey(row);
var rows=this.keyRowMap.get(key);
if(rows!=null){
rows.add(i);
}
}
return this.keyRowMap;
},getPanelSize:function(scene,_1532){
},modifyPanelSize:function(_1533,_1534){
},updateFacetRows:function(_1535){
var _1536=new _14c1.m();
for(var _1537=0,_1538=_1535.keySet(),_1539=_1538.size();_1537<_1539;++_1537){
var key=_1538.get(_1537);
var sub=_1535.get(key);
_1536.put(key,this.facetFields[0].field.data.rows[sub.get(0)].originalRows);
}
return _1536;
},setGeneratedScene:function(_153a){
this.generatedScene=_153a;
},getGeneratedScene:function(){
return this.generatedScene;
},updateKey:function(key,row){
var _153b=key;
for(var _153c=0,_153d=this.facetFields,_153e=_153d.length;_153c<_153e;++_153c){
var _153f=_153d[_153c];
_153b+="|"+_153f.field.getUnformattedStringValue(row,false);
}
return _153b;
},applyFacetingToShape:function(shape,row,_1540){
if(this.isFacetedElement(_1540)){
shape.setMeta("facet",this.makeKey(row));
}
},makeKey:function(row){
var s=this.facetFields[0].field.getUnformattedStringValue(row,false);
for(var i=1;i<this.facetFields.length;++i){
s+="|"+this.facetFields[i].field.getUnformattedStringValue(row,false);
}
return s;
},isFacetedElement:function(_1541){
if(_1541.hasVariableRef()){
for(var _1542=0,_1543=this.facetFields,_1544=_1543.length;_1542<_1544;++_1542){
var field=_1543[_1542];
if(field.field.data==_1541.data){
return true;
}
}
}
return false;
},splitAesthetic:function(_1545,_1546){
var map=this.getFacetKeyRowMap(_1546);
for(var _1547=0,_1548=map.keySet(),_1549=_1548.size();_1547<_1549;++_1547){
var s=_1548.get(_1547);
_1545.add(map.get(s));
}
},addFacetInfoToShapes:function(_154a,_154b){
for(var _154c=0,_154d=_154a.size();_154c<_154d;++_154c){
var shape=_154a.get(_154c);
if(shape.rows!=null){
var row=_154b.data.rows[shape.rows[0]];
var _154e=new Array(this.facetFields.length);
for(var i=0;i<this.facetFields.length;++i){
_154e[i]=this.facetFields[i].field;
}
var _154f=_14c3.m.getValuesAsZeroOne(row,_154e);
if(shape.position==null){
shape.position=new _14c4.m(0,0,0);
}
shape.position=shape.position.setFacet(_154f);
}
}
}});
_14c7.getSourceData=function(data,array){
var _1550=_14b6.m.getItem(data,"source");
var _1551=_14b6.m.getItem(_1550,"$ref");
var size=array.length;
for(var i=0;i<size;++i){
var dat=array[i];
var id=_14b6.m.getItem(dat,"id");
if(_1551.CPVisEngineEquals(id)){
return dat;
}
}
return data;
};
_14c7.subset=function(rows,sub){
var _1552=_14b6.m.createSizedJSONArray(sub.size());
for(var index=0;index<sub.size();++index){
_1552.push(rows[sub.get(index)]);
}
return _1552;
};
_14c7.isAxisVisible=function(_1553,_1554,_1555,_1556,_1557){
if(_1557){
return _14c7.isAxisVisible(Math.abs(_1553-1),_1554,_1555,_1556,false);
}
switch(_1553){
case 0:
return (_1556%_1555)==0;
case 1:
return ((_1556-(_1556%_1555))/_1555)==(_1554-1);
default:
return false;
}
};
_14c5.add("com/ibm/vis/engine/internal/facet/AbstractFaceting",["com/ibm/vis/engine/internal/facet/Faceting"],function(){
_14c7.FACET_META="facet";
_14c7.KEY_SEPARATOR="|";
_14c7.ROWS_KEY="rows";
_14c7.DATA_KEY="data";
_14c7.SIZE_KEY="size";
_14c7.HEIGHT_KEY="height";
_14c7.WIDTH_KEY="width";
_14c7.GRAMMAR_KEY="grammar";
_14c7.COORDINATES_KEY="coordinates";
_14c7.DIMENSIONS_KEY="dimensions";
_14c7.AXIS_KEY="axis";
_14c7.VISIBLE_KEY="visible";
_14c7.AXIS_METHOD="method";
_14c7.SCALE_KEY="scale";
_14c7.LOCAL_KEY="local";
_14c7.SOURCE_KEY="source";
_14c7.$REF_KEY="$ref";
_14c7.ID_KEY="id";
});
return _14c7;
});
},"com/ibm/vis/engine/internal/facet/FacetMethodChartInChart":function(){
define("com/ibm/vis/engine/internal/facet/FacetMethodChartInChart",["./AbstractFaceting","com/ibm/init/fork!./Compose","com/ibm/init/fork!./FacetingHelper","com/ibm/init/fork!../util/SceneUtil","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_1558,_1559,_155a,_155b,_155c,_155d,_155e){
var _155f=_155e("com.ibm.vis.engine.internal.facet.FacetMethodChartInChart",[_1558],{constructor:function(_1560,_1561,_1562){
},generateSharedCellsScene:function(_1563,_1564){
var _1565=new _1559.m(_1564,this.targetElementID,null);
var _1566=_155a.m.divideScene(_1563,this.facetFields);
return _1565.makeInnerScene(_1566);
},getPanelSize:function(scene,_1567){
var util=new _155b.m(scene);
var _1568=util.getElementGroups();
if(_1568.length>0){
var _1569=_1568[0];
var shape=_1569[0];
var _156a=_155b.m.getBounds(shape);
return _156a.getExtent();
}
return _1567;
},getSelectedPanelSize:function(scene,_156b,_156c,_156d,_156e,_156f,_1570,_1571){
var util=new _155b.m(scene);
var _1572=util.getElementGroups();
if(_1572.length>0){
var _1573=_1572[0];
var shape=_155c.m.getArrayItemByKey(_1573,"key",_156c);
var _1574=_155b.m.getBounds(shape);
return _1574.getExtent();
}
return _156b;
},isChartInChart:function(){
return true;
}});
return _155f;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/DepthAssignation":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/DepthAssignation",["./BFS","com/ibm/init/statics","dojo/_base/declare"],function(_1575,_1576,_1577){
var _1578=_1577("com.ibm.vis.engine.internal.grammar.layout.graph.stress.util.DepthAssignation",[_1575],{constructor:function(g,_1579){
},execute:function(_157a){
for(var _157b=0,_157c=this.graph.nodes,_157d=_157c.length;_157b<_157d;++_157b){
var node=_157c[_157b];
node.info=2147483647;
}
this.inherited(arguments,[_157a]);
},markNode:function(node){
node.info=this.depth;
},isMarkedNode:function(node){
return (node.info)<2147483647;
}});
return _1578;
});
},"com/ibm/vis/engine/internal/grammar/values/DerivedValueProducer":function(){
define("com/ibm/vis/engine/internal/grammar/values/DerivedValueProducer",["com/ibm/init/statics","dojo/_base/declare"],function(_157e,_157f){
var _1580=_157f("com.ibm.vis.engine.internal.grammar.values.DerivedValueProducer",null,{getDerivedValue:function(_1581,_1582,_1583){
}});
return _1580;
});
},"com/ibm/vis/engine/internal/grammar/scale/CategoricalScaleSpan":function(){
define("com/ibm/vis/engine/internal/grammar/scale/CategoricalScaleSpan",["./ScaleSpan","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/fork!../../struct/Text","com/ibm/init/fork!../../Alignment","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!./Tick","com/ibm/init/statics","dojo/_base/declare"],function(_1584,_1585,_1586,_1587,_1588,_1589,_158a,_158b){
var _158c=_158b("com.ibm.vis.engine.internal.grammar.scale.CategoricalScaleSpan",[_1584],{domain:null,categoryLabels:null,frequency:0,maxTickLength:NaN,constructor:function(unit,_158d,info,_158e,_158f,_1590,_1591,_1592,_1593){
this.domain=_1593;
this.categoryLabels=_1592;
this.frequency=1;
},addTicks:function(ticks,_1594){
this.addTicksAtFrequency(ticks,_1594,this.frequency);
this.maxTickLength=NaN;
},getFormattedValue:function(value){
var s;
if(this.categoryLabels==null){
s=""+value;
}else{
s=this.categoryLabels[value];
}
return this.visContext.formatContext.formatString(s,this.specifiedFormatter,-1,null);
},setupForTickCount:function(_1595,_1596){
var step=Math.round(this.domain.getOutputCount()/_1595);
var _1597=Math.ceil(this.domain.getOutputCount()/_1596);
if(step<_1597){
step=_1597;
}
if(step<1){
step=1;
}
this.frequency=step;
},getMaxTickLength:function(font){
var v=this.maxTickLength;
if(_1585.m.isNaN(v)){
v=0;
var _1598=this.domain.getOutputValues();
for(var _1599=0,_159a=_1598.length;_1599<_159a;++_1599){
var value=_1598[_1599];
var t=this.getFormattedValue(value);
var text=_1586.m.createTextWithUnshapedValue(t,0,0,"start",_1587.m.VALIGN_MIDDLE_1ST_LINE,font,null,null,this.visContext.getNumericShapingInfo(),null);
v=Math.max(v,font.getWidth(text));
}
}
this.maxTickLength=v;
return v;
},isApplicable:function(u){
if(u==null){
return true;
}
var name=u.name;
return u.measure.matches(this.inputUnit.measure)&&name.CPVisEngineEquals(this.inputUnit.name);
},toZeroOne:function(value,unit,clamp){
if(unit!=null&&!this.isApplicable(unit)){
return null;
}
var _159b=this.domain.getDomainValueForFieldValue(value);
if(_159b==null){
return null;
}
var x=this.scaleIndexToZeroOne(_159b);
if(x<0){
return clamp?0:x;
}
if(x>1){
return clamp?1:x;
}
return this.outRange.fromZeroOne(x);
},getScaleIndexFromFieldIndex:function(_159c){
return this.domain.getDomainValueForFieldValue(_159c);
},getFieldIndexFromScaleIndex:function(_159d){
return this.domain.getFieldValueForDomainValue(_159d);
},scaleIndexToZeroOne:function(_159e){
if(this.domain.getOutputCount()==1){
return 0.5;
}else{
if(this.fitInfo.canExpand){
return (_159e+0.5)/this.domain.getOutputCount();
}else{
return (_159e+0)/(this.domain.getOutputCount()-1);
}
}
},getSuggestedElementSize:function(full){
var nCats=Math.max(this.domain.getOutputCount(),2);
return full*this.outRange.range/nCats;
},addMinorTicks:function(ticks){
},computeTickCount:function(){
return Math.floor(this.domain.getOutputCount()/this.frequency);
},getTickMin:function(){
return 0;
},getTickSize:function(){
return this.frequency;
},getInputRange:function(){
return new _1588.m(0,this.domain.getOutputCount());
},getAdjustedInputRange:function(){
return new _1588.m(0,this.domain.getOutputCount());
},getTickUnit:function(){
return this.inputUnit;
},zeroOneToDataValue:function(value){
var N=this.domain.getOutputCount();
var index=Math.round(value*N-0.5);
if(index>N-1){
index=N-1;
}
if(index<0){
index=0;
}
return this.domain.getOutputValues()[index];
},getCategoryCount:function(){
return this.domain.getOutputCount();
},getUndefinedParametersFrom:function(_159f){
this.inherited(arguments,[_159f]);
var o=_159f;
if(this.categoryLabels==null){
this.categoryLabels=o.categoryLabels;
}
this.domain.fillInDetailsFrom(o.domain);
},getUndefinedFromMismatched:function(spans){
},getGoodDisplaySpanSize:function(){
return this.getCategoryCount();
},getIndexFromZeroOne:function(x){
var n=this.domain.getOutputCount();
if(this.fitInfo.canExpand){
return Math.round(n*x-0.5);
}else{
return Math.round(x*(n-1));
}
},addAllTicks:function(ticks,_15a0){
this.addTicksAtFrequency(ticks,_15a0,1);
},addTicksAtFrequency:function(ticks,_15a1,_15a2){
var _15a3=_15a1?this.domain.getDataOutputValues():this.domain.getOutputValues();
for(var i=0;i<_15a3.length;i+=_15a2){
var d=this.scaleIndexToZeroOne(i);
var value=_15a3[i];
var t=this.getFormattedValue(value);
if(this.outRange.fromZeroOne(d)>(0-0.000001)&&this.outRange.fromZeroOne(d)<(1+0.000001)){
ticks.add(new _1589.m(t,this.outRange.fromZeroOne(d),value));
}
}
},getBase:function(_15a4){
var N=this.domain.getOutputCount();
var index=(_15a4)?N-1:0;
return this.domain.getOutputValues()[index];
},isUnitApplicable:function(value,unit){
var _15a5=true;
if(unit!=null&&!this.isApplicable(unit)){
_15a5=false;
}
if(_15a5&&this.domain.getDomainValueForFieldValue(value)==null){
_15a5=false;
}
if(unit!=null&&(unit.customUnit||this.inputUnit.customUnit)){
return unit.name.CPVisEngineEquals(this.inputUnit.name);
}
return _15a5;
}});
return _158c;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/DefaultCycleRemovalAlgorithm":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/DefaultCycleRemovalAlgorithm",["./CycleRemovalAlgorithm","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_15a6,_15a7,_15a8,_15a9){
var _15aa=_15a9("com.ibm.vis.engine.internal.grammar.layout.graph.DefaultCycleRemovalAlgorithm",[_15a6],{adapter:null,constructor:function(_15ab){
this.adapter=_15ab;
},removeCycles:function(graph){
for(var _15ac=0,_15ad=graph.nodes,_15ae=_15ad.length;_15ac<_15ae;++_15ac){
var node=_15ad[_15ac];
var done=false;
while(!done){
var cycle=this.findCycle(graph,node);
if(cycle==null){
node.info=_15aa.EXPLORED;
done=true;
}else{
done=false;
this.adapter.logInfo("Graph layout needed to break a cycle","cycle size",cycle.size());
this.breakCycle(cycle);
}
}
}
},breakCycle:function(cycle){
var worst=0;
var _15af=this.scoreNodeInCycle(0,cycle);
for(var i=1;i<cycle.size()-1;++i){
var score=this.scoreNodeInCycle(i,cycle);
if(_15af<score){
worst=i;
_15af=score;
}
}
var from=cycle.get(worst);
var to=cycle.get(worst+1);
for(var _15b0=0,_15b1=from.outLink,_15b2=_15b1.length;_15b0<_15b2;++_15b0){
var link=_15b1[_15b0];
if(link.to==to){
link.reverse();
return;
}
}
},scoreNodeInCycle:function(i,cycle){
var to=cycle.get(i+1);
var from=cycle.get(i);
if(from.row<to.row){
return -Infinity;
}
var _15b3=0;
for(var _15b4=0,_15b5=to.outLink,_15b6=_15b5.length;_15b4<_15b6;++_15b4){
var _15b7=_15b5[_15b4];
var _15b8=cycle.indexOf(_15b7.to);
if(_15b8<i&&_15b8>=0){
_15b3++;
}
}
return (from.row-to.row)*0.000001-_15b3;
},findCycle:function(graph,node){
for(var _15b9=0,_15ba=graph.nodes,_15bb=_15ba.length;_15b9<_15bb;++_15b9){
var n=_15ba[_15b9];
if(n.info!=_15aa.EXPLORED){
n.info=null;
}
}
var _15bc=new _15a7.m();
_15bc.add(node);
if(this.searchForwardForCycle(node,_15bc)){
var bad=_15bc.get(_15bc.size()-1);
for(var j=0;j<_15bc.size();++j){
if(_15bc.get(j)==bad){
var list=new _15a7.m();
var n=0;
for(var _15bd=0,_15be=_15bc.size();_15bd<_15be;++_15bd){
var _15bf=_15bc.get(_15bd);
if(n++>j){
list.add(_15bf);
}
}
return list;
}
}
}
node.info=_15aa.EXPLORED;
return null;
},searchForwardForCycle:function(_15c0,_15c1){
_15c0.info=_15aa.DISCOVERED;
for(var _15c2=0,_15c3=_15c0.outLink,_15c4=_15c3.length;_15c2<_15c4;++_15c2){
var _15c5=_15c3[_15c2];
var next=_15c5.to;
_15c1.add(next);
if(next.info==_15aa.DISCOVERED){
return true;
}else{
if(next.info==null){
if(this.searchForwardForCycle(next,_15c1)){
return true;
}
}
}
_15c1.remove(_15c1.get(_15c1.size()-1));
}
_15c0.info=_15aa.EXPLORED;
return false;
}});
_15a8.add("com/ibm/vis/engine/internal/grammar/layout/graph/DefaultCycleRemovalAlgorithm",["com/ibm/vis/engine/internal/grammar/layout/graph/CycleRemovalAlgorithm"],function(){
_15aa.DISCOVERED=1;
_15aa.EXPLORED=2;
});
return _15aa;
});
},"com/ibm/vis/engine/internal/interaction/morph/Matchable":function(){
define("com/ibm/vis/engine/internal/interaction/morph/Matchable",["com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_15c6,_15c7,_15c8){
var _15c9=_15c8("com.ibm.vis.engine.internal.interaction.morph.Matchable",null,{sources:null,targets:null,type:null,constructor:function(type){
this.sources=new _15c6.m();
this.targets=new _15c6.m();
this.type=type;
},addSource:function(_15ca){
if(_15ca!=null){
this.sources.add(_15ca);
}
},addTarget:function(_15cb){
if(_15cb!=null){
this.targets.add(_15cb);
}
}});
return _15c9;
});
},"com/ibm/vis/engine/internal/legend/LegendUtil":function(){
define("com/ibm/vis/engine/internal/legend/LegendUtil",["com/ibm/init/fork!../nativeImpl/SpecUtil","com/ibm/init/fork!../struct/Insets","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!../scene/Font","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_15cc,_15cd,_15ce,_15cf,_15d0,_15d1,_15d2,_15d3,_15d4){
var _15d5=_15d4("com.ibm.vis.engine.internal.legend.LegendUtil",null,{});
_15d5.buildVisibleLegendAxisSpec=function(_15d6,_15d7,_15d8){
var axis=new Object();
axis.opposite=_15d5.isReverseAxis(_15d7,_15d8);
if(_15d6.markStyle!=null){
axis.markStyle=_15d6.markStyle;
}
if(_15d6.lineStyle!=null){
axis.lineStyle=_15d6.lineStyle;
}
if(_15d6.labelStyle!=null){
axis.tickStyle=_15d6.labelStyle;
}else{
if(_15d6.tickStyle!=null){
axis.tickStyle=_15d6.tickStyle;
}
}
return axis;
};
_15d5.buildSpacingLegendAxisSpec=function(_15d9,_15da){
var _15db=new Object();
_15db.scale=new Object();
_15db.scale.reverse=_15d5.isReverseAxis(_15d9,_15da);
return _15db;
};
_15d5.isReverseAxis=function(_15dc,_15dd){
return (_15dd&&!_15dc)||(!_15dd&&_15dc);
};
_15d5.getLabelStyle=function(_15de){
var _15df=null;
if(_15de.labelStyle!=null){
_15df=_15de.labelStyle;
}else{
if(_15de.tickStyle!=null){
_15df=_15de.tickStyle;
}
}
if(_15df==null){
_15df=new Object();
}else{
if(_15cc.m.isEmpty(_15df)){
_15df=null;
}
}
return _15df;
};
_15d5.getMarkSize=function(_15e0,_15e1,_15e2,_15e3,_15e4,vis,_15e5,_15e6){
var _15e7=0;
var _15e8=0;
var _15e9=0;
var _15ea=_15e2?_15e3.height:_15e3.width;
var _15eb=_15d5.getLabelStyle(_15e1);
var _15ec=_15cd.m.NONE;
if((_15eb!=null)&&(_15eb.padding!=null)){
_15ec=_15cd.m.makeForStylePadding(_15eb.padding,_15e3,_15e3);
}
var _15ed=_15d5.getTickLabelBounds(_15eb,vis,_15e5,_15ec.getHorizontal());
_15e8=(_15eb==null||_15eb.padding==null)?_15ed.height/6:0;
if(_15e1.markStyle!=null&&_15cc.m.isEmpty(_15e1.markStyle)){
_15e7=0;
}else{
if(_15e1.markStyle==null||_15e1.markStyle.size==null){
_15e7=_15ed.height/3;
}else{
_15e7=_15ce.m.convertLength(_15e1.markStyle.size,_15ed.height/3,_15ea);
}
}
if(_15e2){
_15e9=_15ed.width+_15ec.getHorizontal();
}else{
var _15ee=_15e0/_15e6;
if((_15e6<=0)||(_15ee>=_15ed.width+_15ec.getHorizontal())){
_15e9=_15ed.height+_15ec.getVertical();
}else{
if(_15e6>2&&(_15ee*2)>=(_15ed.width+_15ec.getHorizontal())){
_15e9=_15ed.height*2+_15ec.getVertical();
}else{
if(_15ed.height*_15e6>=_15e0){
_15e9=0;
}else{
_15e9=_15ed.width+_15ec.getHorizontal();
}
}
}
}
return _15e7+_15e8+_15e4+_15e9;
};
_15d5.getFormattedTextForTickLabel=function(_15ef,value){
var field=_15ef.valueProvider.getBaseField();
return _15ef.valueProvider.getBaseField().getFormattedStringValue(value,-1);
};
_15d5.convertToGivenPrecision=function(value,_15f0){
var _15f1=value;
var _15f2=Math.floor(Math.abs(_15f1));
var _15f3=1/Math.pow(10,_15f0);
var _15f4=1;
if(_15f1<0){
_15f4=-1;
}
_15f1=(_15f2+_15f3)*_15f4;
return _15f1;
};
_15d5.getTickLabelBounds=function(_15f5,vis,_15f6,_15f7){
var width=0;
var _15f8=0;
var font=null;
var _15f9=null;
if(_15f5!=null){
_15f9=_15f5.font;
}
font=_15cf.m.makeFont(_15f9,vis.visContext);
width=font.getMetric().getWidth(_15f6,font.getSize(),font.getBold())+_15f7;
_15f8=font.getHeight();
return new _15d0.m(width,_15f8);
};
_15d5.createMinMaxSceneObject=function(scale){
if(scale==null||scale.spans==null||scale.spans.length<1){
return null;
}
var min=Infinity;
var max=-Infinity;
for(var _15fa=0,_15fb=scale.spans,_15fc=_15fb.length;_15fa<_15fc;++_15fa){
var span=_15fb[_15fa];
min=span.min==null?min:Math.min(min,span.min);
max=span.max==null?min:Math.max(max,span.max);
}
var _15fd=_15d1.m.createJSONObject();
if(min!=Infinity){
_15d1.m.put(_15fd,"min",min);
}
if(max!=-Infinity){
_15d1.m.put(_15fd,"max",max);
}
return _15fd;
};
_15d5.processAxisItems=function(obj,_15fe,_15ff,_1600,_1601){
var id=_15d1.m.getItem(obj,"id");
if(id!=null&&id.indexOf("G")>-1&&id.indexOf("A")>-1){
if(id.indexOf("L")>-1){
var _1602="L"+_1601+"LC0LE0SW0";
_15d1.m.put(obj,"id",_1602);
_15d1.m.put(obj,"field",_15ff.id);
_15d1.m.put(obj,"value",_15d5.createMinMaxSceneObject(_1600.scale));
}else{
if(id.indexOf("M")>-1){
var _1603=id.substring(id.indexOf("M")+1);
var _1604=_15d1.m.parseDouble(_1603)+1;
var _1605="L"+_1601+"LC0LE"+_15d2.m.r3(_1604)+"SW0";
_15d1.m.put(obj,"id",_1605);
_15d1.m.put(obj,"field",_15ff.id);
var rows=_15d1.m.getItem(obj,"rows");
if(rows!=null){
var index=rows[0];
var value=_15fe[index].data[_15ff.index];
_15d1.m.put(obj,"value",_15d2.m.r3(value));
}
}else{
if(id.indexOf("T")>-1){
var _1606=id.substring(id.indexOf("T")+1);
var _1607=_15d1.m.parseDouble(_1606)+1;
var _1608="L"+_1601+"LC0LE"+_15d2.m.r3(_1607)+"T0";
_15d1.m.put(obj,"id",_1608);
_15d1.m.put(obj,"field",_15ff.id);
var rows=_15d1.m.getItem(obj,"rows");
if(rows!=null){
var index=rows[0];
var value=_15fe[index].data[_15ff.index];
_15d1.m.put(obj,"value",_15d2.m.r3(value));
}
}
}
}
_15d1.m.remove(obj,"elementType");
_15d1.m.remove(obj,"key");
_15d1.m.remove(obj,"rows");
_15d1.m.remove(obj,"DATA");
_15d1.m.remove(obj,"DIM");
}
};
return _15d5;
});
},"com/ibm/vis/engine/internal/util/SceneUtil":function(){
define("com/ibm/vis/engine/internal/util/SceneUtil",["com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../struct/PolyGeom","com/ibm/init/fork!../struct/ShapeType","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!../struct/Point","com/ibm/init/fork!../nativeImpl/Character","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../../../interaction/internal/util/TransformData","com/ibm/init/fork!./MathUtil","com/ibm/init/fork!./SceneIdUtil","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_1609,_160a,_160b,_160c,_160d,_160e,_160f,_1610,_1611,_1612,_1613,_1614,_1615,_1616,_1617){
var _1618=_1617("com.ibm.vis.engine.internal.util.SceneUtil",null,{scene:null,constructor:function(scene){
this.scene=scene;
},getElementGroups:function(){
var _1619=new _1610.m();
this.addGroups(this.scene,"element",_1619);
var _161a=new Array(_1619.size());
for(var i=0;i<_161a.length;++i){
_161a[i]=_1619.get(i);
}
return _161a;
},addGroups:function(array,key,_161b){
for(var _161c=0,_161d=array.length;_161c<_161d;++_161c){
var o=array[_161c];
var _161e=_1609.m.getItem(o,"children");
if(_161e!=null){
if(key.CPVisEngineEquals(_1609.m.getItem(o,"type"))){
_161b.add(_161e);
}
this.addGroups(_161e,key,_161b);
}
}
},getSize:function(){
var _161f=this.scene[0];
var _1620=_1609.m.getItem(_161f,"shape");
var d=_160d.m.toRect(_1620).getExtent();
var t=_1618.getBackTransform(this.scene);
return new _1611.m(d.width*Math.abs(t.sx),d.height*Math.abs(t.sy));
},getGrammarInnerShapes:function(){
var list=new _1610.m();
var n=this.scene.length;
for(var i=0;i<n;++i){
var o=this.scene[i];
var id=_1609.m.getItem(o,"id");
if(_1614.m.isCoordsId(id)){
list.add(o);
}
}
return _1609.m.toArray(list);
}});
_1618.createGroup=function(type,_1621){
var _1622=_1609.m.createJSONObject();
_1609.m.put(_1622,"type",type);
_1609.m.put(_1622,"children",_1621);
return _1622;
};
_1618.getPlaqueBounds=function(_1623,item){
var id=_1609.m.getItem(item,"id");
if(id.indexOf("_")>-1){
var index=id.indexOf("_");
var _1624=id.substring(0,index);
var _1625=_1623.get(_1624);
if(_1625==null){
return _1618.getBounds(item);
}
return _1618.getBounds(_1625);
}
var index=id.indexOf("L");
if(index>-1){
var _1626=id.substring(0,index);
var _1627=id.substring(index+1,id.CPVisEngineLength());
var _1625=_1623.get(_1626+"LB"+_1627);
var shape=_1609.m.getItem(_1625,"shape");
if(shape!=null){
var _1628=_1609.m.getItem(shape,"type");
if(_1628.CPVisEngineEquals("path")){
var _1629=_1609.m.getItem(shape,"path");
var poly=_160a.m.makePolyGeom(_1629);
var path=poly.getPathForShape();
return path;
}else{
if(_1628.CPVisEngineEquals("rect")){
return _1618.getBounds(_1625);
}
}
}
}
return _1618.getBounds(item);
};
_1618.getBoundsForLegendItem=function(_162a,item){
return _1618.getBounds(item);
};
_1618.getBounds=function(item){
var shape=_1609.m.getItem(item,"shape");
if(shape==null){
shape=item;
}
var _162b=null;
var _162c=_1609.m.getItem(shape,"type");
if(_162c==null){
_162b=_1618.getDefaultBounds(shape);
}else{
if(_162c.CPVISEngineStartsWith("rect")){
_162b=_1618.getRectBounds(shape);
}else{
if(_160b.m.ImageName.CPVisEngineEquals(_162c)){
_162b=_1618.getImageBounds(shape);
}else{
if("circle".CPVisEngineEquals(_162c)){
_162b=_1618.getCircleBounds(shape);
}else{
if(_160b.m.EllipseName.CPVisEngineEquals(_162c)){
_162b=_1618.getEllipseBounds(shape);
}else{
if("line".CPVisEngineEquals(_162c)){
_162b=_1618.getLineBounds(shape);
}else{
if("text".CPVisEngineEquals(_162c)){
var font=_1609.m.getItem(item,"font");
_162b=_1618.getTextBounds(shape,font);
}else{
_162b=_1618.getDefaultBounds(shape);
}
}
}
}
}
}
}
var _162d=_1609.m.getItem(item,"stroke");
var _162e=null;
if(_162d!=null&&_162b!=null){
var value=_1609.m.getItem(_162d,"width");
if(value!=null){
_162e=_160c.m.convertLength(value,null,null);
}
if(_162e==null){
_162e=1;
}
_162b=_162b.expand(_162e/2);
}
return _162b;
};
_1618.getTextBounds=function(shape,font){
var x=(_1609.m.getItem(shape,"x"));
var y=(_1609.m.getItem(shape,"y"));
var width=(_1609.m.getItem(shape,"width"));
var _162f=(_1609.m.getItem(shape,"height"));
var align=_1609.m.getItem(shape,"align");
if(font==null){
return null;
}
var _1630=_1609.m.getItem(font,"ascent");
if(_1630==null){
return null;
}
if(width==null){
return null;
}
if(_162f==null){
return null;
}
if(x==null){
x=0;
}
if(y==null){
y=0;
}
if(align==null){
align="start";
}
var _1631=new _160d.m(x,y-_1630,width,_162f);
if("middle".CPVisEngineEquals(align)){
_1631.x-=_1631.width/2;
}else{
if("end".CPVisEngineEquals(align)){
_1631.x-=_1631.width;
}else{
if("start".CPVisEngineEquals(align)){
_1631.x=x;
}
}
}
return _1631;
};
_1618.getLineBounds=function(shape){
var x1o=(_1609.m.getItem(shape,"x1"));
var y1o=(_1609.m.getItem(shape,"y1"));
var x2o=(_1609.m.getItem(shape,"x2"));
var y2o=(_1609.m.getItem(shape,"y2"));
var x1,y1,x2,y2;
if(x1o==null){
x1=0;
}else{
x1=x1o;
}
if(y1o==null){
y1=0;
}else{
y1=y1o;
}
if(x2o==null){
x2=100;
}else{
x2=x2o;
}
if(y2o==null){
y2=100;
}else{
y2=y2o;
}
return new _160d.m(Math.min(x1,x2),Math.min(y1,y2),Math.abs(x2-x1),Math.abs(y2-y1));
};
_1618.getEllipseBounds=function(shape){
var cx=(_1609.m.getItem(shape,"cx"));
var cy=(_1609.m.getItem(shape,"cy"));
var rx=(_1609.m.getItem(shape,"rx"));
var ry=(_1609.m.getItem(shape,"ry"));
if(cx==null){
cx=0;
}
if(cy==null){
cy=0;
}
if(rx==null){
rx=200;
}
if(ry==null){
ry=100;
}
return new _160d.m(cx-rx,cy-ry,rx*2,ry*2);
};
_1618.getCircleBounds=function(shape){
var cx=(_1609.m.getItem(shape,"cx"));
var cy=(_1609.m.getItem(shape,"cy"));
var r=(_1609.m.getItem(shape,"r"));
if(cx==null){
cx=0;
}
if(cy==null){
cy=0;
}
if(r==null){
r=100;
}
return new _160d.m(cx-r,cy-r,r*2,r*2);
};
_1618.getImageBounds=function(shape){
var x=(_1609.m.getItem(shape,"x"));
var y=(_1609.m.getItem(shape,"y"));
var w=(_1609.m.getItem(shape,"width"));
var h=(_1609.m.getItem(shape,"height"));
if(w==null){
w=0;
}
if(h==null){
h=0;
}
if(x==null){
x=0;
}
if(y==null){
y=0;
}
return new _160d.m(x,y,w,h);
};
_1618.getRectBounds=function(shape){
var x=(_1609.m.getItem(shape,"x"));
var y=(_1609.m.getItem(shape,"y"));
var w=(_1609.m.getItem(shape,"width"));
var h=(_1609.m.getItem(shape,"height"));
if(w==null){
w=100;
}
if(h==null){
h=100;
}
if(x==null){
x=0;
}
if(y==null){
y=0;
}
return new _160d.m(x,y,w,h);
};
_1618.getDefaultBounds=function(shape){
var x=(_1609.m.getItem(shape,"x"));
var y=(_1609.m.getItem(shape,"y"));
var w=(_1609.m.getItem(shape,"width"));
var h=(_1609.m.getItem(shape,"height"));
if(w==null||h==null||x==null||y==null){
return null;
}else{
return new _160d.m(x,y,w,h);
}
};
_1618.getCenter=function(item){
var shape=_1609.m.getItem(item,"shape");
if(shape==null){
shape=item;
}
var cx=_1609.m.getItem(shape,"cx");
if(cx!=null){
var cy=_1609.m.getItem(shape,"cy");
return new _160e.m(cx,cy);
}
var x1=_1609.m.getItem(shape,"x1");
if(x1!=null){
var y1=_1609.m.getItem(shape,"y1");
return new _160e.m(x1,y1);
}
var r=_1618.getBounds(item);
return r==null?null:r.getCenter();
};
_1618.getDouble=function(item,key){
return (_1609.m.getItem(item,key));
};
_1618.identifiesElement=function(id){
if(id.indexOf("E")>-1){
return id.CPVisEngineMatches("^[FG0-9]*E.*");
}
return false;
};
_1618.identifiesElementShape=function(id){
if(id.indexOf("E")>-1&&id.indexOf("S")>-1){
return id.CPVisEngineMatches("^[FG0-9]*E.*S.*$");
}
return false;
};
_1618.getElement=function(spec,id){
if(!_1618.identifiesElement(id)){
return null;
}
var _1632=_1609.m.getItem(spec,"grammar");
var _1633=null;
if(_1609.m.isArray(_1632)){
var _1634=id.charAt(1);
var _1635=_160f.m.digit(_1634,10);
_1633=_1632[_1635];
}else{
_1633=_1632;
}
var _1636=_1609.m.getItem(_1633,"elements");
var _1637=id.charAt(1);
var _1638=_160f.m.digit(_1637,10);
return _1636[_1638];
};
_1618.getBackTransform=function(scene){
if(scene==null||scene.length==0){
return null;
}
var _1639=scene[0];
var t=_1612.m.make(_1609.m.getItem(_1639,"transform"));
return t;
};
_1618.makeTransform=function(dx,dy,scale){
var trans=_1609.m.createJSONObject();
_1609.m.put(trans,"dx",_1613.m.r3(dx));
_1609.m.put(trans,"dy",_1613.m.r3(dy));
var s=_1613.m.r3(scale);
if(s!=1){
_1609.m.put(trans,"xx",s);
_1609.m.put(trans,"yy",s);
}
return trans;
};
_1618.getTransformOffset=function(o){
var t=_1609.m.getItem(o,"transform");
var dx=_1609.m.getItem(t,"dx");
var x=dx==null?0:dx;
var dy=_1609.m.getItem(t,"dy");
var y=dy==null?0:dy;
return new _160e.m(x,y);
};
_1618.isLineWithPoints=function(o){
var _163a=_1609.m.getItem(o,"meta");
var _163b=_1609.m.getItem(_163a,"part");
return ("symbol".CPVisEngineEquals(_163b));
};
_1618.panBy=function(scene,pdx,pdy){
if(scene==null){
return;
}
var size=scene.length;
for(var i=0;i<size;++i){
var _163c=scene[i];
var _163d=_1609.m.getItem(_163c,"transform");
if(_163d==null){
_163d=_1609.m.createJSONObject();
_1609.m.put(_163c,"transform",_163d);
}
if(_163d!=null){
var dx=0;
var dy=0;
var dxObj=_1609.m.getItem(_163d,"dx");
if(_1609.m.isString(dxObj)){
dx=_1615.m.parseDouble(dxObj);
}else{
if(_1609.m.isNumber(dxObj)){
var n=dxObj;
dx=n;
}
}
var dyObj=_1609.m.getItem(_163d,"dy");
if(_1609.m.isString(dyObj)){
dy=_1615.m.parseDouble(dyObj);
}else{
if(_1609.m.isNumber(dyObj)){
var n=dyObj;
dy=n;
}
}
_1609.m.put(_163d,"dx",dx+pdx);
_1609.m.put(_163d,"dy",dy+pdy);
}
}
};
return _1618;
});
},"com/ibm/vis/engine/internal/util/Version":function(){
define("com/ibm/vis/engine/internal/util/Version",["com/ibm/init/fork!../nativeImpl/IntegerUtil","com/ibm/init/fork!../nativeImpl/WebEngineException","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../nativeImpl/StringBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_163e,_163f,_1640,_1641,_1642,_1643){
var _1644=_1643("com.ibm.vis.engine.internal.util.Version",null,{major:0,minor:0,micro:0,constructor:function(major,minor,micro){
this.major=major;
this.minor=minor;
this.micro=micro;
},getMajor:function(){
return this.major;
},getMinor:function(){
return this.minor;
},getMicro:function(){
return this.micro;
},compareTo:function(other){
if(other==this){
return 0;
}
var _1645=this.major-other.major;
if(_1645!=0){
return _1645;
}
_1645=this.minor-other.minor;
if(_1645!=0){
return _1645;
}
_1645=this.micro-other.micro;
return _1645;
},toString:function(){
return this.major+"."+this.minor+(this.micro==0?"":"."+this.micro);
},hashCode:function(){
var prime=31;
var _1646=1;
_1646=prime*_1646+this.major;
_1646=prime*_1646+this.micro;
_1646=prime*_1646+this.minor;
return _1646;
},equals:function(obj){
if(this==obj){
return true;
}
if(obj==null){
return false;
}
if(!(obj instanceof _1644)){
return false;
}
var other=obj;
if(this.major!=other.major){
return false;
}
if(this.micro!=other.micro){
return false;
}
if(this.minor!=other.minor){
return false;
}
return true;
}});
_1644.parseVersion=function(_1647){
var major=0;
var minor=0;
var micro=0;
if(_1647!=null&&_1647.CPVisEngineLength()>0){
var parts=_1644.split(_1647,".");
major=_163e.m.parseInt(parts[0],10);
if(parts.length>1){
minor=_163e.m.parseInt(parts[1],10);
}else{
minor=0;
}
if(parts.length>2){
micro=_163e.m.parseInt(parts[2],10);
}else{
micro=0;
}
if(parts.length>3){
throw new _163f.m("Invalid version format: "+_1647);
}
}
return new _1644(major,minor,micro);
};
_1644.split=function(_1648,_1649){
var _164a=new _1640.m();
var len=_1648.CPVisEngineLength();
var sb=new _1641.m();
for(var i=0;i<len;++i){
var c=_1648.charAt(i);
if(c==_1649){
_164a.add(sb.toString());
sb=new _1641.m();
continue;
}
sb.append(c);
}
_164a.add(sb.toString());
return _164a.toArray(new Array(_164a.size()));
};
return _1644;
});
},"com/ibm/vis/engine/internal/interaction/effect/FadeOutEffect":function(){
define("com/ibm/vis/engine/internal/interaction/effect/FadeOutEffect",["./Effect","com/ibm/init/statics","dojo/_base/declare"],function(_164b,_164c,_164d){
var _164e=_164d("com.ibm.vis.engine.internal.interaction.effect.FadeOutEffect",[_164b],{constructor:function(time,_164f){
this.setTarget(_164f);
},install:function(_1650){
this.inherited(arguments,[_1650]);
for(var _1651=0,_1652=this.targetIDs,_1653=_1652.size();_1651<_1653;++_1651){
var id=_1652.get(_1651);
var item=this.items.get(id);
var _1654=this.makeFadingKeyFrames(item,0,1,1,0);
_1650.addAnimatedStyle(id,_1654);
}
}});
return _164e;
});
},"com/ibm/vis/interaction/HighlightState":function(){
define("com/ibm/vis/interaction/HighlightState",["com/ibm/init/statics","dojo/_base/declare"],function(_1655,_1656){
var _1657=_1656("com.ibm.vis.interaction.HighlightState",null,{setSingle:function(item,state){
},setMultiple:function(items,state){
},apply:function(){
}});
return _1657;
});
},"com/ibm/vis/engine/internal/legend/NewLegend":function(){
define("com/ibm/vis/engine/internal/legend/NewLegend",["../ContentFrame","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../nativeImpl/Map","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!./DefaultLegendFactory","com/ibm/init/fork!../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!../Vis","com/ibm/init/fork!../nativeImpl/SpecUtil","com/ibm/init/fork!../Grammar","com/ibm/init/fork!../struct/Insets","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!../../../exceptions/SpecException","com/ibm/init/fork!../../../exceptions/ErrorCode","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../util/SceneIdUtil","com/ibm/init/statics","dojo/_base/declare"],function(_1658,_1659,_165a,_165b,_165c,_165d,_165e,_165f,_1660,_1661,_1662,_1663,_1664,_1665,_1666,_1667,_1668){
var _1669=_1668("com.ibm.vis.engine.internal.legend.NewLegend",[_1658],{preferredSize:null,legendSpec:null,defaultAesthetic:null,defaultSize:null,vis:null,verticalOrientation:false,mirroredLabels:false,legendVis:null,isConsistent:false,titleStyle:null,boundsPadding:null,titlePadding:null,originalBoundsStyle:null,aestheticMap:null,legendIndex:0,theScene:null,tickCount:0,yDimension:null,xDimension:null,constructor:function(){
this.originalBoundsStyle=new Object();
this.__constructor_com_ibm_vis_engine_internal_legend_NewLegend.apply(this,arguments);
},getContentPreferredSize:function(){
if(this.preferredSize==null){
this.preferredSize=this.computePreferedSize();
this.preferredSize.height=Math.ceil(this.preferredSize.height);
this.preferredSize.width=Math.ceil(this.preferredSize.width);
}
return this.preferredSize;
},computePreferedSize:function(){
},__constructor_com_ibm_vis_engine_internal_legend_NewLegend:function(_166a,_166b,_166c,vis){
this.legendSpec=_166a;
this.style=_166a.boundsStyle;
this.initAesthetics(_166b);
this.defaultSize=_166c;
this.vis=vis;
this.verticalOrientation=this.isOrientationVertical();
this.mirroredLabels=this.areLabelsMirrored();
if((_166a!=null)&&(_166a.boundsStyle!=null)){
this.cloneLegendStylePaddingAndStroke(_166a.boundsStyle,this.originalBoundsStyle);
}
this.initTitleStyle();
},getSize:function(){
var _166d=this.getBounds();
if(_166d!=null){
_166d=this.getContentBounds();
}
if(_166d==null){
return new _1659.m(this.defaultSize.width,this.defaultSize.height);
}else{
if(!_166d.hasExtent()){
return new _1659.m(0,0);
}else{
return new _1659.m(_166d.width,_166d.height);
}
}
},initAesthetics:function(_166e){
this.aestheticMap=new _165a.m();
for(var _166f=0,_1670=_166e.length;_166f<_1670;++_166f){
var a=_166e[_166f];
if(a==null){
continue;
}
var _1671=this.aestheticMap.get(a.type);
if(_1671==null){
_1671=new _165b.m();
this.aestheticMap.put(a.type,_1671);
}
_1671.add(a);
if(this.defaultAesthetic==null){
this.defaultAesthetic=a;
}
}
},getDefaultAesthetic:function(){
return this.defaultAesthetic;
},getLegendIndex:function(){
return this.legendIndex;
},setLegendIndex:function(_1672){
this.legendIndex=_1672;
},getAestheticsByType:function(_1673){
return this.aestheticMap.get(_1673);
},getAllAesthetics:function(){
var _1674=new _165b.m();
for(var _1675=0,_1676=this.aestheticMap.values(),_1677=_1676.size();_1675<_1677;++_1675){
var a=_1676.get(_1675);
_1674.addAll(a);
}
return _1674;
},getScene:function(){
if(this.theScene==null){
this.theScene=this.makeScene(this.getSize());
}else{
if(!this.getSize().equals(this.preferredSize)){
this.theScene=this.makeScene(this.getSize());
}
}
return this.theScene;
},makeScene:function(_1678){
var _1679=this.getDefaultAesthetic();
if(_1679==null){
return null;
}
this.cloneLegendStylePaddingAndStroke(this.originalBoundsStyle,this.legendSpec.boundsStyle);
var value=_1679.valueProvider;
this.legendVis=new _165e.m(null);
this.legendVis.legendVis=true;
this.legendVis.copyVisContextSettings(this.vis.visContext);
var _167a=this.getAvailableDim().height;
var _167b=this.getAvailableDim().width;
this.boundsPadding=this.createPadding(this.legendSpec.boundsStyle,0,this.legendSpec.boundsStyle,new _1659.m(_167b,_167a));
_167b-=this.boundsPadding.getHorizontal();
_167a-=this.boundsPadding.getVertical();
var spec=new Object();
this.legendVis.currentSpec=spec;
var _167c=new Object();
var _167d=30;
var _167e=this.getDefaultPadding();
this.initForSceneCreation();
this.updateBoundsForCreatingDimension(_167e,0,_167c,_167d);
var _167f=new Object();
this.yDimension=this.makeYDimension(value.getCategories(),_167c);
this.xDimension=this.makeXDimension();
_167f.dimensions=[this.yDimension,this.xDimension];
var _1680=this.makeTransforms();
if(_1680!=null&&_1680.length>0){
_167f.transforms=_1680;
}
var _1681=this.getSymbolSize(_1679,Math.min(_167a,_167b),this.yDimension.scale);
this.computeGrammarBounds(_167c,_1681.height,_167e,0,_167d);
var _1682=this.makeData(value.getBaseField(),this.legendVis,_1681,_167b,this.yDimension.scale);
this.legendVis.data=[_1682];
if(!value.isCategorical()&&this.shouldPadScale()){
this.yDimension.scale.padding=_1681.height/2+3;
}
var _1683=new Object();
this.makePositions(_1683);
this.setElementAestheticSpec(_1683);
_1683.style=this.makeElementStyle(_1681,new _1659.m(_167b,_167a),this.yDimension.scale);
if(this.usesElementLabel()){
var _1684=this.makeElementLabelStyle(5);
_1683.label=[_1684];
}
var _1685=new Object();
if(this.usesElementSpec()){
_1685.elements=[_1683];
}
_1685.coordinates=_167f;
var _1686=this.makeGrammarStyle(5);
_1685.style=_1686;
this.setFacetSpec(_1685,_1686);
var _1687=_165f.m.toJSONObject(_1685);
var _1688=new _1660.m(_167c,_1686,this.legendVis,_1687,_1685,0);
if(this.usesAesthetic()){
_1688.elements[0].setAesthetics([_1679]);
}
this.legendVis.grammar=[_1688];
this.legendVis.currentSpec.grammar=[_1685];
this.legendVis.setSpec(_165f.m.toJSONObject(this.legendVis.currentSpec));
var scene=this.legendVis.makeSceneTree(_1678);
this.postProcessScene(scene);
this.modifyLegendScene(scene,_1682.rows,value.getBaseField(),this.yDimension);
return scene;
},postProcessScene:function(scene){
},getAesthetic:function(){
return this.defaultAesthetic;
},initForSceneCreation:function(){
},makeTransforms:function(){
},makePositions:function(_1689){
},getSymbolSize:function(_168a,max,_168b){
},setFacetSpec:function(_168c,_168d){
},shouldPadScale:function(){
},usesAesthetic:function(){
},usesElementLabel:function(){
},usesElementSpec:function(){
},computeGrammarBounds:function(_168e,_168f,_1690,_1691,_1692){
},makeGrammarStyle:function(_1693){
},makeElementStyle:function(_1694,_1695,_1696){
},setElementAestheticSpec:function(_1697){
},buildYAxisSpec:function(){
},makeData:function(_1698,_1699,_169a,_169b,_169c){
},createPadding:function(style,_169d,_169e,_169f){
var _16a0;
if(style!=null&&style.padding!=null){
_16a0=_1661.m.makeForStylePadding(style.padding,_169f,this.getSize());
}else{
_16a0=new _1661.m(_169d,_169d,_169d,_169d);
}
if(style==null){
return _16a0;
}
var _16a1;
if(_169e!=null&&_169e.stroke!=null&&_169e.stroke.width!=null){
var _16a2=_1662.m.convertLength(_169e.stroke.width,this.getSize().width,this.getSize().width);
if(_169e.outlineMethod==null){
_16a2=_16a2/2;
}else{
if("inside".CPVisEngineEquals(_169e.outlineMethod)){
_16a2=0;
}
}
_16a1=new _1661.m(_16a2,_16a2,_16a2,_16a2);
}else{
_16a1=new _1661.m(0,0,0,0);
}
return _1661.m.combine(_16a0,_16a1);
},getAvailableDim:function(){
return new _1659.m(this.getSize().width,this.getSize().height);
},getValidTickValues:function(){
var _16a3=new _165b.m();
var _16a4=this.getDefaultAesthetic();
var _16a5=_16a4.valueProvider.getCategories();
if(_16a5!=null&&this.legendSpec.scale!=null&&this.legendSpec.scale.spans!=null&&this.legendSpec.scale.spans[0].categories!=null){
var list=new _165b.m(this.legendSpec.scale.spans[0].categories.length);
for(var _16a6=0,_16a7=this.legendSpec.scale.spans[0].categories,_16a8=_16a7.length;_16a6<_16a8;++_16a6){
var _16a9=_16a7[_16a6];
list.add(_16a9);
}
for(var _16aa=0,_16ab=_16a4.scale.getAllTicks(),_16ac=_16ab.size();_16aa<_16ac;++_16aa){
var tick=_16ab.get(_16aa);
if(list.contains(tick.value)){
_16a3.add(tick.value);
}
}
}else{
if(_16a5!=null&&this.isScaleLocal()){
for(var i=0;i<_16a5.length;++i){
_16a3.add(i);
}
}else{
if(this.isScaleLocal()){
for(var _16ad=0,_16ae=_16a4.scale.getAllTicks(),_16af=_16ae.size();_16ad<_16af;++_16ad){
var tick=_16ae.get(_16ad);
_16a3.add(tick.value);
}
}else{
for(var _16b0=0,_16b1=_16a4.scale.getTicksForData(),_16b2=_16b1.size();_16b0<_16b2;++_16b0){
var tick=_16b1.get(_16b0);
_16a3.add(tick.value);
}
}
}
}
return _16a3;
},isScaleLocal:function(){
return (this.legendSpec.scale!=null&&this.legendSpec.scale.local!=null&&!this.legendSpec.scale.local);
},makeXDimension:function(){
},makeTransposeTransform:function(){
var _16b3=new Object();
_16b3.type="transpose";
return _16b3;
},makeYDimension:function(_16b4,_16b5){
var _16b6=new Object();
var _16b7=this.legendSpec.scale==null?new Object():this.legendSpec.scale;
var _16b8=this.getDefaultAesthetic();
if(_16b7.reverse==null&&_16b8.scale!=null){
_16b7.reverse=_16b8.scale.reverse;
}
if(_16b7.local==null){
_16b7.local=true;
}
var _16b9=null;
if(_16b7.spans!=null&&_16b7.spans.length>=1){
_16b9=_16b7.spans[0];
}
if(_16b4==null){
this.tickCount=this.getValidTickValues().size();
do{
_16b7.spans=this.buildSpansForContinuousYDimension(_16b9,_16b5,this.tickCount);
if(this.reduceTickCount()){
this.tickCount=Math.ceil(this.tickCount/2);
}
}while(this.tickCount>1&&this.reduceTickCount());
var _16ba=this.buildYAxisSpec();
_1669.setPreferredSizeIfAbsent(_16ba);
if(_16ba!=null){
_16b6.axis=new Array(1);
_16b6.axis[0]=_16ba;
}
}else{
if(this.isStackedChart(_16b8.element.grammar.coordinates.transforms)){
_16b7.reverse=true;
_16b7.local=true;
}else{
throw new _1663.m(null,_1664.m.SPEC_INVALID_VALUE,"Legend method:axis is not supported for categorical scale.",null,null,null,null);
}
}
_16b6.scale=_16b7;
return _16b6;
},getDefaultPadding:function(){
return (this.legendSpec.itemStyle!=null&&this.legendSpec.itemStyle.padding!=null)?0:5;
},updateBoundsForCreatingDimension:function(_16bb,_16bc,_16bd,_16be){
},makeElementLabelStyle:function(_16bf){
var _16c0=new Object();
var _16c1=new Object();
_16c1.$ref="yForLegend";
_16c0.content=[_16c1];
var _16c2=this.legendSpec.labelStyle==null?(this.legendSpec.tickStyle==null?new Object():this.legendSpec.tickStyle):this.legendSpec.labelStyle;
_16c2.align="end";
if(_16c2.padding==null){
_16c2.padding=_16bf;
}
_16c0.style=_16c2;
return _16c0;
},initTitleStyle:function(){
if(this.legendSpec!=null){
this.titleStyle=this.legendSpec.titleStyle==null?new Object():this.legendSpec.titleStyle;
this.titleStyle.location="inside";
if(this.titleStyle.font==null){
var font=new Object();
font.weight="bold";
font.size="12";
this.titleStyle.font=font;
}
if(this.titleStyle.padding==null){
var _16c3=new Object();
_16c3.top=5;
_16c3.left=5;
this.titleStyle.padding=_16c3;
}
}
},cloneLegendStylePaddingAndStroke:function(_16c4,dest){
if(_16c4==null){
dest=null;
return;
}else{
if(dest==null){
dest=new Object();
}
}
if(_16c4.padding!=null){
if(_16c4.padding instanceof Object){
var _16c5=_16c4.padding;
var _16c6=new Object();
_16c6.bottom=_16c5.bottom;
_16c6.left=_16c5.left;
_16c6.right=_16c5.right;
_16c6.top=_16c5.top;
dest.padding=_16c6;
}else{
dest.padding=_16c4.padding;
}
}else{
dest.padding=null;
}
if(_16c4.stroke!=null){
var _16c6=new Object();
_16c6.cap=_16c4.stroke.cap;
_16c6.join=_16c4.stroke.join;
_16c6.style=_16c4.stroke.style;
_16c6.width=_16c4.stroke.width;
dest.stroke=_16c6;
}else{
dest.stroke=null;
}
},isOrientationVertical:function(){
if("horizontal".CPVisEngineEquals(this.legendSpec.orientation)){
return false;
}
return true;
},areLabelsMirrored:function(){
if(this.legendSpec.mirroredLabels!=null&&this.legendSpec.mirroredLabels){
return true;
}
return false;
},isStackedChart:function(_16c7){
var _16c8=false;
for(var _16c9=0,_16ca=_16c7.length;_16c9<_16ca;++_16c9){
var _16cb=_16c7[_16c9];
if(_16cb.isStacking()){
_16c8=true;
}else{
if(_16cb.isPolar()){
return false;
}
}
}
return _16c8;
},modifyLegendScene:function(_16cc,_16cd,_16ce,_16cf){
for(var i=0;i<_16cc.length;++i){
var obj=_16cc[i];
var id=_1665.m.getItem(obj,"id");
if(_1666.m.isBackId(id)||_1666.m.isCoordsId(id)){
_1665.m.removeFromArray(_16cc,obj);
i--;
}else{
this.processSceneItem(obj,_16cd,_16ce,_16cf);
var _16d0=_1665.m.getItem(obj,"children");
if(_16d0!=null){
this.modifyLegendScene(_16d0,_16cd,_16ce,_16cf);
}
}
}
},processSceneItem:function(obj,_16d1,_16d2,_16d3){
var id=_1665.m.getItem(obj,"id");
if(id!=null&&id.indexOf("G")>-1&&id.indexOf("Out")>-1){
var outId="L"+this.getLegendIndex()+"-back";
_1665.m.put(obj,"id",outId);
_1665.m.remove(obj,"elementType");
_1665.m.remove(obj,"type");
_1665.m.remove(obj,"key");
_1665.m.remove(obj,"rows");
}
var type=_1665.m.getItem(obj,"type");
if("element".CPVisEngineEquals(type)){
_1665.m.put(obj,"type","legend");
_1665.m.remove(obj,"baseline");
}else{
if("axis".CPVisEngineEquals(type)){
_1665.m.put(obj,"type","legend");
}else{
if("axis-mark".CPVisEngineEquals(type)||"axis-label".CPVisEngineEquals(type)){
_1665.m.put(obj,"type","legendContent");
}
}
}
},createContent:function(){
if(!this.getBounds().hasExtent()){
return _1665.m.createJSONArray();
}
return this.getScene();
},getContentMinimumSize:function(){
return new _1659.m(0,0);
},getContentMaximumSize:function(){
return new _1659.m(Infinity,Infinity);
},reduceTickCount:function(){
},buildSpansForContinuousYDimension:function(_16d4,_16d5,_16d6){
},getTickCount:function(){
return this.tickCount;
}});
_1669.makeLegend=function(vis,spec,_16d7,_16d8){
_165c.m.registerExtensions();
var _16d9=new Array(4);
_16d9[0]=spec;
_16d9[1]=vis;
_16d9[2]=_16d8;
_16d9[3]=_16d7.toArray(new Array(0));
var _16da=_165d.m.INSTANCE.newInstance("defaultLegend",_16d9);
return _16da;
};
_1669.setPreferredSizeIfAbsent=function(_16db){
if(_16db==null){
return;
}
var _16dc=_16db.preferredSize;
if(_16dc==null){
_16dc=new Object();
_16db.preferredSize=_16dc;
_16dc.preferred=_1669.HUNDRED_PERCENT;
_16dc.min=_1669.HUNDRED_PERCENT;
_16dc.max=_1669.HUNDRED_PERCENT;
}
};
_1667.add("com/ibm/vis/engine/internal/legend/NewLegend",["com/ibm/vis/engine/internal/ContentFrame","com/ibm/vis/engine/internal/legend/DefaultLegendFactory"],function(){
_1669.STAGGER_LEGEND="stagger";
_1669.CONTINUOUS_LEGEND="continuous";
_1669.AXIS_LEGEND="axis";
_1669.LINEAR_FILL="linear";
_1669.LOG_FILL="log";
_1669.HORIZONTAL_ORIENTATION="horizontal";
_1669.X_Field="xForLegend";
_1669.Y_Field="yForLegend";
_1669.DEFAULT_PADDING=5;
_1669.SINGLE_SYMBOL_PADDING_NOT_CATEGORICAL=3;
_1669.HUNDRED_PERCENT="100%";
});
return _1669;
});
},"com/ibm/vis/internal/json/SchemaValidation":function(){
define("com/ibm/vis/internal/json/SchemaValidation",["com/ibm/init/fork!../../engine/internal/nativeImpl/Map","com/ibm/init/fork!../../engine/internal/nativeImpl/BasicFactory","com/ibm/init/fork!../../engine/internal/nativeImpl/StringBuilder","com/ibm/init/fork!../../engine/internal/nativeImpl/WebEngineException","com/ibm/init/fork!./Diagnostic","com/ibm/init/statics","dojo/_base/declare"],function(_16dd,_16de,_16df,_16e0,_16e1,_16e2,_16e3){
var _16e4=_16e3("com.ibm.vis.internal.json.SchemaValidation",null,{references:null,schema:null,constructor:function(){
this.references=new _16dd.m();
this.__constructor_com_ibm_vis_internal_json_SchemaValidation.apply(this,arguments);
},__constructor_com_ibm_vis_internal_json_SchemaValidation:function(_16e5){
this.schema=_16e5;
this.referenceSearch(_16e5,false);
},resolve:function(ref){
return this.references.get(ref);
},referenceSearch:function(json,_16e6){
if(_16de.m.isObject(json)){
if(_16e6){
for(var _16e7=0,_16e8=_16de.m.keySet(json),_16e9=_16e8.length;_16e7<_16e9;++_16e7){
var key=_16e8[_16e7];
this.referenceSearch(_16de.m.getItem(json,key),false);
}
}else{
if(_16de.m.containsKey(json,"id")){
this.references.put(_16de.m.getItem(json,"id"),json);
}
for(var _16ea=0,_16eb=_16de.m.keySet(json),_16ec=_16eb.length;_16ea<_16ec;++_16ea){
var key=_16eb[_16ea];
this.referenceSearch(_16de.m.getItem(json,key),"properties".CPVisEngineEquals(key));
}
}
}else{
if(_16de.m.isArray(json)){
var size=json.length;
for(var i=0;i<size;++i){
this.referenceSearch(json[i],false);
}
}
}
},validate:function(json){
var _16ed=_16e4.ok();
this.checkProperties(_16ed,this.schema,json,null,null,true);
return _16ed;
},checkProperties:function(_16ee,_16ef,value,_16f0,_16f1,_16f2){
var path=_16e4.createDebugPath(_16f0,_16f1);
var _16f3=_16ef;
if(_16de.m.containsKey(_16f3,"$ref")){
_16f3=this.resolve(_16de.m.getItem(_16f3,"$ref"));
}
this.checkType(_16ee,_16de.m.getItem(_16f3,"type"),value,path,_16f2);
if(value!=null){
if(_16de.m.isArray(value)){
if(_16de.m.containsKey(_16f3,"items")){
var items=_16de.m.getItem(_16f3,"items");
var size=value.length;
if(_16de.m.isArray(items)){
for(var i=0;i<size;++i){
this.checkProperties(_16ee,items[i],value[i],path,i,true);
}
}else{
for(var i=0;i<size;++i){
this.checkProperties(_16ee,items,value[i],path,i,false);
}
}
}
var size=value.length;
if(_16de.m.containsKey(_16f3,"minItems")&&size<(_16de.m.getItem(_16f3,"minItems"))){
_16ee.add(_16e4.error(path,"'"+size+"' is less than the minimum array size "+(_16de.m.getItem(_16f3,"minItems"))+"."));
}
if(_16de.m.containsKey(_16f3,"maxItems")&&size>(_16de.m.getItem(_16f3,"maxItems"))){
_16ee.add(_16e4.error(path,"'"+size+"' is greater than the maximum array size "+(_16de.m.getItem(_16f3,"maxItems"))+"."));
}
}else{
if(_16de.m.containsKey(_16f3,"properties")){
this.checkObject(_16ee,_16de.m.getItem(_16f3,"properties"),value,_16de.m.getItem(_16f3,_16e4.ADDITIONAL_PROPERTIES),path);
}
}
if(_16de.m.containsKey(_16f3,"minimum")&&_16de.m.isNumber(value)&&(_16de.m.getItem(_16f3,"minimum"))>(value)){
_16ee.add(_16e4.error(path,"'"+(value)+"' is less than the minimum value of "+(_16de.m.getItem(_16f3,"minimum"))+"."));
}
if(_16de.m.containsKey(_16f3,"maximum")&&_16de.m.isNumber(value)&&(_16de.m.getItem(_16f3,"maximum"))<(value)){
_16ee.add(_16e4.error(path,"'"+(value)+"' is greater than the maximum value of "+(_16de.m.getItem(_16f3,"maximum"))+"."));
}
if(_16de.m.containsKey(_16f3,"enum")){
var _16f4=_16de.m.getItem(_16f3,"enum");
var size=_16f4.length;
var found=false;
var enums=new _16df.m();
for(var i=0;i<size;++i){
var _16f5=_16f4[i];
if((_16f5==value)||((_16f5!=null&&(_16de.m.isString(_16f5)&&_16de.m.isString(value)&&(_16f5).CPVisEngineEquals(value)))||(_16de.m.isBoolean(_16f5)&&_16de.m.isBoolean(value)&&(_16f5)==(value))||(_16de.m.isNumber(_16f5)&&_16de.m.isNumber(value)&&(_16f5)==(value)))){
found=true;
break;
}
if(enums.length()>0){
enums.append(", ");
}
enums.append("'");
enums.append(_16f5);
enums.append("'");
}
if(!found){
_16ee.add(_16e4.error(path,"Value of '"+value.toString()+"' does not exist in the enumeration "+enums.toString()+"."));
}
}
}
},checkType:function(_16f6,type,value,path,_16f7){
if(type!=null){
if(_16de.m.isString(type)){
var _16f8=false;
if(!"any".CPVisEngineEquals(type)){
if("null".CPVisEngineEquals(type)){
_16f8=(value!=null);
}else{
if(value==null){
_16f8=_16f7;
}else{
if("array".CPVisEngineEquals(type)){
_16f8=!_16de.m.isArray(value);
}else{
if("integer".CPVisEngineEquals(type)){
if(!_16de.m.isNumber(value)||(value)%1!=0){
_16f8=true;
}
}else{
if("number".CPVisEngineEquals(type)){
_16f8=!_16de.m.isNumber(value);
}else{
if(!_16e4.getType(value).CPVisEngineEquals(type)){
_16f8=true;
}
}
}
}
}
}
}
if(_16f8){
_16f6.add(_16e4.error(path,"Value of type '"+_16e4.getType(value)+"' found, but '"+type+"' is required."));
}
}
if(_16de.m.isArray(type)){
var _16f9=null;
var size=type.length;
var types=new _16df.m();
for(var j=0;j<size;++j){
_16f9=_16e4.ok();
var _16fa=type[j];
this.checkType(_16f9,_16fa,value,path,_16f7);
if(_16f9.isOK()){
break;
}
if(types.length()>0){
types.append(", ");
}
types.append("'");
types.append(_16fa);
types.append("'");
}
if(_16f9!=null&&!_16f9.isOK()){
_16f6.add(_16e4.error(path,"Value '"+value+"' of type '"+_16e4.getType(value)+"' found, but one of "+types.toString()+" is required."));
}
}else{
if(_16de.m.isObject(type)){
this.checkProperties(_16f6,type,value,path,null,_16f7);
}
}
}
},checkObject:function(_16fb,_16fc,_16fd,_16fe,path){
if(_16de.m.isObject(_16fc)){
if(!_16de.m.isObject(_16fd)){
_16fb.add(_16e4.error(path,"An object is required."));
}
var _16ff=_16de.m.keySet(_16fc);
for(var _1700=0,_1701=_16ff.length;_1700<_1701;++_1700){
var key=_16ff[_1700];
var _1702=_16de.m.getItem(_16fc,key);
var _1703=_16e4.isTrue(_1702,"required");
if(_16de.m.containsKey(_16fd,key)){
var value=_16de.m.getItem(_16fd,key);
this.checkProperties(_16fb,_1702,value,path,key,_1703);
}else{
if(_1703){
_16fb.add(_16e4.error(path,"Missing required value '"+key+"'."));
}
}
}
}
if(_16de.m.isObject(_16fd)){
var _1704=_16de.m.keySet(_16fd);
for(var _1705=0,_1706=_1704.length;_1705<_1706;++_1705){
var key=_1704[_1705];
if(_16fc!=null&&!_16de.m.containsKey(_16fc,key)){
if(_16de.m.isBoolean(_16fe)&&!(_16fe)){
_16fb.add(_16e4.error(path,"The property "+key+" is not defined in the schema and the schema does not allow additional properties."));
}else{
_16fb.add(_16e4.warning(path,"The property '"+key+"' is not defined in the schema."));
}
}
}
}
}});
_16e4.createDebugPath=function(_1707,_1708){
var path=null;
if(_1707==null){
if(_1708==null){
path="";
}else{
path=_1708.toString();
}
}else{
if(_16de.m.isNumber(_1708)){
path=_1707+"["+(_1708)+"]";
}else{
if(_16de.m.isString(_1708)){
path=_1707;
if(!_1707.CPVisEngineIsEmpty()){
path+=".";
}
path+=_1708.toString();
}else{
path="";
}
}
}
return path;
};
_16e4.getType=function(value){
if(value==null){
return "null";
}
if(_16de.m.isString(value)){
return "string";
}
if(_16de.m.isBoolean(value)){
return "boolean";
}
if(_16de.m.isNumber(value)){
return "number";
}
if(_16de.m.isArray(value)){
return "array";
}
if(_16de.m.isObject(value)){
return "object";
}
throw new _16e0.m("Unexpected type for value '"+value+"'.");
};
_16e4.isTrue=function(json,_1709){
if(_16de.m.containsKey(json,_1709)){
var value=_16de.m.getItem(json,_1709);
if(_16de.m.isBoolean(value)){
return (value);
}
}
return false;
};
_16e4.ok=function(){
return new _16e1.m(0,null,null);
};
_16e4.error=function(path,_170a){
return new _16e1.m(2,_170a,path);
};
_16e4.warning=function(path,_170b){
return new _16e1.m(1,_170b,path);
};
_16e2.add("com/ibm/vis/internal/json/SchemaValidation",["com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/nativeImpl/WebEngineException","com/ibm/vis/internal/json/Diagnostic"],function(){
_16e4.T_ANY="any";
_16e4.T_NULL="null";
_16e4.T_INTEGER="integer";
_16e4.T_NUMBER="number";
_16e4.T_BOOLEAN="boolean";
_16e4.T_OBJECT="object";
_16e4.T_ARRAY="array";
_16e4.T_STRING="string";
_16e4.REF="$ref";
_16e4.ID="id";
_16e4.ITEMS="items";
_16e4.PROPERTIES="properties";
_16e4.TYPE="type";
_16e4.REQUIRED="required";
_16e4.MINIMUM="minimum";
_16e4.MAXIMUM="maximum";
_16e4.MIN_ITEMS="minItems";
_16e4.MAX_ITEMS="maxItems";
_16e4.ENUM="enum";
_16e4.ADDITIONAL_PROPERTIES="additionalProperties";
});
return _16e4;
});
},"com/ibm/vis/engine/internal/struct/Wedge":function(){
define("com/ibm/vis/engine/internal/struct/Wedge",["./Shape","com/ibm/init/fork!../nativeImpl/WebEngineException","com/ibm/init/fork!./Point","com/ibm/init/fork!./Circle","com/ibm/init/fork!../data/Range","com/ibm/init/fork!./Rect","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!./ShapeFactory","com/ibm/init/fork!../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_170c,_170d,_170e,_170f,_1710,_1711,_1712,_1713,_1714,_1715,_1716){
var Wedge=_1716("com.ibm.vis.engine.internal.struct.Wedge",[_170c],{x:0,y:0,r1:0,r2:0,a1:0,a2:0,bounds:null,d:0,constructor:function(cx,cy,_1717,_1718,_1719,_171a){
this.x=cx;
this.y=cy;
this.r1=Math.max(0,_1717);
this.r2=Math.max(0,_1718);
var _171b=_171a-_1719;
if(_171b<-2*3.141592653589793){
_171b=-2*3.141592653589793;
}else{
if(_171b>=2*3.141592653589793){
_171b=2*3.141592653589793;
}
}
_1719=_1719%(2*3.141592653589793);
if(_1719<0){
_1719+=2*3.141592653589793;
}
this.a1=_1719;
this.a2=this.a1+_171b;
this.bounds=null;
this.d=0;
},isCircle:function(){
return Math.abs(this.a2-this.a1)>=2*3.141592653589793-0.000001;
},getType:function(){
return "wedge";
},asBasic:function(){
throw new _170d.m("This method will need writing as part of Shape refactoring");
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("wedge".CPVisEngineEquals(type)){
return true;
}
return false;
},applyPointTransform:function(t){
var p=t.transform(this.x,this.y);
var q=t.transform(this.x+this.r1,this.y+this.r2);
this.x=p.x;
this.y=p.y;
this.r1=q.x-p.x;
this.r2=q.y-p.y;
return null;
},affine:function(xx,dx,yy,dy,_171c){
var p=new _170e.m(this.x,this.y);
p.affine(xx,dx,yy,dy);
this.x=p.x;
this.y=p.y;
this.r1*=Math.min(xx,yy);
this.r2*=Math.min(xx,yy);
this.bounds=null;
},getScalingAnchor:function(){
return new _170e.m(this.x,this.y);
},makeGeometryClone:function(){
return new Wedge(this.x,this.y,this.r1,this.r2,this.a1,this.a2);
},getOuterPoint:function(){
var _171d=(this.a1+this.a2)/2;
return new _170e.m(this.x+this.r2*Math.cos(_171d),this.y+this.r2*Math.sin(_171d));
},contains:function(px,py){
var _171e=(px-this.x)*(px-this.x)+(py-this.y)*(py-this.y);
if(_171e<this.r1*this.r1||_171e>this.r2*this.r2){
return false;
}
if(_171e==0){
return true;
}
if(this.isCircle()){
return true;
}
return Wedge.angleIsWithin(Math.atan2(py-this.y,px-this.x),this.a1,this.a2);
},getLabelShape:function(align,_171f,_1720){
var _1721=null;
if("inside".CPVisEngineEquals(_1720)){
var _1722=this.getRCenter();
var p=this.getCenter();
_1721=new _170f.m(p.x,p.y,(this.r2-_1722));
}else{
if("outside".CPVisEngineEquals(_1720)){
if("start".CPVisEngineEquals(_171f)){
_1721=new _170f.m(this.x+this.r1*Math.cos((this.a1+this.a2)/2),this.y+this.r1*Math.sin((this.a1+this.a2)/2),1);
}else{
if("end".CPVisEngineEquals(_171f)){
_1721=new _170f.m(this.x+this.r2*Math.cos((this.a1+this.a2)/2),this.y+this.r2*Math.sin((this.a1+this.a2)/2),1);
}else{
return this;
}
}
}else{
if("callout".CPVisEngineEquals(_1720)){
var r=1;
var d=0;
if("start".CPVisEngineEquals(_171f)){
d+=r;
}else{
if("end".CPVisEngineEquals(_171f)){
d-=r;
}
}
_1721=new _170f.m(this.x+(this.r2+(this.r2/2))*Math.cos((this.a1+this.a2)/2),this.y+(this.r2+(this.r2/2))*Math.sin((this.a1+this.a2)/2)+d,r);
}
}
}
if(_1721!=null){
_1721.setGlyphLike();
}
return _1721;
},getTangentAngle:function(align,_1723){
return (this.a1+this.a2)/2+3.141592653589793/2;
},getBounds:function(){
if(this.bounds==null){
this.bounds=Wedge.computeBounds(this.x,this.y,this.r1,this.r2,this.a1,this.a2);
}
return this.bounds;
},getCenter:function(){
if(this.isCircle()){
return new _170e.m(this.x,this.y);
}
var _1724=this.getRCenter();
var _1725=(this.a1+this.a2)/2;
return new _170e.m(this.x+_1724*Math.cos(_1725),this.y+_1724*Math.sin(_1725));
},getRCenter:function(){
return (2*this.r1+3*this.r2)/5;
},isFilled:function(){
return true;
},reflect:function(size,_1726){
},setShapeParameters:function(o){
_1712.m.put(o,"type","path");
if(this.d>0){
_1712.m.put(o,"path",_1713.m.makeInsetToroidSectionPath(this.x,this.y,this.r1,this.r2,this.a1,this.a2,this.d));
}else{
_1712.m.put(o,"path",_1713.m.makeToroidSectionPath(this.x,this.y,this.r1,this.r2,this.a1,this.a2));
}
var c=this.getCenter();
if(this.snap){
c=new _170e.m(c.x,c.y);
c.snapPosition();
}
_1712.m.put(o,"cx",_1714.m.r3(c.x));
_1712.m.put(o,"cy",_1714.m.r3(c.y));
this.getBounds().setShapeParameters(o);
},setShapeParametersWithInset:function(o,inset){
this.insetForBorder(inset);
this.setShapeParameters(o);
this.insetForBorder(-inset);
},insetForBorder:function(inset){
this.d+=inset;
},transpose:function(_1727){
}});
Wedge.angleIsWithin=function(a,a1,a2){
if(a<0){
a+=2*3.141592653589793;
}
if(a1<a2){
if(a<a1){
a+=2*3.141592653589793;
}
return a<=a2;
}
if(a>a1){
a-=2*3.141592653589793;
}
return a2<=a&&a<=a1;
};
Wedge.computeBounds=function(x,y,r1,r2,a1,a2){
var rx=_1710.m.EMPTY;
var ry=_1710.m.EMPTY;
for(var i=0;i<=4;++i){
var a=a1+(a2-a1)*i/4;
rx=rx.unionValue(r1*Math.cos(a));
rx=rx.unionValue(r2*Math.cos(a));
ry=ry.unionValue(r1*Math.sin(a));
ry=ry.unionValue(r2*Math.sin(a));
}
if(Wedge.angleIsWithin(0,a1,a2)){
rx=rx.unionValue(r2);
}
if(Wedge.angleIsWithin(0.5*3.141592653589793,a1,a2)){
ry=ry.unionValue(r2);
}
if(Wedge.angleIsWithin(3.141592653589793,a1,a2)){
rx=rx.unionValue(-r2);
}
if(Wedge.angleIsWithin(1.5*3.141592653589793,a1,a2)){
ry=ry.unionValue(-r2);
}
return new _1711.m(x+rx.min,y+ry.min,rx.range,ry.range);
};
Wedge.getWedgeFromShape=function(shape){
if(shape==null){
return null;
}
var type=_1712.m.getItem(shape,"type");
var path=_1712.m.getItem(shape,"path");
if(type==null||!"path".CPVisEngineEquals(type)||path==null){
return null;
}
var _1728=_1713.m.isWedgePath(path);
if(_1728==null){
return null;
}
return new Wedge(_1728[0],_1728[1],_1728[2],_1728[3],_1728[4],_1728[5]);
};
_1715.add("com/ibm/vis/engine/internal/struct/Wedge",["com/ibm/vis/engine/internal/struct/Shape","com/ibm/vis/engine/internal/struct/Rect"],function(){
Wedge.WEDGE_FLAGS=0;
Wedge.WEDGE_NAME="wedge";
});
return Wedge;
});
},"com/ibm/vis/monitor/LogEntry":function(){
define("com/ibm/vis/monitor/LogEntry",["com/ibm/init/statics","dojo/_base/declare"],function(_1729,_172a){
var _172b=_172a("com.ibm.vis.monitor.LogEntry",null,{component:null,message:null,level:null,parameters:null,constructor:function(level,_172c,_172d,_172e){
this.component=_172c;
this.message=_172d;
this.level=level;
this.parameters=_172e;
},getMessage:function(){
return this.message;
},getComponent:function(){
return this.component;
},getLevel:function(){
return this.level;
},getParameters:function(){
return this.parameters;
},toString:function(){
return this.level+":"+this.component+":"+this.message;
}});
return _172b;
});
},"com/ibm/vis/engine/internal/nativeImpl/render/VMLExt":function(){
define("com/ibm/vis/engine/internal/nativeImpl/render/VMLExt",["dojo/_base/declare","dojox/gfx","dojo/_base/lang","../BasicFactory"],function(_172f,g,lang,BF){
if(g.renderer=="vml"){
var vml=g.vml;
var _1730=vml.Line.prototype.setShape;
lang.extend(vml.Line,{setShape:function(_1731){
if(!this.rawNode.path){
this.rawNode.path=new Object();
}
_1730.call(this,_1731);
}});
var _1732=vml.Polyline.prototype.setShape;
lang.extend(vml.Polyline,{setShape:function(_1733){
if(!this.rawNode.path){
this.rawNode.path=new Object();
}
_1732.call(this,_1733);
}});
var _1734=vml.Path.prototype.setShape;
lang.extend(vml.Path,{setShape:function(_1735){
if(!this.rawNode.path){
this.rawNode.path=new Object();
}
_1734.call(this,_1735);
}});
lang.extend(vml.Shape,{setEffect:function(_1736,shape){
var _1737="";
if(_1736.glow){
var _1738=_1736.glow.color;
var _1739=false;
var _173a=BF.toCSSHexColor(_1738,_1739);
var _173b=_1736.glow.stdDev*2;
_1737="progid:DXImageTransform.Microsoft.Glow(color='"+_173a+"', Strength="+_173b+")";
}
if(_1736.shadow){
var _173c=_1736.shadow.color;
if(typeof _173c.a=="undefined"){
_173c.a=1;
}
_173c.a=_173c.a*0.5;
var _173d=BF.toCSSHexColor(_173c,true);
_1737+="progid:DXImageTransform.Microsoft.dropShadow(color='"+_173d+"', OffX="+_1736.shadow.dx+", OffY="+_1736.shadow.dy+")";
}
if(_1737!=""){
this.rawNode.style.filter=_1737;
}
}});
}
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/FullConstantVector":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/FullConstantVector",["./Vector","com/ibm/init/statics","dojo/_base/declare"],function(_173e,_173f,_1740){
var _1741=_1740("com.ibm.vis.engine.internal.grammar.layout.graph.stress.matrix.FullConstantVector",[_173e],{values:null,constructor:function(n,d){
this.values=Array.create([n],0);
for(var _1742=0,_1743=d.keySet(),_1744=_1743.size();_1742<_1744;++_1742){
var i=_1743.get(_1742);
this.values[i]=d.get(i);
}
},set:function(i,value){
throw new Error("Cannot modify a constant vector");
},get:function(i){
return this.values[i];
},dot:function(x){
var v=0;
for(var i=0;i<this.values.length;++i){
v+=this.values[i]*x[i];
}
return v;
}});
return _1741;
});
},"com/ibm/vis/widget/VisControlMobile":function(){
define("com/ibm/vis/widget/VisControlMobile",["dojo/_base/declare","dojo/dom-construct","./_VisControlBase"],function(_1745,_1746,_1747){
var _1748=_1745("com.ibm.vis.widget.VisControlMobile",[_1747],{buildRendering:function(){
this.inherited(arguments);
this.domNode=_1746.create("div",{"style":"width:100%;height :100%;"});
this.focusNode=this.domNode;
this.visContainer=this.domNode;
}});
return _1748;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/SplitAestheticValueProducer":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/SplitAestheticValueProducer",["./AestheticValueProducer","com/ibm/init/statics","dojo/_base/declare"],function(_1749,_174a,_174b){
var _174c=_174b("com.ibm.vis.engine.internal.grammar.aesthetic.SplitAestheticValueProducer",[_1749],{getDefaultForCategory:function(index,_174d){
return index;
},interpolate:function(a,b,p){
return null;
},make:function(spec){
return null;
},forPalette:function(o){
return null;
},modify:function(item,o,_174e){
return item;
}});
return _174c;
});
},"com/ibm/vis/engine/internal/grammar/scale/NestedTickInfo":function(){
define("com/ibm/vis/engine/internal/grammar/scale/NestedTickInfo",["com/ibm/init/fork!../coordinate/Position","com/ibm/init/fork!../../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_174f,_1750,_1751,_1752){
var _1753=_1752("com.ibm.vis.engine.internal.grammar.scale.NestedTickInfo",null,{pos:null,coords:null,constructor:function(_1754,loc,index){
this.pos=_174f.m.makeSimple(loc);
this.pos.index=index;
this.coords=_1754;
},getCoords:function(){
if(this.coords.length==1){
return _1750.m.r3(this.coords[0]);
}
var s=""+_1750.m.r3(this.coords[0]);
for(var i=1;i<this.coords.length;++i){
s+=";"+_1750.m.r3(this.coords[i]);
}
return s;
}});
return _1753;
});
},"com/ibm/vis/engine/internal/struct/ArrowGeom":function(){
define("com/ibm/vis/engine/internal/struct/ArrowGeom",["com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_1755,_1756,_1757){
var _1758=_1757("com.ibm.vis.engine.internal.struct.ArrowGeom",null,{type:null,size:0,tipSize:0,x:0,y:0,angle:0,constructor:function(type){
this.type=type;
},configForStrokeWidth:function(_1759){
var _175a=_1755.m.getItem(_1759,"width");
var wid=_175a==null?1:_175a;
this.setSize(Math.max(wid*3,8));
wid/=2;
this.setTipSize(wid*this.type.getMiterFactor());
},getX:function(){
return this.x;
},setX:function(x){
this.x=x;
},setPos:function(x,y){
this.setX(x);
this.setY(y);
},getY:function(){
return this.y;
},setY:function(y){
this.y=y;
},getTipSize:function(){
return this.tipSize;
},setTipSize:function(_175b){
this.tipSize=_175b;
},getAngle:function(){
return this.angle;
},setAngle:function(angle){
this.angle=angle;
},getSize:function(){
return this.size;
},setSize:function(size){
this.size=size;
},getLength:function(){
return this.type.getLength()*this.size+this.tipSize;
}});
return _1758;
});
},"com/ibm/vis/engine/internal/grammar/layout/cloud/CloudAlgorithm":function(){
define("com/ibm/vis/engine/internal/grammar/layout/cloud/CloudAlgorithm",["com/ibm/init/statics","dojo/_base/declare"],function(_175c,_175d){
var _175e=_175d("com.ibm.vis.engine.internal.grammar.layout.cloud.CloudAlgorithm",null,{layoutShapes:function(_175f,_1760,_1761){
},isAlignable:function(){
}});
return _175e;
});
},"com/ibm/vis/engine/internal/grammar/layout/cloud/CloudLayout":function(){
define("com/ibm/vis/engine/internal/grammar/layout/cloud/CloudLayout",["../Layout","com/ibm/init/fork!./DefaultCloudAlgorithms","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!../../../struct/Insets","com/ibm/init/fork!../../../struct/Rect","com/ibm/init/fork!../../../../../extension/internal/RAVEExtensionManager","com/ibm/init/statics","dojo/_base/declare"],function(_1762,_1763,_1764,_1765,_1766,_1767,_1768,_1769){
var _176a=_1769("com.ibm.vis.engine.internal.grammar.layout.cloud.CloudLayout",[_1762],{constructor:function(_176b){
_1763.m.registerExtensions();
},needsAestheticsPreApplied:function(){
return true;
},makeShapes:function(_176c,_176d){
var items=new _1764.m();
var _176e=new _1764.m();
for(var i=0;i<_176c;++i){
var s=this.adapter.makeItemAtSimpleCoordinates([1,1],i,true);
if(s==null){
continue;
}
_176e.add(s);
}
var _176f=_1765.m.NONE;
var style=this.adapter.getStyle();
if(style!=null){
_176f=_1765.m.makeForStylePadding(style.padding,_176d,_176d);
}
this.layoutShapes(_176e,new _1766.m(0,0,_176d.width,_176d.height),_176f);
for(var _1770=0,_1771=_176e.size();_1770<_1771;++_1770){
var s=_176e.get(_1770);
items.add(s);
}
return items;
},layoutShapes:function(_1772,_1773,_1774){
var _1775=_1767.m.INSTANCE.newInstance(this.adapter.getSpec().layout,null);
if(_1775.isAlignable()){
var spec=this.adapter.getStyle();
if(spec!=null){
var _1776=(_1775);
_1776.setHorizontalAlignment(spec.align);
_1776.setVerticalAlignment(spec.valign);
_1776.alignBaseLine(spec.valign==null?false:"end".CPVisEngineEquals(spec.valign));
}
}
_1775.layoutShapes(_1772,_1773,_1774);
},getDefaultShapeSize:function(_1777,n){
return _1777;
}});
return _176a;
});
},"com/ibm/vis/engine/internal/nativeImpl/Error":function(){
define("com/ibm/vis/engine/internal/nativeImpl/Error",[],function(){
Error.prototype.getMessage=function(){
return this.message;
};
});
},"com/ibm/vis/engine/internal/nativeImpl/LinkedMap":function(){
define("com/ibm/vis/engine/internal/nativeImpl/LinkedMap",["dojo/_base/declare","dojo/_base/array","./List","./Set"],function(_1778,_1779,List,Set){
var _177a=_1778("com.ibm.vis.engine.internal.nativeImpl.LinkedMap",null,{data:null,keys:null,constructor:function(){
this.data={};
this.keys=[];
},_hash:function(key){
return key;
},get:function(key){
return this.data[this._hash(key)];
},put:function(key,value){
var hk=this._hash(key);
if(!this._containsHashKey(hk)){
this.keys.push(key);
}
this.data[hk]=value;
},_forEach:function(f,ctx){
ctx=ctx||this;
for(var i=0;i<this.keys.length;i++){
var k=this.keys[i];
var hk=this._hash(k);
f.call(ctx,k,this.data[hk],hk);
}
},putAll:function(map){
map._forEach(function(k,v,hk){
this.put(k,v);
},this);
},remove:function(key){
var index=_1779.indexOf(this.keys,key);
if(index>=0){
this.keys.splice(index,1);
}
delete this.data[this._hash(key)];
},clear:function(){
this.data={};
this.keys=[];
},size:function(){
return this.keys.length;
},containsKey:function(key){
return this._containsHashKey(this._hash(key));
},_containsHashKey:function(hk){
return this.data.hasOwnProperty(hk);
},keySet:function(){
var _177b=new Set();
_177b.data=this.keys.slice();
return _177b;
},numericKeySet:function(){
var r=[];
this._forEach(function(k,v,hk){
r.push(Number(k));
});
return r;
},values:function(){
var r=new List();
this._forEach(function(k,v,hk){
r.add(v);
});
return r;
},isEmpty:function(){
return (this.size()==0);
}});
return _177a;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/CenteredInLayer":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/CenteredInLayer",["./DAGNodePlacementAlgorithm","com/ibm/init/fork!./DAG","com/ibm/init/fork!../../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_177c,_177d,_177e,_177f,_1780){
var _1781=_1780("com.ibm.vis.engine.internal.grammar.layout.graph.CenteredInLayer",[_177c],{adapter:null,constructor:function(_1782){
this.adapter=_1782;
},layoutNodes:function(_1783,_1784){
var _1785=Array.create([_1783.length],0);
var _1786=new Array(_1783.length);
for(var i=0;i<_1783.length;++i){
_1785[i]=_177d.m.getMaxLevel(_1783[i]);
for(var _1787=0,_1788=_1783[i].length;_1787<_1788;++_1787){
var node=_1783[i][_1787];
_1786[i]=new _177e.m(i/_1783.length,(i+1)/_1783.length);
node.setY(_1786[i].mid());
}
}
this.adapter.getSharedLayoutInfo().setLayerInfo(_1786,_1785);
}});
return _1781;
});
},"com/ibm/vis/engine/internal/util/CollectionsUtil":function(){
define("com/ibm/vis/engine/internal/util/CollectionsUtil",["com/ibm/init/statics","dojo/_base/declare"],function(_1789,_178a){
var _178b=_178a("com.ibm.vis.engine.internal.util.CollectionsUtil",null,{});
_178b.isSorted=function(list,c){
if(list.size()<=2){
return true;
}
var x=c.compare(list.get(1),list.get(0));
for(var i=2;i<list.size();++i){
var y=c.compare(list.get(i),list.get(i-1));
if((x<0&&y>0)||(x>0&&y<0)){
return false;
}
x=y;
}
return true;
};
_178b.isSortedAscending=function(list,c){
if(list.size()<=1){
return true;
}else{
return c.compare(list.get(0),list.get(1))<0;
}
};
_178b.binarySearch=function(l,c,value){
var _178c=_178b.isSortedAscending(l,c);
return _178b.doBinarySearch(l,c,value,_178c);
};
_178b.doBinarySearch=function(l,c,value,_178d){
var low=0;
var high=l.size()-1;
while(low<=high){
var mid=Math.floor((low+high)/2);
var _178e=l.get(mid);
if((_178d&&c.compare(_178e,value)<0)||(!_178d&&c.compare(_178e,value)>0)){
low=mid+1;
}else{
if((_178d&&c.compare(_178e,value)>0)||(!_178d&&c.compare(_178e,value)<0)){
high=mid-1;
}else{
return mid;
}
}
}
return -1;
};
_178b.reverse=function(list){
var _178f=list.size();
var _1790=_178f>>1;
for(var _1791=0;_1791<_1790;++_1791){
var _1792=_178f-_1791-1;
_178b.swap(list,_1791,_1792);
}
};
_178b.swap=function(list,_1793,_1794){
var _1795=list.get(_1793);
var _1796=list.get(_1794);
list.set(_1794,_1795);
list.set(_1793,_1796);
};
return _178b;
});
},"com/ibm/vis/engine/internal/legend/LegendFrameMaker":function(){
define("com/ibm/vis/engine/internal/legend/LegendFrameMaker",["com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../Bounds","com/ibm/init/fork!../oldlegendlayout/OldFlow","com/ibm/init/fork!../oldlegends/LegendPosition","com/ibm/init/fork!../LegendContainerAdapter","com/ibm/init/fork!../grammar/aesthetic/AestheticHelper","com/ibm/init/fork!./SizeAxisLegend","com/ibm/init/fork!../ContentFrame","com/ibm/init/fork!../nativeImpl/SpecUtil","com/ibm/init/fork!./LegendTitleFrame","com/ibm/init/fork!./NewLegend","com/ibm/init/fork!./LegendFrameLayout","com/ibm/init/statics","dojo/_base/declare"],function(_1797,_1798,_1799,_179a,_179b,_179c,_179d,_179e,_179f,_17a0,_17a1,_17a2,_17a3,_17a4,_17a5){
var _17a6=_17a5("com.ibm.vis.engine.internal.legend.LegendFrameMaker",null,{legendIndex:0,constructor:function(){
},makeLegendFrames:function(spec,vis){
if(spec==null){
return new _1798.m();
}
if("axis".CPVisEngineEquals(spec.method)){
return this.makeSizeAxisLegends(spec,vis);
}
if(this.isProperForNewLegend(spec,vis)){
return this.makeNewLegends(spec,vis);
}
return this.makeOldLegends(spec,vis);
},makeOldLegends:function(spec,vis){
var _17a7=new _1798.m();
var _17a8=null;
var _17a9=null;
if(spec.location!=null&&spec.location instanceof Object){
_17a8=spec.location;
_17a9=new _1799.m(_17a8,vis.visContext.logContext);
}
var _17aa=vis.getLegendPosition(spec);
var flow=_179a.m.vertical;
if(_17aa==_179b.m.TOP||_17aa==_179b.m.BOTTOM){
flow=_179a.m.horizontal;
}
_17a7.add(new _179c.m(_17a9,_17a8,spec.boundsStyle,vis,spec,flow,this.legendIndex++));
return _17a7;
},makeSizeAxisLegends:function(spec,vis){
var _17ab=new _1798.m();
if(spec.aesthetics==null){
var _17ac=_179d.m.getFilteredLegendableAesthetics(vis.grammar,vis.currentSpec.legends);
for(var _17ad=0,_17ae=_17ac.size();_17ad<_17ae;++_17ad){
var _17af=_17ac.get(_17ad);
if(_179e.m.getValidAesthetic(_17af)!=null){
var _17b0=new _179e.m(vis,spec,_17af);
_17b0.style=spec.boundsStyle;
_17b0.legendIndex=this.legendIndex++;
_17ab.add(_17b0);
}
}
}else{
var _17af=_179d.m.getAestheticsByReferences(spec.aesthetics,vis);
var _17b0=new _179e.m(vis,spec,_17af);
_17b0.style=spec.boundsStyle;
_17b0.legendIndex=this.legendIndex++;
_17ab.add(_17b0);
}
return _17ab;
},makeNewLegends:function(spec,vis){
var _17b1=new _1798.m();
var _17b2=_179d.m.getAestheticsByReferences(spec.aesthetics,vis);
if(_17b2==null){
_17b2=_179d.m.getLegendableAesthetics(vis.grammar);
}
var _17b3=_179d.m.groupAestheticsByFieldAndElement(_17b2);
for(var _17b4=0,_17b5=_17b3.size();_17b4<_17b5;++_17b4){
var group=_17b3.get(_17b4);
var _17b6=new _179f.m();
var _17b7=_17a0.m.copySpecObject(spec);
_17b6.style=_17b7.boundsStyle;
_17b7.boundsStyle=null;
var _17b8=new _17a1.m(_17b7,vis,group.get(0).valueProvider.getLabel());
_17b8.setLegendIndex(this.legendIndex);
var _17b9=_17a2.m.makeLegend(vis,_17b7,group,_17a6.DEFAULT_LEGEND_DIMENSIONS);
_17b9.setLegendIndex(this.legendIndex);
_17b6.add(_17b8);
_17b6.add(_17b9);
_17b6.layoutMethod=new _17a3.m(_17b8,_17b9);
_17b1.add(_17b6);
this.legendIndex++;
}
return _17b1;
},isProperForNewLegend:function(spec,vis){
var _17ba=this.getTickCount(spec,vis);
return ("continuous".CPVisEngineEquals(spec.method)&&_17ba>=2);
},hasAtLeastOneValidDataRow:function(spec,vis){
var _17bb=_17a6.getAesthetics(spec,vis);
if(_17bb!=null&&_17bb.size()>0){
var a=_17bb.get(0);
var field=a.valueProvider.getBaseField();
if(field!=null){
var _17bc=vis.getDataIndex(field.data.id);
return this.hasNotNullRowForGivenFieldIndex(vis.currentSpec.data[_17bc],field.index);
}
}
return false;
},hasNotNullRowForGivenFieldIndex:function(_17bd,_17be){
if(_17bd!=null){
var _17bf=_17bd.rows;
if(_17bf!=null&&_17bf.length>0){
for(var _17c0=0,_17c1=_17bf.length;_17c0<_17c1;++_17c0){
var row=_17bf[_17c0];
if(row.length>_17be&&row[_17be]!=null){
return true;
}
}
}
}
return false;
},getTickCount:function(spec,vis){
var _17c2=_17a6.getAesthetics(spec,vis);
if(_17c2!=null&&_17c2.size()>0){
var a=_17c2.get(0);
return a.scale.getAllTicks().size();
}
return 0;
}});
_17a6.getAesthetics=function(spec,vis){
var _17c3=_179d.m.getAestheticsByReferences(spec.aesthetics,vis);
if(_17c3==null){
_17c3=_179d.m.getLegendableAesthetics(vis.grammar);
}
return _17c3;
};
_17a4.add("com/ibm/vis/engine/internal/legend/LegendFrameMaker",["com/ibm/vis/engine/internal/struct/Dim","com/ibm/vis/engine/internal/grammar/aesthetic/AestheticHelper"],function(){
_17a6.DEFAULT_LEGEND_DIMENSIONS=new _1797.m(200,200);
});
return _17a6;
});
},"com/ibm/vis/engine/internal/struct/MultiPartPoly":function(){
define("com/ibm/vis/engine/internal/struct/MultiPartPoly",["./Poly","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../util/MathUtil","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!./PolyShape","com/ibm/init/fork!./Rect","com/ibm/init/fork!./Circle","com/ibm/init/statics","dojo/_base/declare"],function(_17c4,_17c5,_17c6,_17c7,_17c8,_17c9,_17ca,_17cb,_17cc){
var _17cd=_17cc("com.ibm.vis.engine.internal.struct.MultiPartPoly",[_17c4],{subPolys:null,constructor:function(cx,cy,_17ce,_17cf,_17d0){
this.subPolys=_17d0;
},toJSON:function(){
var json=this.inherited(arguments,[]);
if(_17c5.m.getItem(json,"children")!=null){
var b=this.getBounds();
_17c5.m.put(json,"x",_17c6.m.r3(b.x));
_17c5.m.put(json,"y",_17c6.m.r3(b.y));
_17c5.m.put(json,"width",_17c6.m.r3(b.width));
_17c5.m.put(json,"height",_17c6.m.r3(b.height));
}
return json;
},getType:function(){
return _17cd.MULTIPOLY_NAME;
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if(_17cd.MULTIPOLY_NAME.CPVisEngineEquals(type)||"poly".CPVisEngineEquals(type)){
return true;
}
return false;
},createOutlineShapes:function(){
var items=new _17c7.m();
for(var _17d1=0,_17d2=this.subPolys,_17d3=_17d2.size();_17d1<_17d3;++_17d1){
var poly=_17d2.get(_17d1);
var shape=poly.createOutlineShapes();
if(shape!=null){
items.add(shape[0]);
}
}
return items.size()==0?null:_17c5.m.toArray(items);
},makePath:function(_17d4){
if(this.pathMaker!=null){
return this.pathMaker.makePath(this);
}
var path="";
for(var _17d5=0,_17d6=this.subPolys,_17d7=_17d6.size();_17d5<_17d7;++_17d5){
var _17d8=_17d6.get(_17d5);
var _17d9=_17d8.makePath(_17d4);
if(_17d9==null){
_17d9=_17c8.m.makeGeneralPath(_17d8.x,_17d8.y,this.getTypes(),null,null);
}
path=path+_17d9;
}
return path;
},contains:function(px,py){
for(var _17da=0,_17db=this.subPolys,_17dc=_17db.size();_17da<_17dc;++_17da){
var poly=_17db.get(_17da);
if(poly.getBounds().contains(px,py)&&_17c8.m.testContains(poly.x,poly.y,px,py)){
return true;
}
}
return false;
},getBounds:function(){
if(this.bounds==null){
var _17dd;
for(var _17de=0,_17df=this.subPolys,_17e0=_17df.size();_17de<_17e0;++_17de){
var poly=_17df.get(_17de);
_17dd=poly.getBounds();
if(this.bounds==null){
this.bounds=_17dd;
}else{
var w=Math.min(this.bounds.x,_17dd.x);
var h=Math.min(this.bounds.y,_17dd.y);
var width=Math.max(this.bounds.x+this.bounds.width,_17dd.x+_17dd.width)-w;
var _17e1=Math.max(this.bounds.y+this.bounds.height,_17dd.y+_17dd.height)-h;
this.bounds=new _17c9.m(w,h,width,_17e1);
}
}
}
return this.bounds;
},transpose:function(b){
for(var _17e2=0,_17e3=this.subPolys,_17e4=_17e3.size();_17e2<_17e4;++_17e2){
var poly=_17e3.get(_17e2);
poly.transpose(b);
}
},getLabelShape:function(align,_17e5,_17e6){
if("inside".CPVisEngineEquals(_17e6)&&this.isFilled()){
return this.getShapeForInner();
}
var _17e7=new _17c7.m();
var _17e8=new _17c7.m();
var _17e9=this.getDataPointsPolys();
for(var _17ea=0,_17eb=_17e9.size();_17ea<_17eb;++_17ea){
var poly=_17e9.get(_17ea);
for(var i=0;i<poly.x.length;++i){
_17e7.add(poly.x[i]);
_17e8.add(poly.y[i]);
}
}
var px,py;
if("start".CPVisEngineEquals(align)){
px=_17e7.get(0);
py=_17e8.get(0);
}else{
if("end".CPVisEngineEquals(align)){
px=_17e7.get(_17e7.size()-1);
py=_17e7.get(_17e8.size()-1);
}else{
var n1=Math.floor((_17e7.size()-1)/2);
var n2=Math.ceil((_17e8.size()-1)/2);
px=(_17e7.get(n1)+_17e7.get(n2))/2;
py=(_17e8.get(n1)+_17e8.get(n2))/2;
}
}
var _17ec=new _17ca.m(px,py,1);
_17ec.snap=this.snap;
_17ec.setGlyphLike();
return _17ec;
},getDataPointsPolys:function(){
var _17ed=new _17c7.m();
var polys=this.subPolys;
for(var _17ee=0,_17ef=polys.size();_17ee<_17ef;++_17ee){
var poly=polys.get(_17ee);
if("multiPartPoly".CPVisEngineEquals(poly.getType())){
_17ed.add((poly).subPolys.get(0));
}else{
_17ed.add(polys.get(0));
break;
}
}
return _17ed;
},applyPointTransform:function(t){
var polys=this.subPolys.toArray();
this.subPolys.clear();
for(var _17f0=0,_17f1=polys.length;_17f0<_17f1;++_17f0){
var p=polys[_17f0];
var q=p.applyPointTransform(t);
if(q==null){
this.subPolys.add(p);
}else{
var _17f2=new _17c4(q.x,q.y,this.filled,this.pathMaker);
_17f2.snap=this.snap;
this.subPolys.add(_17f2);
}
}
return null;
}});
_17cb.add("com/ibm/vis/engine/internal/struct/MultiPartPoly",["com/ibm/vis/engine/internal/struct/Poly"],function(){
_17cd.MULTIPOLY_FLAGS=0;
_17cd.MULTIPOLY_NAME="multiPartPoly";
});
return _17cd;
});
},"com/ibm/vis/engine/internal/layout/ContentLayout":function(){
define("com/ibm/vis/engine/internal/layout/ContentLayout",["com/ibm/init/statics","dojo/_base/declare"],function(_17f3,_17f4){
var _17f5=_17f4("com.ibm.vis.engine.internal.layout.ContentLayout",null,{layout:function(_17f6,_17f7,_17f8){
},getPreferredSize:function(_17f9){
},getMinimumSize:function(_17fa){
},getMaximumSize:function(_17fb){
}});
return _17f5;
});
},"com/ibm/vis/engine/internal/spechelper/CategoryStructureSpecHelper":function(){
define("com/ibm/vis/engine/internal/spechelper/CategoryStructureSpecHelper",["./SpecHelper","com/ibm/init/fork!./ClusterGapSizeSpecHelper","com/ibm/init/fork!./ClusterWidthSizeSpecHelper","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_17fc,_17fd,_17fe,_17ff,_1800,_1801){
var _1802=_1801("com.ibm.vis.engine.internal.spechelper.CategoryStructureSpecHelper",[_17fc],{spec:null,constructor:function(_1803){
if(_1803==null){
_1803=new Object();
}
this.spec=_1803;
},hasGap:function(){
return this.spec.gap!=null;
},getGap:function(){
var _1804=this.createPreferredSpec(this.spec.gap);
return new _17fd.m(_1804);
},getWidth:function(){
var _1805=this.createPreferredSpec(this.spec.width);
return new _17fe.m(_1805);
},createPreferredSpec:function(gap){
var _1806=null;
if(_17ff.m.isString(gap)||_17ff.m.isNumber(gap)){
_1806=new Object();
_1806.preferred=gap;
}else{
_1806=gap;
}
return _1806;
},getNest:function(){
if(this.spec.nest==null){
return false;
}
return this.spec.nest;
},isNested:function(){
return this.spec.nest!=null&&this.spec.nest==true;
},getAlign:function(){
if(this.spec.align==null){
return "";
}
return this.spec.align;
},getSpec:function(){
return this.spec;
},isSpecDefined:function(){
return this.specDefined;
}});
return _1802;
});
},"com/ibm/vis/engine/internal/grammar/scale/ScaleSpan":function(){
define("com/ibm/vis/engine/internal/grammar/scale/ScaleSpan",["com/ibm/init/fork!./transform/ScaleTransformBuilder","com/ibm/init/fork!../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_1807,_1808,_1809,_180a){
var _180b=_180a("com.ibm.vis.engine.internal.grammar.scale.ScaleSpan",null,{outRange:null,inputUnit:null,desiredTicks:null,fitInfo:null,specifiedFormatter:null,scaleTransform:null,isSpanMatching:false,outRangeSetFromSpec:true,visContext:null,constructor:function(unit,_180c,info,_180d,_180e,_180f,_1810){
this.desiredTicks=_180c;
this.inputUnit=unit;
this.fitInfo=info;
this.outRange=_180f;
this.specifiedFormatter=_180d;
this.visContext=_180e;
this.isSpanMatching=false;
this.updateSpanOutRange();
_1807.m.registerExtensions();
this.scaleTransform=_1807.m.create(_1810);
},isApplicable:function(u){
},getBase:function(_1811){
},addTicks:function(ticks,_1812){
},addAllTicks:function(ticks,_1813){
},getMaxTickLength:function(font){
},toZeroOne:function(value,field,clamp){
},zeroOneToDataValue:function(value){
},setupForExtent:function(_1814){
this.fitInfo.geometry=_1814;
var max=_1814.getFittingTicks(this.outRange.range);
if(this.desiredTicks!=null){
this.setupForTickCount(this.desiredTicks,this.desiredTicks*2);
}else{
if(this.inputUnit.measure.categorical){
this.setupForTickCount(max,max);
}else{
var _1815=_1814.getPreferredNumericTicks(this.outRange.range);
if(_1815<5){
_1815=Math.min(5,max);
}
this.setupForTickCount(_1815,max);
}
}
},getSuggestedElementSize:function(full){
},addMinorTicks:function(ticks){
},getTickMin:function(){
},getTickSize:function(){
},getInputRange:function(){
},getAdjustedInputRange:function(){
},getTickUnit:function(){
},setupForTickCount:function(_1816,_1817){
},computeTickCount:function(){
},getUndefinedParametersFrom:function(_1818){
this.specifiedFormatter=this.specifiedFormatter==null?_1818.specifiedFormatter:this.specifiedFormatter;
this.fitInfo.padPercent=_1818.fitInfo.padPercent;
this.fitInfo.padPixels=_1818.fitInfo.padPixels;
this.fitInfo.elementNeedsZero=_1818.fitInfo.elementNeedsZero;
},getUndefinedFromMismatched:function(spans){
},getCategoryCount:function(){
},getGoodDisplaySpanSize:function(){
},applyPadding:function(_1819,_181a){
var min=this.outRange.min+this.outRange.range*_1819;
var max=this.outRange.max-this.outRange.range*_181a;
this.outRange=new _1808.m(min,max);
},addToGroup:function(_181b,_181c){
var _181d=this.getCumulativeOverlap(_181b);
var _181e=this.getCumulativeOverlap(_181c);
if(_181d<=_181e){
_181b.add(this);
}else{
_181c.add(this);
}
},getCumulativeOverlap:function(group){
var _181f=0;
var range=this.outRange;
for(var _1820=0,_1821=group.size();_1820<_1821;++_1820){
var _1822=group.get(_1820);
if(this.outRangeSetFromSpec&&_1822.outRangeSetFromSpec){
_181f+=range.getOverlap(_1822.outRange);
}
}
return _181f;
},isUnitApplicable:function(value,unit){
},isMatchingSpan:function(){
return this.isSpanMatching;
},setSpanMatching:function(_1823){
this.isSpanMatching=_1823;
},isOutRangeSetFromSpec:function(){
return this.outRangeSetFromSpec;
},updateSpanOutRange:function(){
if(this.outRange==null){
this.outRange=_1808.m.ZERO_ONE;
this.outRangeSetFromSpec=false;
}
}});
return _180b;
});
},"com/ibm/vis/engine/internal/grammar/units/Unit":function(){
define("com/ibm/vis/engine/internal/grammar/units/Unit",["com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!./Measure","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_1824,_1825,_1826,_1827,_1828){
var Unit=_1828("com.ibm.vis.engine.internal.grammar.units.Unit",null,{name:null,abbreviation:null,measure:null,system:null,baseConversionFactor:0,multipliers:null,minorDivisions:0,prefixAbbrev:false,customUnit:false,isCustomUnit:function(){
return this.customUnit;
},constructor:function(name,_1829,_182a,_182b,_182c,_182d,_182e,_182f,_1830){
this.name=name;
this.abbreviation=_1829;
this.prefixAbbrev=_182a;
this.measure=_182b;
this.system=_182c;
this.baseConversionFactor=_182d;
this.multipliers=_182e;
this.minorDivisions=_182f;
this.customUnit=_1830;
Unit.all.put(name,this);
_182b.units.add(this);
},toString:function(){
return this.name;
},format:function(value,r){
if(this.prefixAbbrev){
return this.abbreviation+_1826.m.format(value,r);
}else{
return _1826.m.format(value,r)+this.abbreviation;
}
},isPrefixAbbrev:function(){
return this.prefixAbbrev;
}});
Unit.get=function(_1831,_1832){
if(_1831==null){
return _1832;
}
var unit=Unit.all.get(_1831.toLowerCase());
if(unit!=null){
return unit;
}
return new Unit(_1831.toLowerCase(),"",false,_1832.measure,_1831,1,_1832.multipliers,_1832.minorDivisions,true);
};
Unit.isTime=function(unit){
if(unit==Unit.SECOND||unit==Unit.MINUTE||unit==Unit.HOUR||unit==Unit.DAY||unit==Unit.WEEK||unit==Unit.MONTH||unit==Unit.QUARTER||unit==Unit.YEAR||unit==Unit.CENTURY||unit==Unit.DATE||unit==Unit.TIMESTAMP){
return true;
}
return false;
};
_1827.add("com/ibm/vis/engine/internal/grammar/units/Unit",["com/ibm/vis/engine/internal/nativeImpl/Map","com/ibm/vis/engine/internal/grammar/units/Measure"],function(){
Unit.all=new _1824.m(30);
Unit.METRIC=[2,2.5,5,10];
Unit.INTEGRAL=[2,5,10];
Unit.BASE12=[0.5,2,3,6,12,24];
Unit.BASE60=[0.5,2,3,6,12,15,30];
Unit.BASE8=[0.5,2,4,8,16];
Unit.METER=new Unit("meter","m",false,_1825.m.LENGTH,"metric",1,Unit.METRIC,4,false);
Unit.CENTIMETER=new Unit("centimeter","cm",false,_1825.m.LENGTH,"metric",0.01,Unit.METRIC,4,false);
Unit.KILOMETER=new Unit("kilometer","km",false,_1825.m.LENGTH,"metric",1000,Unit.METRIC,4,false);
Unit.FOOT=new Unit("foot","ft",false,_1825.m.LENGTH,"imperial",0.3048,Unit.BASE12,4,false);
Unit.INCH=new Unit("inch","in",false,_1825.m.LENGTH,"imperial",0.3048/12,Unit.BASE12,4,false);
Unit.MILE=new Unit("mile","m",false,_1825.m.LENGTH,"imperial",5280*0.3048,Unit.BASE12,4,false);
Unit.GRAM=new Unit("gram","g",false,_1825.m.MASS,"metric",1,Unit.METRIC,4,false);
Unit.KILOGRAM=new Unit("kilogram","kg",false,_1825.m.MASS,"metric",1000,Unit.METRIC,4,false);
Unit.OUNCE=new Unit("ounce","oz",false,_1825.m.MASS,"imperial",28.3495,Unit.BASE8,4,false);
Unit.POUND=new Unit("pound","lb",false,_1825.m.MASS,"imperial",453.5924,Unit.BASE8,4,false);
Unit.TON=new Unit("ton","t",false,_1825.m.MASS,"imperial",98420652.8,Unit.METRIC,4,false);
Unit.COUNT=new Unit("count","",false,_1825.m.COUNT,"metric",1,Unit.INTEGRAL,4,false);
Unit.KILO=new Unit("thousands","k",false,_1825.m.COUNT,"metric",1000,Unit.INTEGRAL,4,false);
Unit.MEGA=new Unit("millions","m",false,_1825.m.COUNT,"metric",1000000,Unit.INTEGRAL,4,false);
Unit.BYTE=new Unit("byte","b",false,_1825.m.COUNT,"storage",1,Unit.INTEGRAL,4,false);
Unit.KILOBYTE=new Unit("kilobyte","k",false,_1825.m.COUNT,"storage",1024,Unit.INTEGRAL,4,false);
Unit.MEGABYTE=new Unit("megabyte","M",false,_1825.m.COUNT,"storage",1024*1024,Unit.INTEGRAL,4,false);
Unit.GIGABYTE=new Unit("gigabyte","G",false,_1825.m.COUNT,"storage",1024*1024*1024,Unit.INTEGRAL,4,false);
Unit.TERABYTE=new Unit("terabyte","T",false,_1825.m.COUNT,"storage",1024*1024*1024*1024,Unit.INTEGRAL,4,false);
Unit.DATE=new Unit("date","",false,_1825.m.DATETIME,"metric",24*60*60,null,-1,false);
Unit.TIMESTAMP=new Unit("timestamp","",false,_1825.m.DATETIME,"metric",1,null,-1,false);
Unit.SECOND=new Unit("second","s",false,_1825.m.TIME,"metric",1,Unit.BASE60,4,false);
Unit.MINUTE=new Unit("minute","m",false,_1825.m.TIME,"metric",60,Unit.BASE60,4,false);
Unit.HOUR=new Unit("hour","h",false,_1825.m.TIME,"metric",60*60,Unit.BASE12,4,false);
Unit.DAY=new Unit("day","d",false,_1825.m.TIME,"metric",24*60*60,[2,7,14],4,false);
Unit.WEEK=new Unit("week","wk",false,_1825.m.TIME,"metric",7*24*60*60,Unit.INTEGRAL,7,false);
Unit.MONTH=new Unit("month","mth",false,_1825.m.TIME,"metric",365.25/12*24*60*60,Unit.BASE12,4,false);
Unit.QUARTER=new Unit("quarter","q",false,_1825.m.TIME,"metric",365.25/4*24*60*60,Unit.BASE8,3,false);
Unit.YEAR=new Unit("year","yr",false,_1825.m.TIME,"metric",365.25*24*60*60,Unit.INTEGRAL,5,false);
Unit.CENTURY=new Unit("century","C.",true,_1825.m.TIME,"metric",100*365.25*24*60*60,Unit.INTEGRAL,4,false);
Unit.KELVIN=new Unit("kelvin","K",false,_1825.m.TEMPERATURE,"kelvin",1,Unit.METRIC,4,false);
Unit.CELSIUS=new Unit("celcius","C",false,_1825.m.TEMPERATURE,"celsisu",0,Unit.METRIC,4,false);
Unit.FAHRENHEIT=new Unit("fahrenheit","F",false,_1825.m.TEMPERATURE,"fahrenheit",0,Unit.INTEGRAL,4,false);
Unit.RADIAN=new Unit("radian","r",false,_1825.m.ANGLE,"metric",1,Unit.METRIC,4,false);
Unit.DEGREE=new Unit("degree","deg",false,_1825.m.ANGLE,"imperial",3.141592653589793/180,Unit.BASE60,4,false);
Unit.DOLLARS=new Unit("dollar","$",true,_1825.m.CURRENCY,"dollar",1,Unit.METRIC,4,false);
Unit.EURO=new Unit("euro","\u20ac",true,_1825.m.CURRENCY,"euro",1,Unit.METRIC,4,false);
Unit.CATEGORICAL=new Unit("categorical","",false,_1825.m.CATEGORY,"none",1,Unit.INTEGRAL,0,false);
Unit.ORDINAL=new Unit("ordinal","",false,_1825.m.ORDINAL,"none",1,Unit.INTEGRAL,0,false);
Unit.RATIO=new Unit("numeric","",false,_1825.m.NUMERIC,"none",1,Unit.METRIC,4,false);
Unit.FLAG=new Unit("ordinal","",false,_1825.m.ORDINAL,"none",1,Unit.INTEGRAL,0,false);
});
return Unit;
});
},"com/ibm/vis/engine/internal/migration/spec/DoubleToPercentConverter":function(){
define("com/ibm/vis/engine/internal/migration/spec/DoubleToPercentConverter",["../Converter","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_1833,_1834,_1835,_1836,_1837){
var _1838=_1837("com.ibm.vis.engine.internal.migration.spec.DoubleToPercentConverter",[_1833],{multiplier:100,constructor:function(_1839){
if(_1834.m.isObject(_1839)){
var num=_1834.m.getItem(_1839,"multiplier");
if(_1834.m.isNumber(num)){
this.multiplier=(num);
}
}
},convert:function(_183a){
if(_1834.m.isNumber(_183a)){
var _183b=_1835.m.r3((_183a)*this.multiplier);
if((_183b%1)==0){
return (_183b)+"%";
}
return _183b+"%";
}
return _183a;
}});
_1836.add("com/ibm/vis/engine/internal/migration/spec/DoubleToPercentConverter",["com/ibm/vis/engine/internal/migration/Converter"],function(){
_1838.MULTIPLIER="multiplier";
});
return _1838;
});
},"com/ibm/vis/engine/internal/facet/FacetMethodOverlay":function(){
define("com/ibm/vis/engine/internal/facet/FacetMethodOverlay",["./AbstractFaceting","com/ibm/init/statics","dojo/_base/declare"],function(_183c,_183d,_183e){
var _183f=_183e("com.ibm.vis.engine.internal.facet.FacetMethodOverlay",[_183c],{constructor:function(_1840,_1841,_1842){
},generateSharedCellsScene:function(_1843,_1844){
return _1843;
},isChartInChart:function(){
return false;
},getPanelSize:function(scene,_1845){
return _1845;
},getSelectedPanelSize:function(scene,_1846,_1847,_1848,_1849,_184a,_184b,_184c){
return null;
}});
return _183f;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/distance/FloydWarshallDistance":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/distance/FloydWarshallDistance",["com/ibm/init/fork!../matrix/FullMatrix","com/ibm/init/statics","dojo/_base/declare"],function(_184d,_184e,_184f){
var _1850=_184f("com.ibm.vis.engine.internal.grammar.layout.graph.stress.distance.FloydWarshallDistance",null,{graph:null,constructor:function(graph){
this.graph=graph;
},compute:function(){
var N=this.graph.getNodesCount();
var t=new _184d.m(N,true);
var t1=new _184d.m(N,true);
t.fill(2147483647);
var id=0;
for(var _1851=0,_1852=this.graph.nodes,_1853=_1852.length;_1851<_1853;++_1851){
var n=_1852[_1851];
t.set(id,id,0);
n.info=id++;
}
for(var _1854=0,_1855=this.graph.links,_1856=_1855.length;_1854<_1856;++_1854){
var link=_1855[_1854];
var _1857=link.getDistanceFactor();
var from=link.from;
var to=link.to;
t.set(from.info,to.info,_1857);
t.set(to.info,from.info,_1857);
}
for(var k=0;k<N;++k){
for(var i=0;i<N;++i){
for(var j=0;j<N;++j){
t1.set(i,j,Math.min(t.get(i,j),t.get(i,k)+t.get(k,j)));
}
}
var temp=t;
t=t1;
t1=temp;
}
return t;
}});
return _1850;
});
},"com/ibm/vis/interaction/Interactivity":function(){
define("com/ibm/vis/interaction/Interactivity",["com/ibm/init/statics","dojo/_base/declare"],function(_1858,_1859){
var _185a=_1859("com.ibm.vis.interaction.Interactivity",null,{getTooltipItem:function(x,y){
},getMetaItem:function(x,y){
},getItemsAtPoint:function(x,y){
},getItemsAtPointForType:function(x,y,type){
},getItemsInPolygon:function(x,y){
},getItemsInPolygonForType:function(x,y,type){
},getItemsExcluding:function(_185b){
},getItems:function(){
},getCategory:function(_185c,value){
},getFormattedLabel:function(_185d,value){
},getMatchingRows:function(_185e,value){
},getItemsForRows:function(rows){
},getItemsMatchingAnyRows:function(rows){
},makeHighlightState:function(){
},setHighlightRepresentation:function(state,_185f){
},getChangeEffects:function(){
},getGraphInteractivity:function(){
},offsetSlices:function(items,_1860){
},getPanZoom:function(){
},getCanvasDimensions:function(){
},getScene:function(){
},setScene:function(scene){
},recreateSceneTree:function(){
},getNavigation:function(){
}});
return _185a;
});
},"com/ibm/vis/engine/internal/oldlegends/StaggerLegendEntry":function(){
define("com/ibm/vis/engine/internal/oldlegends/StaggerLegendEntry",["./LegendEntry","com/ibm/init/fork!../Alignment","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../struct/Insets","com/ibm/init/fork!../util/MathUtil","com/ibm/init/fork!../scene/ItemBuilder","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!../util/SceneUtil","com/ibm/init/statics","dojo/_base/declare"],function(_1861,_1862,_1863,_1864,_1865,_1866,_1867,_1868,_1869,_186a,_186b){
var _186c=_186b("com.ibm.vis.engine.internal.oldlegends.StaggerLegendEntry",[_1861],{isEntryHorizontal:false,constructor:function(_186d,style,vis,tick,_186e,_186f,_1870,_1871,_1872,_1873,tick1,_1874){
this.tick1=tick1;
this.isEntryHorizontal=!_1874;
},determineLabelOffset:function(textH,textW){
var x=0,y=0;
var _1875=this.swatchBounds.height;
var fontH=this.entryTextLabeler.font.getSize();
if(this.isEntryHorizontal){
x=this.fullSwatchBounds.width;
if("start".CPVisEngineEquals(this.entryTextLabeler.valign)){
y=(_1875-textH)+this.swatchOffset.height;
}else{
if("end".CPVisEngineEquals(this.entryTextLabeler.valign)){
y=_1875+this.swatchOffset.height-(fontH*1.5<textH?this.entryTextLabeler.font.getDescent():0);
}else{
if("middle".CPVisEngineEquals(this.entryTextLabeler.valign)){
y=_1875-textH/2+this.swatchOffset.height;
}else{
if(_1862.m.VALIGN_MIDDLE_1ST_LINE.CPVisEngineEquals(this.entryTextLabeler.valign)){
y=_1875-fontH/2+this.swatchOffset.height-(fontH*1.5<textH?this.entryTextLabeler.font.getDescent()/2:0);
}
}
}
}
}else{
y=this.fullSwatchBounds.height;
if("start".CPVisEngineEquals(this.entryTextLabeler.valign)){
x=_1875-textH+this.swatchOffset.width;
}else{
if("end".CPVisEngineEquals(this.entryTextLabeler.valign)){
x=_1875+this.swatchOffset.width-(fontH*1.5<textH?this.entryTextLabeler.font.getDescent():0);
}else{
if("middle".CPVisEngineEquals(this.entryTextLabeler.valign)){
x=_1875-textH/2+this.swatchOffset.width;
}else{
if(_1862.m.VALIGN_MIDDLE_1ST_LINE.CPVisEngineEquals(this.entryTextLabeler.valign)){
x=_1875-fontH/2+this.swatchOffset.width-(fontH*1.5<textH?this.entryTextLabeler.font.getDescent()/2:0);
}
}
}
}
}
return new _1863.m(x,y);
},getShapes:function(_1876,id,_1877){
var array=_1864.m.createJSONArray();
var _1878=_1865.m.makeForStylePadding(this.style.padding,_1876,_1876);
var extX=_1876.width;
var extY=_1876.height;
if(this.alignBounds!=null){
extX=Math.min(_1876.width,this.alignBounds.width);
extY=Math.min(_1876.height,this.alignBounds.height);
}
if(this.isEntryHorizontal){
extY=Math.min(extY,this.labelHeight(extX-this.fullSwatchBounds.width));
}else{
extX=Math.min(extX,this.labelHeight(extY-this.fullSwatchBounds.height));
extX=Math.min(extX,this.fullSwatchBounds.width);
}
var _1879=new _1863.m(extX,extY);
var _187a=(this.isEntryHorizontal)?this.makeFirstTextShape(_1879):this.makeRotatedTextShape(_1879);
var _187b=(_187a==null)?0:_187a.getHeight();
var _187c=0;
var _187d=0;
if(this.swatchOffset!=null){
_187c+=this.swatchOffset.width;
_187d+=this.swatchOffset.height;
}
if(this.isEntryHorizontal){
_187d+=this.swatchBounds.height;
}else{
_187c+=this.swatchBounds.width;
}
if(this.tick1!=null){
this.addSwatch(_1876,id+_1877.value,array,_1878,_187b,_187c,_187d);
_1877.value++;
}
if(_187a!=null){
_187a.setID(id+_1877.value+"T");
var _187e=this.addInfo(_187a.toJSON(),true);
var _187f=this.determineLabelOffset(_187b,_1879.width);
_1866.m.translate(_187e,_187f.width,_187f.height);
array.push(_187e);
}
return array;
},makeRotatedTextShape:function(_1880){
var shp=_1867.m.makeRectangle(0,0,_1880.width,_1880.height-this.fullSwatchBounds.height,this.style);
var _1881=this.entryTextLabeler.makeSimpleRotatedLabel(this.tick.name,shp);
return _1881;
},addSwatch:function(_1882,id,array,_1883,_1884,_1885,_1886){
var index=0;
for(var _1887=0,_1888=this.swatch,_1889=_1888.size();_1887<_1889;++_1887){
var shape=_1888.get(_1887);
shape=this.applyAesthetics(shape);
shape.setID(id+"SW"+index);
var _188a=this.addInfo(shape.toJSON(),false);
_1866.m.translate(_188a,_1883.left+_1885,_1883.top+_1886);
array.push(_188a);
if(_1864.m.getItem(_188a,"children")!=null){
var _188b=_1864.m.getItem(_188a,"children");
var size=_188b.length;
for(var i=0;i<size;++i){
var child=_188b[i];
this.addInfo(child,false);
}
}
index++;
}
return;
},calculateExtent:function(_188c){
this.buildSwatch();
var ext;
this.swatchOffset=new _1863.m(-this.padding.left,-this.padding.top);
if(this.isEntryHorizontal){
this.swatchOffset.width=0;
ext=this.calculateExtentNotRotated(_188c);
ext.height=this.swatchBounds.height;
if("start".CPVisEngineEquals(this.entryTextLabeler.valign)){
this.swatchOffset.height=-(this.swatchBounds.height-this.labelHeight(ext.width))+this.padding.top;
}
if("end".CPVisEngineEquals(this.entryTextLabeler.valign)){
this.swatchOffset.height=-this.swatchBounds.height+this.padding.top;
}
if("middle".CPVisEngineEquals(this.entryTextLabeler.valign)){
this.swatchOffset.height=-this.labelHeight(ext.width)/2+this.padding.top;
}
if(_1862.m.VALIGN_MIDDLE_1ST_LINE.CPVisEngineEquals(this.entryTextLabeler.valign)){
this.swatchOffset.height=-this.entryTextLabeler.font.getHeight()/2+this.padding.top;
}
}else{
ext=this.calculateExtentRotatedText(_188c);
ext.width=this.swatchBounds.width;
this.swatchOffset.height=0;
if("start".CPVisEngineEquals(this.entryTextLabeler.valign)){
this.swatchOffset.width=-(this.swatchBounds.height-this.labelHeight(ext.width))+this.padding.right;
}
if("end".CPVisEngineEquals(this.entryTextLabeler.valign)){
this.swatchOffset.width=-this.swatchBounds.height+this.padding.right;
}
if("middle".CPVisEngineEquals(this.entryTextLabeler.valign)){
this.swatchOffset.width=-this.labelHeight(ext.width)/2+this.padding.right;
}
if(_1862.m.VALIGN_MIDDLE_1ST_LINE.CPVisEngineEquals(this.entryTextLabeler.valign)){
this.swatchOffset.width=-this.entryTextLabeler.font.getHeight()/2+this.padding.right;
}
}
return ext;
},labelHeight:function(extW){
var _188d=new Array(1);
_188d[0]=this.tick.name;
var _188e=this.entryTextLabeler.makeLabel(_188d,new _1868.m(0,0,extW,this.swatchBounds.height));
return (_188e==null)?0:_188e.getHeight();
},calculateExtentNotRotated:function(_188f){
var _1890=this.getBoundsRect(_188f);
if(_1890==null){
var _1891=new Array(1);
_1891[0]=this.tick.name;
var _1892=this.entryTextLabeler.makeLabel(_1891,new _1868.m(0,0,_188f.width-this.fullSwatchBounds.width,_188f.height));
if(_1892!=null){
var _1893=_1892.calculateTextWidth()+this.entryTextLabeler.padding.getHorizontal();
var _1894=_1892.getHeight()+this.entryTextLabeler.padding.getVertical();
var _1895=_1893+this.fullSwatchBounds.width;
var _1896=Math.max(_1894,this.fullSwatchBounds.height);
var _1897=new _1868.m(0,0,_1895,_1896);
_1897.width=Math.min(_188f.width,_1897.width);
_1897.height=Math.min(_188f.height,_1897.height);
return _1897.getExtent();
}
return _188f;
}
return _1890.getExtent();
},calculateExtentRotatedText:function(_1898){
var _1899=this.getBoundsRect(_1898);
if(_1899==null){
var _189a=new Array(1);
_189a[0]=this.tick.name;
var _189b=this.entryTextLabeler.makeLabel(_189a,new _1868.m(0,0,_1898.height-this.fullSwatchBounds.height,_1898.width));
if(_189b!=null){
var _189c=_189b.getHeight()+this.entryTextLabeler.padding.getVertical();
var _189d=_189b.calculateTextWidth()+this.entryTextLabeler.padding.getHorizontal();
var _189e=Math.max(_189c,this.swatchBounds.width);
var _189f=_189d+this.fullSwatchBounds.height;
_189f=Math.ceil(_189f);
var _18a0=new _1868.m(0,0,_189e,_189f);
_18a0.width=Math.min(_1898.width,_18a0.width);
_18a0.width=Math.min(_18a0.width,this.swatchBounds.width);
_18a0.height=Math.min(_1898.height,_18a0.height);
return _18a0.getExtent();
}
return _1898;
}
return _1899.getExtent();
},applyAesthetics:function(shape){
var _18a1=this.modifySwatch(shape);
var value=(this.tick.value+this.tick1.value)/2;
for(var _18a2=0,_18a3=this.aesthetics,_18a4=_18a3.length;_18a2<_18a4;++_18a2){
var _18a5=_18a3[_18a2];
var v=_18a5.scale.toZeroOneClamped(value,null);
if(v!=null&&_18a5.applicableToLegend){
_18a1=_18a5.applyValue(_18a1,v,value,false);
}
}
_18a1=this.updateToFitWithinBounds(_18a1);
return _18a1;
},updateToFitWithinBounds:function(_18a6){
if(_18a6!=null&&_18a6.isTypeOf("rect")&&(this.swatchBounds.height!=(_18a6).height)){
(_18a6).x=this.swatchBounds.x;
(_18a6).y=this.swatchBounds.y;
(_18a6).height=this.swatchBounds.height;
(_18a6).width=this.swatchBounds.width;
}
return _18a6;
},layoutShape:function(_18a7,array,type,id,_18a8){
var _18a9=this.bounds;
if(_18a9!=null){
var dx=_18a7.x+_18a9.x;
var dy=_18a7.y+_18a9.y;
var _18aa=this.getShapes(_18a9.getExtent(),id,_18a8);
var _18ab=_18aa.length;
for(var i=0;i<_18ab;++i){
var shape=_18aa[i];
var _18ac=_1864.m.createJSONArray();
_18ac.push(shape);
var group=_1869.m.createGroup(type,_18ac);
var _18ad=_1864.m.getItem(shape,"id");
if(!this.isEntryHorizontal&&_18ad.indexOf("T")>0){
this.moveTransformToLegendEntryForVerticalText(shape,group);
}
var leId=this.getLegendEntryId(_18ad);
_1864.m.put(group,"id",leId);
_1866.m.translate(group,dx,dy);
array.push(group);
}
return _18aa;
}
return null;
},moveTransformToLegendEntryForVerticalText:function(shape,group){
var _18ae=_1864.m.getItem(shape,"transform");
if(_18ae!=null){
_1864.m.remove(shape,"transform");
_1864.m.put(group,"transform",_18ae);
}
},getLegendEntryId:function(id){
var _18af=id.indexOf("T");
if(_18af>0){
return id.substring(0,_18af);
}
var _18b0=id.indexOf("SW");
if(_18b0>0){
return id.substring(0,_18b0);
}
return id;
}});
return _186c;
});
},"com/ibm/vis/extension/ExtensionFactory":function(){
define("com/ibm/vis/extension/ExtensionFactory",["com/ibm/init/statics","dojo/_base/declare"],function(_18b1,_18b2){
var _18b3=_18b2("com.ibm.vis.extension.ExtensionFactory",null,{newInstance:function(name,_18b4){
}});
return _18b3;
});
},"com/ibm/vis/engine/internal/migration/MigrationStrategyComparator":function(){
define("com/ibm/vis/engine/internal/migration/MigrationStrategyComparator",["../nativeImpl/Comparator","com/ibm/init/fork!./DeclarativeMigrationStrategy","com/ibm/init/statics","dojo/_base/declare"],function(_18b5,_18b6,_18b7,_18b8){
var _18b9=_18b8("com.ibm.vis.engine.internal.migration.MigrationStrategyComparator",[_18b5],{compare:function(a,b){
var _18ba=(a).getTargetVersion().compareTo((b).getTargetVersion());
if(_18ba==0){
if(a instanceof _18b6.m&&!(b instanceof _18b6.m)){
_18ba=1;
}else{
if(!(a instanceof _18b6.m)&&b instanceof _18b6.m){
_18ba=-1;
}
}
}
return _18ba;
}});
return _18b9;
});
},"com/ibm/vis/engine/internal/oldlegends/LegendTitle":function(){
define("com/ibm/vis/engine/internal/oldlegends/LegendTitle",["./LegendContent","com/ibm/init/fork!../grammar/label/LabelProducer","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../scene/ItemBuilder","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!../struct/Dim","com/ibm/init/statics","dojo/_base/declare"],function(_18bb,_18bc,_18bd,_18be,_18bf,_18c0,_18c1,_18c2){
var _18c3=_18c2("com.ibm.vis.engine.internal.oldlegends.LegendTitle",[_18bb],{title:null,frameStyle:null,isHorizontalFlow:false,constructor:function(_18c4,spec,vis,title,_18c5){
this.frameStyle=new Object();
this.frameStyle.fill="transparent";
this.title=title;
this.isHorizontalFlow=_18c5;
if(spec==null){
spec=new Object();
}
var _18c6=spec.valign==null?"start":null;
if(spec.padding==null){
if(this.isHorizontalFlow){
var ps=new Object();
ps.left=1;
ps.right=1;
ps.top=4;
ps.bottom=2;
spec.padding=ps;
}
}
if(spec.font==null){
spec.font=new Object();
spec.font.weight="bold";
this.textLabeler=_18bc.m.makeSimpleInside(vis,spec,null,null,_18c6);
spec.font=null;
}else{
this.textLabeler=_18bc.m.makeSimpleInside(vis,spec,null,null,_18c6);
}
},getShapes:function(_18c7,id,_18c8){
id=id+_18c8.value;
var array=_18bd.m.createJSONArray();
var shp=_18be.m.makeRectangle(0,0,_18c7.width,_18c7.height,this.frameStyle);
var text=this.textLabeler.makeLabel(this.title,shp);
if(text!=null){
shp.setID(id+"-Back");
text.setID(id+"T");
array.push(shp.toJSON());
array.push(text.toJSON());
}
return array;
},calculateExtent:function(_18c9){
var _18ca=this.getBoundsRect(_18c9);
if(_18ca==null){
var _18cb=this.textLabeler.makeLabel(this.title,new _18bf.m(0,0,_18c9.width,_18c9.height));
var _18cc=0;
var _18cd=0;
if(_18cb!=null){
_18cc=_18cb.getWidth()*1.1+this.textLabeler.padding.getHorizontal();
_18cd=_18cb.getHeight()+this.textLabeler.padding.getVertical();
}
var _18ce=Math.min(_18c9.width,_18cc);
var _18cf=Math.min(_18c9.height,_18cd);
return new _18c0.m(_18ce,_18cf);
}else{
return _18ca.getExtent();
}
},layoutShape:function(_18d0,array,type,id,_18d1){
var _18d2=this.parentContainer;
var _18d3=this.bounds;
if(_18d3!=null){
var _18d4=_18d2.determineOccupiedExtent(null);
if(this.isHorizontalFlow){
_18d3.height=_18d4.height;
}else{
_18d3.width=_18d4.width;
}
}
var _18d5=this.inherited(arguments,[_18d0,array,type,id,_18d1]);
this.createEllipsis(_18d2,array,type,id,_18d2.continuedArea.getBounds());
return _18d5;
},layoutChildren:function(){
},createShapesInScene:function(scene,id,_18d6){
}});
return _18c3;
});
},"com/ibm/vis/engine/internal/data/transform/RegressionSmoothType":function(){
define("com/ibm/vis/engine/internal/data/transform/RegressionSmoothType",["./SmoothType","com/ibm/init/statics","dojo/_base/declare"],function(_18d7,_18d8,_18d9){
var _18da=_18d9("com.ibm.vis.engine.internal.data.transform.RegressionSmoothType",[_18d7],{b1:0,b0:0,getRowsCreated:function(){
return 2;
},setGroupMoments:function(n,xMean,yMean,sxx,sxy,syy){
this.b1=sxy/sxx;
this.b0=yMean-this.b1*xMean;
},setGroupData:function(input,xI,yI,wI,_18db){
},getPrediction:function(x){
return this.b0+this.b1*x;
},getDensity:function(x,scale){
return 1;
},getWindowWidth:function(){
return 0;
},setOverallDataDetails:function(input,xI,_18dc){
}});
return _18da;
});
},"com/ibm/vis/engine/internal/struct/Circle":function(){
define("com/ibm/vis/engine/internal/struct/Circle",["./Shape","./GeomShape","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../GradientGeometry","com/ibm/init/fork!./Rect","com/ibm/init/fork!./Point","com/ibm/init/fork!../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_18dd,_18de,_18df,_18e0,_18e1,_18e2,_18e3,_18e4,_18e5){
var _18e6=_18e5("com.ibm.vis.engine.internal.struct.Circle",[_18dd,_18de],{x:0,y:0,r:0,constructor:function(cx,cy,rad){
this.x=cx;
this.y=cy;
this.r=rad;
},asBasic:function(){
return this;
},getType:function(){
return "circle";
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("circle".CPVisEngineEquals(type)){
return true;
}
return false;
},applyPointTransform:function(t){
var p=t.transform(this.x,this.y);
this.x=p.x;
this.y=p.y;
return null;
},insetForBorder:function(inset){
this.r=Math.max(this.r-inset,0);
},affine:function(xx,dx,yy,dy,_18e7){
this.x=this.x*xx+dx;
this.y=this.y*yy+dy;
if(_18e7||this.canScaleBoth()){
this.r=this.r*Math.min(xx,yy);
}
},makeGeometryClone:function(){
return new _18e6(this.x,this.y,this.r);
},getLocalGradientGeometry:function(_18e8){
return _18e0.m.makeFromCircle(this.x,this.y,this.r);
},contains:function(px,py){
var dx=px-this.x;
var dy=py-this.y;
return dx*dx+dy*dy<this.r*this.r;
},getBounds:function(){
return new _18e1.m(this.x-this.r,this.y-this.r,2*this.r,2*this.r);
},getCenter:function(){
return new _18e2.m(this.x,this.y);
},isFilled:function(){
return true;
},reflect:function(_18e9,_18ea){
if(_18ea){
this.y=_18e9.height-this.y;
}else{
this.x=_18e9.width-this.x;
}
},setShapeParameters:function(o){
_18df.m.put(o,"cx",_18e3.m.r3(this.snapValue(this.x)));
_18df.m.put(o,"cy",_18e3.m.r3(this.snapValue(this.y)));
_18df.m.put(o,"r",_18e3.m.r3(this.snapValue(this.r)));
},transpose:function(_18eb){
var newX=_18eb.width-_18eb.width*this.y/_18eb.height;
this.y=_18eb.height*(1-this.x/_18eb.width);
this.x=newX;
}});
_18e6.makeCircle=function(cx,cy,r){
var c=new _18e6(cx,cy,r);
var shape=_18df.m.createJSONObject();
_18df.m.put(shape,"type",c.getType());
c.setShapeParameters(shape);
return shape;
};
_18e4.add("com/ibm/vis/engine/internal/struct/Circle",["com/ibm/vis/engine/internal/struct/Shape","com/ibm/vis/engine/internal/struct/GeomShape","com/ibm/vis/engine/internal/nativeImpl/BasicFactory"],function(){
_18e6.CIRCLE_FLAGS=0;
_18e6.CIRCLE_NAME="circle";
});
return _18e6;
});
},"com/ibm/vis/engine/internal/oldlegends/LegendPosition":function(){
define("com/ibm/vis/engine/internal/oldlegends/LegendPosition",["com/ibm/init/fork!../nativeImpl/WebEngineException","com/ibm/init/statics","dojo/_base/declare"],function(_18ec,_18ed,_18ee){
var _18ef=_18ee("com.ibm.vis.engine.internal.oldlegends.LegendPosition",null,{constructor:function(){
}});
_18ef.valueOf=function(_18f0){
if(_18f0==null||_18f0.CPVisEngineEquals("")){
return _18ef.RIGHT;
}
if(_18f0.CPVisEngineEquals("top")){
return _18ef.TOP;
}else{
if(_18f0.CPVisEngineEquals("bottom")){
return _18ef.BOTTOM;
}else{
if(_18f0.CPVisEngineEquals("right")){
return _18ef.RIGHT;
}else{
if(_18f0.CPVisEngineEquals("left")){
return _18ef.LEFT;
}else{
throw new _18ec.m();
}
}
}
}
};
_18ed.add("com/ibm/vis/engine/internal/oldlegends/LegendPosition",["com/ibm/vis/engine/internal/nativeImpl/WebEngineException"],function(){
_18ef.TOP=new _18ef();
_18ef.BOTTOM=new _18ef();
_18ef.LEFT=new _18ef();
_18ef.RIGHT=new _18ef();
});
return _18ef;
});
},"com/ibm/vis/extension/internal/ExtensionFactoryList":function(){
define("com/ibm/vis/extension/internal/ExtensionFactoryList",["../ExtensionFactory","com/ibm/init/fork!../../engine/internal/nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_18f1,_18f2,_18f3,_18f4){
var _18f5=_18f4("com.ibm.vis.extension.internal.ExtensionFactoryList",[_18f1],{extensionFactories:null,constructor:function(){
this.extensionFactories=new _18f2.m();
},add:function(_18f6){
this.extensionFactories.add(_18f6);
},newInstance:function(name,_18f7){
for(var _18f8=0,_18f9=this.extensionFactories,_18fa=_18f9.size();_18f8<_18fa;++_18f8){
var _18fb=_18f9.get(_18f8);
var o=_18fb.newInstance(name,_18f7);
if(o!=null){
return o;
}
}
return null;
}});
return _18f5;
});
},"com/ibm/vis/widget/VisualizationEventListener":function(){
define("com/ibm/vis/widget/VisualizationEventListener",["dojo/_base/declare","com/ibm/vis/widget/VisControl"],function(_18fc,_18fd){
var _18fe=_18fc("com.ibm.vis.widget.VisualizationEventListener",null,{onSpecChange:function(_18ff){
},onReady:function(_1900){
},onRender:function(_1901){
}});
return _18fe;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/ColorAestheticValueProducer":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/ColorAestheticValueProducer",["./AestheticValueProducer","com/ibm/init/fork!../../ColorUtil","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_1902,_1903,_1904,_1905,_1906){
var _1907=_1906("com.ibm.vis.engine.internal.grammar.aesthetic.ColorAestheticValueProducer",[_1902],{defaultCat:null,make:function(spec){
return _1903.m.toCanonicalColor(spec.color);
},forPalette:function(o){
return _1903.m.toCanonicalColor(o);
},modify:function(item,_1908,_1909){
var _190a=_1908;
if("outline".CPVisEngineEquals(_1909)){
var _190b=_1903.m.makeCombinedColor(_190a,item.outline);
_1904.m.modifyStrokeColor(item,_190b);
}else{
if("both".CPVisEngineEquals(_1909)){
var _190b=_1903.m.makeCombinedColor(_190a,item.outline);
_1904.m.modifyStrokeColor(item,_190b);
_1904.m.modifyMainColor(item,_190a);
}else{
_1904.m.modifyMainColor(item,_190a);
}
}
return item;
},getDefaultForCategory:function(index,_190c){
if(this.defaultCat==null){
var _190d=_1903.m.getDefaultColors();
this.defaultCat=new Array(_190d.length);
for(var i=0;i<_190d.length;++i){
this.defaultCat[i]=_1903.m.toCanonicalColor(_190d[i]);
}
}
return this.defaultCat[Math.abs(index)%this.defaultCat.length];
},interpolate:function(a,b,p){
if(a==null||b==null){
return _1907.temperature(p);
}else{
var color=a;
return color.interpolateWithColor(b,p);
}
}});
_1907.temperature=function(value){
var t=(1-value)*9000+500;
var w=[[3.24071,-0.969258,0.0556352],[-1.53726,1.87599,-0.203996],[-0.498571,0.0415557,1.05707]];
var xf,yf;
if(t<=4000){
xf=274750000/(t*t*t)-985980/(t*t)+1174.44/t+0.145986;
}else{
if(t<=7000){
xf=-4607000000/(t*t*t)+2967800/(t*t)+99.11/t+0.244063;
}else{
xf=-2006400000/(t*t*t)+1901800/(t*t)+247.48/t+0.23704;
}
}
yf=-3*xf*xf+2.87*xf-0.275;
var x=xf/yf;
var y=1;
var z=(1-xf-yf)/yf;
var max=0;
var rgb=Array.create([3],0);
for(var i=0;i<3;++i){
rgb[i]=(x*w[0][i]+y*w[1][i]+z*w[2][i]);
if(rgb[i]>max){
max=rgb[i];
}
}
rgb[0]=255*Math.min(Math.max(0.1,rgb[0]/max),0.9);
rgb[1]=255*Math.min(Math.max(0.1,rgb[1]/max),0.9);
rgb[2]=255*Math.min(Math.max(0.1,rgb[2]/max),0.9);
return _1903.m.createColorFromRGB(Math.floor(rgb[0]),Math.floor(rgb[1]),Math.floor(rgb[2]));
};
return _1907;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/TransformInterpolatorData":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/TransformInterpolatorData",["com/ibm/init/fork!../../Affine","com/ibm/init/statics","dojo/_base/declare"],function(_190e,_190f,_1910){
var _1911=_1910("com.ibm.vis.engine.internal.interaction.interpolation.TransformInterpolatorData",null,{affine:null,decomposable:false,tx:0,ty:0,theta:0,sx:0,sy:0,constructor:function(_1912,_1913,tx,ty,theta,sx,sy){
this.affine=_1912;
this.decomposable=_1913;
this.tx=tx;
this.ty=ty;
this.theta=theta;
this.sx=sx;
this.sy=sy;
},getAffine:function(){
return this.affine;
},isDecomposable:function(){
return this.decomposable;
},getTx:function(){
return this.tx;
},getTy:function(){
return this.ty;
},getTheta:function(){
return this.theta;
},getSx:function(){
return this.sx;
},getSy:function(){
return this.sy;
}});
_1911.makeTransformInterpolatorDataFromTranslate=function(dx,dy){
return new _1911(new _190e.m(1,0,dx,0,1,dy),true,dx,dy,0,1,1);
};
_1911.makeTransformInterpolatorDataFromJSON=function(_1914){
return _1911.makeTransformInterpolatorDataFromAffine(_190e.m.fromJSON(_1914));
};
_1911.makeTransformInterpolatorDataFromAffine=function(_1915){
var xx=_1915.m00;
var xy=_1915.m01;
var dx=_1915.m02;
var yx=_1915.m10;
var yy=_1915.m11;
var dy=_1915.m12;
var tx=dx;
var ty=dy;
if((yx==0&&xx==0)||(xy==0&&yy==0)){
return new _1911(_1915,false,tx,ty,NaN,NaN,NaN);
}
var _1916=Math.sqrt(xx*xx+yx*yx);
var _1917=Math.sqrt(xy*xy+yy*yy);
var th1=Math.atan2(yx,xx);
var th2=Math.atan2((xy==0)?0:-xy,yy);
var sx,sy;
if(Math.abs(th1-th2)<0.001){
sx=_1916;
sy=_1917;
}else{
if(Math.abs(Math.abs(th1-th2)-3.141592653589793)<0.001){
sx=-_1916;
sy=_1917;
}else{
return new _1911(_1915,false,tx,ty,NaN,NaN,NaN);
}
}
var theta;
if(yx!=0){
if(yx*sx*th1>0){
theta=th1;
}else{
th1+=3.141592653589793;
if(th1>3.141592653589793){
th1-=2*3.141592653589793;
}
theta=th1;
}
}else{
if(xx*sx>0){
theta=0;
}else{
theta=3.141592653589793;
}
}
return new _1911(_1915,true,tx,ty,theta,sx,sy);
};
return _1911;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/Link":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/Link",["com/ibm/init/fork!../../../struct/Line","com/ibm/init/statics","dojo/_base/declare"],function(_1918,_1919,_191a){
var Link=_191a("com.ibm.vis.engine.internal.grammar.layout.graph.Link",null,{from:null,to:null,reversed:false,weight:0,linkPruned:false,constructor:function(from,to){
this.from=from;
this.to=to;
this.reversed=false;
this.linkPruned=false;
},isLinkPruned:function(){
return this.linkPruned;
},setLinkPruned:function(_191b){
this.linkPruned=_191b;
},toString:function(){
return "<"+this.from.row+","+this.to.row+">";
},intersects:function(o){
return _1918.m.strictlyIntersects(this.from.x,this.from.y,this.to.x,this.to.y,o.from.x,o.from.y,o.to.x,o.to.y);
},intersectionCentrality:function(o){
if(this.from==o.from||this.from==o.to||this.to==o.from||this.to==o.to){
return 0;
}
var x1=this.from.x;
var y1=this.from.y;
var x2=this.to.x;
var y2=this.to.y;
var ox1=o.from.x;
var oy1=o.from.y;
var ox2=o.to.x;
var oy2=o.to.y;
var d=(oy2-oy1)*(x2-x1)-(ox2-ox1)*(y2-y1);
if(Math.abs(d)<0.000001){
return 0;
}
var t1=((ox2-ox1)*(y1-oy1)-(oy2-oy1)*(x1-ox1))/d;
if(t1<=-0.25||t1>=1.25){
return 0;
}
var t2=((x2-x1)*(y1-oy1)-(y2-y1)*(x1-ox1))/d;
if(t2<=-0.25||t2>=1.25){
return 0;
}
return 16*Math.abs(t1-0.5)*Math.abs(t2-0.5)/9;
},involves:function(n){
return this.from==n||this.to==n;
},length:function(){
return Math.sqrt((this.from.x-this.to.x)*(this.from.x-this.to.x)+(this.from.y-this.to.y)*(this.from.y-this.to.y));
},reverse:function(){
this.from.outLink=this.removeMe(this.from.outLink);
this.to.inLink=this.removeMe(this.to.inLink);
var t=this.from;
this.from=this.to;
this.to=t;
this.from.outLink=this.addMe(this.from.outLink);
this.to.inLink=this.addMe(this.to.inLink);
this.reversed=true;
},removeMe:function(array){
var _191c=new Array(array.length-1);
var n=0;
for(var _191d=0,_191e=array.length;_191d<_191e;++_191d){
var o=array[_191d];
if(o!=this){
_191c[n++]=o;
}
}
return _191c;
},addMe:function(array){
var _191f=new Array(array.length+1);
for(var i=0;i<array.length;++i){
_191f[i]=array[i];
}
_191f[array.length]=this;
return _191f;
},getSpan:function(){
return Math.abs(this.from.layer-this.to.layer);
},getTo:function(){
return this.to;
},getFrom:function(){
return this.from;
},getOpposite:function(v){
return this.from==v?this.to:this.from;
},isReversed:function(){
return this.reversed;
},setReversed:function(_1920){
this.reversed=_1920;
},setWeight:function(w){
this.weight=w;
},getWeight:function(){
return this.weight;
},getDistanceFactor:function(){
return 1/this.weight;
},equals:function(link){
if(this.from.row==link.from.row&&this.to.row==link.to.row){
return true;
}
return false;
}});
return Link;
});
},"com/ibm/vis/engine/internal/struct/Poly":function(){
define("com/ibm/vis/engine/internal/struct/Poly",["./PolyShape","com/ibm/init/fork!./Circle","com/ibm/init/fork!./Line","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!./Rect","com/ibm/init/fork!./SmoothPolyPathMaker","com/ibm/init/statics","dojo/_base/declare"],function(_1921,_1922,_1923,_1924,_1925,_1926,_1927,_1928){
var Poly=_1928("com.ibm.vis.engine.internal.struct.Poly",[_1921],{pathMaker:null,nonTopPointsCount:0,constructor:function(cx,cy,_1929,_192a){
this.pathMaker=_192a;
if(this.isSinglePointPoly()){
this.addPointsToSinglePointPoly();
}
this.nonTopPointsCount=0;
},getType:function(){
return "poly";
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("poly".CPVisEngineEquals(type)){
return true;
}
return false;
},getLabelShape:function(align,_192b,_192c){
if(this.isGlyphLike()){
var b=this.getBounds();
var d=(b.width+b.height)/4;
return new _1922.m(b.x+b.width/2,b.y+b.width/2,d);
}
return this.inherited(arguments,[align,_192b,_192c]);
},makePath:function(_192d){
if(this.pathMaker!=null){
return this.pathMaker.makePath(this);
}
return this.inherited(arguments,[_192d]);
},makeGeometryClone:function(){
var x1=Array.create([this.x.length],0);
var y1=Array.create([this.x.length],0);
for(var i=0;i<this.x.length;++i){
x1[i]=this.x[i];
y1[i]=this.y[i];
}
var poly=new Poly(x1,y1,this.filled,this.pathMaker);
poly.snap=this.snap;
return poly;
},getLines:function(){
var _192e=new Array(this.x.length);
for(var i=0;i<this.x.length;++i){
var _192f=i+1;
if(i==this.x.length-1){
_192f=0;
}
var lineX=Array.create([2],0);
lineX[0]=this.x[i];
lineX[1]=this.x[_192f];
var lineY=Array.create([2],0);
lineY[0]=this.y[i];
lineY[1]=this.y[_192f];
var _1930=new _1923.m(lineX,lineY,false);
_1930.snap=this.snap;
_192e[i]=_1930;
}
return _192e;
},isDegenerate:function(){
for(var i=0;i<this.x.length;++i){
if(this.x[i]!=this.x[0]){
return false;
}
if(this.y[i]!=this.y[0]){
return false;
}
}
return true;
},constructNonDegeneratePolygon:function(){
var newX=Array.create([this.x.length],0);
var range=0.5;
newX[0]=this.x[0]-range;
newX[1]=this.x[0]-range;
newX[2]=this.x[0]+range;
newX[3]=this.x[0]+range;
var newY=Array.create([this.y.length],0);
newY[0]=this.y[0]-range;
newY[1]=this.y[0]+range;
newY[2]=this.y[0]+range;
newY[3]=this.y[0]-range;
var poly=new Poly(newX,newY,this.filled,this.pathMaker);
poly.snap=this.snap;
return poly;
},getPolygonLines:function(){
var _1931=new Array(this.x.length);
for(var i=0;i<this.x.length;++i){
var _1932=i+1;
if(i==this.x.length-1){
_1932=0;
}
var _1933=_1923.m.make(this.x[i],this.y[i],this.x[_1932],this.y[_1932]);
_1933.snap=this.snap;
_1931[i]=_1933;
}
return _1931;
},toJSON:function(){
var _1934=this.inherited(arguments,[]);
var _1935=_1924.m.getItem(_1934,"stroke");
var _1936=_1935==null?null:this.createOutlineShapes();
if(_1936==null){
return _1934;
}
var _1937=_1924.m.createJSONArray();
_1924.m.remove(_1934,"stroke");
_1924.m.put(_1934,"id",this.id+"_0");
_1937.push(_1934);
for(var i=0;i<_1936.length;++i){
var _1938=_1936[i];
_1924.m.put(_1938,"id",this.id+"_"+(i+1));
_1924.m.put(_1938,"stroke",_1935);
_1924.m.remove(_1938,"fill");
_1937.push(_1938);
}
var _1939=this.makeBasicItem();
_1924.m.put(_1939,"children",_1937);
return _1939;
},getSwatchSymbolJSON:function(_193a){
var o=this.toJSON();
var _193b=_1924.m.getItem(o,"shape");
var _193c=_1924.m.getItem(_193b,"type");
if("line".CPVisEngineEquals(_193c)&&this.isFilled()){
_1924.m.remove(o,"shape");
var shape=_1924.m.createJSONObject();
_1924.m.put(shape,"type","rect");
var _193d=new _1925.m(_193a.x,0,_193a.width,_193a.height);
_193d.setShapeParameters(shape);
_1924.m.put(o,"shape",shape);
}
return o;
},createOutlineShapes:function(){
if(this.nonTopPointsCount==0){
return null;
}
var newX;
var newY;
if(this.nonTopPointsCount==-1){
newX=Array.create([this.x.length-2],0);
newY=Array.create([this.y.length-2],0);
for(var i=0;i<this.x.length-2;++i){
newX[i]=this.x[i+1];
newY[i]=this.y[i+1];
}
}else{
newX=Array.create([this.x.length-this.nonTopPointsCount],0);
newY=Array.create([this.y.length-this.nonTopPointsCount],0);
for(var i=0;i<newX.length;++i){
newX[i]=this.x[i];
newY[i]=this.y[i];
}
}
if(newX.length==0){
return null;
}
var _193e=null;
if(this.pathMaker!=null){
_193e=new _1926.m();
}
var _193f=new Poly(newX,newY,false,_193e);
_193f.snap=this.snap;
_193f.transposeApplied=this.transposeApplied;
return [_193f.toJSON()];
},isSinglePointPoly:function(){
if(this.filled){
if(this.x.length==3){
if(this.x[0]==this.x[1]&&this.x[1]==this.x[2]){
return true;
}
}
}
return false;
},addPointsToSinglePointPoly:function(){
if(this.isSinglePointPoly()){
var newX=Array.create([5],0);
var newY=Array.create([5],0);
newX[0]=Math.max(this.x[0]-1,0);
newY[0]=this.y[0];
newX[1]=Math.max(this.x[0]-1,0);
newY[1]=this.y[1];
newX[2]=this.x[1];
newY[2]=this.y[1];
newX[3]=this.x[2]+1;
newY[3]=this.y[1];
newX[4]=this.x[2]+1;
newY[4]=this.y[2];
this.x=newX;
this.y=newY;
}
},isPointAtXExtremes:function(x){
if(this.x==null||this.x.length==0){
return false;
}
var _1940=this.x[0];
var _1941=this.x[this.x.length-1];
return _1940==x||_1941==x;
},isPointAtLeftExtreme:function(x){
if(this.isPointAtXExtremes(x)){
return this.x[0]==x;
}
return false;
}});
_1927.add("com/ibm/vis/engine/internal/struct/Poly",["com/ibm/vis/engine/internal/struct/PolyShape"],function(){
Poly.POLY_FLAGS=0;
Poly.POLY_NAME="poly";
});
return Poly;
});
},"com/ibm/vis/engine/internal/IdentifiableItem":function(){
define("com/ibm/vis/engine/internal/IdentifiableItem",["com/ibm/init/statics","dojo/_base/declare"],function(_1942,_1943){
var _1944=_1943("com.ibm.vis.engine.internal.IdentifiableItem",null,{id:null,constructor:function(id,vis){
this.id=id;
if(id!=null&&vis!=null){
vis.put(id,this);
}
}});
return _1944;
});
},"com/ibm/vis/engine/internal/GradientGeometry":function(){
define("com/ibm/vis/engine/internal/GradientGeometry",["com/ibm/init/statics","dojo/_base/declare"],function(_1945,_1946){
var _1947=_1946("com.ibm.vis.engine.internal.GradientGeometry",null,{cx:0,cy:0,x:0,y:0,width:0,height:0,radius:0,constructor:function(cx,cy,x,y,width,_1948,_1949){
this.cx=cx;
this.cy=cy;
this.x=x;
this.y=y;
this.width=width;
this.height=_1948;
this.radius=_1949;
},scaleRadius:function(s){
this.radius*=s;
}});
_1947.makeFromGradientGeometry=function(other){
if(other==null){
return null;
}
return new _1947(other.cx,other.cy,other.x,other.y,other.width,other.height,other.radius);
};
_1947.makeFromRect=function(x,y,width,_194a){
var cx=x+width/2;
var cy=y+_194a/2;
var _194b=Math.sqrt((cx-x)*(cx-x)+(cy-y)*(cy-y));
return new _1947(cx,cy,x,y,width,_194a,_194b);
};
_1947.makeFromCircle=function(cx,cy,_194c){
return new _1947(cx,cy,cx-_194c,cy-_194c,2*_194c,2*_194c,_194c);
};
return _1947;
});
},"com/ibm/vis/engine/internal/grammar/layout/RAVELayoutAdapter":function(){
define("com/ibm/vis/engine/internal/grammar/layout/RAVELayoutAdapter",["./LayoutAdapter","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/Set","com/ibm/init/fork!../coordinate/Position","com/ibm/init/fork!../../struct/Path","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../../../exceptions/EngineException","com/ibm/init/fork!../../../../exceptions/ErrorCode","com/ibm/init/fork!../../struct/Point","com/ibm/init/fork!../../struct/Insets","com/ibm/init/fork!../../../../monitor/LogLevel","com/ibm/init/fork!../../../../monitor/LogComponent","com/ibm/init/fork!../../struct/Dim","com/ibm/init/fork!../label/LabelProducer","com/ibm/init/fork!../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_194d,_194e,_194f,_1950,_1951,_1952,_1953,_1954,_1955,_1956,_1957,_1958,_1959,_195a,_195b,_195c,_195d,_195e){
var _195f=_195e("com.ibm.vis.engine.internal.grammar.layout.RAVELayoutAdapter",[_194d],{spec:null,style:null,data:null,grammar:null,vis:null,rows:null,builder:null,pad:null,elementSize:null,elementIndex:0,labelProducers:null,oriented:false,swapXY:false,reflectY:false,prunedNodesSet:null,prunedEdgesSet:null,constructor:function(spec,data,_1960,vis,style){
this.spec=spec;
this.data=data;
this.grammar=_1960;
this.vis=vis;
this.style=style;
this.pad=(style==null)?null:style.padding;
this.labelProducers=new _194e.m();
this.setOrientation(spec.orientation);
this.setPrunedNodesAndEdges();
},getSharedLayoutInfo:function(){
return this.grammar.getSharedLayoutInfo();
},setPrunedNodesAndEdges:function(){
var _1961;
var _1962;
_1962=this.spec.prunedNodes;
_1961=this.spec.prunedEdges;
if(_1962!=null&&_1962.length>0){
this.prunedNodesSet=new _194f.m();
for(var _1963=0,_1964=_1962.length;_1963<_1964;++_1963){
var _1965=_1962[_1963];
if(_1965!=null){
this.prunedNodesSet.add(_1965);
}
}
}
if(_1961!=null&&_1961.length>0){
this.prunedEdgesSet=new _194f.m();
for(var i=0;i<_1961.length;++i){
if(_1961[i]!=null){
var edge=this.makeEdge(_1961[i][0],_1961[i][1]);
if(edge!=null){
this.prunedEdgesSet.add(edge);
}
}
}
}
},setOrientation:function(_1966){
if(_1966==null){
this.oriented=false;
this.reflectY=false;
this.swapXY=false;
return;
}
this.oriented=true;
if(_1966.CPVisEngineEquals("right-to-left")){
this.swapXY=true;
this.reflectY=false;
}else{
if(_1966.CPVisEngineEquals("bottom-to-top")){
this.reflectY=true;
this.swapXY=false;
}else{
if(_1966.CPVisEngineEquals("left-to-right")){
this.reflectY=true;
this.swapXY=true;
}
}
}
},makeItemInRect:function(_1967,_1968){
var s=this.builder.makeInside(_1967,_1968);
if(s!=null){
s.key=this.data.getKey(this.rows[_1968]);
}
return s;
},makeItemAtSimpleCoordinates:function(_1969,index,_196a){
var item=this.makeItemAtPosition(_1950.m.makeSimple(_1969),index);
if(_196a){
var _196b=this.grammar.elements[this.elementIndex];
_196b.styleShape(item);
return _196b.applyAesthetic(item);
}
return item;
},makeItemAtPosition:function(_196c,index){
var s=this.builder.make(_196c,index);
if(s!=null){
if(s.getParts()!=null){
for(var _196d=0,_196e=s.getParts(),_196f=_196e.length;_196d<_196f;++_196d){
var part=_196e[_196d];
part.key=this.data.getKey(this.rows[index]);
}
}
s.key=this.data.getKey(this.rows[index]);
}
return s;
},makeItemFromPath:function(x,y,codes,_1970,index){
var path=new _1951.m(x,y,_1970,codes);
path.snap=_1952.m.getSnap(this.style);
path.key=this.data.getKey(this.rows[index]);
path.setRow(index);
return path;
},connect:function(rows,_1971,_1972){
this.rows=rows;
this.builder=_1971;
this.elementIndex=_1972;
},getFieldNumericValue:function(id,index){
var f=this.vis.getByID(id);
var _1973=f.data.rows;
return _1973[index].data[f.index];
},getFieldStringValue:function(field,row){
var f=this.vis.getByID(field);
var _1974=f.data.rows;
return f.getUnformattedStringValue(_1974[row],true);
},getAllFieldValuesAsNumeric:function(id){
if(id==null){
return null;
}
var f=this.vis.getByID(id);
var rows=f.data.rows;
var _1975=new Array(rows.length);
for(var i=0;i<_1975.length;++i){
_1975[i]=rows[i].data[f.index];
}
return _1975;
},getAllFieldValuesAsString:function(id){
if(id==null){
return null;
}
var f=this.vis.getByID(id);
var rows=f.data.rows;
var _1976=new Array(rows.length);
for(var i=0;i<_1976.length;++i){
_1976[i]=f.getUnformattedStringValue(rows[i],true);
}
return _1976;
},getOtherElementItems:function(){
var _1977=this.getElementForData(this.data);
var items=new Array(this.data.rows.length);
for(var _1978=0,_1979=_1977.cachedShapes,_197a=_1979.size();_1978<_197a;++_1978){
var s=_1979.get(_1978);
if(s.rows.length==1){
items[s.rows[0]]=s;
}
}
return items;
},getStyledShape:function(id,shape,row){
var f=this.vis.getByID(id);
var _197b=f.data;
var _197c=this.getElementForData(_197b);
var _197d=shape;
for(var _197e=0,_197f=_197c.aesthetics,_1980=_197f.length;_197e<_1980;++_197e){
var _1981=_197f[_197e];
if("styleBy".CPVisEngineEquals(_1981.type)){
_197d=_1981.apply(_197d,f.data.rows[row]);
}
}
return _197d;
},getElementItems:function(id){
var f=this.vis.getByID(id);
var _1982=f.data;
var _1983=this.getElementForData(_1982);
var _1984=_1983.cachedShapes;
var _1985=new _1953.m();
var _1986=_1982.rows;
for(var _1987=0,_1988=_1984.size();_1987<_1988;++_1987){
var shape=_1984.get(_1987);
if(shape.rows==null){
continue;
}
var row=shape.rows[0];
var _1989=_1986[row].data[f.index];
if(_1989!=null){
_1985.put(_1989,shape);
}
}
return _1985;
},getLinkStyle:function(){
var _198a;
_198a=this.findLinkElement();
if(_198a==null){
return null;
}
return _198a.spec.style;
},findLinkElement:function(){
var _198b=this.grammar.elements;
for(var _198c=0,_198d=_198b.length;_198c<_198d;++_198c){
var _198e=_198b[_198c];
if(_198e.type.CPVisEngineEquals("edge")&&_198e.layout!=null){
return _198e;
}
}
return null;
},getElementForData:function(_198f){
var _1990=null;
var _1991=this.grammar.elements;
for(var _1992=0,_1993=_1991.length;_1992<_1993;++_1992){
var _1994=_1991[_1992];
if(_1994!=null&&_1994.data==_198f){
_1990=_1994;
break;
}
}
if(_1990==null){
throw new _1954.m(null,_1955.m.ENGINE_ILLEGAL_ARGUMENT,("No built element matches this data"),null);
}
return _1990;
},getAttachExtent:function(item,_1995,_1996){
var _1997=0;
var _1998=0;
this.getPadding(item,_1996);
var a=item;
var _1999=this.getPaddedBounds(a).getBounds();
if(_1999==null){
return null;
}
var p1=null;
var p2=null;
if(!this.swapXY){
_1997=0.1*_1999.width;
}else{
_1998=0.1*_1999.height;
}
if(_1995){
if(!this.swapXY){
_1998=_1999.height;
}else{
_1997=_1999.width;
}
}
p1=new _1956.m(_1999.x+_1997,_1999.y+_1998);
if(!this.swapXY){
p2=new _1956.m(_1999.x+(_1999.width-_1997),_1999.y+_1998);
}else{
p2=new _1956.m(_1999.x+_1997,_1999.y+(_1999.height-_1998));
}
return [p1,p2];
},getAttachPoint:function(item,q,_199a){
this.getPadding(item,_199a);
var a=item;
if(a.parent!=null&&a.parent.getParts().length>1){
return a.getOuterPoint();
}
var r=this.getPaddedBounds(a);
var p=a.getCenter();
if(r==null){
return p;
}
if(!this.oriented){
var angle=Math.atan2(q.y-p.y,q.x-p.x);
return new _1956.m(p.x+Math.cos(angle)*r.width/2,p.y+Math.sin(angle)*r.height/2);
}else{
if(this.swapXY){
return new _1956.m(p.x<q.x?r.x+r.width:r.x,p.y);
}else{
return new _1956.m(p.x,p.y<q.y?r.y+r.height:r.y);
}
}
},getPadding:function(item,_199b){
if(this.pad==null){
return _1957.m.NONE;
}
return _1957.m.makeForStylePadding(this.pad,item.getBounds().getExtent(),_199b);
},hasListeners:function(){
return (this.vis!=null)&&this.vis.visContext.logContext.hasListeners();
},logInfo:function(_199c,key,value){
if(this.hasListeners()){
this.vis.visContext.logContext.log(_1958.m.Info,_1959.m.CommonGrammar,_199c,key,value);
}
},logDetail:function(_199d,key,value){
if(this.hasListeners()){
this.vis.visContext.logContext.log(_1958.m.Detail,_1959.m.CommonGrammar,_199d,key,value);
}
},logWarn:function(_199e,key,value){
if(this.hasListeners()){
this.vis.visContext.logContext.log(_1958.m.Warning,_1959.m.CommonGrammar,_199e,key,value);
}
},logError:function(_199f,key,value){
if(this.hasListeners()){
this.vis.visContext.logContext.log(_1958.m.Error,_1959.m.CommonGrammar,_199f,key,value);
}
},getPaddedBounds:function(shape){
return this.getPadding(shape,shape.getBounds().getExtent()).expandRectBy(shape.getBounds());
},getElementSize:function(){
if(this.elementSize==null){
if(this.builder!=null){
var pos=_1950.m.NO_COORDS;
var shape=this.builder.make(pos,0);
if(shape==null){
this.elementSize=new _195a.m(10,10);
}else{
this.elementSize=shape.getBounds().getExtent();
}
}else{
this.elementSize=new _195a.m(10,10);
}
}
return this.elementSize;
},copyOrientationFrom:function(_19a0){
if(_19a0==null||!_19a0.isOriented()){
return false;
}
this.oriented=true;
this.swapXY=_19a0.isSwapXY();
this.reflectY=_19a0.isReflectY();
return true;
},makeLabelShape:function(spec,shape){
var _19a1=this.getLabelProducer(spec);
return _19a1.makeLabel(spec.content,shape);
},makeLabelBackgroundShape:function(spec,label,_19a2){
var _19a3=this.getLabelProducer(spec);
return _19a3.makeLabelBackground(label,_19a2);
},getLabelProducer:function(spec){
for(var _19a4=0,_19a5=this.labelProducers,_19a6=_19a5.size();_19a4<_19a6;++_19a4){
var _19a7=_19a5.get(_19a4);
if(spec.style==_19a7.style){
return _19a7;
}
}
var _19a7=_195b.m.makeForData(this.data,this.vis,true,spec,null);
this.labelProducers.add(_19a7);
return _19a7;
},getSpec:function(){
return this.spec;
},isOriented:function(){
return this.oriented;
},isSwapXY:function(){
return this.swapXY;
},isReflectY:function(){
return this.reflectY;
},getStyle:function(){
return this.style;
},getFieldRange:function(id){
var f=this.vis.getByID(id);
if(f.isCategorical()){
return new _195c.m(0,f.categories.length-1);
}
return f.range;
},applyAffineTransform:function(shape,xx,dx,yy,dy,_19a8){
var x=(dx*_19a8.width);
var y=((1-dy)*_19a8.height)-shape.getBounds().y-shape.getBounds().height/2;
shape.affine(1,x,1,y,false);
},isNodePruned:function(_19a9){
if(this.prunedNodesSet!=null){
return this.prunedNodesSet.contains(_19a9);
}
return false;
},isLinkPruned:function(from,to){
if(this.prunedEdgesSet!=null){
var edge=this.makeEdge(from,to);
return this.prunedEdgesSet.contains(edge);
}
return false;
},hasPrunedNodeOrEdge:function(){
if(this.prunedNodesSet!=null&&this.prunedNodesSet.size()>0){
return true;
}
if(this.prunedEdgesSet!=null&&this.prunedEdgesSet.size()>0){
return true;
}
return false;
},makeEdge:function(from,to){
var edge=null;
if(from!=null&&to!=null){
edge=Math.floor(from)+";"+Math.floor(to);
}
return edge;
}});
return _195f;
});
},"com/ibm/vis/engine/internal/grammar/layout/treemap/SliceAndDice":function(){
define("com/ibm/vis/engine/internal/grammar/layout/treemap/SliceAndDice",["./TreeMapAlgorithm","com/ibm/init/fork!../../../struct/Rect","com/ibm/init/statics","dojo/_base/declare"],function(_19aa,_19ab,_19ac,_19ad){
var _19ae=_19ad("com.ibm.vis.engine.internal.grammar.layout.treemap.SliceAndDice",[_19aa],{horizontal:false,constructor:function(_19af){
this.horizontal=_19af;
},createBounds:function(node,rect,_19b0){
_19b0.setBounds(node,rect);
this.layoutChildrenForNode(node,rect,_19b0,this.horizontal);
},layoutChildrenForNode:function(node,rect,_19b1,_19b2){
var _19b3=node.getChildren();
var x=rect.x;
var y=rect.y;
var w=rect.width;
var h=rect.height;
for(var _19b4=0,_19b5=_19b3.size();_19b4<_19b5;++_19b4){
var child=_19b3.get(_19b4);
var r;
if(_19b2){
var _19b6=w*child.getAggregatedSize()/node.getAggregatedSize();
r=new _19ab.m(x,y,_19b6,h);
x+=_19b6;
}else{
var _19b6=h*child.getAggregatedSize()/node.getAggregatedSize();
r=new _19ab.m(x,y,w,_19b6);
y+=_19b6;
}
_19b1.setBounds(child,r);
this.layoutChildrenForNode(child,child.bounds,_19b1,!_19b2);
}
}});
return _19ae;
});
},"com/ibm/vis/engine/internal/grammar/layout/treemap/DefaultTreeMapLayouts":function(){
define("com/ibm/vis/engine/internal/grammar/layout/treemap/DefaultTreeMapLayouts",["../../../../../extension/ExtensionFactory","com/ibm/init/fork!../../../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./TreeMapLayout","com/ibm/init/statics","dojo/_base/declare"],function(_19b7,_19b8,_19b9,_19ba,_19bb){
var _19bc=_19bb("com.ibm.vis.engine.internal.grammar.layout.treemap.DefaultTreeMapLayouts",[_19b7],{newInstance:function(name,_19bd){
if("treemap".CPVisEngineEquals(name)){
return new _19b9.m(_19bd);
}
return null;
}});
_19bc.registerExtensions=function(){
if(!_19bc.initialized){
_19bc.initialized=true;
_19b8.m.INSTANCE.registerDefaultFactory(new _19bc());
}
};
_19ba.add("com/ibm/vis/engine/internal/grammar/layout/treemap/DefaultTreeMapLayouts",["com/ibm/vis/extension/ExtensionFactory","com/ibm/vis/extension/internal/RAVEExtensionManager"],function(){
_19bc.initialized=false;
});
return _19bc;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/SymbolAestheticValueProducer":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/SymbolAestheticValueProducer",["./AestheticValueProducer","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../nativeImpl/SpecUtil","com/ibm/init/fork!../../struct/Dim","com/ibm/init/fork!../../scene/SymbolBuilder","com/ibm/init/fork!../../scene/CustomGlyphBuilder","com/ibm/init/fork!../../struct/Circle","com/ibm/init/statics","dojo/_base/declare"],function(_19be,_19bf,_19c0,_19c1,_19c2,_19c3,_19c4,_19c5,_19c6){
var _19c7=_19c6("com.ibm.vis.engine.internal.grammar.aesthetic.SymbolAestheticValueProducer",[_19be],{element:null,getContinuousSymbolName:function(index){
return _19c7.continuousSymbols[index];
},constructor:function(_19c8){
this.element=_19c8;
},getDefaultForCategory:function(index,_19c9){
return this.findSymbolIndex(_19c7.continuousSymbols[_19c7.categoricalIndices[index%_19c7.categoricalIndices.length]]);
},interpolate:function(a,b,p){
var low=a==null?0:(a);
var high=b==null?_19c7.continuousSymbols.length-1:(b);
return Math.round(low+p*(high-low));
},make:function(spec){
var _19ca=spec.symbol;
return this.getSymbolJson(_19ca);
},getSymbolJson:function(_19cb){
if(_19bf.m.isString(_19cb)){
var index=this.findSymbolIndex(_19cb);
if(index>=0){
return index;
}
return _19cb;
}
return _19c0.m.toJSONObject(_19cb);
},forPalette:function(o){
return this.getSymbolJson(o);
},modify:function(item,o,_19cc){
if(!this.isSupportedShape(item)){
return item;
}
var dim=item.getActualDim();
if(dim==null){
dim=new _19c1.m(item.getBounds().width,item.getBounds().height);
}
var _19cd=item.getBounds().getCenter();
var _19ce=null;
var _19cf=null;
if(_19bf.m.isNumber(o)){
var _19d0=Math.round((o));
if(_19d0>=0){
_19ce=_19c2.m.makeSymbol(_19c7.continuousSymbols[_19d0],_19cd.x,_19cd.y,dim.width,dim.height,null);
}
}else{
if(_19bf.m.isString(o)){
_19ce=_19c2.m.makeSymbol(o,_19cd.x,_19cd.y,dim.width,dim.height,null);
}else{
var json;
if(o instanceof Object){
var _19d1=o;
json=_19c0.m.toJSONObject(_19d1);
}else{
json=o;
}
if(_19bf.m.getItem(json,"shape")!=null){
var _19d2=null;
if(this.element!=null){
_19d2=this.element.extent;
}
var _19d3=new _19c3.m(json,dim,_19d2);
_19ce=_19d3.makeCustomShape(_19cd.x,_19cd.y,dim.width,dim.height);
_19cf=this.savePartsStyle(_19ce.getParts());
}
}
}
if(_19ce!=null){
_19ce.copyInfoFrom(item);
if(_19cf!=null){
this.restorePartsStyle(_19ce,_19cf);
}
return _19ce;
}
return item;
},restorePartsStyle:function(_19d4,_19d5){
var parts=_19d4.getParts();
for(var i=0;i<parts.length;++i){
if(_19d5[i].fill!=null){
parts[i].fill=_19d5[i].fill;
}
if(_19d5[i].outline!=null){
parts[i].outline=_19d5[i].outline;
}
if(_19d5[i].stroke!=null){
parts[i].stroke=_19d5[i].stroke;
}
}
},savePartsStyle:function(parts){
if(parts==null){
return null;
}
var _19d6=new Array(parts.length);
for(var i=0;i<parts.length;++i){
_19d6[i]=new _19c4.m(0,0,0);
_19d6[i].fill=parts[i].fill;
_19d6[i].outline=parts[i].outline;
_19d6[i].stroke=parts[i].stroke;
}
return _19d6;
},isSupportedShape:function(shape){
if(shape.isGlyphLike()){
return true;
}
if(this.element==null){
return false;
}
if(!"line".CPVisEngineEquals(this.element.type)&&!"point".CPVisEngineEquals(this.element.type)){
return false;
}
if("line".CPVisEngineEquals(this.element.type)&&"line".CPVisEngineEquals(shape.getMeta("part"))){
return false;
}
return true;
},findSymbolIndex:function(_19d7){
for(var i=0;i<_19c7.continuousSymbols.length;++i){
var s=_19c7.continuousSymbols[i];
if(s.CPVisEngineEquals(_19d7)){
return i;
}
}
return -1;
}});
_19c7.getCategoricalIndicesLength=function(){
return _19c7.categoricalIndices.length;
};
_19c7.modifySymbol=function(item,style,_19d8){
if(style.symbol!=null){
var _19d9=new _19c7(_19d8);
item=_19d9.modify(item,style.symbol,null);
}
return item;
};
_19c5.add("com/ibm/vis/engine/internal/grammar/aesthetic/SymbolAestheticValueProducer",["com/ibm/vis/engine/internal/grammar/aesthetic/AestheticValueProducer"],function(){
_19c7.continuousSymbols=["circle","poly-8","poly-7","poly-6","poly-5","square","triangle","plus","cross","star","star-6","star-7"];
_19c7.categoricalIndices=[0,5,7,8,9,6,3,4,2];
});
return _19c7;
});
},"com/ibm/vis/engine/internal/grammar/layout/treemap/TreeMapAlgorithm":function(){
define("com/ibm/vis/engine/internal/grammar/layout/treemap/TreeMapAlgorithm",["com/ibm/init/statics","dojo/_base/declare"],function(_19da,_19db){
var _19dc=_19db("com.ibm.vis.engine.internal.grammar.layout.treemap.TreeMapAlgorithm",null,{createBounds:function(node,rect,_19dd){
}});
return _19dc;
});
},"com/ibm/vis/engine/internal/struct/VisibleItem":function(){
define("com/ibm/vis/engine/internal/struct/VisibleItem",["com/ibm/init/statics","dojo/_base/declare"],function(_19de,_19df){
var _19e0=_19df("com.ibm.vis.engine.internal.struct.VisibleItem",null,{getBounds:function(){
},getCenter:function(){
},getType:function(){
},getRows:function(){
},getPart:function(i){
},getParent:function(){
}});
return _19e0;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/ShapeInterpolatorData":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/ShapeInterpolatorData",["com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../struct/ShapeFactory","com/ibm/init/fork!../../struct/PolyGeom","com/ibm/init/statics","dojo/_base/declare"],function(_19e1,_19e2,_19e3,_19e4,_19e5){
var _19e6=_19e5("com.ibm.vis.engine.internal.interaction.interpolation.ShapeInterpolatorData",null,{shape:null,type:0,geometry:null,polygeom:null,roundedRect:false,constructor:function(shape,type,_19e7,_19e8,_19e9){
this.shape=shape;
this.type=type;
this.geometry=_19e7;
this.polygeom=_19e8;
this.roundedRect=_19e9;
},getType:function(){
return this.type;
},isRectangular:function(){
return this.type==2||this.roundedRect;
},isRoundedRect:function(){
return this.roundedRect;
},getShape:function(){
return this.shape;
},getLineX1:function(){
return (this.type==1)?this.geometry[0]:0;
},getLineY1:function(){
return (this.type==1)?this.geometry[1]:0;
},getLineX2:function(){
return (this.type==1)?this.geometry[2]:0;
},getLineY2:function(){
return (this.type==1)?this.geometry[3]:0;
},getRectX:function(){
return (this.type==2||this.roundedRect)?this.geometry[0]:0;
},getRectY:function(){
return (this.type==2||this.roundedRect)?this.geometry[1]:0;
},getRectW:function(){
return (this.type==2||this.roundedRect)?this.geometry[2]:0;
},getRectH:function(){
return (this.type==2||this.roundedRect)?this.geometry[3]:0;
},getRectRadius:function(){
return (this.type==2||this.roundedRect)?this.geometry[4]:0;
},getCircleX:function(){
return (this.type==3)?this.geometry[0]:0;
},getCircleY:function(){
return (this.type==3)?this.geometry[1]:0;
},getCircleR:function(){
return (this.type==3)?this.geometry[2]:0;
},getPolyGeom:function(){
if(this.polygeom!=null){
return this.polygeom;
}
if(this.type==1){
this.polygeom=_19e3.m.makePolyGeomForLine(this.geometry[0],this.geometry[1],this.geometry[2],this.geometry[3]);
return this.polygeom;
}
if(this.type==2){
this.polygeom=_19e3.m.makePolyGeomForRect(this.geometry[0],this.geometry[1],this.geometry[2],this.geometry[3]);
return this.polygeom;
}
if(this.type==3){
this.polygeom=_19e3.m.makePolyGeomForCircle(this.geometry[0],this.geometry[1],this.geometry[2]);
return this.polygeom;
}
return null;
}});
_19e6.makeShapeInterpolatorData=function(shape){
var type=_19e1.m.getItem(shape,"type");
if("line".CPVisEngineEquals(type)){
return new _19e6(shape,1,[_19e1.m.getNumberWithDefault(shape,"x1",0),_19e1.m.getNumberWithDefault(shape,"y1",0),_19e1.m.getNumberWithDefault(shape,"x2",0),_19e1.m.getNumberWithDefault(shape,"y2",0)],null,false);
}
if("rect".CPVisEngineEquals(type)){
return new _19e6(shape,2,[_19e1.m.getNumberWithDefault(shape,"x",0),_19e1.m.getNumberWithDefault(shape,"y",0),_19e1.m.getNumberWithDefault(shape,"width",0),_19e1.m.getNumberWithDefault(shape,"height",0),0],null,false);
}
if("circle".CPVisEngineEquals(type)){
return new _19e6(shape,3,[_19e1.m.getNumberWithDefault(shape,"cx",0),_19e1.m.getNumberWithDefault(shape,"cy",0),_19e1.m.getNumberWithDefault(shape,"r",0)],null,false);
}
if("path".CPVisEngineEquals(type)){
var path=_19e1.m.getItemWithDefault(shape,"path","M0,0");
var _19ea=_19e2.m.isRoundedRectanglePath(path);
return new _19e6(shape,4,_19ea,_19e3.m.makePolyGeom(path),_19ea!=null);
}
return new _19e6(shape,0,null,null,false);
};
_19e6.areEqualShapes=function(d1,d2){
if(d1.type!=d2.type||d1.type==0||d2.type==0){
return false;
}
if(d1.type==4){
var p1=_19e1.m.getItem(d1.shape,"path");
var p2=_19e1.m.getItem(d2.shape,"path");
return (p1!=null&&p1.CPVisEngineEquals(p2));
}
for(var i=0;i<d1.geometry.length;++i){
if(Math.abs(d1.geometry[i]-d2.geometry[i])>=0.001){
return false;
}
}
return true;
};
_19e4.add("com/ibm/vis/engine/internal/interaction/interpolation/ShapeInterpolatorData",["com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/struct/PolyGeom"],function(){
_19e6.UNHANDLED_SHAPE=0;
_19e6.LINE=1;
_19e6.RECT=2;
_19e6.CIRCLE=3;
_19e6.PATH=4;
});
return _19e6;
});
},"com/ibm/vis/engine/internal/nativeImpl/Comparator":function(){
define("com/ibm/vis/engine/internal/nativeImpl/Comparator",["dojo/_base/declare"],function(_19eb){
var _19ec=_19eb("com.ibm.vis.engine.internal.nativeImpl.Comparator",null,{compare:function(a,b){
}});
return _19ec;
});
},"com/ibm/vis/engine/internal/interaction/effect/CompositeEffect":function(){
define("com/ibm/vis/engine/internal/interaction/effect/CompositeEffect",["./Effect","com/ibm/init/fork!../../../../exceptions/RaveException","com/ibm/init/fork!./Transition","com/ibm/init/statics","dojo/_base/declare"],function(_19ed,_19ee,_19ef,_19f0,_19f1){
var _19f2=_19f1("com.ibm.vis.engine.internal.interaction.effect.CompositeEffect",[_19ed],{effects:null,constructor:function(time,_19f3){
this.setTarget(-1);
this.effects=_19f3;
},getEffects:function(){
return this.effects;
},install:function(_19f4){
this.inherited(arguments,[_19f4]);
for(var _19f5=0,_19f6=this.effects,_19f7=_19f6.length;_19f5<_19f7;++_19f5){
var _19f8=_19f6[_19f5];
_19f8.install(_19f4);
}
},fireOnEffectStartEvent:function(){
},fireOnEffectEndEvent:function(){
}});
_19f2.makeCompositeEffect=function(_19f9){
if(_19f9==null||_19f9.length<1){
throw new _19ee.m("There should be at least one effect to make a composite effect",_19ee.m.COMPOSITE_EFFECT_NO_CHILD);
}
var time=0;
for(var _19fa=0,_19fb=_19f9.length;_19fa<_19fb;++_19fa){
var _19fc=_19f9[_19fa];
if(_19fc instanceof _19ef.m){
throw new _19ee.m("Simultaneously display transition and another effect is not supported.",_19ee.m.TRANSITION_UNSUPPORTED_SIMULTANEOUS_EFFECT);
}
time=Math.max(time,_19fc.getTime());
}
return new _19f2(time,_19f9);
};
return _19f2;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/AdaptiveLayerVerticalPlacement":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/AdaptiveLayerVerticalPlacement",["./DAGNodePlacementAlgorithm","com/ibm/init/fork!./DAG","com/ibm/init/fork!../../../data/Range","com/ibm/init/fork!../LinkLayout","com/ibm/init/statics","dojo/_base/declare"],function(_19fd,_19fe,_19ff,_1a00,_1a01,_1a02){
var _1a03=_1a02("com.ibm.vis.engine.internal.grammar.layout.graph.AdaptiveLayerVerticalPlacement",[_19fd],{adapter:null,constructor:function(_1a04){
this.adapter=_1a04;
},layoutNodes:function(_1a05,_1a06){
var _1a07=Array.create([_1a05.length],0);
var _1a08=Array.create([_1a05.length],0);
var _1a09=this.getNodeMinSize(_1a05)/2;
var sum=0;
for(var i=0;i<_1a05.length;++i){
_1a08[i]=_19fe.m.getMaxLevel(_1a05[i]);
var _1a0a=this.getIntraLayerLinkExtent(_1a08[i],this.getHeightOfExtent(_1a06));
var _1a0b=this.getNodeSize(_1a05[i]);
_1a07[i]=Math.max(_1a09,_1a0a+_1a0b);
sum+=_1a07[i];
}
for(var i=0;i<_1a07.length;++i){
_1a07[i]/=sum;
}
var _1a0c=this.createLayerCenters(_1a07);
var _1a0d=new Array(_1a05.length);
for(var i=0;i<_1a05.length;++i){
_1a0d[i]=new _19ff.m(_1a0c[i]-_1a07[i]/2,_1a0c[i]+_1a07[i]/2);
for(var _1a0e=0,_1a0f=_1a05[i].length;_1a0e<_1a0f;++_1a0e){
var node=_1a05[i][_1a0e];
node.setY(_1a0c[i]);
}
}
this.adapter.getSharedLayoutInfo().setLayerInfo(_1a0d,_1a08);
},createLayerCenters:function(_1a10){
var _1a11=Array.create([_1a10.length],0);
var _1a12=0;
for(var i=0;i<_1a10.length;++i){
_1a11[i]=_1a12+_1a10[i]/2;
_1a12+=_1a10[i];
}
return _1a11;
},getNodeSize:function(layer){
var _1a13=0;
for(var _1a14=0,_1a15=layer.length;_1a14<_1a15;++_1a14){
var n=layer[_1a14];
_1a13=Math.max(_1a13,this.getHeight(n));
}
return _1a13;
},getNodeMinSize:function(_1a16){
var _1a17=1;
for(var _1a18=0,_1a19=_1a16.length;_1a18<_1a19;++_1a18){
var layer=_1a16[_1a18];
for(var _1a1a=0,_1a1b=layer.length;_1a1a<_1a1b;++_1a1a){
var node=layer[_1a1a];
var _1a1c=this.getHeight(node);
if(_1a1c>0.000001){
_1a17=Math.min(_1a17,_1a1c);
}
}
}
return _1a17;
},getIntraLayerLinkExtent:function(_1a1d,_1a1e){
var _1a1f=_19fe.m.getStrokeWidthFromStyle(this.adapter.getLinkStyle());
return _1a00.m.getGoodSpaceToFit(_1a1d,_1a1e,_1a1f);
},getHeightOfExtent:function(_1a20){
return this.adapter.isSwapXY()?_1a20.width:_1a20.height;
},getHeight:function(node){
return this.adapter.isSwapXY()?node.width:node.height;
}});
return _1a03;
});
},"com/ibm/vis/engine/internal/nativeImpl/Double":function(){
define("com/ibm/vis/engine/internal/nativeImpl/Double",["exports"],function(_1a21){
_1a21.parseDouble=function(value){
return Number(value);
};
_1a21.isNaN=function(value){
return value!=value;
};
_1a21.isInfinite=function(value){
return (value==Number.NEGATIVE_INFINITY||value==Number.POSITIVE_INFINITY);
};
_1a21.NaN=Number.NaN;
_1a21.POSITIVE_INFINITY=Number.POSITIVE_INFINITY;
_1a21.NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY;
_1a21.MAX_VALUE=Number.MAX_VALUE;
_1a21.MIN_VALUE=Number.MIN_VALUE;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/SimplePointTransform":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/SimplePointTransform",["com/ibm/init/statics","dojo/_base/declare"],function(_1a22,_1a23){
var _1a24=_1a23("com.ibm.vis.engine.internal.grammar.coordinate.SimplePointTransform",null,{transform:function(x,y){
},preservesLines:function(){
}});
return _1a24;
});
},"com/ibm/vis/widget/Environment":function(){
define("com/ibm/vis/widget/Environment",["exports"],function(_1a25){
_1a25.checkBrowserSupportedConfiguration=function(){
var _1a26=_1a25._checkIpad();
if(_1a26){
return 0;
}
var _1a27=_1a25._checkChrome();
if(_1a27){
return 5;
}
var _1a28=_1a25._checkOpera();
if(_1a28){
return 4;
}
var _1a29=_1a25._getIEVersion();
var _1a2a=_1a25._getSilverLightVersion(_1a29);
if(_1a29>=7){
if(_1a2a>=5){
return 0;
}else{
return 1;
}
}else{
if(_1a29!=-1){
return 2;
}
}
var _1a2b=_1a25._getFireFoxVersion();
if(_1a2b==-1||_1a2b<=3.6){
return 3;
}else{
if(_1a2b>3.6){
return 0;
}
}
};
_1a25._checkIpad=function(){
return navigator.userAgent.match(/iPad/i)!=null;
};
_1a25._checkOpera=function(){
if(window.opera){
return true;
}else{
return false;
}
};
_1a25._checkChrome=function(){
if(navigator.userAgent&&navigator.userAgent.indexOf("Chrome")!=-1){
return true;
}else{
return false;
}
};
_1a25._getFireFoxVersion=function(){
if(navigator.userAgent&&navigator.userAgent.indexOf("Firefox")!=-1){
var index=navigator.userAgent.indexOf("Firefox");
if(index==-1){
return -1;
}
return parseFloat(navigator.userAgent.substring(index+8));
}else{
return -1;
}
};
_1a25._getIEVersion=function(){
if(navigator.userAgent&&navigator.userAgent.indexOf("MSIE")!=-1){
var index=navigator.userAgent.indexOf("MSIE");
if(index==-1){
return -1;
}
return parseFloat(navigator.userAgent.substring(index+5));
}else{
return -1;
}
};
_1a25._getSilverLightVersion=function(isIE){
var _1a2c=-1;
if(isIE&&isIE!=-1){
try{
var _1a2d=new ActiveXObject("AgControl.AgControl");
if(_1a2d.isVersionSupported("5.0")){
_1a2c=5;
}else{
if(_1a2d.isVersionSupported("4.0")){
_1a2c=4;
}else{
if(_1a2d.isVersionSupported("3.0")){
_1a2c=3;
}else{
if(_1a2d.isVersionSupported("2.0")){
_1a2c=2;
}else{
_1a2c=1;
}
}
}
}
}
catch(e){
}
}else{
try{
var slNav=navigator.plugins["Silverlight Plug-In"];
if(slNav){
_1a2c=slNav.description;
}
}
catch(e){
}
}
return _1a2c;
};
});
},"com/ibm/vis/interaction/SceneItem":function(){
define("com/ibm/vis/interaction/SceneItem",["com/ibm/init/statics","dojo/_base/declare"],function(_1a2e,_1a2f){
var _1a30=_1a2f("com.ibm.vis.interaction.SceneItem",null,{getID:function(){
},getType:function(){
},subType:function(){
},getRows:function(){
},getOriginalRows:function(){
},coordinates:function(){
},coordinateFields:function(){
},aestheticValues:function(){
},aestheticFields:function(){
},tooltipText:function(){
},meta:function(){
},nativeObject:function(){
},grammarIndex:function(){
},elementIndex:function(){
},dimensionIndex:function(){
},facetIndex:function(){
},getDataIndex:function(){
},getHitChildren:function(){
}});
return _1a30;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/ShapeInterpolator":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/ShapeInterpolator",["./Interpolator","com/ibm/init/fork!../../struct/PolyGeom","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!./ShapeInterpolatorData","com/ibm/init/fork!./RectangleShapeInterpolator","com/ibm/init/fork!./GeneralShapeInterpolator","com/ibm/init/statics","dojo/_base/declare"],function(_1a31,_1a32,_1a33,_1a34,_1a35,_1a36,_1a37,_1a38){
var _1a39=_1a38("com.ibm.vis.engine.internal.interaction.interpolation.ShapeInterpolator",[_1a31],{start_time:0,start_data:null,end_time:0,end_data:null,morphType:null,constructor:function(_1a3a,_1a3b,_1a3c,_1a3d){
if(_1a3a<=_1a3c){
this.start_time=_1a3a;
this.start_data=_1a3b;
this.end_time=_1a3c;
this.end_data=_1a3d;
}else{
this.start_time=_1a3c;
this.start_data=_1a3d;
this.end_time=_1a3a;
this.end_data=_1a3b;
}
this.morphType=_1a32.m.MORPH_STANDARD;
},setMorphType:function(_1a3e){
this.morphType=_1a3e;
}});
_1a39.canInterpolate=function(type){
return type!=null&&("line".CPVisEngineEquals(type)||"rect".CPVisEngineEquals(type)||"circle".CPVisEngineEquals(type)||"path".CPVisEngineEquals(type));
};
_1a39.makeShapeInterpolator=function(_1a3f,_1a40,_1a41,_1a42){
_1a3f=_1a33.m.ZERO_ONE.clamp(_1a3f);
_1a41=_1a33.m.ZERO_ONE.clamp(_1a41);
var _1a43=_1a34.m.makeShapeInterpolatorData(_1a40);
var _1a44=_1a34.m.makeShapeInterpolatorData(_1a42);
if(_1a43.isRectangular()&&_1a44.isRectangular()&&(_1a43.roundedRect||_1a44.roundedRect)){
return new _1a35.m(_1a3f,_1a43,_1a41,_1a44);
}
return new _1a36.m(_1a3f,_1a43,_1a41,_1a44);
};
_1a39.areEqualShapes=function(_1a45,_1a46){
var d1=_1a34.m.makeShapeInterpolatorData(_1a45);
var d2=_1a34.m.makeShapeInterpolatorData(_1a46);
return _1a34.m.areEqualShapes(d1,d2);
};
return _1a39;
});
},"com/ibm/vis/engine/internal/struct/Dim":function(){
define("com/ibm/vis/engine/internal/struct/Dim",["com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/fork!./Rect","com/ibm/init/statics","dojo/_base/declare"],function(_1a47,_1a48,_1a49,_1a4a){
var Dim=_1a4a("com.ibm.vis.engine.internal.struct.Dim",null,{width:0,height:0,constructor:function(width,_1a4b){
this.width=width;
this.height=_1a4b;
},getWidth:function(){
return this.width;
},getHeight:function(){
return this.height;
},getMin:function(){
var _1a4c=Math.max(0,Math.min(this.width,this.height));
if(_1a47.m.isNaN(_1a4c)){
_1a4c=0;
}
return _1a4c;
},hasSize:function(){
var v=Math.max(0,this.width)*Math.max(0,this.height);
return !_1a47.m.isNaN(this.width)&&!_1a47.m.isNaN(this.height)&&!_1a47.m.isNaN(v)&&v!=0;
},toString:function(){
return "Width: "+this.width+" Height: "+this.height;
},equals:function(o){
if(o==null){
return false;
}
if(o instanceof Dim){
var other=o;
return other.width==this.width&&other.height==this.height;
}
return false;
},hashCode:function(){
return this.width+(37*this.height);
},makeRect:function(){
return new _1a48.m(0,0,this.width,this.height);
},greaterThan:function(width,_1a4d){
return this.width>width||this.height>_1a4d;
}});
return Dim;
});
},"com/ibm/vis/engine/internal/geom/Distance":function(){
define("com/ibm/vis/engine/internal/geom/Distance",["com/ibm/init/fork!../struct/Circle","com/ibm/init/fork!../struct/PolyGeom","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_1a4e,_1a4f,_1a50,_1a51,_1a52){
var _1a53=_1a52("com.ibm.vis.engine.internal.geom.Distance",null,{});
_1a53.distance=function(s1,s2){
if(s1==null||s2==null){
return NaN;
}
var a=s1.asBasic();
var b=s2.asBasic();
if(a.getType()=="rect"){
if(b.getType()=="rect"){
return _1a53.rectRectDistance(a,b);
}else{
if(b.getType()=="circle"){
return _1a53.rectCircleDistance(a,b);
}else{
return _1a53.rectPolygonDistance(a,b);
}
}
}else{
if(a.getType()=="circle"){
if(b.getType()=="circle"){
return _1a53.circleCircleDistance(a,b);
}else{
if(b.getType()=="rect"){
return _1a53.rectCircleDistance(b,a);
}else{
return _1a53.circlePolygonDistance(a,b);
}
}
}else{
if(b.getType()=="circle"){
return _1a53.circlePolygonDistance(b,a);
}else{
if(b.getType()=="rect"){
return _1a53.rectPolygonDistance(b,a);
}else{
return _1a53.polygonPolygonDistance(a,b);
}
}
}
}
};
_1a53.getBoundingCircle=function(s){
if(s==null){
return null;
}
var a=s.asBasic();
if(a.getType()=="rect"){
var b=a;
var r=Math.sqrt(b.width*b.width+b.height*b.height)/2;
return new _1a4e.m(b.getCenter().x,b.getCenter().y,r);
}else{
if(a.getType()=="circle"){
return a;
}else{
var p=a;
var c=p.centroid();
var r=_1a53.furthestDistance(c,p.x,p.y);
return new _1a4e.m(c.x,c.y,r);
}
}
};
_1a53.contains=function(s,x,y){
if(s==null){
return false;
}
var a=s.asBasic();
if(a.getType()=="rect"){
return (a).contains(x,y);
}else{
if(a.getType()=="circle"){
return (a).contains(x,y);
}else{
var p=a;
return p.filled&&_1a53.isInside(x,y,p.x,p.y);
}
}
};
_1a53.rectCircleDistance=function(a,b){
var d=_1a53.pointToPolygonDistance(b.x,b.y,[a.x,a.x,a.x+a.width,a.x+a.width],[a.y,a.y+a.height,a.y+a.height,a.y],true);
return _1a53.pointDistanceToCircleDistance(b,d);
};
_1a53.rectRectDistance=function(a,b){
var _1a54=b.x>a.x+a.width||b.x+b.width<a.x||b.y>a.y+a.height||b.y+b.height<a.y;
var d=_1a53.pointToRectangleDistance(b.x,b.y,a);
d=Math.min(d,_1a53.pointToRectangleDistance(b.x+b.width,b.y,a));
d=Math.min(d,_1a53.pointToRectangleDistance(b.x,b.y+b.height,a));
d=Math.min(d,_1a53.pointToRectangleDistance(b.x+b.width,b.y+b.height,a));
if(_1a54){
return d;
}
if(a.x>=b.x&&a.x+a.width<=b.x+b.width&&a.y>=b.y&&a.y+a.height<=b.y+b.height){
return -1-d;
}
if(b.x>=a.x&&b.x+b.width<=a.x+a.width&&b.y>=a.y&&b.y+b.height<=a.y+a.height){
return -1-d;
}
var x1=Math.max(a.x,b.x);
var y1=Math.max(a.y,b.y);
var x2=Math.min(a.x+a.width,b.x+b.width);
var y2=Math.min(a.y+a.height,b.y+b.height);
return -Math.sqrt((x2-x1)*(y2-y1)/Math.min(a.width*a.height,b.width*b.height));
};
_1a53.pointToRectangleDistance=function(x,y,a){
return _1a53.pointToPolygonBoundaryDistance(x,y,[a.x,a.x,a.x+a.width,a.x+a.width],[a.y,a.y+a.height,a.y+a.height,a.y],true);
};
_1a53.circleCircleDistance=function(a,b){
var d=Math.sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));
var _1a55=a.r+b.r;
if(d>=_1a55){
return d-_1a55;
}
var _1a56=Math.max(a.r,b.r)-Math.min(a.r,b.r);
if(d<=_1a56){
return d-_1a56-1;
}else{
return (d-_1a55)/(_1a55-_1a56);
}
};
_1a53.polygonPolygonDistance=function(a,b){
return _1a53.polyPolyDistance(a.x,a.y,a.filled,b.x,b.y,b.filled);
};
_1a53.circlePolygonDistance=function(a,b){
var d=_1a53.pointToPolygonDistance(a.x,a.y,b.x,b.y,b.filled);
return _1a53.pointDistanceToCircleDistance(a,d);
};
_1a53.pointDistanceToCircleDistance=function(a,d){
if(d>a.r){
return d-a.r;
}else{
if(d>-a.r){
return (d-a.r)/(2*a.r);
}else{
return (d+a.r)-1;
}
}
};
_1a53.rectPolygonDistance=function(a,b){
return _1a53.polyPolyDistance([a.x,a.x,a.x+a.width,a.x+a.width],[a.y,a.y+a.height,a.y+a.height,a.y],true,b.x,b.y,b.filled);
};
_1a53.polyPolyDistance=function(ax,ay,_1a57,bx,by,_1a58){
var m=_1a53.pointToPolygonBoundaryDistance(ax[0],ay[0],bx,by,_1a58);
for(var i=1;i<ax.length;++i){
var t=_1a53.pointToPolygonDistance(ax[i],ay[i],bx,by,_1a58);
m=Math.min(m,t);
}
for(var i=0;i<bx.length;++i){
var t=_1a53.pointToPolygonBoundaryDistance(bx[i],by[i],ax,ay,_1a57);
m=Math.min(m,t);
}
var _1a59=_1a58&&_1a53.isInside(ax[0],ay[0],bx,by);
var _1a5a=_1a57&&_1a53.isInside(bx[0],by[0],ax,ay);
var _1a5b=_1a53.polygonBoundariesIntersect(ax,ay,_1a57,bx,by,_1a58);
if(_1a59||_1a5a){
if(_1a5b){
return -m/Math.max(_1a53.roughSize(ax,ay),_1a53.roughSize(bx,by));
}else{
return -m-1;
}
}else{
if(_1a5b){
return -0.01;
}else{
return m;
}
}
};
_1a53.polygonBoundariesIntersect=function(ax,ay,_1a5c,bx,by,_1a5d){
var n=ax.length;
for(var i=1;i<n;++i){
if(_1a53.lineIntersectsPolygonBoundary(ax[i-1],ay[i-1],ax[i],ay[i],bx,by,_1a5d)){
return true;
}
}
return _1a5c&&_1a53.lineIntersectsPolygonBoundary(ax[n-1],ay[n-1],ax[0],ay[0],bx,by,_1a5d);
};
_1a53.pointToPolygonDistance=function(px,py,x,y,_1a5e){
var d=_1a53.pointToPolygonBoundaryDistance(px,py,x,y,_1a5e);
if(d<0.000001){
return 0;
}
if(_1a5e&&_1a53.isInside(px,py,x,y)){
return -d;
}else{
return d;
}
};
_1a53.pointToPolygonBoundaryDistance=function(px,py,x,y,_1a5f){
var d=(px-x[0])*(px-x[0])+(py-y[0])*(py-y[0]);
for(var i=1;i<x.length;++i){
d=Math.min(d,(px-x[i])*(px-x[i])+(py-y[i])*(py-y[i]));
}
if(d<0.000001){
return d;
}
for(var i=1;i<x.length;++i){
var t=_1a53.pointToLineSegmentDistance(x[i-1],y[i-1],x[i],y[i],px,py);
if(t>=0&&t<d){
d=t;
if(d<0.000001){
return d;
}
}
}
if(_1a5f){
var t=_1a53.pointToLineSegmentDistance(x[x.length-1],y[x.length-1],x[0],y[0],px,py);
if(t>=0&&t<d){
d=t;
}
}
return Math.sqrt(d);
};
_1a53.roughSize=function(x,y){
var c=_1a4f.m.centroid(x,y);
var d2=(x[0]-c.x)*(x[0]-c.x)+(y[0]-c.y)*(y[0]-c.y);
for(var i=1;i<x.length;++i){
d2=Math.min(d2,(x[i]-c.x)*(x[i]-c.x)+(y[i]-c.y)*(y[i]-c.y));
}
return Math.sqrt(d2);
};
_1a53.furthestDistance=function(c,x,y){
var d2=(x[0]-c.x)*(x[0]-c.x)+(y[0]-c.y)*(y[0]-c.y);
for(var i=1;i<x.length;++i){
d2=Math.max(d2,(x[i]-c.x)*(x[i]-c.x)+(y[i]-c.y)*(y[i]-c.y));
}
return Math.sqrt(d2);
};
_1a53.isInside=function(px,py,x,y){
var _1a60=0;
var j=x.length-1;
for(var i=0;i<x.length;++i){
var m=(y[j]-y[i])/(x[j]-x[i]);
if(_1a50.m.isNaN(m)){
j=i;
continue;
}
if(m!=0&&!_1a50.m.isInfinite(Math.abs(m))){
var b=y[i]-m*x[i];
var _1a61=(py-b)/m;
if((_1a61>=x[i]&&_1a61<=x[j])||(_1a61>=x[j]&&_1a61<=x[i])){
if(_1a61<px){
if(py==y[i]){
if(y[j]>py){
_1a60++;
}
}else{
if(py==y[j]){
if(y[i]>py){
_1a60++;
}
}else{
_1a60++;
}
}
}
}
}else{
if(m==0){
j=i;
continue;
}else{
var _1a61=x[i];
var _1a62=py;
if((_1a62>=y[i]&&_1a62<=y[j])||(_1a62>=y[j]&&_1a62<=y[i])){
if(_1a61<px){
if(_1a62==y[i]){
if(y[j]>py){
_1a60++;
}
}else{
if(_1a62==y[j]){
if(y[i]>py){
_1a60++;
}
}else{
_1a60++;
}
}
}
}
}
}
j=i;
}
return (_1a60%2>0);
};
_1a53.pointToLineSegmentDistance=function(x1,y1,x2,y2,x,y){
var d2=(y2-y1)*(y2-y1)+(x2-x1)*(x2-x1);
if(d2<0.000001){
return -1;
}
var u=((x-x1)*(x2-x1)+(y-y1)*(y2-y1))/d2;
if(u<0||u>1){
return -1;
}
var xx=x1+u*(x2-x1);
var yy=y1+u*(y2-y1);
return (xx-x)*(xx-x)+(yy-y)*(yy-y);
};
_1a53.linesIntersect=function(x1,y1,x2,y2,x3,y3,x4,y4){
var d=(y4-y3)*(x2-x1)-(x4-x3)*(y2-y1);
if(Math.abs(d)<0.000001){
return false;
}
var t1=((x4-x3)*(y1-y3)-(y4-y3)*(x1-x3))/d;
if(t1<-0.000001||t1>1+0.000001){
return false;
}
var t2=((x2-x1)*(y1-y3)-(y2-y1)*(x1-x3))/d;
return (t2>-0.000001&&t2<1+0.000001);
};
_1a53.lineIntersectsPolygonBoundary=function(x1,y1,x2,y2,x,y,_1a63){
for(var i=1;i<x.length;++i){
if(_1a53.linesIntersect(x1,y1,x2,y2,x[i-1],y[i-1],x[i],y[i])){
return true;
}
}
if(_1a63&&_1a53.linesIntersect(x1,y1,x2,y2,x[x.length-1],y[x.length-1],x[0],y[0])){
return true;
}else{
return false;
}
};
_1a51.add("com/ibm/vis/engine/internal/geom/Distance",["com/ibm/vis/engine/internal/struct/Circle","com/ibm/vis/engine/internal/nativeImpl/Double"],function(){
_1a53.EFFECTIVELY_ZERO=0.000001;
});
return _1a53;
});
},"com/ibm/vis/engine/internal/interaction/morph/FeatureGroup":function(){
define("com/ibm/vis/engine/internal/interaction/morph/FeatureGroup",["com/ibm/init/fork!../../nativeImpl/HashcodeMap","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!./Matchable","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!./MorphablePair","com/ibm/init/fork!../../util/SceneUtil","com/ibm/init/fork!./MorphablePairComparator","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/statics","dojo/_base/declare"],function(_1a64,_1a65,_1a66,_1a67,_1a68,_1a69,_1a6a,_1a6b,_1a6c,_1a6d){
var _1a6e=_1a6d("com.ibm.vis.engine.internal.interaction.morph.FeatureGroup",null,{type:null,baseId:null,key:null,members:null,matches:null,unmatchedSources:null,unmatchedTargets:null,targetArray:null,targetID:null,sourceTransform:null,sourceClip:null,targetTransform:null,targetClip:null,targetGroup:null,constructor:function(_1a6f,type,key){
this.type="multitext".CPVisEngineEquals(type)?"text":type;
this.baseId=_1a6f;
this.key=key;
this.members=new _1a64.m();
this.matches=new _1a65.m();
this.unmatchedSources=new _1a65.m();
this.unmatchedTargets=new _1a65.m();
this.targetArray=null;
this.targetID=null;
this.sourceTransform=null;
this.sourceClip=null;
this.targetTransform=null;
this.targetClip=null;
this.targetGroup=null;
},addSource:function(_1a70){
var mType=this.type;
if(_1a6e.isTransitionText(_1a70)){
mType="text";
}
var _1a71=this.getItemKey(_1a70);
if(_1a71!=null){
var _1a72=this.members.get(_1a71);
if(_1a72==null){
_1a72=new _1a66.m(mType);
this.members.put(_1a71,_1a72);
}
_1a72.addSource(_1a70);
}else{
this.addUnmatchedItem(this.unmatchedSources,_1a70);
}
},setTargetArray:function(array){
if(this.targetArray!=null||array==null){
return;
}
this.targetArray=array;
var size=array.length;
for(var i=0;this.targetID==null&&i<size;++i){
var child=array[i];
if(!_1a6e.isFeatureGroup(child)){
this.targetID=_1a67.m.getItem(child,"id");
}
}
if(this.targetID==null){
this.targetArray=null;
}
},addTarget:function(_1a73){
var _1a74=this.getItemKey(_1a73);
var _1a75=this.members.get(_1a74);
if(_1a75==null){
this.addUnmatchedItem(this.unmatchedTargets,_1a73);
}else{
_1a75.addTarget(_1a73);
}
},match:function(){
var _1a76=new _1a65.m();
for(var _1a77=0,_1a78=this.members.keySet(),_1a79=_1a78.size();_1a77<_1a79;++_1a77){
var mKey=_1a78.get(_1a77);
var _1a7a=this.members.get(mKey);
if(_1a7a.sources.size()==1&&_1a7a.targets.size()==1){
if(this.checkDiffers(_1a7a.sources.get(0),_1a7a.targets.get(0),_1a7a.type)){
var _1a7b=_1a7a.sources.get(0);
var _1a7c=_1a7a.targets.get(0);
var pair=new _1a68.m(_1a7a.type,_1a7b,_1a7c);
this.matches.add(pair);
}
_1a76.add(mKey);
}else{
var _1a7d=this.matchInMatchable(_1a7a);
if(_1a7d!=null){
this.matches.addAll(_1a7d);
}
}
}
for(var _1a7e=0,_1a7f=_1a76.size();_1a7e<_1a7f;++_1a7e){
var key=_1a76.get(_1a7e);
this.members.remove(key);
}
_1a76.clear();
for(var _1a80=0,_1a81=this.members.keySet(),_1a82=_1a81.size();_1a80<_1a82;++_1a80){
var fKey=_1a81.get(_1a80);
var _1a83=_1a67.m.isString(fKey)&&fKey.toString().indexOf("|L")!=-1;
if(!_1a83){
var _1a84=this.members.get(fKey).sources;
this.addUnmatchedItemsAll(this.unmatchedSources,_1a84);
var _1a85=this.members.get(fKey).targets;
this.addUnmatchedItemsAll(this.unmatchedTargets,_1a85);
_1a76.add(fKey);
}
}
for(var _1a86=0,_1a87=_1a76.size();_1a86<_1a87;++_1a86){
var key=_1a76.get(_1a86);
this.members.remove(key);
}
for(var _1a88=0,_1a89=this.members.keySet(),_1a8a=_1a89.size();_1a88<_1a8a;++_1a88){
var fKey=_1a89.get(_1a88);
var _1a84=this.members.get(fKey).sources;
this.addUnmatchedItemsAll(this.unmatchedSources,_1a84);
var _1a85=this.members.get(fKey).targets;
this.addUnmatchedItemsAll(this.unmatchedTargets,_1a85);
}
this.members.clear();
},removePairs:function(_1a8b){
for(var _1a8c=0,_1a8d=_1a8b.size();_1a8c<_1a8d;++_1a8c){
var pair=_1a8b.get(_1a8c);
this.matches.remove(pair);
this.addUnmatchedItem(this.unmatchedSources,pair.source);
this.addUnmatchedItem(this.unmatchedTargets,pair.target);
}
},processLabelTransition:function(_1a8e,_1a8f,_1a90,_1a91){
for(var _1a92=0,_1a93=_1a8e.size();_1a92<_1a93;++_1a92){
var pair=_1a8e.get(_1a92);
this.matches.remove(pair);
}
for(var _1a94=0,_1a95=_1a8f.size();_1a94<_1a95;++_1a94){
var pair=_1a8f.get(_1a94);
this.matches.add(pair);
}
for(var _1a96=0,_1a97=_1a90.size();_1a96<_1a97;++_1a96){
var src=_1a90.get(_1a96);
this.addUnmatchedItem(this.unmatchedSources,src);
}
for(var _1a98=0,_1a99=_1a91.size();_1a98<_1a99;++_1a98){
var targ=_1a91.get(_1a98);
this.addUnmatchedItem(this.unmatchedTargets,targ);
}
},getItemKey:function(_1a9a){
var id=_1a67.m.getItem(_1a9a,"id");
var _1a9b=_1a67.m.getItem(_1a9a,this.key);
if(_1a9b==null&&!"id".CPVisEngineEquals(this.key)){
return id;
}
if(_1a9b!=null&&_1a69.m.identifiesElementShape(id)&&_1a6e.isTransitionText(_1a9a)){
var key=_1a9b.toString();
if(!key.CPVISEngineEndsWith("|L")){
_1a9b=key+"|L";
}
}
return _1a9b;
},addUnmatchedItem:function(_1a9c,item){
if(_1a6e.isTransitionMultiText(item)){
var _1a9d=_1a67.m.getItem(item,"children");
if(_1a9d!=null){
var len=_1a9d.length;
for(var i=0;i<len;++i){
_1a9c.add(_1a9d[i]);
}
}
}else{
_1a9c.add(item);
}
},addUnmatchedItemsAll:function(_1a9e,list){
for(var _1a9f=0,_1aa0=list.size();_1a9f<_1aa0;++_1a9f){
var item=list.get(_1a9f);
this.addUnmatchedItem(_1a9e,item);
}
},checkDiffers:function(_1aa1,_1aa2,_1aa3){
if("text".CPVisEngineEquals(_1aa3)){
return this.checkTextItemDiffers(_1aa1,_1aa2);
}
return this.itemPartDiffers(_1aa1,_1aa2,"shape")||this.itemPartDiffers(_1aa1,_1aa2,"fill")||this.itemPartDiffers(_1aa1,_1aa2,"stroke")||this.itemPartDiffers(_1aa1,_1aa2,"transform");
},checkTextItemDiffers:function(_1aa4,_1aa5){
if(_1a67.m.isEqual(_1aa4,_1aa5)){
return false;
}
var _1aa6=_1a6e.isTransitionMultiText(_1aa4);
var _1aa7=_1a6e.isTransitionMultiText(_1aa5);
if(_1aa6&&_1aa7){
if(this.itemPartDiffers(_1aa4,_1aa5,"transform")){
return true;
}
var _1aa8=_1a67.m.getItem(_1aa4,"children");
var _1aa9=_1a67.m.getItem(_1aa5,"children");
var size=_1aa8.length;
if(size!=_1aa9.length){
return true;
}
for(var i=0;i<size;++i){
var src=_1aa8[i];
var tgt=_1aa9[i];
if(this.textItemDiffer(src,tgt)){
return true;
}
}
return false;
}else{
if(_1aa6||_1aa7){
return true;
}
}
return this.textItemDiffer(_1aa4,_1aa5);
},textItemDiffer:function(_1aaa,_1aab){
return this.itemPartDiffers(_1aaa,_1aab,"shape")||this.itemPartDiffers(_1aaa,_1aab,"font")||this.itemPartDiffers(_1aaa,_1aab,"fill")||this.itemPartDiffers(_1aaa,_1aab,"transform");
},itemPartDiffers:function(a,b,part){
var pa=_1a67.m.getItem(a,part);
var pb=_1a67.m.getItem(b,part);
return !_1a67.m.isEqual(pa,pb);
},addUnmatchedSourcesToTargetForFading:function(fx,_1aac,_1aad){
if(this.targetArray==null){
return;
}
for(var _1aae=0,_1aaf=this.unmatchedSources,_1ab0=_1aaf.size();_1aae<_1ab0;++_1aae){
var item=_1aaf.get(_1aae);
if(_1a6e.isTransitionMultiText(item)){
var _1ab1=_1a67.m.getItem(item,"children");
if(_1ab1!=null){
var size=_1ab1.length;
for(var i=0;i<size;++i){
var child=_1ab1[i];
this.addUnmatchedItemToTargetForFading(fx,child,_1aac,_1aad);
}
}
}else{
this.addUnmatchedItemToTargetForFading(fx,item,_1aac,_1aad);
}
}
},addUnmatchedItemToTargetForFading:function(fx,shape,_1ab2,_1ab3){
var add=_1a67.m.deepClone(shape);
_1a67.m.remove(add,"effect");
var id=_1a67.m.getItem(add,"id");
_1a67.m.put(add,"id",_1ab2+id);
this.targetArray.push(add);
fx.addTargetDurationMap(_1ab2+id,_1ab3);
fx.newSceneItemAdded(add,this.targetID);
},matchInMatchable:function(_1ab4){
if(_1ab4.targets.size()==0){
return null;
}
var _1ab5=this.makeArray(_1ab4.sources);
var _1ab6=this.makeArray(_1ab4.targets);
var _1ab7=new _1a65.m();
var _1ab8=new _1a65.m();
var _1ab9=new _1a6a.m();
var _1aba=null;
var _1abb=new _1a6b.m();
for(var i=0;i<_1ab6.length;++i){
_1aba=new _1a65.m();
for(var j=0;j<_1ab5.length;++j){
if(_1ab5[j]!=null){
var pair=new _1a68.m(_1ab4.type,_1ab5[j],_1ab6[i]);
if(this.scorePair(pair)==15){
this.removeSourcePairs(_1abb,_1ab5[j]);
_1ab7.add(_1ab5[j]);
_1ab8.add(_1ab6[i]);
_1ab5[j]=null;
_1ab6[i]=null;
_1aba=null;
break;
}
if(pair.score>3){
_1aba.add(pair);
}
}
}
if(_1aba!=null&&_1aba.size()>0){
_1abb.put(i,_1aba);
}
}
this.removeMatchedFromList(_1ab4.sources,_1ab7);
this.removeMatchedFromList(_1ab4.targets,_1ab8);
var _1abc=new _1a65.m();
for(var _1abd=0,_1abe=_1abb.keySet(),_1abf=_1abe.size();_1abd<_1abf;++_1abd){
var pKey=_1abe.get(_1abd);
var _1ac0=_1abb.get(pKey);
var size=_1ac0.size();
if(size<3){
_1abc.addAll(_1ac0);
}else{
if(size>2){
_1a67.m.sortList(_1ac0,_1ab9);
_1abc.add(_1ac0.get(0));
_1abc.add(_1ac0.get(1));
}
}
}
var _1ac1=this.getBestMorphablePairs(_1ab4.sources,_1ab4.targets,_1abc);
return _1ac1;
},getBestMorphablePairs:function(_1ac2,_1ac3,_1ac4){
_1a67.m.sortList(_1ac4,new _1a6a.m());
var _1ac5=new _1a65.m();
while(this.acceptHighestMatch(_1ac5,_1ac2,_1ac3,_1ac4)){
}
return _1ac5;
},makeArray:function(list){
var size=list.size();
var array=new Array(size);
for(var i=0;i<size;++i){
array[i]=list.get(i);
}
return array;
},acceptHighestMatch:function(pairs,_1ac6,_1ac7,_1ac8){
if(_1ac8.size()<1||_1ac6.size()<1||_1ac7.size()<1){
return false;
}
var match=_1ac8.get(0);
_1ac8.remove(0);
_1ac6.remove(match.source);
_1ac7.remove(match.target);
this.removeCompetingPairs(_1ac8,match);
pairs.add(match);
return true;
},removeCompetingPairs:function(_1ac9,match){
var _1aca=new _1a65.m();
for(var _1acb=0,_1acc=_1ac9.size();_1acb<_1acc;++_1acb){
var pair=_1ac9.get(_1acb);
if(pair.source==match.source||pair.target==match.target){
_1aca.add(pair);
}
}
for(var _1acd=0,_1ace=_1aca.size();_1acd<_1ace;++_1acd){
var pair=_1aca.get(_1acd);
_1ac9.remove(pair);
}
},removeMatchedFromList:function(list,_1acf){
for(var _1ad0=0,_1ad1=_1acf.size();_1ad0<_1ad1;++_1ad0){
var item=_1acf.get(_1ad0);
list.remove(item);
}
},removeSourcePairs:function(_1ad2,_1ad3){
for(var _1ad4=0,_1ad5=_1ad2.keySet(),_1ad6=_1ad5.size();_1ad4<_1ad6;++_1ad4){
var pKey=_1ad5.get(_1ad4);
var pairs=_1ad2.get(pKey);
var _1ad7=null;
for(var _1ad8=0,_1ad9=pairs.size();_1ad8<_1ad9;++_1ad8){
var pair=pairs.get(_1ad8);
if(pair.source==_1ad3){
_1ad7=pair;
break;
}
}
if(_1ad7!=null){
pairs.remove(_1ad7);
}
}
},scorePair:function(pair){
if("text".CPVisEngineEquals(pair.type)){
return this.scoreText(pair);
}
var score=(this.itemPartDiffers(pair.source,pair.target,"transform"))?0:1;
score+=(this.itemPartDiffers(pair.source,pair.target,"stroke"))?0:2;
score+=(this.itemPartDiffers(pair.source,pair.target,"fill"))?0:4;
score+=(this.itemPartDiffers(pair.source,pair.target,"shape"))?0:8;
pair.score=score;
return score;
},scoreText:function(pair){
var score=(this.itemPartDiffers(pair.source,pair.target,"transform"))?0:1;
var _1ada=this.itemPartDiffers(pair.source,pair.target,"shape");
if(_1ada){
var _1adb=this.getTexts(pair.source);
var _1adc=this.getTexts(pair.target);
score+=this.scoreTextPairs(_1adb,_1adc);
}else{
score=15;
}
pair.score=score;
return score;
},scoreTextPairs:function(_1add,_1ade){
var _1adf="";
for(var i=0;i<_1ade.length;++i){
_1adf=_1adf+_1ade[i];
}
var _1ae0="";
for(var i=0;i<_1add.length;++i){
_1ae0=_1ae0+_1add[i];
}
var count=_1add.length+_1ade.length;
var _1ae1=Math.floor(12/count);
_1ae1=(_1ae1<1)?1:_1ae1;
var _1ae2=0;
for(var i=0;i<_1ade.length;++i){
if(_1ae0.indexOf(_1ade[i])!=-1){
_1ae2+=_1ae1;
}
}
for(var i=0;i<_1add.length;++i){
if(_1adf.indexOf(_1add[i])!=-1){
_1ae2+=_1ae1;
}
}
var score=_1add.length==_1ade.length?3+_1ae2:_1ae2;
score=(score>13)?13:score;
return score;
},getTexts:function(_1ae3){
var _1ae4=_1a67.m.getItem(_1ae3,"children");
if(_1ae4==null){
var shape=_1a67.m.getItem(_1ae3,"shape");
var text=_1a67.m.getItem(shape,"text");
return (text==null)?new Array(0):[text];
}
var size=_1ae4.length;
var texts=new Array(size);
for(var i=0;i<size;++i){
var child=_1ae4[i];
var shape=_1a67.m.getItem(child,"shape");
texts[i]=_1a67.m.getItem(shape,"text");
}
return texts;
}});
_1a6e.isTransitionShape=function(item){
return _1a67.m.getItem(item,"shape")!=null||_1a6e.isTransitionMultiText(item);
};
_1a6e.isTransitionText=function(item){
return "multitext".CPVisEngineEquals(_1a67.m.getItem(item,"type"))||"text".CPVisEngineEquals(_1a67.m.getItem(_1a67.m.getItem(item,"shape"),"type"));
};
_1a6e.isTransitionMultiText=function(item){
return "multitext".CPVisEngineEquals(_1a67.m.getItem(item,"type"));
};
_1a6e.isFeatureGroup=function(item){
var type=_1a67.m.getItem(item,"type");
var _1ae5=_1a67.m.getItem(item,"children");
if(type==null||_1ae5==null){
return false;
}
return type.CPVisEngineEquals("facet")||type.CPVisEngineEquals("element")||type.CPVisEngineEquals("legend")||type.CPVISEngineStartsWith("axis");
};
_1a6e.getFeatureGroupId=function(item){
var type=_1a67.m.getItem(item,"type");
var _1ae6=_1a67.m.getItem(item,"children");
var _1ae7=null;
var size=_1ae6.length;
for(var i=0;_1ae7==null&&i<size;++i){
var child=_1ae6[i];
_1ae7=_1a67.m.getItem(child,"id");
}
if(_1ae7==null){
_1ae7="";
}
return type+"|"+_1ae7;
};
_1a6e.getKey=function(item){
var type=_1a67.m.getItem(item,"type");
if(type.CPVisEngineEquals("element")){
return "key";
}
if(type.CPVisEngineLength()>3&&type.substring(0,4).CPVisEngineEquals("axis")){
return "value";
}
if(type.CPVisEngineEquals("legend")){
return "value";
}
return "id";
};
_1a6e.getBaseId=function(item){
var id=_1a67.m.getItem(item,"id");
if(id!=null){
return _1a6e.baseIdForGroup(id);
}
var _1ae8=_1a67.m.getItem(item,"children");
if(_1ae8!=null&&_1ae8.length>0){
var child=_1ae8[0];
return _1a6e.getBaseId(child);
}
return null;
};
_1a6e.baseIdForGroup=function(id){
if(id==null||id.CPVisEngineLength()==1){
return null;
}
if(id.indexOf("L")==0){
var index=id.indexOf("LE");
if(index>0){
return id.substring(0,index+2);
}
index=id.indexOf("LC");
if(index>0){
return id.substring(0,index+3);
}
return id;
}
var _1ae9=id.indexOf("E");
if(_1ae9>-1){
var _1aea=id.indexOf("S");
if(_1aea>0){
return id.substring(0,_1aea+1);
}
var _1aeb=id.indexOf("L");
if(_1aeb>0){
return id.substring(0,_1aeb+1);
}
}
var _1aec=id.indexOf("A");
if(_1aec>-1){
var _1aed=id.indexOf("T");
if(_1aed>0){
return id.substring(0,_1aed+1);
}
var _1aee=id.indexOf("N");
if(_1aee>0){
return id.substring(0,_1aee+1);
}
var _1aef=id.indexOf("G",_1aec);
if(_1aef>0){
return id.substring(0,_1aef+1);
}
var _1af0=id.indexOf("M");
if(_1af0>0){
return id.substring(0,_1af0+1);
}
var _1aeb=id.indexOf("L");
if(_1aeb>0){
return id.substring(0,_1aeb+1);
}
}
if(id.charAt(0)=="G"){
return id.substring(0,2);
}
return id;
};
return _1a6e;
});
},"com/ibm/init/ready":function(){
define("com/ibm/init/ready",["dojo/ready","require","dojo/_base/lang"],function(ready,_1af1,lang){
return function(){
_1af1(["./wait!"],lang.hitch(this,function(args){
ready.apply(this,args);
},arguments));
};
});
},"com/ibm/vis/engine/internal/ContentFrame":function(){
define("com/ibm/vis/engine/internal/ContentFrame",["./layout/Layoutable","com/ibm/init/fork!./nativeImpl/List","com/ibm/init/fork!./layout/NoLayout","com/ibm/init/fork!./struct/Insets","com/ibm/init/fork!./struct/Rect","com/ibm/init/fork!./scene/ItemBuilder","com/ibm/init/fork!./nativeImpl/BasicFactory","com/ibm/init/fork!./grammar/units/UnitConverter","com/ibm/init/statics","dojo/_base/declare"],function(_1af2,_1af3,_1af4,_1af5,_1af6,_1af7,_1af8,_1af9,_1afa,_1afb){
var _1afc=_1afb("com.ibm.vis.engine.internal.ContentFrame",[_1af2],{id:null,style:null,specifiedBounds:null,contents:null,layoutMethod:null,bounds:null,strokeIDSuffix:null,fillIDSuffix:null,requiresBackgroundShape:false,overallBounds:null,constructor:function(){
this.id="";
this.contents=new _1af3.m();
this.layoutMethod=_1af4.m.INSTANCE;
this.strokeIDSuffix="Stroke";
this.fillIDSuffix="Outline";
this.__constructor_com_ibm_vis_engine_internal_ContentFrame.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_ContentFrame:function(){
},setStyle:function(style){
this.style=style;
},setLayout:function(_1afd){
this.layoutMethod=_1afd;
},setId:function(id){
this.id=id;
},getId:function(){
return this.id;
},setOuterBounds:function(_1afe){
this.specifiedBounds=_1afe;
},getSpecifiedBounds:function(){
return this.specifiedBounds;
},add:function(_1aff){
this.contents.add(_1aff);
},getPreferredSize:function(){
var _1b00=this.getContentPreferredSize();
_1b00=this.expandDim(_1b00);
if(_1b00!=null&&this.style!=null&&this.style.snap!=null&&this.style.snap){
_1b00=_1b00.makeRect().makeIntegerRect().getExtent();
}
return _1b00;
},getMinimumSize:function(){
var _1b01=this.getContentMinimumSize();
_1b01=this.expandDim(_1b01);
if(_1b01!=null&&this.style!=null&&this.style.snap!=null&&this.style.snap){
_1b01=_1b01.makeRect().makeIntegerRect().getExtent();
}
return _1b01;
},getMaximumSize:function(){
var _1b02=this.getContentMaximumSize();
_1b02=this.expandDim(_1b02);
if(_1b02!=null&&this.style!=null&&this.style.snap!=null&&this.style.snap){
_1b02=_1b02.makeRect().makeIntegerRect().getExtent();
}
return _1b02;
},expandDim:function(dim){
if(dim!=null&&this.style!=null){
var _1b03=dim;
var _1b04=dim;
var _1b05=_1af5.m.makeForStylePadding(this.style.padding,_1b03,_1b04);
var rect=_1b05.expandRect(new _1af6.m(0,0,dim.width,dim.height));
var _1b06=_1af5.m.makeForStyleStroke(this.style.stroke,this.style.outline,_1b03,_1b04,this.style.outlineMethod);
rect=_1b06.expandRect(rect);
dim=rect.getExtent();
}
return dim;
},getExtent:function(){
if(this.bounds==null){
return null;
}
var _1b07=this.getContentBounds();
if(_1b07==null){
return null;
}else{
return _1b07.getExtent();
}
},getContentPreferredSize:function(){
return this.layoutMethod.getPreferredSize(this);
},getContentMinimumSize:function(){
return this.layoutMethod.getMinimumSize(this);
},getContentMaximumSize:function(){
return this.layoutMethod.getMaximumSize(this);
},layoutWithBounds:function(_1b08,_1b09,_1b0a){
this.overallBounds=_1b0a;
this.bounds=_1b08;
this.layoutMethod.layout(this,_1b09,_1b0a);
},getChildren:function(){
return this.contents;
},getStyle:function(){
return this.style;
},getBounds:function(){
return this.bounds;
},getContentBounds:function(){
var _1b0b=new _1af6.m(0,0,this.bounds.width,this.bounds.height);
if(this.style!=null){
var _1b0c=this.bounds.getExtent();
var _1b0d=_1af5.m.makeForStylePadding(this.style.padding,_1b0c,_1b0c);
var _1b0e=_1af5.m.makeForStyleStroke(this.style.stroke,this.style.outline,_1b0c,_1b0c,this.style.outlineMethod);
_1b0b=_1b0d.insetRect(_1b0b);
_1b0b=_1b0e.insetRect(_1b0b);
}
return _1b0b;
},createShapesInScene:function(scene){
var _1b0f=this.createContent();
var _1b10=this.getContentBounds().getTopLeft();
var _1b11=this.getBounds().getTopLeft();
for(var _1b12=0,_1b13=_1b0f.length;_1b12<_1b13;++_1b12){
var o=_1b0f[_1b12];
var _1b14=o;
_1b10.translate(_1b14);
_1b11.translate(_1b14);
}
var _1b15=_1b0f.length>0;
if(_1b15){
if(this.style!=null){
if(this.hasOutlineStroke()){
var _1b16=_1af7.m.createOutlineShape(this.bounds,this.style,this.id+this.strokeIDSuffix);
_1b11.translate(_1b16);
scene.push(_1b16);
}
var _1b17=_1af7.m.createFillShape(this.bounds,this.style,this.id+this.fillIDSuffix);
_1b11.translate(_1b17);
scene.push(_1b17);
}else{
if(this.requiresBackgroundShape){
var _1b18=_1af7.m.createBackgroundShape(this.bounds,this.style,this.id+this.fillIDSuffix);
_1b11.translate(_1b18);
scene.push(_1b18);
}
}
}
_1af8.m.addAll(scene,_1b0f);
},hasOutlineStroke:function(){
if(this.style!=null){
if(this.style.stroke!=null&&this.style.stroke.width!=null){
var _1b19=_1af9.m.convertLength(this.style.stroke.width,null,null);
return _1b19>0;
}else{
if(this.style.outline!=null){
return true;
}
}
}
return false;
},createContent:function(){
var _1b1a=_1af8.m.createJSONArray();
for(var _1b1b=0,_1b1c=this.contents,_1b1d=_1b1c.size();_1b1b<_1b1d;++_1b1b){
var _1b1e=_1b1c.get(_1b1b);
var _1b1f=_1b1e;
var _1b20=_1b1e.getBounds();
if(_1b20!=null&&_1b20.hasExtent()){
_1b1f.createShapesInScene(_1b1a);
}
}
return _1b1a;
},setBackgroundIdSuffixes:function(_1b21,_1b22){
this.strokeIDSuffix=_1b21;
this.fillIDSuffix=_1b22;
},setRequiresBackgroundShape:function(_1b23){
this.requiresBackgroundShape=_1b23;
},getClipBounds:function(){
var _1b24=this.getContentBounds();
return new _1af6.m(-_1b24.x,-_1b24.y,this.bounds.width,this.bounds.height);
},getOverallBounds:function(){
return this.overallBounds;
}});
_1afa.add("com/ibm/vis/engine/internal/ContentFrame",["com/ibm/vis/engine/internal/layout/Layoutable"],function(){
_1afc.STROKE_ID_SUFFIX="Stroke";
_1afc.OUTLINE_ID_SUFFIX="Outline";
});
return _1afc;
});
},"com/ibm/vis/engine/internal/grammar/units/MeasureType":function(){
define("com/ibm/vis/engine/internal/grammar/units/MeasureType",["com/ibm/init/statics","dojo/_base/declare"],function(_1b25,_1b26){
var _1b27=_1b26("com.ibm.vis.engine.internal.grammar.units.MeasureType",null,{name:null,constructor:function(name){
this.name=name;
},toString:function(){
return this.name;
}});
_1b25.add("com/ibm/vis/engine/internal/grammar/units/MeasureType",[],function(){
_1b27.LENGTH=new _1b27("length");
_1b27.MASS=new _1b27("mass");
_1b27.COUNT=new _1b27("count");
_1b27.TIME=new _1b27("time");
_1b27.DATETIME=new _1b27("datetime");
_1b27.TEMPERATURE=new _1b27("temperature");
_1b27.ANGLE=new _1b27("angle");
_1b27.CURRENCY=new _1b27("currency");
_1b27.CATEGORY=new _1b27("category");
_1b27.ORDINAL=new _1b27("ordinal");
_1b27.NUMERIC=new _1b27("numeric");
});
return _1b27;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/CoordComparator":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/CoordComparator",["../../../../../nativeImpl/Comparator","com/ibm/init/statics","dojo/_base/declare"],function(_1b28,_1b29,_1b2a){
var _1b2b=_1b2a("com.ibm.vis.engine.internal.grammar.layout.graph.stress.util.CoordComparator",[_1b28],{horizontal:false,constructor:function(_1b2c){
this.horizontal=_1b2c;
},compare:function(n1,n2){
var o1=(n1).getCurrentBounds();
var o2=(n2).getCurrentBounds();
if(this.horizontal){
var xMin1=o1.x-o1.width/2;
var xMin2=o2.x-o2.width/2;
if(xMin1<xMin2){
return -1;
}else{
if(xMin1>xMin2){
return 1;
}
}
}else{
var yMin1=o1.y-o1.height/2;
var yMin2=o2.y-o2.height/2;
if(yMin1<yMin2){
return -1;
}else{
if(yMin1>yMin2){
return 1;
}
}
}
return (n1).row-(n2).row;
}});
return _1b2b;
});
},"com/ibm/vis/engine/internal/Bounds":function(){
define("com/ibm/vis/engine/internal/Bounds",["com/ibm/init/fork!./struct/Dim","com/ibm/init/fork!./struct/Rect","com/ibm/init/fork!./grammar/units/UnitConverter","com/ibm/init/fork!./nativeImpl/Map","com/ibm/init/fork!../../monitor/LogLevel","com/ibm/init/fork!../../monitor/LogComponent","com/ibm/init/statics","dojo/_base/declare"],function(_1b2d,_1b2e,_1b2f,_1b30,_1b31,_1b32,_1b33,_1b34){
var _1b35=_1b34("com.ibm.vis.engine.internal.Bounds",null,{logger:null,spec:null,constructor:function(spec,_1b36){
this.logger=_1b36;
this.spec=spec;
},isDefined:function(){
return this.spec!=null;
},getRect:function(_1b37){
if(this.validValue("left",_1b37.width,true)&&this.validValue("right",_1b37.width,true)&&this.validValue("width",_1b37.width,false)&&this.validValue("top",_1b37.height,true)&&this.validValue("bottom",_1b37.height,true)&&this.validValue("height",_1b37.height,false)){
var left=this.getBoundsLocation("left",_1b37.width,true);
var right=this.getBoundsLocation("right",_1b37.width,true);
var width=this.getBoundsLocation("width",_1b37.width,false);
if(left==null&&this.getValue("left")==null){
if(width==null&&this.getValue("width")==null){
left=0;
if(right==null){
right=_1b37.width;
}
}else{
if(right==null&&this.getValue("right")==null){
left=(_1b37.width-width)/2;
right=left+width;
}else{
left=right-width;
}
}
}else{
if(right==null&&this.getValue("right")==null){
if(width==null&&this.getValue("width")==null){
right=_1b37.width;
}else{
right=left+width;
}
}
}
if(left!=null&&right!=null&&left>right){
this.logOutOfOrder("left","right");
var temp=left;
left=right;
right=temp;
}
var top=this.getBoundsLocation("top",_1b37.height,true);
var _1b38=this.getBoundsLocation("bottom",_1b37.height,true);
var _1b39=this.getBoundsLocation("height",_1b37.height,false);
if(top==null&&this.getValue("top")==null){
if(_1b39==null&&this.getValue("height")==null){
top=0;
if(_1b38==null){
_1b38=_1b37.height;
}
}else{
if(_1b38==null&&this.getValue("bottom")==null){
top=(_1b37.height-_1b39)/2;
_1b38=top+_1b39;
}else{
top=_1b38-_1b39;
}
}
}else{
if(_1b38==null&&this.getValue("bottom")==null){
if(_1b39==null){
_1b38=_1b37.height;
}else{
_1b38=top+_1b39;
}
}
}
if(top!=null&&_1b38!=null&&top>_1b38){
this.logOutOfOrder("top","bottom");
var temp=top;
top=_1b38;
_1b38=temp;
}
return new _1b2e.m(left,top,right-left,_1b38-top);
}
return null;
},getBoundsLocation:function(key,full,_1b3a){
var o=this.getValue(key);
if(o!=null){
var v=_1b2f.m.convertLength(o,full,full);
if(v!=null){
if(v==0){
if(_1b2f.m.isNegativeLength(o)){
if(_1b3a){
return full;
}
}else{
return v;
}
}else{
if(v>0){
return v;
}else{
if(_1b3a){
return full+v;
}
}
}
this.logBadValue(key,o);
return null;
}
}
return null;
},validValue:function(key,full,_1b3b){
return this.getValue(key)==null||this.getBoundsLocation(key,full,_1b3b)!=null;
},getValue:function(key){
if(this.spec==null){
return null;
}
if(key.CPVisEngineEquals("width")){
return this.spec.width;
}
if(key.CPVisEngineEquals("top")){
return this.spec.top;
}
if(key.CPVisEngineEquals("left")){
return this.spec.left;
}
if(key.CPVisEngineEquals("height")){
return this.spec.height;
}
if(key.CPVisEngineEquals("right")){
return this.spec.right;
}
if(key.CPVisEngineEquals("bottom")){
return this.spec.bottom;
}
return null;
},logBadValue:function(key,o){
var _1b3c=new _1b30.m();
_1b3c.put("key",key);
_1b3c.put("value",o);
this.logger.logParam(_1b31.m.Warning,_1b32.m.CommonGrammar,"badBoundsValue",_1b3c);
},logOutOfOrder:function(_1b3d,_1b3e){
var _1b3f=new _1b30.m();
_1b3f.put("param1",_1b3d);
_1b3f.put("param2",_1b3e);
this.logger.logParam(_1b31.m.Warning,_1b32.m.CommonGrammar,"reversedBoundsValues",_1b3f);
},isDefinedPositionalBounds:function(){
var left=this.getBoundsLocation("left",0,true);
var right=this.getBoundsLocation("right",0,true);
var top=this.getBoundsLocation("top",0,true);
var _1b40=this.getBoundsLocation("bottom",0,true);
return (left!=null||right!=null||top!=null||_1b40!=null);
},isWidthOrHeightDefined:function(){
var width=this.getBoundsLocation("width",0,true);
var _1b41=this.getBoundsLocation("height",0,true);
return (width!=null||_1b41!=null);
}});
_1b33.add("com/ibm/vis/engine/internal/Bounds",[],function(){
_1b35.BOUNDS_HEIGHT="height";
_1b35.BOUNDS_WIDTH="width";
_1b35.BOUNDS_TOP="top";
_1b35.BOUNDS_BOTTOM="bottom";
_1b35.BOUNDS_LEFT="left";
_1b35.BOUNDS_RIGHT="right";
});
return _1b35;
});
},"com/ibm/vis/engine/internal/facet/Compose":function(){
define("com/ibm/vis/engine/internal/facet/Compose",["com/ibm/init/fork!../util/SceneUtil","com/ibm/init/fork!../struct/Point","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../util/MathUtil","com/ibm/init/fork!../nativeImpl/LinkedHashcodeMap","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_1b42,_1b43,_1b44,_1b45,_1b46,_1b47,_1b48,_1b49){
var _1b4a=_1b49("com.ibm.vis.engine.internal.facet.Compose",null,{targetElements:null,offset:null,constructor:function(_1b4b,_1b4c,_1b4d){
this.targetElements=this.getTargetElementGroup(_1b4b,_1b4c);
var u=new _1b42.m(_1b4b);
var _1b4e=u.getGrammarInnerShapes();
if(_1b4e.length>0){
var inner=_1b4e[0];
this.offset=_1b42.m.getTransformOffset(inner);
}else{
this.offset=new _1b43.m(0,0);
}
},getOffset:function(){
return this.offset;
},getTargetElementGroup:function(_1b4f,_1b50){
var scene=new _1b42.m(_1b4f);
var _1b51=scene.getElementGroups();
if(_1b50!=null){
for(var _1b52=0,_1b53=_1b51.length;_1b52<_1b53;++_1b52){
var o=_1b51[_1b52];
if(_1b50.CPVisEngineEquals(_1b44.m.getItem(o,"id"))){
return o;
}
}
}
if(_1b51.length==0){
return _1b44.m.createJSONArray();
}
return scene.getElementGroups()[0];
},makeSubGroup:function(_1b54,_1b55){
var _1b56=_1b42.m.createGroup("facet",_1b55);
var p=_1b42.m.getBounds(_1b54);
var q=_1b42.m.getBounds(_1b55[0]);
var pc=p.getCenter();
var qc=q.getCenter();
_1b45.m.translate(_1b56,pc.x-qc.x+this.offset.x,pc.y-qc.y+this.offset.y);
return _1b56;
},prefixIDs:function(array,pre){
for(var _1b57=0,_1b58=array.length;_1b57<_1b58;++_1b57){
var o=array[_1b57];
var id=_1b44.m.getItem(o,"id");
if(id!=null){
_1b44.m.put(o,"id",pre+id);
}
var _1b59=_1b44.m.getItem(o,"children");
if(_1b59!=null){
this.prefixIDs(_1b59,pre);
}
}
},makeInnerScene:function(inner){
var _1b5a=_1b44.m.createJSONArray();
var _1b5b=new _1b46.m();
var size=this.targetElements.length;
for(var i=0;i<size;++i){
var _1b5c=this.targetElements[i];
var key=_1b44.m.getItem(_1b5c,"key");
_1b5b.put(key,_1b5c);
}
for(var _1b5d=0,_1b5e=inner.size();_1b5d<_1b5e;++_1b5d){
var _1b5f=inner.get(_1b5d);
var key=_1b5f.name;
var _1b5c=_1b5b.get(key);
this.prefixIDs(_1b5f.scene,"F"+_1b5f.index);
if(_1b5c!=null){
var _1b60=this.makeSubGroup(_1b5c,_1b5f.scene);
_1b5a.push(_1b60);
}
}
return _1b5a;
},makeKeyRowMap:function(){
var _1b61=new _1b46.m();
var n=this.targetElements.length;
for(var i=0;i<n;++i){
var _1b62=this.targetElements[i];
var key=_1b44.m.getItem(_1b62,"key");
var _1b63=_1b44.m.getItem(_1b62,"rows");
if(key!=null&&_1b63!=null){
var rows=_1b61.get(key);
if(rows==null){
rows=new _1b47.m();
_1b61.put(key,rows);
}
var m=_1b63.length;
for(var j=0;j<m;++j){
var num=_1b63[j];
rows.add(Math.floor(num));
}
}
}
return _1b61;
}});
return _1b4a;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/Position":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/Position",["com/ibm/init/statics","dojo/_base/declare"],function(_1b64,_1b65){
var _1b66=_1b65("com.ibm.vis.engine.internal.grammar.coordinate.Position",null,{base:null,extra:null,facet:null,fields:null,span:null,index:null,constructor:function(_1b67,_1b68,_1b69){
this.base=new Array(_1b67);
this.fields=new Array(_1b67);
this.span=new Array(_1b67);
this.extra=_1b68>0?new Array(_1b68):null;
this.facet=_1b69>0?new Array(_1b69):null;
this.index=Array.create([_1b67],0);
},X:function(){
return this.base[1];
},Y:function(){
return this.base[0];
},X2:function(){
return this.extra[1];
},Y2:function(){
return this.extra[0];
},length:function(){
return this.base.length;
},hasX2:function(){
return this.extra!=null&&this.extra.length>1;
},hasY2:function(){
return this.extra!=null;
},XYUndefined:function(){
return (this.base.length>0&&this.base[0]==null)||(this.base.length>1&&this.base[1]==null)||(this.hasY2()&&this.extra[0]==null)||(this.hasX2()&&this.extra[1]==null);
},XPositionCoordinateUndefined:function(){
return (this.base.length>1&&this.base[1]==null);
},setFacet:function(_1b6a){
var _1b6b=this.extra==null?0:this.extra.length;
var _1b6c=new _1b66(this.base.length,_1b6b,_1b6a.length);
for(var i=0;i<this.base.length;++i){
_1b6c.base[i]=this.base[i];
}
for(var i=0;i<_1b6b;++i){
_1b6c.extra[i]=this.extra[i];
}
for(var i=0;i<_1b6a.length;++i){
_1b6c.facet[i]=_1b6a[i];
}
return _1b6c;
},getYOrigin:function(scale){
var unit=this.fields[0]!=null?this.fields[0].unit:null;
var _1b6d=this.span!=null?this.span[0]:null;
return scale.getSpanOrigin(this.index[0],unit,_1b6d);
},containsUndefinedXValues:function(){
for(var _1b6e=1;_1b6e<this.base.length;++_1b6e){
var _1b6f=this.base[_1b6e];
if(_1b6f==null){
return true;
}
}
return false;
},getSpans:function(){
return this.span;
},setSpan:function(index,_1b70){
this.span[index]=_1b70;
}});
_1b66.makeSimple=function(_1b71){
var _1b72=new _1b66(_1b71.length,0,0);
for(var i=0;i<_1b71.length;++i){
_1b72.base[i]=_1b71[i];
_1b72.index[i]=i;
}
return _1b72;
};
_1b66.makeComplex=function(_1b73){
var _1b74=new _1b66(_1b73.length,_1b73.length,0);
for(var i=0;i<_1b73.length;++i){
_1b74.base[i]=_1b73[i][0];
_1b74.extra[i]=_1b73[i][1];
}
return _1b74;
};
_1b64.add("com/ibm/vis/engine/internal/grammar/coordinate/Position",[],function(){
_1b66.NO_COORDS=new _1b66(0,0,0);
});
return _1b66;
});
},"com/ibm/vis/engine/internal/grammar/layout/Layout":function(){
define("com/ibm/vis/engine/internal/grammar/layout/Layout",["com/ibm/init/fork!../../struct/Dim","com/ibm/init/fork!../../struct/Rect","com/ibm/init/fork!../../struct/Insets","com/ibm/init/statics","dojo/_base/declare"],function(_1b75,_1b76,_1b77,_1b78,_1b79){
var _1b7a=_1b79("com.ibm.vis.engine.internal.grammar.layout.Layout",null,{adapter:null,constructor:function(_1b7b){
this.adapter=_1b7b;
},buildLayout:function(_1b7c,_1b7d){
var _1b7e;
if(_1b7d==null){
_1b7d=this.getPreferredSize(_1b7c);
}
_1b7e=this.makeShapes(_1b7c,_1b7d);
_1b7e=this.orientShapes(_1b7c,_1b7d,_1b7e);
return _1b7e;
},getPreferredSize:function(_1b7f){
return new _1b75.m(400,400);
},makeShapes:function(_1b80,_1b81){
},getAdapter:function(){
return this.adapter;
},respectsTransforms:function(){
return true;
},orientShapes:function(_1b82,_1b83,_1b84){
if(this.adapter.isOriented()&&this.respectsTransforms()){
for(var _1b85=0,_1b86=_1b84.size();_1b85<_1b86;++_1b85){
var item=_1b84.get(_1b85);
var s=item;
if(this.adapter.isReflectY()){
s.reflect(_1b83,true);
}
if(this.adapter.isSwapXY()){
s.transpose(_1b83);
}
}
}
return _1b84;
},getDefaultOrientation:function(){
return null;
},applyStyles:function(s){
return false;
},applyLabels:function(s,list){
return false;
},getDefaultShapeSize:function(_1b87,n){
var _1b88=_1b87.width*_1b87.height/n;
var size=Math.round(Math.sqrt(_1b88/5));
if(size<10){
size=10;
}else{
if(size>60){
size=60;
}
}
return new _1b75.m(size,size);
},needsAestheticsPreApplied:function(){
return false;
},setSpecifiedPositions:function(rows,_1b89){
},isGraph:function(){
return false;
},getPaddedBounds:function(_1b8a){
if(this.adapter.getSpec().padding==null){
return new _1b76.m(0,0,_1b8a.width,_1b8a.height);
}
var _1b8b=_1b77.m.makeForStylePadding(this.adapter.getSpec().padding,_1b8a,_1b8a);
return _1b8b.insetRectFromDimension(_1b8a);
}});
return _1b7a;
});
},"com/ibm/vis/widget/VisWidgetMobile":function(){
define("com/ibm/vis/widget/VisWidgetMobile",["dojo/_base/declare","./VisControlMobile"],function(_1b8c,_1b8d){
var _1b8e=_1b8c("com.ibm.vis.widget.VisWidgetMobile",[VisControlMobile],{});
return _1b8e;
});
},"com/ibm/vis/engine/internal/nativeImpl/LinkedHashcodeMap":function(){
define("com/ibm/vis/engine/internal/nativeImpl/LinkedHashcodeMap",["dojo/_base/declare","./LinkedMap","./hash"],function(_1b8f,_1b90,hash){
var _1b91=_1b8f("com.ibm.vis.engine.internal.nativeImpl.LinkedHashcodeMap",_1b90,{_hash:hash});
return _1b91;
});
},"com/ibm/vis/engine/internal/legend/SwatchLegend":function(){
define("com/ibm/vis/engine/internal/legend/SwatchLegend",["./NewLegend","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/fork!../struct/Insets","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../scene/SymbolBuilder","com/ibm/init/fork!../struct/Poly","com/ibm/init/fork!../struct/Path","com/ibm/init/fork!../nativeImpl/SpecUtil","com/ibm/init/fork!../scene/CustomGlyphBuilder","com/ibm/init/fork!../struct/PolyGeom","com/ibm/init/fork!../Affine","com/ibm/init/fork!../scene/ItemBuilder","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/statics","dojo/_base/declare"],function(_1b92,_1b93,_1b94,_1b95,_1b96,_1b97,_1b98,_1b99,_1b9a,_1b9b,_1b9c,_1b9d,_1b9e,_1b9f,_1ba0,_1ba1){
var _1ba2=_1ba1("com.ibm.vis.engine.internal.legend.SwatchLegend",[_1b92],{numFacets:0,facetSize:0,constructor:function(_1ba3,_1ba4,_1ba5,vis){
},computePreferedSize:function(){
return new _1b93.m(200,200);
},getTickSize:function(elt,shape){
var _1ba6=0;
var _1ba7=0;
var _1ba8=elt.labelProducers;
for(var i=0;i<_1ba8.size();++i){
var _1ba9=_1ba8.get(i);
var _1baa=_1ba9.makeStringFor(elt.spec.label[i].content,shape);
var _1bab=_1ba9.calculateLabelSize(_1baa);
var _1bac=shape.getBounds().width+_1ba9.padding.getHorizontal()+_1bab.width;
var _1bad=Math.max(shape.getBounds().height,_1bab.height+_1ba9.padding.getVertical());
_1ba6=Math.max(_1ba6,_1bac);
_1ba7=Math.max(_1ba7,_1bad);
}
return new _1b93.m(_1ba6,_1ba7);
},makeGrammarStyle:function(_1bae){
var _1baf;
if(this.legendSpec.boundsStyle!=null){
_1baf=this.legendSpec.boundsStyle;
}else{
_1baf=new Object();
}
if(_1baf.fill==null){
_1baf.fill="transparent";
}
if(!_1b94.m.isNaN(_1bae)&&_1bae>0){
var _1bb0=new Object();
if(_1baf.padding==null){
_1bb0.top=_1bae;
}else{
var _1bb1=_1b95.m.makeForStylePadding(_1baf.padding,this.getAvailableDim(),this.getSize());
_1bb0.top=_1bb1.top+_1bae;
_1bb0.bottom=_1bb1.bottom;
_1bb0.left=_1bb1.left;
_1bb0.right=_1bb1.right;
}
_1baf.padding=_1bb0;
}
return _1baf;
},makeElementStyle:function(_1bb2,_1bb3,_1bb4){
var _1bb5=this.legendSpec.itemStyle==null?new Object():this.legendSpec.itemStyle;
var _1bb6=null;
var _1bb7=this.getDefaultAesthetic();
if(_1bb7.element.spec.style!=null){
if(_1bb5.fill==null){
_1bb5.fill=_1bb7.element.spec.style.fill;
}
if(_1bb5.stroke==null){
_1bb5.stroke=_1bb7.element.spec.style.stroke;
}
if(_1bb5.outline==null){
_1bb5.outline=_1bb7.element.spec.style.outline;
}
if(_1bb5.outlineMethod==null){
_1bb5.outlineMethod=_1bb7.element.spec.style.outlineMethod;
}
if(_1bb7.element.type.CPVisEngineEquals("point")){
_1bb6=_1bb7.element.spec.style.symbol;
}
}else{
_1bb5.outline="black";
}
if(_1bb7.element.isLineWithPoints){
_1bb5.outline="transparent";
}
if(_1bb7.element.spec.symbolStyle!=null){
_1bb6=_1bb7.element.spec.symbolStyle.symbol;
}
_1bb5.symbol=this.getCustomSymbol(_1bb7.element.type,_1bb6,_1bb2,_1bb3);
_1bb5.width=_1bb2.width;
_1bb5.height=_1bb2.height;
return _1bb5;
},getCustomSymbol:function(_1bb8,_1bb9,_1bba,_1bbb){
var _1bbc=this.getMainPart(_1bb8,_1bb9);
if((this.legendSpec.itemBoxStyle==null&&this.legendSpec.itemStyle==null)){
return _1bbc;
}
var _1bbd=new Object();
var _1bbe=this.createPadding(this.legendSpec.itemBoxStyle,0,this.legendSpec.itemStyle,_1bba);
var _1bbf=this.createPadding(this.legendSpec.itemStyle,0,this.legendSpec.itemBoxStyle,_1bba);
var _1bc0=1-(_1bbe.getHorizontal()+_1bbf.getHorizontal())/_1bba.width;
var _1bc1=1-(_1bbe.getVertical()+_1bbf.getVertical())/_1bba.height;
if(_1b96.m.isString(_1bbc)){
var _1bc2=_1bbc;
var cx=(_1bbe.left+_1bbf.left+(_1bba.width-_1bbe.getHorizontal()-_1bbf.getHorizontal())/2)/_1bba.width;
var cy=(_1bbe.top+_1bbf.top+(_1bba.height-_1bbe.getVertical()-_1bbf.getVertical())/2)/_1bba.height;
var _1bc3=_1b97.m.makeSymbol(_1bbc,cx,cy,_1bc0,_1bc1,this.legendSpec.itemStyle);
if(_1bc3 instanceof _1b98.m){
var path=new Object();
path.path=(_1bc3).makePath(true)+"Z";
_1bbd.shape=[path];
}else{
if(_1bc3 instanceof _1b99.m&&_1bc2.CPVISEngineStartsWith("rect")){
var path=new Object();
path.path=(_1bc3).getPathString()+"Z";
_1bbd.shape=[path];
}else{
if(_1bc2.CPVisEngineEquals("circle")){
var _1bc4=new Object();
_1bc4.x=(_1bc3).x*_1bba.width;
_1bc4.y=(_1bc3).y*_1bba.height;
_1bc4.r=(Math.max(_1bc0,_1bc1)/2)*Math.min(_1bba.width,_1bba.height);
_1bbd.shape=[_1bc4];
}else{
if(_1bc2.CPVISEngineStartsWith("rect")){
var rect=new Object();
rect.x=(_1bc3).x*_1bba.width;
rect.y=(_1bc3).y*_1bba.height;
rect.width=(_1bc3).width*_1bba.width;
rect.height=(_1bc3).height*_1bba.height;
_1bbd.shape=[rect];
}else{
if(_1bc2.CPVisEngineEquals("square")){
var rect=new Object();
rect.x=(cx-_1bc0/2)*_1bba.width;
rect.y=(cy-_1bc1/2)*_1bba.height;
rect.width=_1bc0*_1bba.width;
rect.height=_1bc1*_1bba.height;
_1bbd.shape=[rect];
}else{
_1bbd.shape=[];
}
}
}
}
}
}else{
_1bbd.shape=(_1bbc).shape;
var _1bc5=(_1bbe.left+_1bbf.left)/_1bba.width;
var _1bc6=(_1bbe.top+_1bbf.top)/_1bba.height;
for(var i=0;i<_1bbd.shape.length;++i){
var _1bc7=_1bbd.shape[i];
var json=_1b9a.m.toJSONObject(_1bc7);
if(_1b96.m.getItem(json,"r")!=null){
var newX=_1b9b.m.getConvertedSizeValueForKey(json,"x",_1bba.width*_1bc0,_1bbb.width);
newX+=_1bc5*_1bba.width;
_1b96.m.put(json,"x",newX);
var newY=_1b9b.m.getConvertedSizeValueForKey(json,"y",_1bba.height*_1bc1,_1bbb.height);
newY+=_1bc6*_1bba.height;
_1b96.m.put(json,"y",newY);
var _1bc8=new _1b93.m(_1bba.width*_1bc0,_1bba.height*_1bc1);
var newR=_1b9b.m.getConvertedRadiusValueForKey(json,"r",_1bc8,_1bbb);
_1b96.m.put(json,"r",newR);
_1bbd.shape[i]=_1b9a.m.createSpecObject(json,"com.ibm.vis.spec.CircleShapeSpec");
}else{
if(_1b96.m.getItem(json,"width")!=null){
var newX=_1b9b.m.getConvertedSizeValueForKey(json,"x",_1bba.width*_1bc0,_1bbb.width);
newX+=_1bc5*_1bba.width;
_1b96.m.put(json,"x",newX);
var newY=_1b9b.m.getConvertedSizeValueForKey(json,"y",_1bba.height*_1bc1,_1bbb.height);
newY+=_1bc6*_1bba.height;
_1b96.m.put(json,"y",newY);
var _1bc9=_1b9b.m.getConvertedSizeValueForKey(json,"width",_1bba.width*_1bc0,_1bbb.width);
_1b96.m.put(json,"width",_1bc9);
var _1bca=_1b9b.m.getConvertedSizeValueForKey(json,"height",_1bba.height*_1bc1,_1bbb.height);
_1b96.m.put(json,"height",_1bca);
_1bbd.shape[i]=_1b9a.m.createSpecObject(json,"com.ibm.vis.spec.RectangleShapeSpec");
}else{
if(_1b96.m.getItem(json,"path")!=null){
var poly=_1b9c.m.makePolyGeom(_1b96.m.getItem(json,"path"));
poly.applyPointTransform(new _1b9d.m(_1bc0,0,_1bc5,0,_1bc1,_1bc6));
_1b96.m.put(json,"path",poly.makePath());
_1bbd.shape[i]=_1b9a.m.createSpecObject(json,"com.ibm.vis.spec.PathShapeSpec");
}
}
}
}
}
var box=null;
if(this.legendSpec.itemBoxStyle!=null){
if(this.legendSpec.itemBoxStyle.cornerRadius==null){
box=this.createRectangleShapeSpec(_1bbf,_1bba);
}else{
box=this.createRoundedRectangleShapeSpec(_1bbf,_1bba);
}
}
var count=(box!=null)?1:0;
var _1bcb=new Array(_1bbd.shape.length+count);
if(count==1){
_1bcb[0]=box;
}
for(var i=count;i<_1bcb.length;++i){
_1bcb[i]=_1bbd.shape[i-count];
}
_1bbd.shape=_1bcb;
return _1bbd;
},createRectangleShapeSpec:function(_1bcc,_1bcd){
var box=new Object();
box.style=this.legendSpec.itemBoxStyle;
if(box.style.fill==null){
box.style.fill="transparent";
}
if(box.style.outline==null){
box.style.outline="transparent";
}
box.height=(1-_1bcc.getVertical()/_1bcd.height)*_1bcd.height;
box.width=(1-_1bcc.getHorizontal()/_1bcd.width)*_1bcd.width;
box.x=_1bcc.left;
box.y=_1bcc.top;
box.part="swatch box";
return box;
},createRoundedRectangleShapeSpec:function(_1bce,_1bcf){
var box=new Object();
box.style=this.legendSpec.itemBoxStyle;
if(box.style.fill==null){
box.style.fill="transparent";
}
if(box.style.outline==null){
box.style.outline="transparent";
}
var cx=_1bce.left;
var cy=_1bce.top;
var dw=(1-_1bce.getHorizontal()/_1bcf.width)*_1bcf.width;
var dh=(1-_1bce.getVertical()/_1bcf.height)*_1bcf.height;
var shape=_1b9e.m.makeRectangle(cx/_1bcf.width,cy/_1bcf.height,dw/_1bcf.width,dh/_1bcf.height,this.legendSpec.itemBoxStyle);
box.path=(shape).getPathString()+"Z";
box.part="swatch box";
return box;
},getMainPart:function(_1bd0,_1bd1){
if(this.legendSpec.itemStyle!=null&&this.legendSpec.itemStyle.symbol!=null){
return this.legendSpec.itemStyle.symbol;
}
var _1bd2;
if(_1bd0.CPVisEngineEquals("point")){
_1bd2=_1bd1==null?"circle":_1bd1;
}else{
if(_1bd0.CPVisEngineEquals("edge")||_1bd0.CPVisEngineEquals("path")||_1bd0.CPVisEngineEquals("line")){
if(_1bd1!=null){
return _1bd1;
}
_1bd2=new Object();
var path=new Object();
path.path="M0.02,0.5L0.98,0.5";
(_1bd2).shape=[path];
}else{
if(_1bd0.CPVisEngineEquals("area")){
_1bd2=new Object();
var path=new Object();
path.path="M0.05,0.95L0.3,0.2L0.6,0.75L0.95,0.05L0.95,0.95Z";
(_1bd2).shape=[path];
}else{
_1bd2="square";
}
}
}
return _1bd2;
},buildSpansForContinuousYDimension:function(_1bd3,_1bd4,_1bd5){
var span=new Object();
span.fit="exact";
return [span];
},buildYAxisSpec:function(){
return null;
},getNumFacets:function(){
return this.numFacets;
},getFacetSize:function(){
return this.facetSize;
},getSymbolSize:function(_1bd6,max,_1bd7){
var width=0;
var _1bd8=0;
this.setStyle(_1bd6);
var _1bd9=this.createPadding(this.legendSpec.itemBoxStyle,0,this.legendSpec.itemStyle,new _1b93.m(max,max));
width+=_1bd9.getHorizontal();
_1bd8+=_1bd9.getVertical();
var _1bda=this.createPadding(this.legendSpec.itemStyle,0,this.legendSpec.itemBoxStyle,new _1b93.m(max,max));
width+=_1bda.getHorizontal();
_1bd8+=_1bda.getVertical();
var _1bdb=this.getSizeFromStyle(this.legendSpec.itemStyle,max);
if(_1bdb!=null){
width+=_1bdb.width;
_1bd8+=this.getSwatchHeight(_1bdb,_1bd7);
return new _1b93.m(width,_1bd8);
}
_1bdb=this.getSizeFromStyle(this.legendSpec.itemBoxStyle,max);
if(_1bdb!=null){
width+=_1bdb.width;
_1bd8+=this.getSwatchHeight(_1bdb,_1bd7);
return new _1b93.m(width,_1bd8);
}
return this.getUnstyledSymbolSize(width,_1bd8,_1bd7);
},getUnstyledSymbolSize:function(width,_1bdc,_1bdd){
var _1bde=this.getDefaultAesthetic();
if((_1bde.type.CPVisEngineEquals("dashing")&&_1bde.element.type.CPVisEngineEquals("line"))||_1bde.element.type.CPVisEngineEquals("edge")){
width+=35;
_1bdc+=15;
}else{
if(_1bde.element.type.CPVisEngineEquals("point")&&_1bde.element.size!=null){
if(_1bde.type.CPVisEngineEquals("size")){
width+=_1bde.element.size.width;
_1bdc+=_1bde.element.size.height;
}else{
width+=Math.min(20,_1bde.element.size.width);
_1bdc+=Math.min(20,_1bde.element.size.height);
}
}else{
width+=20;
_1bdc+=20;
}
}
return new _1b93.m(width,_1bdc);
},getSwatchHeight:function(_1bdf,_1be0){
return _1bdf.height;
},setStyle:function(_1be1){
if(_1be1.element.spec.style!=null&&this.legendSpec.itemStyle!=null){
if(this.legendSpec.itemStyle.stroke==null){
this.legendSpec.itemStyle.stroke=_1be1.element.spec.style.stroke;
}
if(this.legendSpec.itemStyle.outline==null){
this.legendSpec.itemStyle.outline=_1be1.element.spec.style.outline;
}
if(this.legendSpec.itemStyle.outlineMethod==null){
this.legendSpec.itemStyle.outlineMethod=_1be1.element.spec.style.outlineMethod;
}
}
},getSizeFromStyle:function(style,_1be2){
var width;
var _1be3;
if(style!=null){
width=_1b9f.m.convertLength(style.width,_1be2,_1be2);
_1be3=_1b9f.m.convertLength(style.height,_1be2,_1be2);
if(width==null){
width=_1b9f.m.convertLength(style.size,_1be2,_1be2);
}
if(_1be3==null){
_1be3=_1b9f.m.convertLength(style.size,_1be2,_1be2);
}
width=width==null?_1be3:width;
_1be3=_1be3==null?width:_1be3;
if(width!=null&&_1be3!=null){
return new _1b93.m(width,_1be3);
}else{
return null;
}
}
return null;
},initForSceneCreation:function(){
if(this.legendSpec.stripes!=null){
this.facetSize=this.legendSpec.stripes;
this.numFacets=Math.ceil(this.getValidTickValues().size()/this.facetSize);
}else{
this.numFacets=1;
this.facetSize=this.getValidTickValues().size();
}
},makeTransforms:function(){
return null;
},setElementAestheticSpec:function(_1be4){
var a=this.getDefaultAesthetic();
var aSpec=a.setAesthetic(_1be4);
aSpec[0].field.$ref="yForLegend";
},setFacetSpec:function(_1be5,_1be6){
if(this.numFacets>1){
var _1be7=new Object();
_1be7.field=new Object();
_1be7.field.$ref=_1ba2.Facet1_Field;
_1be7.axis=new Object();
_1be7.axis.visible=false;
var _1be8=new Object();
_1be8.field=new Object();
_1be8.field.$ref=_1ba2.FacetCommon_Field;
_1be8.axis=new Object();
_1be8.axis.visible=false;
var _1be9=new Object();
_1be9.method="panel";
_1be9.fields=[_1be8,_1be7];
_1be9.targetElement=null;
_1be9.padding=_1be6.padding;
_1be5.facet=_1be9;
}
},shouldPadScale:function(){
return true;
},usesAesthetic:function(){
return true;
},usesElementLabel:function(){
return true;
},usesElementSpec:function(){
return true;
},computeGrammarBounds:function(_1bea,_1beb,_1bec,_1bed,_1bee){
var _1bef=this.facetSize*(_1beb+_1bec);
_1bef+=_1bed;
_1bea.height=Math.max(_1bee+_1bed,_1bef);
},makeXDimension:function(){
var _1bf0=new Object();
return _1bf0;
}});
_1ba0.add("com/ibm/vis/engine/internal/legend/SwatchLegend",["com/ibm/vis/engine/internal/legend/NewLegend"],function(){
_1ba2.FacetCommon_Field="FacetCommonForLegend";
_1ba2.Facet1_Field="FacetForLegend";
_1ba2.Pos_Field="PosForLegend";
});
return _1ba2;
});
},"com/ibm/vis/engine/internal/data/geo/NoDataMatcher":function(){
define("com/ibm/vis/engine/internal/data/geo/NoDataMatcher",["./GeoMatcher","com/ibm/init/statics","dojo/_base/declare"],function(_1bf1,_1bf2,_1bf3){
var _1bf4=_1bf3("com.ibm.vis.engine.internal.data.geo.NoDataMatcher",[_1bf1],{features:null,constructor:function(_1bf5){
this.features=_1bf5;
},totalRowCount:function(){
return this.features.length;
},getFeatures:function(_1bf6){
return [this.features[_1bf6]];
}});
return _1bf4;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/distance/Dijkstra":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/distance/Dijkstra",["com/ibm/init/fork!../../../../../nativeImpl/HashcodeMap","com/ibm/init/fork!../../../../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_1bf7,_1bf8,_1bf9,_1bfa){
var _1bfb=_1bfa("com.ibm.vis.engine.internal.grammar.layout.graph.stress.distance.Dijkstra",null,{bound:0,source:null,directed:false,distanceMap:null,g:null,constructor:function(g,_1bfc,_1bfd,bound){
this.g=g;
this.source=_1bfc;
this.directed=_1bfd;
this.bound=bound;
this.distanceMap=new _1bf7.m();
},execute:function(){
var _1bfe=new _1bf8.m();
for(var _1bff=0,_1c00=this.g.nodes,_1c01=_1c00.length;_1bff<_1c01;++_1bff){
var node=_1c00[_1bff];
if(node!=this.source){
this.setDistance(node,2147483647);
}else{
this.setDistance(node,0);
}
_1bfe.add(node);
}
while(_1bfe.size()>0){
var u=this.getSmallest(_1bfe);
var _1c02=this.getDistance(u);
if(_1c02<=this.bound){
var edges=null;
if(this.directed){
edges=u.outLink;
}else{
edges=u.getLinks();
}
for(var _1c03=0,_1c04=edges.length;_1c03<_1c04;++_1c03){
var edge=edges[_1c03];
var v=edge.getOpposite(u);
if(_1c02+edge.getDistanceFactor()<this.getDistance(v)){
var isIn=_1bfe.remove(v);
this.setDistance(v,_1c02+edge.getDistanceFactor());
if(isIn){
_1bfe.add(v);
}
}
}
_1bfe.remove(u);
}else{
_1bfe.clear();
}
}
},getSmallest:function(nodes){
var _1c05=null;
var dmin=0;
for(var _1c06=0,_1c07=nodes.size();_1c06<_1c07;++_1c06){
var n=nodes.get(_1c06);
var d=this.getDistance(n);
if(_1c05==null||d<dmin){
_1c05=n;
dmin=d;
}
}
return _1c05;
},setDistance:function(node,_1c08){
this.distanceMap.put(node,_1c08);
},getDistance:function(node){
return this.distanceMap.get(node);
}});
return _1bfb;
});
},"com/ibm/vis/engine/internal/interaction/defender/DefenderInteractivityListener":function(){
define("com/ibm/vis/engine/internal/interaction/defender/DefenderInteractivityListener",["../../../../interaction/InteractivityListener","com/ibm/init/statics","dojo/_base/declare"],function(_1c09,_1c0a,_1c0b){
var _1c0c=_1c0b("com.ibm.vis.engine.internal.interaction.defender.DefenderInteractivityListener",[_1c09],{VIEWPORT_SELECT_EVENT:null,VIEWPORT_MOVE_EVENT:null,constructor:function(){
this.VIEWPORT_SELECT_EVENT="viewport_select";
this.VIEWPORT_MOVE_EVENT="viewport_move";
},update:function(event){
if(this.VIEWPORT_SELECT_EVENT.CPVisEngineEquals(event.getType())){
var _1c0d=event;
var _1c0e=_1c0d.interactivity;
_1c0e.setScrollUnitStartPoint(_1c0d.x,_1c0d.y);
}else{
if(this.VIEWPORT_MOVE_EVENT.CPVisEngineEquals(event.getType())){
var _1c0d=event;
var _1c0e=_1c0d.interactivity;
var sur=_1c0e.getScrollUnitRenderer();
var _1c0f=sur.getFirstGrabber();
var _1c10=sur.getSecondGrabber();
var _1c11=sur.getMainGrabber();
var _1c12=sur.getMedian();
var cord=_1c0e.updateScrollUnit(_1c0d.x,_1c0f,_1c10,_1c11,_1c12,true);
var spec=_1c0e.getZoomChartSpec(cord);
_1c0e.updatedDefenderSpec=spec;
}
}
}});
return _1c0c;
});
},"com/ibm/vis/engine/internal/nativeImpl/Array":function(){
define("com/ibm/vis/engine/internal/nativeImpl/Array",[],function(){
Array.create=function(dims,init){
if(dims==null){
return new Array();
}else{
if(dims.length==1&&init==null){
return new Array(dims[0]);
}
}
var f=function(idx){
var arr=new Array(dims[idx]);
for(var i=0;i<dims[idx];++i){
arr[i]=(idx==(dims.length-1)?init:f(idx+1));
}
return arr;
};
return f(0);
};
});
},"com/ibm/vis/exceptions/EngineException":function(){
define("com/ibm/vis/exceptions/EngineException",["./VisException","com/ibm/init/statics","dojo/_base/declare"],function(_1c13,_1c14,_1c15){
var _1c16=_1c15("com.ibm.vis.exceptions.EngineException",[_1c13],{constructor:function(_1c17,_1c18,_1c19,_1c1a){
}});
return _1c16;
});
},"com/ibm/vis/engine/internal/globalization/CodePointRange":function(){
define("com/ibm/vis/engine/internal/globalization/CodePointRange",["com/ibm/init/statics","dojo/_base/declare"],function(_1c1b,_1c1c){
var _1c1d=_1c1c("com.ibm.vis.engine.internal.globalization.CodePointRange",null,{start:0,end:0,constructor:function(s,e){
this.start=s;
this.end=e;
}});
return _1c1d;
});
},"com/ibm/vis/engine/internal/nativeImpl/util/GrammarUtil":function(){
define("com/ibm/vis/engine/internal/nativeImpl/util/GrammarUtil",["dojo/_base/declare","../BasicFactory","../List"],function(_1c1e,BF,List){
var _1c1f=_1c1e("com.ibm.vis.engine.internal.nativeImpl.util.GrammarUtil",null,{grammar:null,constructor:function(spec){
this.grammar=spec;
},getNewID:function(_1c20){
var i=0;
while(this.getByIDFrom(this.grammar,_1c20+i)!=null){
i++;
}
return _1c20+i;
},getByIDFrom:function(_1c21,id){
if(id.CPVisEngineEquals(BF.getItem(_1c21,"id"))){
return _1c21;
}
if(BF.isArray(_1c21)){
var array=_1c21;
for(var _1c22=0;_1c22<array.length;_1c22++){
var o=BF.getArrayOrListItem(array,_1c22);
var t=this.getByIDFrom(o,id);
if(t!=null){
return t;
}
}
}else{
if(!BF.isString(_1c21)){
var keys=BF.keySet(_1c21);
if(keys!=null){
for(var _1c23=0;_1c23<keys.length;_1c23++){
var key=BF.getArrayOrListItem(keys,_1c23);
var item=BF.getItem(_1c21,key);
var t=this.getByIDFrom(item,id);
if(t!=null){
return t;
}
}
}
}
}
return null;
},getElementsForData:function(data,index){
var _1c24=new List();
var _1c25=BF.getItem(data,"id");
var _1c26=BF.getItem(this.grammar,"elements");
for(var _1c27=0;_1c27<_1c26.length;_1c27++){
var _1c28=BF.getArrayOrListItem(_1c26,_1c27);
var _1c29=BF.getItem(_1c28,"data");
if(_1c29!=null){
var _1c2a=BF.getItem(_1c29,"$ref");
if(_1c2a.CPVisEngineEquals(_1c25)){
_1c24.add(_1c28);
}
}else{
if(index==0){
_1c24.add(_1c28);
}
}
}
return _1c24;
},getDimensions:function(){
var _1c2b=BF.getItem(this.grammar,"coordinates");
return BF.getItem(_1c2b,"dimensions");
},getAxes:function(){
var _1c2c=BF.getItem(this.grammar,"coordinates");
var dims=BF.getItem(_1c2c,"dimensions");
var n=BF.size(dims);
var _1c2d=new Array(n);
for(var i=0;i<n;i++){
var dim=BF.getArrayItem(dims,i);
_1c2d[i]=BF.getItem(dim,"axis");
}
return _1c2d;
}});
_1c1f.getAesthetics=function(){
return ["color","size"];
};
_1c1f.getGrammars=function(spec){
if(spec==null){
return new Array(0);
}
var _1c2e=BF.getItem(spec,"grammar");
if(BF.isArray(_1c2e)){
var _1c2f=_1c2e;
var n=BF.size(_1c2f);
var _1c30=new Array(n);
for(var i=0;i<n;i++){
_1c30[i]=BF.getArrayItem(_1c2f,i);
}
return _1c30;
}else{
return [_1c2e];
}
};
_1c1f.getElements=function(_1c31){
var _1c32=new List();
var _1c33=0;
for(var i=0;i<_1c31.length;i++){
var _1c34=BF.getItem(_1c31[i],"elements");
_1c33=BF.size(_1c34);
for(var j=0;j<_1c33;j++){
_1c32.add(BF.getArrayItem(_1c34,j));
}
}
return BF.toArray(_1c32);
};
return _1c1f;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/AbstractGraphLayout":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/AbstractGraphLayout",["../Layout","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!../../../../../exceptions/EngineException","com/ibm/init/fork!../../../../../exceptions/ErrorCode","com/ibm/init/fork!../../../data/Range","com/ibm/init/fork!../../../nativeImpl/Map","com/ibm/init/fork!./Node","com/ibm/init/fork!./Link","com/ibm/init/fork!../../../struct/Point","com/ibm/init/statics","dojo/_base/declare"],function(_1c35,_1c36,_1c37,_1c38,_1c39,_1c3a,_1c3b,_1c3c,_1c3d,_1c3e,_1c3f){
var _1c40=_1c3f("com.ibm.vis.engine.internal.grammar.layout.graph.AbstractGraphLayout",[_1c35],{idField:null,fromField:null,toField:null,sizeField:null,nodeOrderField:null,nodes:null,links:null,specPositions:null,scaleX:0,scaleY:0,reverseXYPositionOrder:false,constructor:function(_1c41){
this.idField=_1c41.getSpec().id==null?null:_1c41.getSpec().id.$ref;
this.fromField=_1c41.getSpec().from==null?null:_1c41.getSpec().from.$ref;
this.toField=_1c41.getSpec().to==null?null:_1c41.getSpec().to.$ref;
this.sizeField=_1c41.getSpec().size==null?null:(_1c41.getSpec().size).$ref;
this.nodeOrderField=_1c41.getSpec().order==null?null:_1c41.getSpec().order.$ref;
this.specPositions=null;
this.scaleX=1;
this.scaleY=1;
this.reverseXYPositionOrder=false;
},getDefaultOrientation:function(){
return this.directedAlgorithm()?_1c40.TOP_TO_BOTTOM:null;
},getNodesCount:function(){
return this.nodes.length;
},getLinksCount:function(){
return this.links.length;
},getNodes:function(){
return this.nodes;
},getLinks:function(){
return this.links;
},makeShapes:function(_1c42,_1c43){
var _1c44=new _1c36.m();
if(_1c42==0){
return _1c44;
}
if(_1c43.width<=0||_1c43.height<=0){
throw new _1c37.m(null,_1c38.m.ENGINE_LAYOUT_DOES_NOT_FIT,"Unable to layout graph within the area: "+_1c43.width+" x "+_1c43.height,null);
}
var _1c45=this.getPaddedBounds(_1c43);
var _1c46=_1c45.getExtent();
if(_1c46.width<=0||_1c46.height<=0){
throw new _1c37.m(null,_1c38.m.ENGINE_LAYOUT_DOES_NOT_FIT,"Unable to layout graph due to excessive padding.",null);
}
if(this.adapter.hasListeners()){
this.adapter.logInfo("Graph layout starting",null,null);
}
this.makeNodesAndLinks(_1c42);
if(this.adapter.hasListeners()){
this.adapter.logInfo("Graph layout built nodes","nodeCount",this.nodes.length);
this.adapter.logInfo("Graph layout built links","linkCount",this.links.length);
}
if(_1c42==1){
if(!this.nodes[0].isDummy()&&!this.nodes[0].isNodePruned()){
var x=(_1c45.x+(_1c45.width/2))/_1c43.width;
var y=1-(_1c45.y+(_1c45.height/2))/_1c43.height;
_1c44.add(this.adapter.makeItemAtSimpleCoordinates([y,x],0,this.needsAestheticsPreApplied()));
}
return _1c44;
}
for(var i=0;i<this.nodes.length;++i){
var item=this.adapter.makeItemAtSimpleCoordinates([this.nodes[i].y,this.nodes[i].x],this.nodes[i].row,this.needsAestheticsPreApplied());
this.nodes[i].setShape(item);
this.nodes[i].width=item.getBounds().getExtent().width/_1c46.width;
this.nodes[i].height=item.getBounds().getExtent().height/_1c46.height;
}
this.positionNodesManually();
this.layoutNodes(_1c46);
this.placeInExtent(_1c46);
for(var i=0;i<this.nodes.length;++i){
if(!this.nodes[i].isDummy()&&!this.nodes[i].isNodePruned()){
if(this.nodes[i].positionSpecified()){
this.nodes[i].moveToSpecifiedPosition();
}
var shape=this.nodes[i].shape;
this.applyBoundedAffineTransform(shape,1,this.nodes[i].x,1,this.nodes[i].y,_1c45);
_1c44.add(shape);
}
}
return _1c44;
},applyBoundedAffineTransform:function(shape,xx,dx,yy,dy,_1c47){
var x=_1c47.x+(dx*_1c47.width);
var y=_1c47.y+((1-dy)*_1c47.height)-shape.getBounds().y-shape.getBounds().height/2;
shape.affine(xx,x,yy,y,false);
},linksWeighted:function(){
return this.sizeField!=null;
},setPositioningScale:function(_1c48,_1c49){
this.scaleX=_1c48;
this.scaleY=_1c49;
},positionNodesManually:function(){
if(this.specPositions!=null){
for(var i=0;i<this.specPositions.length;++i){
var _1c4a=this.specPositions[i].data[0];
if(_1c4a>=0&&_1c4a<this.nodes.length){
var x=_1c39.m.ZERO_ONE.clamp(this.specPositions[i].data[1]);
var y=_1c39.m.ZERO_ONE.clamp(this.specPositions[i].data[2]);
if(this.reverseXYPositionOrder){
this.nodes[_1c4a].specifyPosition(this.scaleX*y,this.scaleY*x);
}else{
this.nodes[_1c4a].specifyPosition(this.scaleX*x,this.scaleY*y);
}
}
}
}
},layoutNodes:function(_1c4b){
},makeNodesAndLinks:function(_1c4c){
var _1c4d=new _1c36.m();
var _1c4e=new _1c3a.m();
for(var i=0;i<_1c4c;++i){
var id=this.adapter.getFieldNumericValue(this.idField,i);
if(id==null){
continue;
}
var node=new _1c3b.m(i);
var info=[new _1c36.m(),new _1c36.m()];
node.info=info;
node.id=id;
node.order=this.nodeOrderField==null?null:this.adapter.getFieldNumericValue(this.nodeOrderField,i);
_1c4e.put(id,node);
_1c4d.add(node);
if(this.adapter.isNodePruned(id)){
node.setNodePruned(true);
}
}
this.nodes=_1c4d.toArray(new Array(_1c4d.size()));
var from=this.adapter.getAllFieldValuesAsNumeric(this.fromField);
var to=this.adapter.getAllFieldValuesAsNumeric(this.toField);
var _1c4f=new _1c36.m();
if(from!=null&&to!=null){
for(var i=0;i<from.length;++i){
var _1c50=1;
if(this.sizeField!=null){
_1c50=this.adapter.getFieldNumericValue(this.sizeField,i);
if(_1c50==null||!(_1c50>0)){
continue;
}
}
var a=_1c4e.get(from[i]);
var b=_1c4e.get(to[i]);
if(a!=null&&b!=null&&a!=b){
var link=new _1c3c.m(a,b);
link.weight=_1c50;
if(this.adapter.isLinkPruned(from[i],to[i])){
link.setLinkPruned(true);
}
(a.info)[0].add(link);
(b.info)[1].add(link);
_1c4f.add(link);
}else{
if(a==null){
if(this.adapter.hasListeners()){
this.adapter.logWarn("Could not find from node for link","link #",i);
}
}
if(b==null){
if(this.adapter.hasListeners()){
this.adapter.logWarn("Could not find to node for link","link #",i);
}
}
}
}
for(var _1c51=0,_1c52=this.nodes,_1c53=_1c52.length;_1c51<_1c53;++_1c51){
var node=_1c52[_1c51];
var info=node.info;
node.outLink=info[0].toArray(new Array(info[0].size()));
node.inLink=info[1].toArray(new Array(info[1].size()));
node.info=null;
}
}
this.links=_1c4f.toArray(new Array(_1c4f.size()));
},directedAlgorithm:function(){
return false;
},placeInExtent:function(_1c54){
var _1c55=null;
var down=null;
for(var _1c56=0,_1c57=this.nodes,_1c58=_1c57.length;_1c56<_1c58;++_1c56){
var node=_1c57[_1c56];
if(_1c55==null){
_1c55=new _1c39.m(node.x,node.x);
down=new _1c39.m(node.y,node.y);
}else{
_1c55=_1c55.unionValue(node.x);
down=down.unionValue(node.y);
}
}
var h;
var v;
for(var _1c59=0,_1c5a=this.nodes,_1c5b=_1c5a.length;_1c59<_1c5b;++_1c59){
var node=_1c5a[_1c59];
var _1c5c=node.width/2;
var _1c5d=node.height/2;
if(this.adapter.isSwapXY()){
var t=_1c5d;
_1c5d=_1c5c;
_1c5c=t;
}
h=new _1c39.m(_1c5c,1-_1c5c);
v=new _1c39.m(_1c5d,1-_1c5d);
node.setX(h.fromZeroOne(_1c55.toZeroOne(node.x)));
node.setY(v.fromZeroOne(down.toZeroOne(node.y)));
}
var _1c5e=this.adapter.getElementSize();
var edgeX=_1c5e.width/2/_1c54.width;
var edgeY=_1c5e.height/2/_1c54.height;
h=new _1c39.m(edgeX,1-edgeX);
v=new _1c39.m(edgeY,1-edgeY);
var _1c5f=this.adapter.getSharedLayoutInfo();
for(var _1c60=0,_1c61=this.links,_1c62=_1c61.length;_1c60<_1c62;++_1c60){
var link=_1c61[_1c60];
var _1c63=_1c5f.getRoutingInfo(link.from.row,link.to.row);
var _1c64=new _1c36.m();
for(var _1c65=0,_1c66=_1c63.length;_1c65<_1c66;++_1c65){
var point=_1c63[_1c65];
var x=h.fromZeroOne(_1c55.toZeroOne(point.x));
var y=v.fromZeroOne(down.toZeroOne(point.y));
_1c64.add(new _1c3d.m(x,y));
}
_1c5f.addRoutingInfo(link.from.row,link.to.row,_1c64);
}
},needsAestheticsPreApplied:function(){
return true;
},setSpecifiedPositions:function(rows,_1c67){
this.specPositions=rows;
this.reverseXYPositionOrder=_1c67;
},isGraph:function(){
return true;
}});
_1c3e.add("com/ibm/vis/engine/internal/grammar/layout/graph/AbstractGraphLayout",["com/ibm/vis/engine/internal/grammar/layout/Layout"],function(){
_1c40.TOP_TO_BOTTOM="top-to-bottom";
});
return _1c40;
});
},"com/ibm/vis/engine/internal/grammar/layout/ConnectionSide":function(){
define("com/ibm/vis/engine/internal/grammar/layout/ConnectionSide",["../../nativeImpl/Enum","com/ibm/init/statics","dojo/_base/declare"],function(_1c68,_1c69,_1c6a){
var _1c6b=_1c6a("com.ibm.vis.engine.internal.grammar.layout.ConnectionSide",[_1c68],{});
_1c6b.LEFT=new _1c6b();
_1c6b.RIGHT=new _1c6b();
_1c6b.TOP=new _1c6b();
_1c6b.BOTTOM=new _1c6b();
return _1c6b;
});
},"com/ibm/vis/engine/internal/interaction/effect/GrowEffect":function(){
define("com/ibm/vis/engine/internal/interaction/effect/GrowEffect",["./Effect","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../interpolation/ShapeInterpolator","com/ibm/init/fork!../../util/SceneUtil","com/ibm/init/fork!../../struct/PolyGeom","com/ibm/init/fork!../analysis/PieChartAnalysis","com/ibm/init/fork!../interpolation/PieGrowInterpolator","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/fork!../../struct/Line","com/ibm/init/fork!../../struct/Circle","com/ibm/init/fork!../../struct/Rect","com/ibm/init/statics","dojo/_base/declare"],function(_1c6c,_1c6d,_1c6e,_1c6f,_1c70,_1c71,_1c72,_1c73,_1c74,_1c75,_1c76,_1c77,_1c78,_1c79,_1c7a){
var _1c7b=_1c7a("com.ibm.vis.engine.internal.interaction.effect.GrowEffect",[_1c6c],{constructor:function(time){
this.setTarget(1);
},install:function(_1c7c){
this.inherited(arguments,[_1c7c]);
var _1c7d=new _1c6d.m();
this.getSceneElements(_1c7d,_1c7c.getSceneTree());
for(var _1c7e=0,_1c7f=_1c7d.size();_1c7e<_1c7f;++_1c7e){
var _1c80=_1c7d.get(_1c7e);
var _1c81=_1c6e.m.getItem(_1c80,"children");
if(_1c81!=null&&_1c81.length>0){
var child=_1c81[0];
var id=_1c6e.m.getItem(child,"id");
if(this.isTarget(id)){
this.installElementGrow(_1c80,_1c7c);
}
}
}
},getSceneElements:function(_1c82,array){
if(array==null){
return;
}
var len=array.length;
for(var i=0;i<len;++i){
var obj=array[i];
var type=_1c6e.m.getItem(obj,"type");
if("element".CPVisEngineEquals(type)){
_1c82.add(obj);
}else{
var _1c83=_1c6e.m.getItem(obj,"children");
if(_1c83!=null){
this.getSceneElements(_1c82,_1c83);
}
}
}
},installElementGrow:function(_1c84,_1c85){
var _1c86=_1c6e.m.getItem(_1c84,"baseline");
var ox1=_1c6e.m.getItem(_1c86,"x1");
var oy1=_1c6e.m.getItem(_1c86,"y1");
var ox2=_1c6e.m.getItem(_1c86,"x2");
var oy2=_1c6e.m.getItem(_1c86,"y2");
if(_1c86==null||ox1==null||oy1==null||ox2==null||oy2==null){
this.installLocalXYGrow(_1c84,_1c85);
return;
}
var x1=ox1;
var y1=oy1;
var x2=ox2;
var y2=oy2;
var xsame=Math.abs(x1-x2)<=0.001;
var ysame=Math.abs(y1-y2)<=0.001;
if(xsame&&ysame){
this.installCenterPointGrow(_1c84,x1,y1,_1c85);
return;
}
if(!xsame&&!ysame){
return;
}
var _1c87=xsame;
var base=_1c87?x1:y1;
this.installBottomUpGrow(_1c84,_1c87,base,_1c85);
},installLocalXYGrow:function(_1c88,_1c89){
var ids=this.getIDsOfElement(_1c88);
var _1c8a=new _1c6f.m();
var _1c8b=0;
for(var _1c8c=0,_1c8d=ids.size();_1c8c<_1c8d;++_1c8c){
var id=ids.get(_1c8c);
var item=this.items.get(id);
var shape=_1c6e.m.getItem(item,"shape");
var type=_1c6e.m.getItem(shape,"type");
if(!_1c70.m.canInterpolate(type)){
continue;
}
var _1c8e=_1c71.m.getBounds(item);
if(_1c8e!=null){
_1c8b=Math.max(_1c8b,Math.max(_1c8e.width,_1c8e.height));
_1c8a.put(id,_1c8e);
}
}
if(_1c8b==0){
_1c8b=1;
}
for(var _1c8f=0,_1c90=ids.size();_1c8f<_1c90;++_1c8f){
var id=ids.get(_1c8f);
var item=this.items.get(id);
var shape=_1c6e.m.getItem(item,"shape");
var type=_1c6e.m.getItem(shape,"type");
if(item==null||shape==null||type==null){
continue;
}
var _1c8e=_1c8a.get(id);
if(_1c8e!=null&&_1c70.m.canInterpolate(type)){
var size=Math.max(_1c8e.width,_1c8e.height);
this.installGrow(id,this.projectToLocalCenter(shape),shape,size/_1c8b,_1c89,_1c72.m.MORPH_STANDARD);
}else{
this.installLateFadeIn(id,_1c89);
}
}
},installCenterPointGrow:function(_1c91,cx,cy,_1c92){
var pie=_1c73.m.getPieChartAnalysis(_1c91);
if(pie!=null){
this.installPieGrow(_1c91,pie,_1c92);
}else{
this.installGlobalXYGrow(_1c91,cx,cy,_1c92);
}
},installPieGrow:function(_1c93,pie,_1c94){
var _1c95=_1c74.m.makePieGrowInterpolator(pie);
for(var _1c96=0,_1c97=_1c95.wedgeIDs,_1c98=_1c97.size();_1c96<_1c98;++_1c96){
var id=_1c97.get(_1c96);
_1c94.addAnimatedMorph(id,_1c95);
}
for(var _1c99=0,_1c9a=pie.nonWedgeItems,_1c9b=_1c9a.size();_1c99<_1c9b;++_1c99){
var item=_1c9a.get(_1c99);
var id=_1c6e.m.getItem(item,"id");
this.installLateFadeIn(id,_1c94);
}
},installGlobalXYGrow:function(_1c9c,cx,cy,_1c9d){
var ids=this.getIDsOfElement(_1c9c);
for(var _1c9e=0,_1c9f=ids.size();_1c9e<_1c9f;++_1c9e){
var id=ids.get(_1c9e);
var item=this.items.get(id);
var shape=_1c6e.m.getItem(item,"shape");
var type=_1c6e.m.getItem(shape,"type");
if(item==null||shape==null||type==null){
continue;
}
if(_1c70.m.canInterpolate(type)){
this.installGrow(id,this.projectToGlobalCenter(shape,cx,cy),shape,1,_1c9d,_1c72.m.MORPH_STANDARD);
}else{
this.installLateFadeIn(id,_1c9d);
}
}
},installBottomUpGrow:function(_1ca0,_1ca1,base,_1ca2){
var _1ca3=new _1c6d.m();
var bars=new _1c6f.m();
var paths=new _1c6d.m();
var lines=new _1c6d.m();
var _1ca4=new _1c6d.m();
var _1ca5=_1c6e.m.getItem(_1ca0,"children");
if(_1ca5==null){
return;
}
this.processBottomUpGrowItems(_1ca5,_1ca1,_1ca3,bars,paths,lines,_1ca4);
for(var _1ca6=0,_1ca7=_1ca3.size();_1ca6<_1ca7;++_1ca6){
var id=_1ca3.get(_1ca6);
this.installLateFadeIn(id,_1ca2);
}
this.installBarBottomUpGrow(_1ca1,base,_1ca2,bars);
this.installPathBottomUpGrow(_1ca1,base,_1ca2,paths);
this.installLineBottomUpGrow(_1ca1,base,_1ca2,lines);
this.installPointBottomUpGrow(_1ca1,base,_1ca2,_1ca4);
},processBottomUpGrowItems:function(_1ca8,_1ca9,_1caa,bars,paths,lines,_1cab){
for(var i=0;i<_1ca8.length;++i){
var item=_1ca8[i];
var type=_1c6e.m.getItem(item,"type");
if("multitext".CPVisEngineEquals(type)){
this.getIDsOfArray(_1caa,_1c6e.m.getItem(item,"children"));
}else{
var shape=_1c6e.m.getItem(item,"shape");
type=_1c6e.m.getItem(shape,"type");
if(type==null){
var _1cac=_1c6e.m.getItem(item,"children");
this.processBottomUpGrowItems(_1cac,_1ca9,_1caa,bars,paths,lines,_1cab);
}else{
if("rect".CPVisEngineEquals(type)){
var _1cad;
if(_1ca9){
_1cad=_1c6e.m.getNumberWithDefault(shape,"y",0)+_1c6e.m.getNumberWithDefault(shape,"height",0)/2;
}else{
_1cad=_1c6e.m.getNumberWithDefault(shape,"x",0)+_1c6e.m.getNumberWithDefault(shape,"width",0)/2;
}
_1cad=Math.round(1000*_1cad);
var key=_1cad;
var vals=bars.get(key);
if(vals==null){
vals=new _1c6d.m();
bars.put(key,vals);
}
vals.add(item);
}else{
if("text".CPVisEngineEquals(type)){
var id=_1c6e.m.getItem(item,"id");
if(id!=null){
_1caa.add(id);
}
}else{
if("path".CPVisEngineEquals(type)){
paths.add(item);
}else{
if("line".CPVisEngineEquals(type)){
lines.add(item);
}else{
if("circle".CPVisEngineEquals(type)){
_1cab.add(item);
}
}
}
}
}
}
}
}
},installPathBottomUpGrow:function(_1cae,base,_1caf,paths){
var _1cb0=this.getPathMaxDistance(_1cae,base,paths);
var _1cb1=0;
for(var _1cb2=0,_1cb3=paths.size();_1cb2<_1cb3;++_1cb2){
var item=paths.get(_1cb2);
var shape=_1c6e.m.getItem(item,"shape");
var path=_1c6e.m.getItem(shape,"path");
var poly=_1c72.m.makePolyGeom(path);
var x,y;
if(_1cae){
y=poly.y;
x=Array.create([poly.y.length],0);
for(var j=0;j<x.length;++j){
x[j]=base;
if(!_1c75.m.isNaN(poly.x[j])&&!_1c75.m.isInfinite(poly.x[j])){
_1cb1=Math.max(_1cb1,Math.abs(poly.x[j]-base));
}
}
}else{
x=poly.x;
y=Array.create([poly.x.length],0);
for(var j=0;j<y.length;++j){
y[j]=base;
if(!_1c75.m.isNaN(poly.y[j])&&!_1c75.m.isInfinite(poly.y[j])){
_1cb1=Math.max(_1cb1,Math.abs(poly.y[j]-base));
}
}
}
var _1cb4=new _1c72.m(x,y,poly.types);
var _1cb5=_1c72.m.makeJSONPath(_1cb4);
var id=_1c6e.m.getItem(item,"id");
this.installGrow(id,_1cb5,shape,_1cb1/_1cb0,_1caf,_1c72.m.MORPH_GROW_WITH_SAME_SPEED);
}
},getPathMaxDistance:function(_1cb6,base,items){
var _1cb7=0;
for(var _1cb8=0,_1cb9=items.size();_1cb8<_1cb9;++_1cb8){
var item=items.get(_1cb8);
var shape=_1c6e.m.getItem(item,"shape");
var path=_1c6e.m.getItem(shape,"path");
var poly=_1c72.m.makePolyGeom(path);
var _1cba=_1cb6?poly.x:poly.y;
for(var _1cbb=0,_1cbc=_1cba.length;_1cbb<_1cbc;++_1cbb){
var pos=_1cba[_1cbb];
if(!_1c75.m.isNaN(pos)&&!_1c75.m.isInfinite(pos)){
_1cb7=Math.max(_1cb7,Math.abs(pos-base));
}
}
}
return _1cb7;
},installLineBottomUpGrow:function(_1cbd,base,_1cbe,lines){
var _1cbf=0;
for(var _1cc0=0,_1cc1=lines.size();_1cc0<_1cc1;++_1cc0){
var item=lines.get(_1cc0);
var shape=_1c6e.m.getItem(item,"shape");
var x1=(_1c6e.m.getItem(shape,"x1"));
var x2=(_1c6e.m.getItem(shape,"x2"));
var y1=(_1c6e.m.getItem(shape,"y1"));
var y2=(_1c6e.m.getItem(shape,"y2"));
var _1cc2=_1cbd?Math.max(Math.abs(x1-base),Math.abs(x2-base)):Math.max(Math.abs(y1-base),Math.abs(y2-base));
_1cbf=Math.max(_1cbf,_1cc2);
}
var _1cc2;
for(var _1cc3=0,_1cc4=lines.size();_1cc3<_1cc4;++_1cc3){
var item=lines.get(_1cc3);
var shape=_1c6e.m.getItem(item,"shape");
var x,y;
var x1=(_1c6e.m.getItem(shape,"x1"));
var x2=(_1c6e.m.getItem(shape,"x2"));
var y1=(_1c6e.m.getItem(shape,"y1"));
var y2=(_1c6e.m.getItem(shape,"y2"));
if(_1cbd){
x=[base,base];
y=[y1,y2];
_1cc2=Math.max(Math.abs(x1-base),Math.abs(x2-base));
}else{
x=[x1,x2];
y=[base,base];
_1cc2=Math.max(Math.abs(y1-base),Math.abs(y2-base));
}
var _1cc5=_1c76.m.makeLine(x[0],y[0],x[1],y[1]);
var id=_1c6e.m.getItem(item,"id");
this.installGrow(id,_1cc5,shape,_1cc2/_1cbf,_1cbe,_1c72.m.MORPH_GROW_WITH_SAME_SPEED);
}
},installPointBottomUpGrow:function(_1cc6,base,_1cc7,_1cc8){
var _1cc9=0;
for(var _1cca=0,_1ccb=_1cc8.size();_1cca<_1ccb;++_1cca){
var item=_1cc8.get(_1cca);
var shape=_1c6e.m.getItem(item,"shape");
var cx=(_1c6e.m.getItem(shape,"cx"));
var cy=(_1c6e.m.getItem(shape,"cy"));
var _1ccc=_1cc6?Math.abs(cx-base):Math.abs(cy-base);
_1cc9=Math.max(_1cc9,_1ccc);
}
for(var _1ccd=0,_1cce=_1cc8.size();_1ccd<_1cce;++_1ccd){
var item=_1cc8.get(_1ccd);
var shape=_1c6e.m.getItem(item,"shape");
var cx=(_1c6e.m.getItem(shape,"cx"));
var cy=(_1c6e.m.getItem(shape,"cy"));
var r=(_1c6e.m.getItem(shape,"r"));
var newX,newY,_1ccc;
if(_1cc6){
newX=base;
newY=cy;
_1ccc=Math.abs(cx-base);
}else{
newX=cx;
newY=base;
_1ccc=Math.abs(cy-base);
}
var _1ccf=_1c77.m.makeCircle(newX,newY,r);
var id=_1c6e.m.getItem(item,"id");
this.installGrow(id,_1ccf,shape,_1ccc/_1cc9,_1cc7,_1c72.m.MORPH_GROW_WITH_SAME_SPEED);
}
},installBarBottomUpGrow:function(_1cd0,base,_1cd1,bars){
var _1cd2=-Infinity;
var _1cd3=new _1c6f.m();
var _1cd4=new _1c6f.m();
var _1cd5=new _1c6f.m();
var _1cd6=true;
for(var _1cd7=0,_1cd8=bars.keySet(),_1cd9=_1cd8.size();_1cd7<_1cd9;++_1cd7){
var key=_1cd8.get(_1cd7);
var bar=bars.get(key);
var _1cda=false;
var _1cdb=Infinity;
var _1cdc=-Infinity;
for(var _1cdd=0,_1cde=bar.size();_1cdd<_1cde;++_1cdd){
var item=bar.get(_1cdd);
var shape=_1c6e.m.getItem(item,"shape");
var x=(_1c6e.m.getItem(shape,"x"));
var y=(_1c6e.m.getItem(shape,"y"));
var width=(_1c6e.m.getItem(shape,"width"));
var _1cdf=(_1c6e.m.getItem(shape,"height"));
if(_1cd0){
if(Math.abs(x-base)<=0.5||Math.abs(x+width-base)<=0.5){
_1cda=true;
}
_1cdb=Math.min(_1cdb,x);
_1cdc=Math.max(_1cdc,x+width);
}else{
if(Math.abs(y-base)<=0.5||Math.abs(y+_1cdf-base)<=0.5){
_1cda=true;
}
_1cdb=Math.min(_1cdb,y);
_1cdc=Math.max(_1cdc,y+_1cdf);
}
}
var _1ce0=_1cdc-_1cdb;
_1cd2=Math.max(_1cd2,_1ce0);
_1cd3.put(key,_1ce0);
_1cd4.put(key,_1cdb);
_1cd5.put(key,_1cdc);
if(!_1cda){
_1cd6=false;
}
}
for(var _1ce1=0,_1ce2=bars.keySet(),_1ce3=_1ce2.size();_1ce1<_1ce3;++_1ce1){
var key=_1ce2.get(_1ce1);
var time=_1cd3.get(key)/_1cd2;
var _1ce4;
if(_1cd6){
_1ce4=base;
}else{
_1ce4=(_1cd4.get(key)+_1cd5.get(key))/2;
}
var bar=bars.get(key);
for(var _1ce5=0,_1ce6=bar.size();_1ce5<_1ce6;++_1ce5){
var item=bar.get(_1ce5);
var id=_1c6e.m.getItem(item,"id");
var shape=_1c6e.m.getItem(item,"shape");
var x=(_1c6e.m.getItem(shape,"x"));
var y=(_1c6e.m.getItem(shape,"y"));
var width=(_1c6e.m.getItem(shape,"width"));
var _1cdf=(_1c6e.m.getItem(shape,"height"));
if(_1cd0){
x=_1ce4;
width=0;
}else{
y=_1ce4;
_1cdf=0;
}
var _1ce7=_1c78.m.makeRect(x,y,width,_1cdf);
this.installGrow(id,_1ce7,shape,time,_1cd1,_1c72.m.MORPH_GROW_WITH_SAME_SPEED);
}
}
},installGrow:function(id,start,end,time,_1ce8,_1ce9){
var _1cea=_1c70.m.makeShapeInterpolator(0,start,time,end);
_1cea.morphType=_1ce9;
_1ce8.addAnimatedMorph(id,_1cea);
},installLateFadeIn:function(id,_1ceb){
if(id==null){
return;
}
var item=this.items.get(id);
if(item==null){
return;
}
var _1cec=_1c6e.m.getItem(item,"children");
if(_1cec!=null){
var size=_1cec.length;
for(var i=0;i<size;++i){
var child=_1cec[i];
var cid=_1c6e.m.getItem(child,"id");
this.installLateFadeIn(cid,_1ceb);
}
return;
}
var shape=_1c6e.m.getItem(item,"shape");
if(shape==null){
return;
}
var type=_1c6e.m.getItem(shape,"type");
if("text".CPVisEngineEquals(type)){
var _1ced=this.makeFadingKeyFrames(item,0.95,0,1,1);
_1ceb.addAnimatedStyle(id,_1ced);
}else{
var _1ced=this.makeFadingKeyFrames(item,0.95,0.001,1,1);
_1ceb.addAnimatedStyle(id,_1ced);
}
},getIDsOfElement:function(_1cee){
var _1cef=new _1c6d.m();
var _1cf0=_1c6e.m.getItem(_1cee,"children");
this.getIDsOfArray(_1cef,_1cf0);
return _1cef;
},getIDsOfArray:function(_1cf1,array){
if(array!=null){
var len=array.length;
for(var i=0;i<len;++i){
var item=array[i];
var _1cf2=_1c6e.m.getItem(item,"children");
if(_1cf2!=null){
this.getIDsOfArray(_1cf1,_1cf2);
}else{
var id=_1c6e.m.getItem(item,"id");
if(id!=null){
_1cf1.add(id);
}
}
}
}
},projectToLocalCenter:function(shape){
var type=_1c6e.m.getItem(shape,"type");
if("line".CPVisEngineEquals(type)){
var xc=(_1c6e.m.getNumberWithDefault(shape,"x1",0)+_1c6e.m.getNumberWithDefault(shape,"x2",0))/2;
var yc=(_1c6e.m.getNumberWithDefault(shape,"y1",0)+_1c6e.m.getNumberWithDefault(shape,"y2",0))/2;
return _1c76.m.makeLine(xc,yc,xc,yc);
}
if("rect".CPVisEngineEquals(type)){
var xc=_1c6e.m.getNumberWithDefault(shape,"x",0)+_1c6e.m.getNumberWithDefault(shape,"width",0)/2;
var yc=_1c6e.m.getNumberWithDefault(shape,"y",0)+_1c6e.m.getNumberWithDefault(shape,"height",0)/2;
return _1c78.m.makeRect(xc,yc,0,0);
}
if("circle".CPVisEngineEquals(type)){
var cx=_1c6e.m.getNumberWithDefault(shape,"cx",0);
var cy=_1c6e.m.getNumberWithDefault(shape,"cy",0);
return _1c77.m.makeCircle(cx,cy,0);
}
var geom=_1c72.m.makePolyGeom(_1c6e.m.getItemWithDefault(shape,"path","M0,0Z"));
var _1cf3=geom.getBounds();
var xc=_1cf3.width/2;
var yc=_1cf3.height/2;
return _1c72.m.makeJSONPath(geom.projectToLine(xc,yc,xc,yc));
},projectToGlobalCenter:function(shape,xc,yc){
var type=_1c6e.m.getItem(shape,"type");
if("line".CPVisEngineEquals(type)){
return _1c76.m.makeLine(xc,yc,xc,yc);
}
if("rect".CPVisEngineEquals(type)){
return _1c78.m.makeRect(xc,yc,0,0);
}
if("circle".CPVisEngineEquals(type)){
return _1c77.m.makeCircle(xc,yc,0);
}
var geom=_1c72.m.makePolyGeom(_1c6e.m.getItemWithDefault(shape,"path","M0,0Z"));
return _1c72.m.makeJSONPath(geom.projectToLine(xc,yc,xc,yc));
}});
_1c79.add("com/ibm/vis/engine/internal/interaction/effect/GrowEffect",["com/ibm/vis/engine/internal/interaction/effect/Effect"],function(){
_1c7b.GROW_FINISHED=0.95;
});
return _1c7b;
});
},"com/ibm/vis/engine/internal/data/geo/GeoPropertiesMatcher":function(){
define("com/ibm/vis/engine/internal/data/geo/GeoPropertiesMatcher",["./GeoMatcher","com/ibm/init/fork!../../../../monitor/LogComponent","com/ibm/init/fork!../../../../exceptions/RaveException","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../../../monitor/LogLevel","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_1cf4,_1cf5,_1cf6,_1cf7,_1cf8,_1cf9,_1cfa,_1cfb,_1cfc){
var _1cfd=_1cfc("com.ibm.vis.engine.internal.data.geo.GeoPropertiesMatcher",[_1cf4],{output:null,sourceKeys:null,dataKeyIndices:null,includeAllSource:false,context:null,rows:null,fields:null,constructor:function(_1cfe,_1cff,_1d00,_1d01,_1d02,_1d03){
this.sourceKeys=_1cff;
this.includeAllSource=_1d01;
this.context=_1d03;
this.rows=_1cfe.rows;
this.fields=_1cfe.fields;
this.dataKeyIndices=Array.create([_1d00.length],0);
for(var i=0;i<_1d00.length;++i){
var ref=_1d00[i].$ref;
this.dataKeyIndices[i]=-1;
for(var j=0;j<_1cfe.fields.length;++j){
if(_1cfe.fields[j].id.CPVisEngineEquals(ref)){
this.dataKeyIndices[i]=j;
}
}
if(this.dataKeyIndices[i]==-1){
if(_1d03.logContext.hasListeners()){
_1d03.logContext.error(_1cf5.m.CommonGrammar,"Could not find field for augmentation");
}
throw new _1cf6.m("Augmentation requested a non-existent field: ",_1cf6.m.UNMATCHED_KEY_IN_GEO_AUGMENT);
}
}
var match=this.makeMatches(_1d02);
this.output=new Array(match.size());
for(var i=0;i<this.output.length;++i){
var list=match.get(i);
if(list!=null){
this.output[i]=new Array(list.size());
for(var j=0;j<list.size();++j){
this.output[i][j]=_1d02[list.get(j)];
}
}
}
},makeMatches:function(f){
var _1d04=new _1cf7.m();
var N=f.length;
var _1d05=Array.create([N],false);
if(this.context.logContext.hasListeners()){
this.context.logContext.log(_1cf8.m.Detail,_1cf5.m.CommonGrammar,"Read GeoJSON","featureCount",N);
}
var _1d06=new _1cf9.m(this.rows.length);
for(var i=0;i<N;++i){
var key=this.makeSourceKey(f[i]);
if(key!=null){
var list=_1d06.get(key);
if(list==null){
list=new _1cf7.m(1);
_1d06.put(key,list);
}
list.add(i);
}
}
if(_1d06.size()==0){
if(this.context.logContext.hasListeners()){
this.context.logContext.error(_1cf5.m.CommonGrammar,"Could not find any matches for the source keys in the augmentation");
}
throw new _1cf6.m("Failed to match anything in the GeoJSON",_1cf6.m.UNMATCHED_PROPERTY_IN_GEO_AUGMENT);
}
for(var i=0;i<this.rows.length;++i){
var key=this.makeDataKey(this.rows[i]);
var list=_1d06.get(key);
if(list!=null&&this.includeAllSource){
for(var j=0;j<list.size();++j){
_1d05[list.get(j)]=true;
}
}
_1d04.add(list);
}
if(this.includeAllSource){
for(var i=0;i<_1d05.length;++i){
if(!_1d05[i]){
var a=new _1cf7.m(1);
a.add(i);
_1d04.add(a);
}
}
}
return _1d04;
},makeDataKey:function(row){
var s=null;
for(var _1d07=0,_1d08=this.dataKeyIndices,_1d09=_1d08.length;_1d07<_1d09;++_1d07){
var i=_1d08[_1d07];
var n=row[i];
if(n==null){
return null;
}
var cats=this.fields[i].categories;
var v=cats==null?_1cfa.m.unformattedNumber(n):cats[n].toLowerCase();
if(s==null){
s=v;
}else{
s=s+"|"+v;
}
}
return s;
},makeSourceKey:function(item){
var _1d0a=_1cfa.m.getItem(item,"properties");
var s=null;
for(var _1d0b=0,_1d0c=this.sourceKeys,_1d0d=_1d0c.length;_1d0b<_1d0d;++_1d0b){
var key=_1d0c[_1d0b];
var o=_1cfa.m.getItem(_1d0a,key);
if(o==null){
return null;
}
var v=_1cfa.m.isNumber(o)?_1cfa.m.unformattedNumber(o):(o).toLowerCase();
if(s==null){
s=v;
}else{
s=s+"|"+v;
}
}
return s;
},totalRowCount:function(){
return this.output.length;
},getFeatures:function(_1d0e){
return this.output[_1d0e];
}});
return _1cfd;
});
},"com/ibm/vis/engine/internal/nativeImpl/DateUtil":function(){
define("com/ibm/vis/engine/internal/nativeImpl/DateUtil",["dojo/_base/declare","./BasicFactory","../grammar/units/Unit","dojo/date/locale","com/ibm/init/fork!../../../exceptions/EngineException","com/ibm/init/fork!../../../exceptions/ErrorCode","com/ibm/init/fork!./WebEngineException","com/ibm/init/fork!../../../exceptions/RaveException"],function(_1d0f,BF,Unit,_1d10,_1d11,_1d12,_1d13,_1d14){
var _1d15=_1d0f("com.ibm.vis.engine.internal.nativeImpl.DateUtil",null,{constructor:function(){
this.EPOCH=(new Date()).getMilliseconds();
},makeDate0:function(){
return new Date(0);
},makeDateNow:function(){
return new Date();
},makeDate:function(year,month,day){
var d=new Date(0);
d.setUTCFullYear(year,month-1,day);
d.setUTCHours(0,0,0,0);
return d;
},makeDateTime:function(year,month,day,hour,min,sec){
var d=new Date(0);
d.setUTCFullYear(year,month-1,day);
d.setUTCHours(hour,min,sec,0);
return d;
},copy:function(date){
return new Date(date.valueOf());
},setDate:function(date,year,month,day){
if(!(date instanceof Date)){
console.log("Not a date"+date);
return date;
}
date.setUTCFullYear(year,month-1,day);
date.setUTCHours(0,0,0,0);
return date;
},setDateTime:function(date,year,month,day,hour,min,sec){
if(!(date instanceof Date)){
console.log("Not a date"+date);
return date;
}
date.setUTCFullYear(year,month-1,day);
date.setUTCHours(hour,min,sec,0);
return date;
},toDate:function(v,unit){
var _1d16=null;
if(unit==Unit.DATE){
if(v>_1d15.OVERFLOW_DATE){
throw new _1d14.m("Date overflow error: "+v,_1d14.m.DATA_OVERFLOW);
}
_1d16=86400000;
}else{
if(v>_1d15.OVERFLOW_SECOND){
throw new _1d14.m("Date overflow error: "+v,_1d14.m.DATA_OVERFLOW);
}
_1d16=1000;
}
var date=new Date(0);
date.setTime(Math.round(v*_1d16));
return date;
},fromDateObject:function(date,unit){
if(!(date instanceof Date)){
console.log("Not a date");
console.log(date);
return 0;
}
var sec=Math.round(date.valueOf()/1000);
if(unit==Unit.DATE){
return sec/86400;
}else{
return sec;
}
},increment:function(date,unit,v){
if(!(date instanceof Date)){
console.log("Not a date"+date);
return date;
}
if(unit==Unit.CENTURY){
date.setUTCFullYear(date.getUTCFullYear()+100*v);
}else{
if(unit==Unit.YEAR){
date.setUTCFullYear(date.getUTCFullYear()+v);
}else{
if(unit==Unit.QUARTER){
date.setUTCMonth(date.getUTCMonth()+3*v);
}else{
if(unit==Unit.MONTH){
date.setUTCMonth(date.getUTCMonth()+v);
}else{
if(unit==Unit.WEEK){
date.setUTCDate(date.getUTCDate()+7*v);
}else{
if(unit==Unit.DAY){
date.setUTCDate(date.getUTCDate()+v);
}else{
if(unit==Unit.HOUR){
date.setUTCHours(date.getUTCHours()+v);
}else{
if(unit==Unit.MINUTE){
date.setUTCMinutes(date.getUTCMinutes()+v);
}else{
if(unit==Unit.SECOND){
date.setUTCSeconds(date.getUTCSeconds()+v);
}else{
console.log("No unit for "+unit);
console.trace();
}
}
}
}
}
}
}
}
}
},formatDate:function(date,_1d17){
if(!(date instanceof Date)){
console.log("Not a date");
console.log(date);
return "";
}
var _1d18={selector:"date"};
var _1d19={selector:"date",datePattern:"MMM yy"};
var years={selector:"date",datePattern:"yyyy"};
var _1d1a={selector:"time"};
var _1d1b={selector:"time",formatLength:"medium"};
var _1d1c=new Date(0);
_1d1c.setTime(date.valueOf());
var _1d1d=_1d1c.getTimezoneOffset()*60*1000;
_1d1c.setTime(date.valueOf()+_1d1d);
if(_1d17==Unit.CENTURY){
return _1d10.format(_1d1c,years);
}else{
if(_1d17==Unit.YEAR){
return _1d10.format(_1d1c,years);
}else{
if(_1d17==Unit.QUARTER){
return _1d10.format(_1d1c,_1d19);
}else{
if(_1d17==Unit.MONTH){
return _1d10.format(_1d1c,_1d19);
}else{
if(_1d17==Unit.WEEK){
return _1d10.format(_1d1c,_1d18);
}else{
if(_1d17==Unit.DAY||_1d17==Unit.DATE){
return _1d10.format(_1d1c,_1d18);
}else{
if(_1d17==Unit.HOUR||_1d17==Unit.TIMESTAMP){
return _1d10.format(_1d1c);
}else{
if(_1d17==Unit.MINUTE){
return _1d10.format(_1d1c,_1d1a);
}else{
if(_1d17==Unit.SECOND){
return _1d10.format(_1d1c,_1d1b);
}else{
var msg=_1d17.toString()+" : is an invalid Date Format";
throw new _1d11.m(null,_1d12.m.ENGINE_ILLEGAL_ARGUMENT,msg,null);
}
}
}
}
}
}
}
}
}
},floorToUnitMultiple:function(date,unit,d){
if(!(date instanceof Date)){
console.log("Not a date");
console.log(date);
}
var ms=date.getUTCMilliseconds();
date.setUTCMilliseconds(0);
if(ms>=500){
date.setUTCSeconds(date.getUTCSeconds()+1);
}
if(unit==Unit.CENTURY){
date.setUTCSeconds(0);
date.setUTCMinutes(0);
date.setUTCHours(0);
date.setUTCDate(1);
date.setUTCMonth(0);
date.setUTCFullYear(Math.floor(date.getFullYear()/100/d)*100*d);
}else{
if(unit==Unit.YEAR){
date.setUTCSeconds(0);
date.setUTCMinutes(0);
date.setUTCHours(0);
date.setUTCDate(1);
date.setUTCMonth(0);
date.setUTCFullYear(Math.floor(date.getUTCFullYear()/d)*d);
}else{
if(unit==Unit.QUARTER){
date.setUTCSeconds(0);
date.setUTCMinutes(0);
date.setUTCHours(0);
date.setUTCDate(1);
date.setUTCMonth(Math.floor(date.getUTCMonth()/3/d)*3*d);
}else{
if(unit==Unit.MONTH){
date.setUTCSeconds(0);
date.setUTCMinutes(0);
date.setUTCHours(0);
date.setUTCDate(1);
date.setUTCMonth(((date.getUTCMonth()+1)/d)*d-1);
}else{
if(unit==Unit.WEEK){
date.setUTCSeconds(0);
date.setUTCMinutes(0);
date.setUTCHours(0);
date.setUTCDate(date.getUTCDate()-date.getUTCDay());
}else{
if(unit==Unit.DAY){
date.setUTCSeconds(0);
date.setUTCMinutes(0);
date.setUTCHours(0);
date.setUTCDate(Math.floor(date.getUTCDate()/d)*d);
}else{
if(unit==Unit.HOUR){
date.setUTCSeconds(0);
date.setUTCMinutes(0);
date.setUTCHours(Math.floor(date.getUTCHours()/d)*d);
}else{
if(unit==Unit.MINUTE){
date.setUTCSeconds(0);
date.setUTCMinutes(Math.floor(date.getUTCMinutes()/d)*d);
}else{
if(unit==Unit.SECOND){
date.setUTCSeconds(Math.floor(date.getUTCSeconds()/d)*d);
}else{
var msg="Unit parameter passed is not a valid date unit :"+unit.toString();
throw new _1d11.m(null,_1d12.m.ENGINE_ILLEGAL_ARGUMENT,msg,null);
}
}
}
}
}
}
}
}
}
}});
_1d15.OVERFLOW_DATE=100000000;
_1d15.OVERFLOW_SECOND=8640000000000;
_1d15.INSTANCE=(new _1d15());
return _1d15;
});
},"com/ibm/vis/engine/internal/data/transform/Distribution":function(){
define("com/ibm/vis/engine/internal/data/transform/Distribution",["./Transform","com/ibm/init/fork!./TransformType","com/ibm/init/fork!./NormalDistributionType","com/ibm/init/fork!../../nativeImpl/WebEngineException","com/ibm/init/fork!../../../../monitor/LogComponent","com/ibm/init/fork!../../../../monitor/LogLevel","com/ibm/init/statics","dojo/_base/declare"],function(_1d1e,_1d1f,_1d20,_1d21,_1d22,_1d23,_1d24,_1d25){
var _1d26=_1d25("com.ibm.vis.engine.internal.data.transform.Distribution",[_1d1e],{xInputIndex:0,xRange:null,type:null,constructor:function(_1d27,_1d28,_1d29,_1d2a){
this.xInputIndex=this.getInputIndex("x");
for(var _1d2b=0,_1d2c=_1d27.size();_1d2b<_1d2c;++_1d2b){
var field=_1d27.get(_1d2b);
if(field.inputIndex==this.xInputIndex){
this.xRange=field.inputRange;
}
}
if(_1d1f.m.DISTRIBUTION_NORMAL.CPVisEngineEquals(_1d2a)){
this.type=new _1d20.m();
}else{
throw new _1d21.m("Unknown distribution: "+_1d2a);
}
},getRowsCreated:function(){
return 81;
},isPdf:function(){
return true;
},setValues:function(input,_1d2d,_1d2e,start,_1d2f){
if(this.xInputIndex<0){
if(this.getLogger()!=null&&this.getLogger().hasListeners()){
this.getLogger().info(_1d22.m.JavaEngine,"Unable to calculate distribution. No 'x' input was specified.");
}
return;
}
var _1d30=this.sortAndRemoveMissing(input,this.xInputIndex,-1,_1d2d);
if(_1d30.length<2){
if(this.getLogger()!=null&&this.getLogger().hasListeners()){
this.getLogger().info(_1d22.m.JavaEngine,"Unable to calculate distribution. At least 2 inputs are needed, we have "+_1d30.length);
}
return;
}
this.setOverallData(input,this.type,this.xInputIndex);
var _1d31=this.calculateMoments(input,this.xInputIndex,_1d30);
this.type.setGroupMoments(_1d31[0],_1d31[1],_1d31[2]);
var _1d32=this.xRange.expand(this.type.getWindowWidth());
for(var _1d33=0,_1d34=this.outputs,_1d35=_1d34.size();_1d33<_1d35;++_1d33){
var df=_1d34.get(_1d33);
if("x".CPVisEngineEquals(df.role)){
df.outputGranularity=_1d32.range/this.getRowsCreated();
df.outputRange=this.xRange;
}
}
var _1d36=this.getRange(input,_1d2d,this.xInputIndex,this.xRange);
_1d32=_1d36.expand(_1d31[2]*3);
for(var _1d37=0,_1d38=this.outputs,_1d39=_1d38.size();_1d37<_1d39;++_1d37){
var df=_1d38.get(_1d37);
var count=this.getRowsCreated();
for(var i=0;i<count;++i){
var x=_1d32.fromZeroOne((i)/(count-1));
if("x".CPVisEngineEquals(df.role)){
_1d2e[start+i].data[df.outputIndex]=x;
}else{
if("y".CPVisEngineEquals(df.role)){
var y=this.type.getDensity(x,this.getMultiplier());
_1d2e[start+i].data[df.outputIndex]=y;
}
}
}
}
},calculateMoments:function(input,_1d3a,list){
if(list.length==0){
return [0,0,0];
}
var n=0;
var sx=0;
for(var _1d3b=0,_1d3c=list.length;_1d3b<_1d3c;++_1d3b){
var i=list[_1d3b];
var w=this.getWeight(input[i]);
n+=w;
var x=input[i].data[_1d3a];
sx+=w*x;
}
var xbar=sx/n;
var sxx=0;
for(var _1d3d=0,_1d3e=list.length;_1d3d<_1d3e;++_1d3d){
var i=list[_1d3d];
var w=this.getWeight(input[i]);
var x=input[i].data[_1d3a];
var x0=x;
sxx+=w*(x0-xbar)*(x0-xbar);
}
var _1d3f=Math.sqrt(sxx/n);
if(this.getLogger()!=null&&this.getLogger().hasListeners()){
this.getLogger().log(_1d23.m.Info,_1d22.m.JavaEngine,"Distribution calculation","X Bar",xbar);
this.getLogger().log(_1d23.m.Info,_1d22.m.JavaEngine,"Distribution calculation","Standard Deviation",_1d3f);
}
return [n,xbar,_1d3f];
}});
_1d24.add("com/ibm/vis/engine/internal/data/transform/Distribution",["com/ibm/vis/engine/internal/data/transform/Transform"],function(){
_1d26.rowCount=81;
});
return _1d26;
});
},"com/ibm/vis/engine/internal/Alignment":function(){
define("com/ibm/vis/engine/internal/Alignment",["com/ibm/init/statics","dojo/_base/declare"],function(_1d40,_1d41){
var _1d42=_1d41("com.ibm.vis.engine.internal.Alignment",null,{});
_1d42.isValidAlign=function(a){
return "start".CPVisEngineEquals(a)||"end".CPVisEngineEquals(a)||"middle".CPVisEngineEquals(a);
};
_1d42.isValidVAlign=function(a){
return "start".CPVisEngineEquals(a)||"end".CPVisEngineEquals(a)||"middle".CPVisEngineEquals(a)||_1d42.VALIGN_MIDDLE_1ST_LINE.CPVisEngineEquals(a);
};
_1d42.getReverseAlignment=function(align){
if(align.CPVisEngineEquals("end")){
return "start";
}else{
if(align.CPVisEngineEquals("start")){
return "end";
}else{
return "middle";
}
}
};
_1d40.add("com/ibm/vis/engine/internal/Alignment",[],function(){
_1d42.ALIGN_START="start";
_1d42.ALIGN_END="end";
_1d42.ALIGN_MIDDLE="middle";
_1d42.VALIGN_MIDDLE_1ST_LINE="middleOfFirstLine";
});
return _1d42;
});
},"com/ibm/vis/engine/internal/data/transform/Grouping":function(){
define("com/ibm/vis/engine/internal/data/transform/Grouping",["com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_1d43,_1d44,_1d45,_1d46,_1d47){
var _1d48=_1d47("com.ibm.vis.engine.internal.data.transform.Grouping",null,{definitions:null,input:null,outputFieldCount:0,constructor:function(_1d49,input){
this.definitions=_1d49;
var n=0;
for(var _1d4a=0,_1d4b=_1d49.size();_1d4a<_1d4b;++_1d4a){
var _1d4c=_1d49.get(_1d4a);
if(_1d4c.outputIndex>=0){
n++;
}
}
this.outputFieldCount=n;
this.input=input;
},makeGroupings:function(){
var _1d4d=new _1d43.m();
for(var r=0;r<this.input.length;++r){
var key=this.makeGroupKey(this.input[r].data,this.definitions);
if(key==null){
continue;
}
var list=_1d4d.get(key);
if(list==null){
list=new _1d44.m();
_1d4d.put(key,list);
}
list.add(r);
}
var keys=new Array(_1d4d.size());
var n=0;
for(var _1d4e=0,_1d4f=_1d4d.keySet(),_1d50=_1d4f.size();_1d4e<_1d50;++_1d4e){
var key=_1d4f.get(_1d4e);
keys[n++]=key;
}
_1d45.m.sortArray(keys);
var _1d51=new Array(_1d4d.size());
n=0;
for(var _1d52=0,_1d53=keys.length;_1d52<_1d53;++_1d52){
var key=keys[_1d52];
_1d51[n++]=_1d4d.get(key);
}
return _1d51;
},makeGroupKey:function(row,defs){
var key="";
for(var _1d54=0,_1d55=defs.size();_1d54<_1d55;++_1d54){
var _1d56=defs.get(_1d54);
var value=_1d48.binIfNeeded(row[_1d56.inputIndex],_1d56);
if(value==null){
return null;
}
var _1d57=value;
if(_1d57==_1d57){
key+=_1d57+"|";
}else{
key+=value+"|";
}
}
return key;
},setRowValues:function(_1d58,rows,start,_1d59){
var n=_1d58.get(0);
for(var _1d5a=0,_1d5b=this.definitions,_1d5c=_1d5b.size();_1d5a<_1d5c;++_1d5a){
var _1d5d=_1d5b.get(_1d5a);
if(_1d5d.outputIndex>=0){
var value=_1d48.binIfNeeded(this.input[n].data[_1d5d.inputIndex],_1d5d);
for(var i=start;i<start+_1d59;++i){
rows[i].data[_1d5d.outputIndex]=value;
rows[i].originalRows=_1d58;
}
}
}
},getOutputFieldCount:function(){
return this.outputFieldCount;
}});
_1d48.binIfNeeded=function(_1d5e,_1d5f){
if(_1d5e==null){
return null;
}
var _1d60=_1d5f.parameters.binStart;
var _1d61=_1d5f.derivedField.granularity;
if(_1d60==null||_1d61==null){
return _1d5e;
}
var n=Math.floor((_1d5e-_1d60)/_1d61);
return (n+0.5)*_1d61+_1d60;
};
_1d46.add("com/ibm/vis/engine/internal/data/transform/Grouping",[],function(){
_1d48.KEY_SEPARATOR="|";
});
return _1d48;
});
},"com/ibm/vis/extension/internal/RAVEExtensionManager":function(){
define("com/ibm/vis/extension/internal/RAVEExtensionManager",["../ExtensionManager","../ExtensionFactory","com/ibm/init/fork!./ExtensionFactoryList","com/ibm/init/statics","dojo/_base/declare"],function(_1d62,_1d63,_1d64,_1d65,_1d66){
var _1d67=_1d66("com.ibm.vis.extension.internal.RAVEExtensionManager",[_1d62,_1d63],{defaultExtensions:null,userExtensions:null,fallbackExtensions:null,constructor:function(){
this.userExtensions=new _1d64.m();
this.defaultExtensions=new _1d64.m();
this.fallbackExtensions=new _1d64.m();
},registerDefaultFactory:function(_1d68){
this.defaultExtensions.add(_1d68);
},registerUserFactory:function(_1d69){
this.userExtensions.add(_1d69);
},registerFallbackFactory:function(_1d6a){
this.fallbackExtensions.add(_1d6a);
},newInstance:function(name,_1d6b){
var _1d6c=this.defaultExtensions.newInstance(name,_1d6b);
if(_1d6c==null&&name.indexOf(".")>0){
_1d6c=this.userExtensions.newInstance(name,_1d6b);
if(_1d6c==null){
_1d6c=this.fallbackExtensions.newInstance(name,_1d6b);
}
}
return _1d6c;
}});
_1d65.add("com/ibm/vis/extension/internal/RAVEExtensionManager",["com/ibm/vis/extension/ExtensionManager","com/ibm/vis/extension/ExtensionFactory"],function(){
_1d67.INSTANCE=new _1d67();
});
return _1d67;
});
},"com/ibm/vis/engine/internal/nativeImpl/BasicFactory":function(){
define("com/ibm/vis/engine/internal/nativeImpl/BasicFactory",["exports","dojo/has","dojo/number","dojo/json","dojo/_base/array","dojo/_base/lang","./WebEngineException","./List"],function(_1d6d,has,_1d6e,dJson,_1d6f,lang,_1d70,List){
_1d6d.parse=function(_1d71){
try{
return dJson.parse(_1d71);
}
catch(e){
throw new _1d70(e.message);
}
};
_1d6d.parseObjectOrArray=function(_1d72){
return _1d6d.parse(_1d72);
};
_1d6d.createJSONArray=function(){
return new Array();
};
_1d6d.clearJSONArray=function(a){
a.splice(0,a.length);
};
_1d6d.createSizedJSONArray=function(size){
return new Array();
};
_1d6d.addAll=function(_1d73,array){
for(var i=0;i<array.length;i++){
_1d73.push(array[i]);
}
};
_1d6d.add=function(array,value){
array.push(value);
};
_1d6d.getArrayItem=function(array,index){
return array[index];
};
_1d6d.getArrayItemByKey=function(array,key,value){
if(array==null){
return null;
}
var size=array.length;
if(size==0){
return null;
}
for(var i=0;i<size;i++){
var obj=array[i];
if(obj!=null){
var item=obj[key];
if(item==value){
return obj;
}
}
}
return null;
};
_1d6d.size=function(array){
return array.length;
};
_1d6d.removeFromArray=function(array,_1d74){
var index=_1d6f.indexOf(array,_1d74);
if(index>-1){
array.splice(index,1);
}
};
_1d6d.indexOfInArray=function(array,_1d75){
return _1d6f.indexOf(array,_1d75);
};
_1d6d.removeAt=function(array,index){
array.splice(index,1);
};
_1d6d.addAt=function(array,_1d76,index){
array.splice(index,0,_1d76);
};
_1d6d.setAt=function(array,_1d77,index){
array[index]=_1d77;
};
_1d6d.createJSONObject=function(){
return {};
};
_1d6d.isEmpty=function(_1d78){
for(var i in _1d78){
return false;
}
return true;
};
_1d6d.getItem=function(_1d79,_1d7a){
if(_1d79!=null){
return _1d79[_1d7a];
}
return null;
};
_1d6d.getItemWithDefault=function(_1d7b,_1d7c,_1d7d){
var _1d7e=null;
if(_1d7b!=null){
_1d7e=_1d7b[_1d7c];
}
if(_1d7e!=null){
return _1d7e;
}
return _1d7d;
};
_1d6d.getNumberWithDefault=function(_1d7f,_1d80,_1d81){
var _1d82=null;
if(_1d7f!=null){
_1d82=_1d7f[_1d80];
}
if(_1d82!=null){
return _1d82;
}
return _1d81;
};
_1d6d.put=function(_1d83,_1d84,value){
_1d83[_1d84]=value;
};
_1d6d.remove=function(_1d85,_1d86){
delete _1d85[_1d86];
};
_1d6d.containsKey=function(_1d87,key){
return _1d87.hasOwnProperty(key);
};
_1d6d.deepClone=function(_1d88){
return lang.clone(_1d88);
};
_1d6d.clone=function(_1d89){
return lang.mixin({},_1d89);
};
_1d6d.isEqual=function(a,b){
return dJson.stringify(a)===dJson.stringify(b);
};
_1d6d.keySet=function(_1d8a){
var set=[];
for(var i in _1d8a){
if(_1d8a.hasOwnProperty(i)){
set.push(i);
}
}
return set;
};
_1d6d.toArray=function(list){
return list.data.slice();
};
_1d6d.unformattedNumber=function(value){
if(isNaN(value)){
return "NaN";
}
if(value==Infinity){
return "Infinity";
}
if(value==-Infinity){
return "-Infinity";
}
if(value==-0){
return "0";
}
if(value==Math.round(value)&&value>=-1000000000000000&&value<=1000000000000000){
return value.toFixed(0);
}
if(Math.abs(value)>=0.001&&Math.abs(value)<=100000000){
value=Math.round(value*10000000000)/10000000000;
return ""+value;
}
return value.toExponential(10);
};
_1d6d.format=function(value,range){
var _1d8b={pattern:"#.###",fractional:true};
var _1d8c=_1d8b;
return _1d6e.format(value,_1d8c);
};
_1d6d.isNumber=function(_1d8d){
return typeof _1d8d=="number";
};
_1d6d.isTrue=function(_1d8e,key,_1d8f){
var item=this.getItem(_1d8e,key);
if(item==null){
return _1d8f;
}
return item;
};
_1d6d.isString=function(_1d90){
return typeof _1d90=="string";
};
_1d6d.isBoolean=function(_1d91){
return typeof _1d91=="boolean";
};
_1d6d.isInteger=function(_1d92){
return typeof _1d92=="number"&&_1d92%1==0;
};
_1d6d.isArray=function(_1d93){
return _1d93&&(_1d93 instanceof Array||typeof _1d93=="array");
};
_1d6d.isObject=function(_1d94){
return _1d94&&(_1d94 instanceof Object||typeof _1d94=="object");
};
_1d6d.hashString=function(_1d95){
if(_1d95==null){
return null;
}
return dJson.stringify(_1d95);
};
_1d6d.getArrayOrListItem=function(_1d96,_1d97){
if(_1d96.get&&typeof _1d96.get=="function"){
return _1d96.get(_1d97);
}
return _1d96[_1d97];
};
_1d6d.makeSortOrder=function(x){
var _1d98=new Array(x.length);
for(var i=0;i<_1d98.length;i++){
_1d98[i]=i;
}
_1d98.sort(function(a,b){
return x[a]-x[b];
});
return _1d98;
};
_1d6d.sortDataArray=function(_1d99,_1d9a){
_1d99.sort(function(a,b){
if(a[_1d9a]==null&&b[_1d9a]==null){
return 0;
}else{
if(a[_1d9a]==null){
return 1;
}else{
if(b[_1d9a]==null){
return -1;
}
}
}
var x=a[_1d9a];
var y=b[_1d9a];
return x-y;
});
return _1d99;
};
_1d6d.sortArray=function(x){
if(x.length>1&&!isNaN(this.parseDouble(x[0]))){
x.sort(function(a,b){
return a-b;
});
}else{
x.sort();
}
};
_1d6d.sortList=function(list,_1d9b){
var _1d9c=list.data;
_1d9c.sort(lang.hitch(_1d9b,"compare"));
};
_1d6d.asList=function(array){
var list=new List();
list.data=array.slice();
list.length=array.length;
return list;
};
_1d6d.cubeRoot=function(value){
if(value>0){
return Math.pow(value,1/3);
}else{
return (-Math.pow(Math.abs(value),1/3));
}
};
_1d6d.searchSortedArray=function(array,value){
return _1d6f.indexOf(array,value);
};
_1d6d.compareTo=function(_1d9d,_1d9e){
if(_1d9d<_1d9e){
return -1;
}else{
if(_1d9d>_1d9e){
return 1;
}
}
return 0;
};
_1d6d.getSystemTimer=function(){
return (new Date()).getTime();
};
_1d6d.getUTCTime=function(){
return (new Date()).getTime();
};
_1d6d.getHashMapKeysAsArray=function(map){
return map.numericKeySet();
};
_1d6d.getHashMapKeysAsDoubleArray=function(map){
return map.numericKeySet();
};
_1d6d.getHashMapKeysAsLongArray=function(map){
return map.numericKeySet();
};
_1d6d.isWhitespace=function(item){
return item==" "||item=="\t"||item=="\n"||item=="\r";
};
_1d6d.isWhitespaceString=function(s){
var l=s.length;
for(var i=0;i<l;i++){
if(!_1d6d.isWhitespace(s.charAt(i))){
return false;
}
}
return true;
};
_1d6d.isPunctuation=function(item,index){
var c=item.charAt(index);
var _1d9f=c=="."||c==","||c==";"||c=="!"||c=="?"||c==":";
var _1da0=index==0?" ":item.charAt(index-1);
var after=index==item.CPVisEngineLength()-1?" ":item.charAt(index+1);
return _1d9f&&!(_1d6d.isNumerical(_1da0)&&_1d6d.isNumerical(after));
};
_1d6d.isNumerical=function(item){
return item>="0"&&item<="9";
};
_1d6d.parseDouble=function(text){
if(text.length==0){
return Number.NaN;
}
var x=Number(text);
if(isFinite(x)){
return x;
}
return Number.NaN;
};
_1d6d.parseBoolean=function(text){
return (typeof text=="boolean"&&text=="true");
};
_1d6d.charCodeAt=function(str,i){
return str.charCodeAt(i);
};
_1d6d.codeToString=function(code){
return String.fromCharCode(code);
};
_1d6d.intDiv=function(x,y){
return Math.floor(x/y);
};
_1d6d._toCSSHexValue=function(value){
var hex=value.toString(16);
if(hex.length==1){
hex="0"+hex;
}
return hex;
};
_1d6d.makeLong=function(value){
return value;
};
_1d6d.toCSSHexColor=function(_1da1,_1da2){
var color="#";
if(_1da2&&typeof _1da1.a!="undefined"){
color+=this._toCSSHexValue(Math.round(_1da1.a*255));
}
color+=this._toCSSHexValue(_1da1.r)+this._toCSSHexValue(_1da1.g)+this._toCSSHexValue(_1da1.b);
return color;
};
_1d6d.toRGBAColor=function(_1da3){
var alpha=_1da3.a;
if(typeof alpha=="undefined"){
alpha=1;
}
return "rgba("+_1da3.r+","+_1da3.g+","+_1da3.b+","+alpha+")";
};
_1d6d.arraycopy=function(from,_1da4,to,_1da5,_1da6){
if(_1da4<_1da5){
for(var i=_1da6-1;i>=0;i--){
to[_1da5+i]=from[_1da4+i];
}
}else{
for(var i=0;i<_1da6;i++){
to[_1da5+i]=from[_1da4+i];
}
}
};
_1d6d.fromCharCode=function(_1da7){
return String.fromCharCode(_1da7);
};
_1d6d.serialize=function(value){
return JSON.stringify(value);
};
_1d6d.getJSONArraySize=function(_1da8){
return _1da8.length;
};
});
},"com/ibm/vis/engine/internal/grammar/coordinate/functions/LineSegment":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/functions/LineSegment",["com/ibm/init/fork!../../../struct/Point","com/ibm/init/statics","dojo/_base/declare"],function(_1da9,_1daa,_1dab){
var _1dac=_1dab("com.ibm.vis.engine.internal.grammar.coordinate.functions.LineSegment",null,{p1:null,p2:null,m:0,b:0,constructor:function(p1,p2){
this.p1=p1;
this.p2=p2;
this.m=(p2.y-p1.y)/(p2.x-p1.x);
this.b=p2.y-this.m*p2.x;
},getP1:function(){
return this.p1;
},getP2:function(){
return this.p2;
},getXIntercept:function(){
if(this.p1.x==this.p2.x){
return this.p1.x;
}else{
return -this.b/this.m;
}
},interpolate:function(t){
var x=this.p1.x*(1-t)+this.p2.x*t;
var y=this.p1.y*(1-t)+this.p2.y*t;
return new _1da9.m(x,y);
},interpolateY:function(x){
if(x==this.p1.x){
return this.p1.y;
}else{
if(x==this.p2.x){
return this.p2.y;
}else{
return this.m*x+this.b;
}
}
},containsX:function(x){
return x>=Math.min(this.p1.x,this.p2.x)&&x<=Math.max(this.p1.x,this.p2.x);
},crossesXAxis:function(){
return this.p1.y*this.p2.y<0;
},toString:function(){
return "Line segment from "+this.p1+" to "+this.p2;
}});
return _1dac;
});
},"com/ibm/vis/engine/internal/grammar/layout/LayoutFactory":function(){
define("com/ibm/vis/engine/internal/grammar/layout/LayoutFactory",["com/ibm/init/fork!../../../../monitor/LogLevel","com/ibm/init/fork!../../../../monitor/LogComponent","com/ibm/init/fork!./DefaultLinkLayouts","com/ibm/init/fork!./graph/DefaultGraphLayouts","com/ibm/init/fork!./treemap/DefaultTreeMapLayouts","com/ibm/init/fork!./cloud/DefaultCloudLayouts","com/ibm/init/fork!../../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!../../nativeImpl/WebEngineException","com/ibm/init/fork!./RAVELayoutAdapter","com/ibm/init/statics","dojo/_base/declare"],function(_1dad,_1dae,_1daf,_1db0,_1db1,_1db2,_1db3,_1db4,_1db5,_1db6,_1db7){
var _1db8=_1db7("com.ibm.vis.engine.internal.grammar.layout.LayoutFactory",null,{});
_1db8.makeLayout=function(spec,data,_1db9,vis,_1dba){
if(spec==null){
return null;
}
var _1dbb=_1db8.makeAdapter(spec,data,_1db9,vis,_1dba);
var _1dbc=spec.method;
if(vis.visContext.logContext.hasListeners()){
vis.visContext.logContext.log(_1dad.m.Info,_1dae.m.CommonGrammar,"Creating layout","method",_1dbc);
}
_1daf.m.registerExtensions();
_1db0.m.registerExtensions();
_1db1.m.registerExtensions();
_1db2.m.registerExtensions();
var _1dbd=_1db3.m.INSTANCE.newInstance(_1dbc,_1dbb);
if(_1dbd==null){
if(vis.visContext.logContext.hasListeners()){
vis.visContext.logContext.log(_1dad.m.GrammarError,_1dae.m.CommonGrammar,"Could not locate, access or construct layout","method",_1dbc);
}
throw new _1db4.m("Could not locate, access or construct layout "+_1dbc);
}
if(!_1dbb.isOriented()){
_1dbb.setOrientation(_1dbd.getDefaultOrientation());
}
return _1dbd;
};
_1db8.makeAdapter=function(spec,data,_1dbe,vis,_1dbf){
var _1dc0=new _1db5.m(spec,data,_1dbe,vis,_1dbf);
if(!_1dc0.isOriented()){
for(var _1dc1=0,_1dc2=_1dbe.elements,_1dc3=_1dc2.length;_1dc1<_1dc3;++_1dc1){
var _1dc4=_1dc2[_1dc1];
if(_1dc4!=null&&_1dc4.layout!=null&&_1dc0.copyOrientationFrom(_1dc4.layout.adapter)){
break;
}
}
}
return _1dc0;
};
return _1db8;
});
},"com/ibm/vis/engine/internal/legend/ColorGradientStripLegend":function(){
define("com/ibm/vis/engine/internal/legend/ColorGradientStripLegend",["./SwatchLegend","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!./LegendUtil","com/ibm/init/fork!../ColorUtil","com/ibm/init/fork!../../../exceptions/SpecException","com/ibm/init/fork!../../../exceptions/ErrorCode","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../nativeImpl/SpecUtil","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!../scene/Font","com/ibm/init/fork!../Data","com/ibm/init/statics","dojo/_base/declare"],function(_1dc5,_1dc6,_1dc7,_1dc8,_1dc9,_1dca,_1dcb,_1dcc,_1dcd,_1dce,_1dcf,_1dd0,_1dd1,_1dd2){
var _1dd3=_1dd2("com.ibm.vis.engine.internal.legend.ColorGradientStripLegend",[_1dc5],{constructor:function(_1dd4,_1dd5,_1dd6,vis){
this.validateAesthetics();
},getColorArrayForDefaultAestheticMapping:function(_1dd7,_1dd8){
var _1dd9;
var _1dda=new _1dc6.m(10);
var _1ddb=this.getAestheticsByType("color");
var color;
var cSpec;
for(var _1ddc=0;_1ddc<=1;){
_1dd9=new Object();
_1dd9.offset=_1ddc;
if(this.isScaleReverse()){
color=this.getDefaultColor(_1dd9.offset,_1ddb,_1dd8);
}else{
color=this.getDefaultColor(1-_1dd9.offset,_1ddb,_1dd8);
}
cSpec=this.convertToColorSpec(color);
_1dd9.color=cSpec;
_1dda.add(0,_1dd9);
_1ddc+=0.1;
}
return _1dda;
},processSceneItem:function(obj,_1ddd,_1dde,_1ddf){
this.inherited(arguments,[obj,_1ddd,_1dde,_1ddf]);
var id=_1dc7.m.getItem(obj,"id");
if(id!=null&&id.indexOf("G")>-1&&id.indexOf("E")>-1&&id.indexOf("S")>-1){
var _1de0="L"+this.getLegendIndex()+"LC1LE0SW1";
_1dc7.m.put(obj,"id",_1de0);
_1dc7.m.put(obj,"field",_1dde.id);
_1dc7.m.put(obj,"value",_1dc8.m.createMinMaxSceneObject(_1ddf.scale));
_1dc7.m.remove(obj,"elementType");
_1dc7.m.remove(obj,"key");
_1dc7.m.remove(obj,"rows");
}
_1dc8.m.processAxisItems(obj,_1ddd,_1dde,_1ddf,this.getLegendIndex());
},isScaleReverse:function(){
return this.legendSpec.scale!=null&&this.legendSpec.scale.reverse!=null&&this.legendSpec.scale.reverse;
},getDefaultColor:function(stop,_1de1,_1de2){
var color=_1dc9.m.createColor();
if(_1de2!=null){
color.combineWithColor(_1de2);
}
color.combineWithColor(_1de1.get(0).producer.getDefaultForNumeric(stop));
var _1de3;
for(var _1de4=1;_1de4<_1de1.size();++_1de4){
_1de3=_1de1.get(_1de4).producer.getDefaultForNumeric(stop);
color.combineWithColor(_1de3);
}
return color;
},getColor:function(_1de5,_1de6,_1de7,_1de8){
var _1de9=_1dc9.m.createColor();
if(_1de8!=null){
_1de9.combineWithColor(_1de8);
}
for(var _1dea=0;_1dea<_1de7.size();++_1dea){
var _1deb=_1de7.get(_1dea);
var _1dec=_1de5;
var _1ded=_1deb.mapping.getValue(_1de6);
if(_1dec<0){
if(_1de6==_1deb.mapping.size()-1){
_1dec=0;
}else{
var _1dee=_1deb.mapping.getStop(_1de6+1);
if(_1dee>=0){
var _1def=_1deb.mapping.getValue(_1de6+1);
_1ded=_1ded.interpolateWithColor(_1def,(0-_1dec)/(_1dee-_1dec));
_1dec=0;
}
_1dec=0;
}
}else{
if(_1dec>1){
if(_1de6==0){
_1dec=1;
}else{
var _1df0=_1deb.mapping.getStop(_1de6-1);
if(_1df0<=1){
var _1df1=_1deb.mapping.getValue(_1de6-1);
_1ded=_1ded.interpolateWithColor(_1df1,(_1dec-1)/(_1dec-_1df0));
}
_1dec=1;
}
}
}
_1de9.combineWithColor(_1ded);
if(_1dea==_1de7.size()-1){
_1de5=_1dec;
}
}
var _1df2=new Object();
if(this.isScaleReverse()){
_1df2.offset=_1de5;
}else{
_1df2.offset=1-_1de5;
}
var cSpec=this.convertToColorSpec(_1de9);
_1df2.color=cSpec;
return _1df2;
},validateAesthetics:function(){
var _1df3=this.getAestheticsByType("color");
if(_1df3.size()==0){
throw new _1dca.m(null,_1dcb.m.SPEC_INVALID_VALUE,"Legend.method continuous requires a color aesthetic",null,null,"1.3",null);
}
for(var _1df4=0,_1df5=_1df3.size();_1df4<_1df5;++_1df4){
var _1df6=_1df3.get(_1df4);
if(_1df6.valueProvider.isCategorical()){
throw new _1dca.m(null,_1dcb.m.SPEC_INVALID_VALUE,"Legend.method continuous requires a continuous (not categorical) color aesthetic",null,null,"1.3",null);
}
}
},getSymbolSize:function(_1df7,max,_1df8){
var width=0;
var _1df9=0;
this.setStyle(_1df7);
var _1dfa=this.getSizeFromStyle(this.legendSpec.itemStyle,max);
if(_1dfa!=null){
width+=_1dfa.width;
_1df9+=this.getSwatchHeight(_1dfa,_1df8);
return new _1dcc.m(width,_1df9);
}
return this.getUnstyledSymbolSize(width,_1df9,_1df8);
},updateElementFillStyle:function(_1dfb,_1dfc){
var _1dfd=_1dd3.getFillColor(_1dfb);
var _1dfe;
var _1dff=null;
var _1e00=this.getAestheticsByType("color");
var _1e01=_1e00.get(0);
if(_1e01.mapping!=null){
var size=_1e01.mapping.size();
_1dff=new _1dc6.m();
for(var i=0;i<size;++i){
var _1e02=_1e01.mapping.getStop(i);
_1dfe=this.getColor(_1e02,i,_1e00,_1dfd);
if(_1dfe!=null){
_1dff.add(0,_1dfe);
}
}
}else{
_1dff=this.getColorArrayForDefaultAestheticMapping(_1dfc,_1dfd);
}
var _1e03=new Object();
_1e03.angle=this.verticalOrientation?270:180;
_1e03.type="linear";
_1e03.colors=_1dff.toArray(new Array(_1dff.size()));
_1dfb.fill=_1e03;
},convertToColorSpec:function(color){
var cSpec=new Object();
var rgba=color.getRGBA();
cSpec.r=rgba[0];
cSpec.g=rgba[1];
cSpec.b=rgba[2];
cSpec.a=rgba[3];
return cSpec;
},computePreferedSize:function(){
var _1e04=this.getAvailableDim().height;
var _1e05=this.getAvailableDim().width;
this.initForSceneCreation();
var _1e06=this.computeIdealAxisHeight();
var _1e07=0;
if((this.legendSpec.lineStyle!=null)&&(this.legendSpec.lineStyle.stroke!=null)){
_1e07=_1dce.m.convertLength(this.legendSpec.lineStyle.stroke.width,null,null);
}else{
_1e07=1;
}
var _1e08=_1dc8.m.getMarkSize(_1e06,this.legendSpec,this.verticalOrientation,this.getAvailableDim(),5,this.vis,this.getLongestTickLabelValue(),this.getValidTickValues().size());
var _1e09=0;
var _1e0a=this.getSizeFromStyle(this.legendSpec.itemStyle,Math.min(_1e05,_1e04));
if(_1e0a!=null){
_1e09=_1e0a.width;
}else{
_1e09=20;
}
var width=0;
var _1e0b=0;
if(this.verticalOrientation){
width=_1e07+_1e08+_1e09;
_1e0b=_1e06;
}else{
width=_1e06;
_1e0b=_1e07+_1e08+_1e09;
}
return new _1dcc.m(width,_1e0b);
},computeIdealAxisHeight:function(){
var _1e0c=this.getValidTickValues().size();
var _1e0d=this.legendSpec.labelStyle==null?(this.legendSpec.tickStyle==null?new Object():this.legendSpec.tickStyle):this.legendSpec.labelStyle;
var font=_1dcf.m.makeFont(_1e0d.font,this.vis.visContext);
var _1e0e=font.getHeight();
return _1e0c*_1e0e*1.5;
},getContentMaximumSize:function(){
if(this.verticalOrientation){
return new _1dcc.m(this.getPreferredSize().width,Infinity);
}else{
return new _1dcc.m(Infinity,this.getPreferredSize().height);
}
},getLongestTickLabelValue:function(){
var _1e0f="";
var ticks=this.getValidTickValues();
for(var i=0;i<ticks.size();++i){
var _1e10=_1dc8.m.getFormattedTextForTickLabel(this.getAesthetic(),ticks.get(i));
_1e0f=(_1e10.CPVisEngineLength()>_1e0f.CPVisEngineLength())?_1e10:_1e0f;
}
return _1e0f;
},makePositions:function(_1e11){
_1e11.type="interval";
var _1e12=new Object();
_1e12.field=new Object();
_1e12.field.$ref=_1dd3.MIN_Y_Field;
var yPos=new Object();
yPos.field=new Object();
yPos.field.$ref="yForLegend";
var xPos=new Object();
xPos.field=new Object();
xPos.field.$ref="xForLegend";
_1e11.position=[_1e12,yPos,xPos];
},makeGrammarStyle:function(_1e13){
var _1e14;
if(this.legendSpec.boundsStyle!=null){
_1e14=this.legendSpec.boundsStyle;
}else{
_1e14=new Object();
}
if(_1e14.fill==null){
_1e14.fill="transparent";
}
var _1e15=new Object();
var style=_1dc8.m.getLabelStyle(this.legendSpec);
var font=null;
if(style!=null){
font=style.font;
}
var _1e16=(5+_1dcf.m.makeFont(font,this.vis.visContext).getHeight())/2;
if(this.verticalOrientation){
_1e15.top=_1e16;
_1e15.bottom=_1e16;
}else{
_1e15.right=_1e16;
_1e15.left=_1e16;
}
_1e14.padding=_1e15;
return _1e14;
},getMainPart:function(_1e17,_1e18){
return "rectangle";
},getCustomSymbol:function(_1e19,_1e1a,_1e1b,_1e1c){
var _1e1d=this.getMainPart(_1e19,_1e1a);
return _1e1d;
},makeScene:function(_1e1e){
return this.inherited(arguments,[_1e1e]);
},setElementAestheticSpec:function(_1e1f){
},makeXDimension:function(){
return _1dc8.m.buildSpacingLegendAxisSpec(this.mirroredLabels,this.verticalOrientation);
},buildSpansForContinuousYDimension:function(_1e20,_1e21,_1e22){
var span=new Object();
span.fit="exact";
var ticks=this.getValidTickValues();
var _1e23=ticks.get(0);
var _1e24=ticks.get(0);
for(var i=1;i<ticks.size();++i){
_1e23=Math.min(_1e23,ticks.get(i));
_1e24=Math.max(_1e24,ticks.get(i));
}
var _1e25=_1e23;
var _1e26=_1e24;
var _1e27=Math.floor((_1e26-_1e25)/(_1e22-1));
var _1e28=this.getDefaultAesthetic();
if(_1e28.scale!=null&&_1e28.scale.spans.size()>0&&_1e28.scale.spans.get(0)!=null&&_1e28.scale.spans.get(0).getAdjustedInputRange()!=null){
var _1e29=_1e28.scale.spans.get(0).getAdjustedInputRange().min;
var _1e2a=_1e28.scale.spans.get(0).getAdjustedInputRange().max;
if(_1e29<_1e25||_1e2a>_1e26){
_1e25=_1e29;
_1e26=_1e2a;
_1e27=_1e28.scale.spans.get(0).getTickSize();
}
}
span.min=(_1e20==null||_1e20.min==null)?_1e25:_1e20.min;
span.max=(_1e20==null||_1e20.max==null)?_1e26:_1e20.max;
span.tickDelta=(_1e20==null||_1e20.tickDelta==null)?_1e27:_1e20.tickDelta;
return [span];
},buildYAxisSpec:function(){
return _1dc8.m.buildVisibleLegendAxisSpec(this.legendSpec,this.mirroredLabels,this.verticalOrientation);
},makeData:function(_1e2b,_1e2c,_1e2d,_1e2e,_1e2f){
var index=_1e2b.index;
var _1e30=new Object();
_1e30.id="xForLegend";
_1e30.min=0;
_1e30.max=Math.max(3,_1e2e/_1e2d.width)+1;
var _1e31=new Object();
_1e31.id="yForLegend";
_1e31.granularity=1;
_1e31.categories=_1e2b.categories;
_1e31.label=_1e2b.label;
var _1e32=null;
var _1e33=new Object();
_1e33.id=_1dd3.MIN_Y_Field;
_1e32=new Array(index+3);
for(var i=0;i<index;++i){
_1e32[i]=new Object();
}
_1e32[index]=_1e33;
_1e32[index+1]=_1e31;
_1e32[index+2]=_1e30;
var _1e34=new Object();
_1e34.fields=_1e32;
_1e34.rows=this.makeSingleRow(_1e2f.spans[0].min,_1e2f.spans[0].max,index,_1e30.min+1);
var data=new _1dd0.m("legendData",_1e2c,_1e34);
data.fields[index].categories=_1e2b.categories;
data.fields[index].unit=_1e2b.unit;
data.fields[index].label=_1e2b.label;
data.fields[index].setSpecifiedFormatter(_1e2b.getSpecifiedFormatter());
_1e2c.currentSpec.data=[_1e34];
return data;
},makeSingleRow:function(_1e35,_1e36,index,_1e37){
var _1e38=new Array(1);
var row=new Array(index+3);
row[index]=_1e35;
row[index+1]=_1e36;
row[index+2]=_1e37;
_1e38[0]=row;
return _1e38;
},getSwatchHeight:function(_1e39,_1e3a){
var _1e3b=Math.floor((_1e3a.spans[0].max-_1e3a.spans[0].min)/(_1e3a.spans[0].tickDelta))+1;
return (_1e3b*20);
},getUnstyledSymbolSize:function(width,_1e3c,_1e3d){
width+=20;
_1e3c+=this.getSwatchHeight(null,_1e3d);
return new _1dcc.m(width,_1e3c);
},initForSceneCreation:function(){
this.inherited(arguments,[]);
this.numFacets=1;
this.facetSize=this.getValidTickValues().size();
},makeTransforms:function(){
if(!this.verticalOrientation){
var _1e3e=this.makeTransposeTransform();
var _1e3f=new Array(1);
_1e3f[0]=_1e3e;
return _1e3f;
}
return null;
},setFacetSpec:function(_1e40,_1e41){
},shouldPadScale:function(){
return false;
},usesAesthetic:function(){
return false;
},makeElementStyle:function(_1e42,_1e43,_1e44){
var style=this.inherited(arguments,[_1e42,_1e43,_1e44]);
this.updateElementFillStyle(style,_1e44);
return style;
},usesElementLabel:function(){
return false;
},getDefaultPadding:function(){
return 0;
},computeGrammarBounds:function(_1e45,_1e46,_1e47,_1e48,_1e49){
var _1e4a=_1e46+_1e47*2;
_1e4a+=_1e48;
_1e45.height=Math.max(_1e49+_1e48,_1e4a);
},reduceTickCount:function(){
return false;
}});
_1dd3.getFillColor=function(_1e4b){
if(_1e4b==null||_1e4b.fill==null){
return null;
}
if("fill".CPVisEngineEquals(_1dcd.m.getFillType(_1e4b.fill))){
return null;
}else{
if(_1dc7.m.isString(_1e4b.fill)){
return _1dc9.m.createColorFromString(_1e4b.fill);
}else{
if(_1e4b.fill instanceof Object){
return _1dc9.m.createColorFromColorSpec(_1e4b.fill);
}
}
}
return null;
};
_1dd1.add("com/ibm/vis/engine/internal/legend/ColorGradientStripLegend",["com/ibm/vis/engine/internal/legend/SwatchLegend","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/ColorUtil","com/ibm/vis/engine/internal/nativeImpl/SpecUtil"],function(){
_1dd3.MIN_Y_Field="minYForLegend";
_1dd3.VERTICAL_GRADIENT=270;
_1dd3.HORIZONTAL_GRADIENT=180;
_1dd3.METHOD="continuous";
_1dd3.DEFAULT_COLOR_GRADIENT_SWATCH_SIZE=20;
});
return _1dd3;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/AestheticValueProducer":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/AestheticValueProducer",["com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/statics","dojo/_base/declare"],function(_1e4c,_1e4d,_1e4e,_1e4f){
var _1e50=_1e4f("com.ibm.vis.engine.internal.grammar.aesthetic.AestheticValueProducer",null,{visContext:null,grammarSize:null,logger:null,getGrammarSize:function(){
return this.grammarSize;
},setGrammarSize:function(_1e51){
this.grammarSize=_1e51;
},interpolate:function(a,b,p){
},make:function(spec){
},forPalette:function(o){
},getDefaultForNumeric:function(v){
return this.interpolate(null,null,v);
},isSizeAestheticValueProducer:function(){
return false;
},modify:function(item,o,_1e52){
},getDefaultForCategory:function(index,_1e53){
},applyCategoricalMapping:function(v,_1e54){
if(_1e54!=null){
var o=_1e54.getCategoryValue(v);
if(o!=null){
return o;
}
}
return null;
},applyNumericMapping:function(shape,value,_1e55,_1e56){
var _1e57=0.0001;
if(_1e55==null||_1e55.size()==0){
return null;
}
var iLow=0,iHigh=_1e55.size()-1;
for(var i=0;i<_1e55.size();++i){
if(_1e55.getStop(i)<value||Math.abs(value-_1e55.getStop(i))<_1e57){
iLow=i;
}
if(_1e55.getStop(i)>value||Math.abs(_1e55.getStop(i)-value)<_1e57){
iHigh=i;
break;
}
}
var low=_1e55.getValue(iLow);
var high=_1e55.getValue(iHigh);
return this.calculateNumericMapping(shape,value,_1e55,iLow,iHigh,low,high,_1e56);
},calculateNumericMapping:function(shape,value,_1e58,iLow,iHigh,plow,phigh,_1e59){
var low=plow;
var high=phigh;
if(_1e4c.m.isString(low)){
var _1e5a=this.getDefaultForNumeric(value);
low=_1e4d.m.convertLength(low,_1e5a,_1e5a);
}
if(_1e4c.m.isString(high)){
var _1e5a=this.getDefaultForNumeric(value);
high=_1e4d.m.convertLength(high,_1e5a,_1e5a);
}
if(iLow==iHigh){
return low;
}
var p=(value-_1e58.getStop(iLow))/(_1e58.getStop(iHigh)-_1e58.getStop(iLow));
return this.interpolate(low,high,p);
},makeUsingPalette:function(v,_1e5b,_1e5c){
if(_1e5c.isCategorical()&&_1e5b!=null){
return _1e5b.getPaletteItem(Math.abs(v)%_1e5b.getPaletteSize());
}
return null;
}});
return _1e50;
});
},"com/ibm/vis/engine/internal/nativeImpl/util/JSONSerialize":function(){
define("com/ibm/vis/engine/internal/nativeImpl/util/JSONSerialize",["exports","dojo/_base/array"],function(_1e5d,array){
_1e5d.order=["id","type","field","variable","measure","label","data","position","scale","min","max","shape","fill","meta","stroke","x","y","x1","y1","x2","y2","xy","yy","yx","width","height","path","cx","cy","dx","dy","stroke","meta","colors","r","g","b","a","rows","transform","children","align","text","font","family","size","style","stdDev","offset","modifies","shadow","glow","effect","bh","bw","bx","by","clip","baseline","elementType","value"];
_1e5d.reorder=function(o){
if(o instanceof Array){
clone=[];
for(var i=0;i<o.length;i++){
clone.push(_1e5d.reorder(o[i]));
}
return clone;
}
if(!(o instanceof Object)){
return o;
}
var order=_1e5d.order;
var clone=new Object();
for(var i=0;i<order.length;i++){
if(order[i] in o){
if(o[order[i]] instanceof Object){
clone[order[i]]=_1e5d.reorder(o[order[i]]);
}else{
clone[order[i]]=o[order[i]];
}
}
}
for(var s in o){
if(array.indexOf(order,s)==-1){
if(o[s] instanceof Object){
clone[s]=_1e5d.reorder(o[s]);
}else{
clone[s]=o[s];
}
}
}
return clone;
};
});
},"com/ibm/vis/engine/internal/grammar/scale/transform/ScaleTransform":function(){
define("com/ibm/vis/engine/internal/grammar/scale/transform/ScaleTransform",["com/ibm/init/fork!../../../nativeImpl/Double","com/ibm/init/fork!../../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_1e5e,_1e5f,_1e60,_1e61){
var _1e62=_1e61("com.ibm.vis.engine.internal.grammar.scale.transform.ScaleTransform",null,{range:null,transformToZeroOne:function(value){
if(this.range!=null){
return this.range.toZeroOne(this.transform(value));
}
return NaN;
},transformFromZeroOne:function(value){
if(this.range!=null){
return this.inverse(this.range.fromZeroOne(value));
}
return NaN;
},transform:function(value){
},inverse:function(value){
},getOriginInZeroOne:function(_1e63){
var value=this.transformToZeroOne(0);
if(_1e5e.m.isNaN(value)){
return _1e63?1:0;
}
return _1e63?1-value:value;
},getRange:function(){
return this.range;
},setRange:function(range){
this.range=new _1e5f.m(this.transform(range.min),this.transform(range.max));
}});
return _1e62;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/SpreadLayersToEdge":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/SpreadLayersToEdge",["./DAGNodePlacementAlgorithm","com/ibm/init/fork!./DAG","com/ibm/init/fork!../../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_1e64,_1e65,_1e66,_1e67,_1e68){
var _1e69=_1e68("com.ibm.vis.engine.internal.grammar.layout.graph.SpreadLayersToEdge",[_1e64],{adapter:null,constructor:function(_1e6a){
this.adapter=_1e6a;
},layoutNodes:function(_1e6b,_1e6c){
var _1e6d=Array.create([_1e6b.length],0);
var _1e6e=new Array(_1e6b.length);
for(var i=0;i<_1e6b.length;++i){
_1e6d[i]=_1e65.m.getMaxLevel(_1e6b[i]);
for(var _1e6f=0,_1e70=_1e6b[i].length;_1e6f<_1e70;++_1e6f){
var node=_1e6b[i][_1e6f];
_1e6e[i]=new _1e66.m(i/_1e6b.length,(i+1)/_1e6b.length);
node.setY(_1e6e[i].mid());
}
}
var ext=this.adapter.isSwapXY()?_1e6c.width:_1e6c.height;
var vgap=this.computeVerticalLayerGap(ext,_1e6b);
var y=0;
for(var i=0;i<_1e6b.length;++i){
_1e6d[i]=_1e65.m.getMaxLevel(_1e6b[i]);
var _1e71=this.computeMaxNodeHeight(ext,_1e6b[i]);
if(i==0){
if(_1e6b.length==1){
_1e6e[i]=new _1e66.m(0,1);
}else{
_1e6e[i]=new _1e66.m(0,_1e71/ext);
}
y=_1e6e[i].mid();
}else{
if(i<_1e6b.length-1){
var _1e72=_1e6e[i-1].max;
_1e6e[i]=new _1e66.m(_1e72,_1e72+(_1e71+vgap)/ext);
y+=(_1e71+vgap)/ext;
}else{
_1e6e[i]=new _1e66.m(_1e6e[i-1].max,1);
y+=(_1e71+vgap)/ext;
}
}
for(var _1e73=0,_1e74=_1e6b[i].length;_1e73<_1e74;++_1e73){
var node=_1e6b[i][_1e73];
node.setY(y);
}
}
this.adapter.getSharedLayoutInfo().setLayerInfo(_1e6e,_1e6d);
},computeVerticalLayerGap:function(_1e75,_1e76){
var _1e77=0;
for(var _1e78=0,_1e79=_1e76.length;_1e78<_1e79;++_1e78){
var layer=_1e76[_1e78];
_1e77+=this.computeMaxNodeHeight(_1e75,layer);
}
return (_1e75-_1e77)/(_1e76.length-1);
},computeMaxNodeHeight:function(_1e7a,layer){
var _1e7b=0;
for(var _1e7c=0,_1e7d=layer.length;_1e7c<_1e7d;++_1e7c){
var node=layer[_1e7c];
_1e7b=Math.max(_1e7b,node.getNodeHeight(_1e7a,this.adapter.isSwapXY()));
}
return _1e7b;
}});
return _1e69;
});
},"com/ibm/vis/engine/internal/grammar/scale/CategoricalDomain":function(){
define("com/ibm/vis/engine/internal/grammar/scale/CategoricalDomain",["com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../nativeImpl/Set","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_1e7e,_1e7f,_1e80,_1e81,_1e82,_1e83){
var _1e84=_1e83("com.ibm.vis.engine.internal.grammar.scale.CategoricalDomain",null,{inputCount:0,reverseOutput:false,definedValues:null,restrictToExisting:false,fieldsForExisting:null,outputValues:null,dataToIndexMap:null,constructor:function(_1e85,_1e86){
this.inputCount=_1e85;
this.reverseOutput=_1e86;
this.fieldsForExisting=new _1e7e.m();
},basedOnField:function(f){
this.fieldsForExisting.add(f);
},setDefinedValues:function(_1e87){
this.definedValues=_1e87;
},getOutputValues:function(){
if(this.outputValues==null){
this.build();
}
return this.outputValues;
},getDomainValueForFieldValue:function(value){
if(value==null){
return null;
}
if(this.outputValues==null){
this.build();
}
var i=Math.round(value);
return this.dataToIndexMap.get(i);
},getFieldValueForDomainValue:function(value){
if(value==null){
return null;
}
if(this.outputValues==null){
this.build();
}
var _1e88=Math.round(value);
if(_1e88<this.outputValues.length){
return this.outputValues[_1e88];
}
return null;
},getOutputCount:function(){
if(this.outputValues==null){
this.build();
}
return this.outputValues.length;
},fillInDetailsFrom:function(_1e89){
if(this.inputCount<0){
this.inputCount=_1e89.inputCount;
}
if(this.fieldsForExisting.size()==0){
this.fieldsForExisting.addAll(_1e89.fieldsForExisting);
}
},build:function(){
var _1e8a;
if(this.inputCount>0){
var _1e8b=Array.create([this.inputCount],false);
if(this.restrictToExisting){
this.restrictForFields(_1e8b);
}
_1e8a=this.createDesiredValues(_1e8b);
}else{
_1e8a=this.createFromFields(!this.restrictToExisting);
}
var n=_1e8a.length;
this.outputValues=Array.create([n],0);
this.dataToIndexMap=new _1e7f.m();
var i=this.reverseOutput?n-1:0;
for(var index=0;index<_1e8a.length;++index){
var v=_1e8a[index];
this.outputValues[i]=v;
this.dataToIndexMap.put(v,i);
if(this.reverseOutput){
i--;
}else{
i++;
}
}
},createFromFields:function(_1e8c){
var seen=new _1e80.m();
for(var _1e8d=0,_1e8e=this.fieldsForExisting,_1e8f=_1e8e.size();_1e8d<_1e8f;++_1e8d){
var field=_1e8e.get(_1e8d);
var rows=field.data.rows;
for(var _1e90=0,_1e91=rows.length;_1e90<_1e91;++_1e90){
var row=rows[_1e90];
var _1e92=row.data[field.index];
if(_1e92!=null){
seen.add(Math.round(_1e92));
}
}
}
if(_1e8c&&this.definedValues!=null){
for(var _1e93=0,_1e94=this.definedValues,_1e95=_1e94.length;_1e93<_1e95;++_1e93){
var n=_1e94[_1e93];
if(n==null){
continue;
}
seen.add(Math.round(n));
}
}
var items=Array.create([seen.size()],0);
var n=0;
for(var _1e96=0,_1e97=seen.size();_1e96<_1e97;++_1e96){
var _1e98=seen.get(_1e96);
items[n++]=_1e98;
}
_1e81.m.sortArray(items);
return items;
},createDesiredValues:function(_1e99){
var _1e9a=new _1e7e.m();
if(this.definedValues!=null){
for(var _1e9b=0,_1e9c=this.definedValues,_1e9d=_1e9c.length;_1e9b<_1e9d;++_1e9b){
var n=_1e9c[_1e9b];
if(n==null){
continue;
}
var i=Math.round(n);
if(i>=0&&i<this.inputCount&&!_1e99[i]){
_1e9a.add(i);
_1e99[i]=true;
}
}
}else{
for(var i=0;i<this.inputCount;++i){
if(!_1e99[i]){
_1e9a.add(i);
}
}
}
var items=Array.create([_1e9a.size()],0);
var n=0;
for(var index=0;index<_1e9a.size();++index){
var _1e9e=_1e9a.get(index);
items[n++]=_1e9e;
}
return items;
},restrictForFields:function(_1e9f){
var _1ea0=Array.create([_1e9f.length],false);
for(var _1ea1=0,_1ea2=this.fieldsForExisting,_1ea3=_1ea2.size();_1ea1<_1ea3;++_1ea1){
var field=_1ea2.get(_1ea1);
var rows=field.data.rows;
for(var _1ea4=0,_1ea5=rows.length;_1ea4<_1ea5;++_1ea4){
var row=rows[_1ea4];
if(row.data.length>field.index){
var _1ea6=row.data[field.index];
if(_1ea6!=null){
var n=Math.round(_1ea6);
if(n>=0&&n<this.inputCount){
_1ea0[n]=true;
}
}
}
}
}
for(var i=0;i<_1e9f.length;++i){
if(!_1ea0[i]){
_1e9f[i]=true;
}
}
},getDataOutputValues:function(){
var _1ea7=this.getOutputValues();
if(!this.restrictToExisting){
var other=new _1e84(this.inputCount,this.reverseOutput);
other.fieldsForExisting.addAll(this.fieldsForExisting);
other.definedValues=this.definedValues;
other.restrictToExisting=true;
return other.getOutputValues();
}
return _1ea7;
}});
return _1e84;
});
},"com/ibm/vis/monitor/Logger":function(){
define("com/ibm/vis/monitor/Logger",["com/ibm/init/fork!../engine/internal/nativeImpl/Map","com/ibm/init/fork!../engine/internal/nativeImpl/List","com/ibm/init/fork!../engine/internal/nativeImpl/BasicFactory","com/ibm/init/fork!./LogLevel","com/ibm/init/fork!./LogEntry","com/ibm/init/statics","dojo/_base/declare"],function(_1ea8,_1ea9,_1eaa,_1eab,_1eac,_1ead,_1eae){
var _1eaf=_1eae("com.ibm.vis.monitor.Logger",null,{timing:null,listeners:null,constructor:function(){
this.timing=new _1ea8.m();
this.listeners=new _1ea9.m();
},hasListeners:function(){
return !this.listeners.isEmpty();
},addListener:function(_1eb0){
if(!this.listeners.contains(_1eb0)){
this.listeners.add(_1eb0);
}
return this;
},removeListener:function(_1eb1){
this.listeners.remove(_1eb1);
return this;
},logStartTime:function(_1eb2,title){
this.timing.put(title,_1eaa.m.getSystemTimer());
},logEndTime:function(_1eb3,title){
var start=this.timing.get(title);
if(start==null){
this.log(_1eab.m.Warning,_1eb3,"Timing Failed for "+title+" no matching start call","target",title);
}else{
this.timing.remove(title);
var time=(_1eaa.m.getSystemTimer()-start);
var _1eb4=new _1ea8.m();
_1eb4.put("time",time);
this.logParam(_1eab.m.Detail,_1eb3,title+" Timing",_1eb4);
}
},logParam:function(level,_1eb5,_1eb6,_1eb7){
if(_1eb7==null){
_1eb7=new _1ea8.m();
}
_1eb7.put("timestamp",_1eaa.m.getUTCTime());
for(var _1eb8=0,_1eb9=this.listeners,_1eba=_1eb9.size();_1eb8<_1eba;++_1eb8){
var _1ebb=_1eb9.get(_1eb8);
_1ebb.accept(new _1eac.m(level,_1eb5,_1eb6,_1eb7));
}
},log:function(level,_1ebc,_1ebd,key,value){
var _1ebe=new _1ea8.m();
if(key!=null&&value!=null){
_1ebe.put(key,value);
}
this.logParam(level,_1ebc,_1ebd,_1ebe);
},error:function(_1ebf,_1ec0){
this.logParam(_1eab.m.Error,_1ebf,_1ec0,null);
},warning:function(_1ec1,_1ec2){
this.logParam(_1eab.m.Warning,_1ec1,_1ec2,null);
},info:function(_1ec3,_1ec4){
this.logParam(_1eab.m.Info,_1ec3,_1ec4,null);
},grammarError:function(_1ec5,_1ec6){
this.logParam(_1eab.m.GrammarError,_1ec5,_1ec6,null);
},grammarWarning:function(_1ec7,_1ec8){
this.logParam(_1eab.m.GrammarWarning,_1ec7,_1ec8,null);
},grammarInfo:function(_1ec9,_1eca){
this.logParam(_1eab.m.GrammarInfo,_1ec9,_1eca,null);
},detail:function(_1ecb,_1ecc){
this.logParam(_1eab.m.Detail,_1ecb,_1ecc,null);
},trace:function(_1ecd,_1ece){
this.logParam(_1eab.m.Trace,_1ecd,_1ece,null);
},isTracing:function(){
if(this.listeners.isEmpty()){
return false;
}
if(this.listeners.size()==1){
return this.listeners.get(0).isTracing();
}
for(var _1ecf=0,_1ed0=this.listeners,_1ed1=_1ed0.size();_1ecf<_1ed1;++_1ecf){
var l=_1ed0.get(_1ecf);
if(l.isTracing()){
return true;
}
}
return false;
}});
return _1eaf;
});
},"com/ibm/vis/engine/internal/spechelper/ClusterWidthSizeSpecHelper":function(){
define("com/ibm/vis/engine/internal/spechelper/ClusterWidthSizeSpecHelper",["./PreferredSizeSpecHelper","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_1ed2,_1ed3,_1ed4,_1ed5){
var _1ed6=_1ed5("com.ibm.vis.engine.internal.spechelper.ClusterWidthSizeSpecHelper",[_1ed2],{constructor:function(spec){
},getMin:function(width,_1ed7){
var value=this.inherited(arguments,[width,_1ed7]);
if(_1ed3.m.isNaN(value)){
return 0;
}
return value;
}});
return _1ed6;
});
},"com/ibm/vis/engine/internal/struct/PolyPathMaker":function(){
define("com/ibm/vis/engine/internal/struct/PolyPathMaker",["com/ibm/init/statics","dojo/_base/declare"],function(_1ed8,_1ed9){
var _1eda=_1ed9("com.ibm.vis.engine.internal.struct.PolyPathMaker",null,{makePath:function(poly){
},getControlPoints:function(poly){
}});
return _1eda;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/MaximumOverlap":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/MaximumOverlap",["./DAGNodePlacementAlgorithm","com/ibm/init/fork!../../../nativeImpl/HashcodeMap","com/ibm/init/fork!./SymmetricNodePlacement","com/ibm/init/fork!./DAGNodeInfoSameLayer","com/ibm/init/fork!../../../data/Range","com/ibm/init/fork!../../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_1edb,_1edc,_1edd,_1ede,_1edf,_1ee0,_1ee1,_1ee2){
var _1ee3=_1ee2("com.ibm.vis.engine.internal.grammar.layout.graph.MaximumOverlap",[_1edb],{adapter:null,layers:null,extent:null,isSwapXY:false,extents:null,constructor:function(_1ee4){
this.adapter=_1ee4;
this.extents=new _1edc.m();
},displacementContains:function(n,x){
return this.extents.get(n)[0].contains(x);
},setMaxDisplacement:function(n,range){
var rr=this.extents.get(n);
if(rr==null){
rr=new Array(2);
this.extents.put(n,rr);
}
rr[0]=range;
},setLandingExtent:function(n,range){
var rr=this.extents.get(n);
if(rr==null){
rr=new Array(2);
this.extents.put(n,rr);
}
rr[1]=range;
},getMaxDisplacement:function(n){
return this.extents.get(n)[0];
},getLandingExtent:function(n){
return this.extents.get(n)[1];
},layoutNodes:function(_1ee5,_1ee6){
new _1edd.m(this.adapter).layoutNodes(_1ee5,_1ee6);
this.layers=_1ee5;
this.extent=_1ee6;
this.isSwapXY=this.adapter.isSwapXY();
this.alignNodeWithChildren(_1ee6);
this.alignNodeWithParent(_1ee6);
},alignNodeWithChildren:function(_1ee7){
for(var j=0;j<3;++j){
for(var i=1;i<this.layers.length;++i){
this.sweepNodes(_1ee7,i);
}
for(var i=this.layers.length-1;i>0;--i){
this.sweepNodes(_1ee7,i);
}
}
},alignNodeWithParent:function(_1ee8){
for(var k=0;k<3;++k){
for(var i=0;i<this.layers.length;++i){
this.sweepChildren(_1ee8,i);
}
for(var i=this.layers.length-1;i>=0;--i){
this.sweepChildren(_1ee8,i);
}
}
},sweepChildren:function(_1ee9,i){
var layer=this.layers[i];
var order=this.getLayerOrder(layer);
for(var j=0;j<order.length;++j){
this.alignChildren(_1ee9,layer,order,j);
}
for(var j=order.length-1;j>=0;--j){
this.alignChildren(_1ee9,layer,order,j);
}
},alignChildren:function(_1eea,layer,order,j){
var _1eeb=layer[order[j]];
var _1eec=j>0?layer[order[j-1]]:null;
var _1eed=j<order.length-1?layer[order[j+1]]:null;
this.computeMaxDisplacement(_1eeb,_1eec,_1eed);
if(_1eeb.isDummy()){
this.alignDummyNodeWithParent(_1eeb);
}else{
if(_1eeb.outLink.length==0){
var _1eee=this.getParentsInOrder(_1eeb);
var _1eef=this.execute(_1eeb,_1eee);
if(_1eeb.inLink.length==1||_1eef==1){
var _1ef0=this.findOverlappingNode(_1eeb,_1eee);
_1ef0=(_1ef0!=null)?_1ef0:_1eeb.inLink[0].from;
this.alignVerticallyWithNode(_1eeb,_1ef0);
}
}
}
},alignDummyNodeWithParent:function(_1ef1){
var _1ef2=_1ef1.inLink[0].from;
if(_1ef1.info instanceof _1ede.m){
var info=_1ef1.info;
info.updateBelongsToNodeX(_1ef1);
}else{
if(_1ef2.x!=_1ef1.x){
if(_1ef2.isDummy()){
if(this.displacementContains(_1ef1,_1ef2.x)){
_1ef1.setX(_1ef2.x);
}
}else{
var _1ef3=this.getLandingExtent(_1ef2);
if(this.displacementContains(_1ef1,_1ef3.min)){
_1ef1.setX(_1ef3.min);
}
if(this.displacementContains(_1ef1,_1ef3.max)){
_1ef1.setX(_1ef3.max);
}
if(this.displacementContains(_1ef1,_1ef2.x)){
_1ef1.setX(_1ef2.x);
}
}
}
}
},sweepNodes:function(_1ef4,i){
var layer=this.layers[i];
var order=this.getLayerOrder(layer);
for(var j=0;j<order.length;++j){
this.alignNode(_1ef4,layer,order,j);
}
for(var j=order.length-1;j>=0;--j){
this.alignNode(_1ef4,layer,order,j);
}
},alignNode:function(_1ef5,layer,order,j){
var _1ef6=layer[order[j]];
var _1ef7=j>0?layer[order[j-1]]:null;
var _1ef8=j<order.length-1?layer[order[j+1]]:null;
this.computeMaxDisplacement(_1ef6,_1ef7,_1ef8);
if(!this.overlapsAllChildren(_1ef6)){
this.displaceNode(_1ef6);
}else{
if(_1ef6.outLink.length==1){
this.alignVerticallyWithNode(_1ef6,_1ef6.outLink[0].to);
}
}
},overlapsNode:function(_1ef9,child){
this.computeLandingExtent(child);
this.computeLandingExtent(_1ef9);
return (this.getLandingExtent(_1ef9).contains(this.getLandingExtent(child).min)||this.getLandingExtent(_1ef9).contains(this.getLandingExtent(child).max));
},overlapsAllChildren:function(_1efa){
var _1efb=_1efa.outLink;
for(var _1efc=0,_1efd=_1efb.length;_1efc<_1efd;++_1efc){
var _1efe=_1efb[_1efc];
var child=_1efe.to;
if(!this.overlapsNode(_1efa,child)){
return false;
}
}
return true;
},computeLandingExtent:function(node){
var _1eff=this.getNodeWidth(node);
var min=node.x-0.4*_1eff;
var max=node.x+0.4*_1eff;
this.setLandingExtent(node,new _1edf.m(min,max));
},displaceNode:function(_1f00){
var _1f01=this.getChildrenInOrder(_1f00);
var _1f02=this.execute(_1f00,_1f01);
if(_1f00.outLink.length==1||_1f02==1){
var child=this.findOverlappingNode(_1f00,_1f01);
child=(child!=null)?child:_1f00.outLink[0].to;
this.alignVerticallyWithNode(_1f00,child);
}
},execute:function(_1f03,_1f04){
var _1f05=this.calculateOverlapCount(_1f03,_1f04);
var _1f06=this.getNodeWidth(_1f03);
var _1f07=_1f06*this.extent.width<10?10:_1f06*this.extent.width;
var dx=0.1*_1f07/this.extent.width;
var temp=_1f03.x;
_1f03.setX(this.getMaxDisplacement(_1f03).min+_1f06/2);
var _1f08=0;
while(_1f03.x+_1f06/2<=this.getMaxDisplacement(_1f03).max){
_1f08=this.calculateOverlapCount(_1f03,_1f04);
if(_1f08>_1f05){
temp=_1f03.x;
_1f05=_1f08;
}
_1f03.setX(_1f03.x+dx);
}
_1f03.setX(temp);
return _1f05;
},findOverlappingNode:function(_1f09,nodes){
for(var _1f0a=0,_1f0b=nodes.length;_1f0a<_1f0b;++_1f0a){
var node=nodes[_1f0a];
if(this.overlapsNode(_1f09,node)){
return node;
}
}
return null;
},computeMaxDisplacement:function(_1f0c,_1f0d,_1f0e){
var _1f0f=this.getNodeWidth(_1f0d);
var _1f10=this.getNodeWidth(_1f0e);
var _1f11=0.1*_1f0f;
var _1f12=0.1*_1f10;
var min=_1f0d!=null?(_1f0d.x+_1f0f/2+_1f11):0;
var max=_1f0e!=null?(_1f0e.x-_1f10/2-_1f12):1;
this.setMaxDisplacement(_1f0c,new _1edf.m(min,max));
},getNodeWidth:function(node){
if(node==null){
return 0;
}else{
if(!node.isDummy()){
return node.getNodeWidth(this.extent.width,this.isSwapXY)/this.extent.width;
}else{
return 10/this.extent.width;
}
}
},alignVerticallyWithNode:function(_1f13,node){
var _1f14=this.getNodeWidth(_1f13);
var _1f15=this.getNodeWidth(node);
if(!_1f13.isDummy()&&!node.isDummy()){
if(_1f14>=_1f15){
if(this.displacementContains(_1f13,node.x-_1f15/2)&&this.displacementContains(_1f13,node.x+_1f15/2)&&this.displacementContains(_1f13,node.x+_1f14/2)){
_1f13.setX(node.x);
}
}else{
if(this.displacementContains(_1f13,node.x-_1f14/2)&&this.displacementContains(_1f13,node.x+_1f14/2)){
_1f13.setX(node.x);
}
}
}else{
if(!_1f13.isDummy()&&node.isDummy()){
if(this.displacementContains(_1f13,node.x-_1f14/2)&&this.displacementContains(_1f13,node.x+_1f14/2)){
_1f13.setX(node.x);
}
}else{
if(_1f13.isDummy()&&!node.isDummy()){
if(this.displacementContains(_1f13,node.x)){
_1f13.setX(node.x);
}
}else{
if(_1f13.isDummy()&&node.isDummy()){
if(this.displacementContains(_1f13,node.x)){
_1f13.setX(node.x);
}
}
}
}
}
},calculateOverlapCount:function(_1f16,_1f17){
var count=0;
for(var _1f18=0,_1f19=_1f17.length;_1f18<_1f19;++_1f18){
var child=_1f17[_1f18];
if(this.overlapsNode(_1f16,child)){
count++;
}
}
return count;
},getChildrenInOrder:function(_1f1a){
var _1f1b=_1f1a.outLink;
var _1f1c=new Array(_1f1b.length);
for(var i=0;i<_1f1b.length;++i){
_1f1c[i]=_1f1b[i].to;
}
var order=this.getLayerOrder(_1f1c);
var _1f1d=new Array(_1f1c.length);
for(var i=0;i<order.length;++i){
_1f1d[i]=_1f1c[order[i]];
}
return _1f1d;
},getParentsInOrder:function(_1f1e){
var _1f1f=_1f1e.inLink;
var _1f20=new Array(_1f1f.length);
for(var i=0;i<_1f1f.length;++i){
_1f20[i]=_1f1f[i].from;
}
var order=this.getLayerOrder(_1f20);
var _1f21=new Array(_1f20.length);
for(var i=0;i<order.length;++i){
_1f21[i]=_1f20[order[i]];
}
return _1f21;
},getLayerOrder:function(layer){
var x=Array.create([layer.length],0);
for(var i=0;i<layer.length;++i){
x[i]=layer[i].x;
}
return _1ee0.m.makeSortOrder(x);
}});
return _1ee3;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/Matrix":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/Matrix",["com/ibm/init/statics","dojo/_base/declare"],function(_1f22,_1f23){
var _1f24=_1f23("com.ibm.vis.engine.internal.grammar.layout.graph.stress.matrix.Matrix",null,{n:0,getSize:function(){
return this.n;
},constructor:function(n){
this.n=n;
},set:function(i,j,v){
},get:function(i,j){
},fill:function(v){
},multiply:function(p,_1f25){
}});
return _1f24;
});
},"com/ibm/vis/engine/internal/grammar/layout/LinkLayout":function(){
define("com/ibm/vis/engine/internal/grammar/layout/LinkLayout",["./Layout","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../nativeImpl/HashcodeMap","com/ibm/init/fork!../../struct/Path","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!./LinkLength","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!./LinkLengthComparator","com/ibm/init/fork!./LinkConnectionPoint","com/ibm/init/fork!../../struct/Point","com/ibm/init/fork!./LinkLayoutEdgeBuilder","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!./DimUtil","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!../../struct/ArrowType","com/ibm/init/fork!./ConnectionSide","com/ibm/init/fork!./ConnectionPoint","com/ibm/init/statics","dojo/_base/declare"],function(_1f26,_1f27,_1f28,_1f29,_1f2a,_1f2b,_1f2c,_1f2d,_1f2e,_1f2f,_1f30,_1f31,_1f32,_1f33,_1f34,_1f35,_1f36,_1f37,_1f38){
var _1f39=_1f38("com.ibm.vis.engine.internal.grammar.layout.LinkLayout",[_1f26],{idField:null,fromField:null,toField:null,attachPoint:null,extent:null,rowCount:0,nodeShapes:null,nodeMap:null,connectionCountMap:null,inLayerDirectLinks:null,linkDetails:null,linkArrowHeadStylePerRow:null,needArrowHeadOffset:false,dummyPathToBeStyled:null,constructor:function(_1f3a){
this.idField=(_1f3a.getSpec().id==null)?null:_1f3a.getSpec().id.$ref;
this.fromField=(_1f3a.getSpec().from==null)?null:_1f3a.getSpec().from.$ref;
this.toField=(_1f3a.getSpec().to==null)?null:_1f3a.getSpec().to.$ref;
this.attachPoint=(_1f3a.getSpec().attachmentPoint==null)?_1f39.ATTACH_CLOSEST:_1f3a.getSpec().attachmentPoint;
this.nodeShapes=new _1f27.m();
this.nodeMap=new _1f28.m();
this.inLayerDirectLinks=new _1f28.m();
this.connectionCountMap=new _1f28.m();
this.dummyPathToBeStyled=new _1f29.m(null,null,false,null);
this.needArrowHeadOffset=false;
},respectsTransforms:function(){
return false;
},makeShapes:function(_1f3b,_1f3c){
this.extent=_1f3c;
var _1f3d=new _1f2a.m();
this.nodeShapes=this.adapter.getElementItems(this.idField);
this.rowCount=_1f3b;
this.populateNodeMap();
var _1f3e=new _1f2a.m();
for(var _1f3f=0;_1f3f<_1f3b;++_1f3f){
var from=this.adapter.getFieldNumericValue(this.fromField,_1f3f);
var to=this.adapter.getFieldNumericValue(this.toField,_1f3f);
if(!this.adapter.isLinkPruned(from,to)){
var _1f40=this.nodeShapes.get(from);
var _1f41=this.nodeShapes.get(to);
if(this.itemsOnSameLayer(_1f40,_1f41)){
var l=_1f40.getCenter().dist(_1f41.getCenter());
_1f3e.add(new _1f2b.m(_1f3f,l));
}else{
var link=this.makeLinkItem(_1f40,_1f41,_1f3f);
if(link!=null){
_1f3d.add(link);
}
}
}
}
_1f2c.m.sortList(_1f3e,new _1f2d.m());
if(!_1f3e.isEmpty()){
for(var _1f42=0,_1f43=_1f3e.size();_1f42<_1f43;++_1f42){
var entry=_1f3e.get(_1f42);
var from=this.adapter.getFieldNumericValue(this.fromField,entry.getValue());
var to=this.adapter.getFieldNumericValue(this.toField,entry.getValue());
var _1f40=this.nodeShapes.get(from);
var _1f41=this.nodeShapes.get(to);
var link=this.makeHorizontalLinkPath(_1f40,_1f41,entry.getValue());
if(link!=null){
_1f3d.add(link);
}
}
}
return _1f3d;
},makeLinkItem:function(_1f44,_1f45,_1f46){
if(_1f44==null||_1f45==null){
return null;
}
var item;
if(_1f44==_1f45){
item=this.makeSelfLink(_1f44,_1f46);
}else{
if(this.adapter.isOriented()){
item=this.makeVerticalLinkPath(_1f44,_1f45,_1f46);
}else{
item=this.makeSimplePath(_1f44,_1f45,_1f46);
}
this.setEdgeProperties(item,_1f46);
}
return item;
},setEdgeProperties:function(item,_1f47){
var _1f48=item;
var _1f49=this.adapter.isOriented()?this.adapter.isSwapXY():null;
var style=this.adapter.getStyle();
var _1f4a=(style==null)?null:style.symbol;
var _1f4b=_1f2c.m.isString(_1f4a)?_1f4a:null;
var _1f4c=(style==null)?null:style.startArrow;
var _1f4d=(style==null)?null:style.endArrow;
_1f48.setEdgeProperties(_1f49,_1f4b,_1f4c,_1f4d);
_1f48.setRow(_1f47);
},makeHorizontalLinkPath:function(_1f4e,_1f4f,_1f50){
var info=this.adapter.getSharedLayoutInfo();
var _1f51=info.getRoutingInfo(_1f4e.getRows()[0],_1f4f.getRows()[0]);
var _1f52=_1f51.length==0;
var N=_1f52?2:3;
var x=Array.create([N],0);
var y=Array.create([N],0);
var codes=Array.create([N],"\x00");
var lcp=this.linkDetails[_1f50];
var _1f53=this.connectionPointFrom(lcp,this.connectionCountMap);
var _1f54=this.connectionPointTo(lcp,this.connectionCountMap);
codes[0]="M";
x[0]=_1f53.x;
y[0]=_1f53.y;
codes[N-1]="L";
x[N-1]=_1f54.x;
y[N-1]=_1f54.y;
if(!_1f52){
var _1f55=this.calculateOffset(_1f51,lcp);
var _1f56=_1f2e.m.isFarSide(lcp.fromConnectionPoint.side);
var _1f57;
if(this.adapter.isSwapXY()){
if(_1f56){
_1f57=new _1f2f.m(_1f4e.getBounds().getX2()+_1f55,(_1f4e.getCenter().y+_1f4f.getCenter().y)/2);
}else{
_1f57=new _1f2f.m(_1f4e.getBounds().x-_1f55,(_1f4e.getCenter().y+_1f4f.getCenter().y)/2);
}
}else{
if(_1f56){
_1f57=new _1f2f.m((_1f4e.getCenter().x+_1f4f.getCenter().x)/2,_1f4e.getBounds().getY2()+_1f55);
}else{
_1f57=new _1f2f.m((_1f4e.getCenter().x+_1f4f.getCenter().x)/2,_1f4e.getBounds().y-_1f55);
}
}
x[1]=_1f57.x;
y[1]=_1f57.y;
codes[1]="L";
}
var lleb=new _1f30.m(this.adapter);
return lleb.makeInLayerLink(x,y,codes,_1f50);
},calculateOffset:function(_1f58,lcp){
var _1f59=lcp.from;
var info=this.adapter.getSharedLayoutInfo();
var level=_1f58[0].y;
var pos;
if(this.adapter.isSwapXY()){
pos=lcp.from.getCenter().x/this.extent.width;
}else{
pos=1-lcp.from.getCenter().y/this.extent.height;
}
var _1f5a=this.findLayerIndexForPosition(info.getGraphLayerRanges(),pos);
var range=info.getGraphLayerRanges()[_1f5a];
var _1f5b=info.getIntraLayerLinkLevelCount(_1f5a);
var _1f5c;
if(this.adapter.isSwapXY()){
_1f5c=range.range*this.extent.width-_1f59.getBounds().width;
}else{
_1f5c=range.range*this.extent.height-_1f59.getBounds().height;
}
_1f5c-=1.5*this.getStrokeWidthFromStyle();
var _1f5d=this.arrowHeadSize(this.getStrokeWidthFromStyle());
var _1f5e=1.5*_1f5d;
var _1f5f=_1f5c/2-_1f5e;
return _1f5f*level/_1f5b+_1f5e;
},findLayerIndexForPosition:function(_1f60,d){
for(var i=0;i<_1f60.length;++i){
if(_1f60[i].contains(d)){
return i;
}
}
return -1;
},getStrokeWidthFromStyle:function(){
var _1f61=1;
var style=this.adapter.getStyle()!=null?this.adapter.getStyle():new Object();
if(style.stroke!=null){
if(_1f2c.m.isNumber(style.stroke.width)){
_1f61=(style.stroke.width);
}else{
if(_1f2c.m.isString(style.stroke.width)){
var size=1;
_1f61=_1f31.m.convertLength(style.stroke.width,size,this.extent.height);
}
}
}
return _1f61;
},arrowHeadSize:function(_1f62){
if(this.needArrowHeadOffset){
return Math.max(8,_1f62*4.2);
}
return 0;
},makeVerticalLinkPath:function(_1f63,_1f64,_1f65){
var _1f66=this.adapter.getSharedLayoutInfo().getRoutingInfo(_1f63.getRows()[0],_1f64.getRows()[0]);
var count=2+_1f66.length;
var x=Array.create([count],0);
var y=Array.create([count],0);
var codes=Array.create([count],"\x00");
var _1f67=this.linkDetails[_1f65];
var from=this.connectionPointFrom(_1f67,this.connectionCountMap);
var to=this.connectionPointTo(_1f67,this.connectionCountMap);
x[0]=from.x;
y[0]=from.y;
codes[0]="M";
x[count-1]=to.x;
y[count-1]=to.y;
codes[count-1]="L";
var _1f68=this.getPaddedBounds(this.extent);
for(var i=0;i<_1f66.length;++i){
var _1f69=new _1f2f.m(_1f32.m.fromBoundedXCoord(_1f66[i].x,_1f68),_1f32.m.fromBoundedYCoord(_1f66[i].y,_1f68));
x[i+1]=_1f69.x;
y[i+1]=_1f69.y;
codes[i+1]="L";
}
return this.adapter.makeItemFromPath(x,y,codes,false,_1f65);
},getClosestPointOnAttachExtent:function(edge,p){
if(this.adapter.isSwapXY()){
if(this.isCenterAttachmentPoint()){
return new _1f2f.m(edge[0].x,(edge[0].y+edge[1].y)/2);
}else{
if(edge[1].y<p.y){
return edge[1];
}else{
if(edge[0].y>p.y){
return edge[0];
}else{
return new _1f2f.m(edge[0].x,p.y);
}
}
}
}
if(this.isCenterAttachmentPoint()){
return new _1f2f.m((edge[0].x+edge[1].x)/2,edge[0].y);
}else{
if(edge[1].x<p.x){
return edge[1];
}else{
if(edge[0].x>p.x){
return edge[0];
}else{
return new _1f2f.m(p.x,edge[0].y);
}
}
}
},isCenterAttachmentPoint:function(){
return "center".CPVisEngineEquals(this.attachPoint)?true:false;
},itemsOnSameLayer:function(a,b){
var res=false;
if(a!=null&&b!=null&&a!=b&&this.adapter.isOriented()){
if(this.adapter.isSwapXY()){
var _1f6a=Math.abs(a.getCenter().x-b.getCenter().x);
res=(_1f6a<a.getBounds().width/2&&_1f6a<b.getBounds().width/2);
}else{
var _1f6b=Math.abs(a.getCenter().y-b.getCenter().y);
res=(_1f6b<a.getBounds().height/2&&_1f6b<b.getBounds().height/2);
}
}
return res;
},makeSimplePath:function(_1f6c,_1f6d,_1f6e){
var from=this.connectionPointFrom(this.linkDetails[_1f6e],this.connectionCountMap);
var to=this.connectionPointTo(this.linkDetails[_1f6e],this.connectionCountMap);
var _1f6f=this.adapter.getSharedLayoutInfo().getRoutingInfo(_1f6c.getRows()[0],_1f6d.getRows()[0]);
var count=2+_1f6f.length;
var x=Array.create([count],0);
var y=Array.create([count],0);
var codes=Array.create([count],"\x00");
x[0]=from.x;
y[0]=from.y;
codes[0]="M";
var _1f70=this.getPaddedBounds(this.extent);
for(var i=0;i<_1f6f.length;++i){
x[i+1]=_1f32.m.fromBoundedXCoord(_1f6f[i].x,_1f70);
y[i+1]=_1f32.m.fromBoundedYCoord(_1f6f[i].y,_1f70);
codes[i+1]="L";
}
x[count-1]=to.x;
y[count-1]=to.y;
codes[count-1]="L";
return this.adapter.makeItemFromPath(x,y,codes,false,_1f6e);
},makeSelfLink:function(a,_1f71){
var b=a.getBounds();
var _1f72=this.adapter.getSharedLayoutInfo().getSelfLinkRadius();
var r;
var _1f73=this.arrowHeadSize(this.getStrokeWidthFromStyle());
if(_1f72==null){
r=Math.min(b.width,b.height)/2;
if(r<10){
r=10;
}
}else{
r=_1f72;
}
var _1f74=this.linkDetails[_1f71];
var from=this.connectionPointFrom(_1f74,this.connectionCountMap);
var to=this.connectionPointTo(_1f74,this.connectionCountMap);
var lleb=new _1f30.m(this.adapter);
return lleb.makeSelfLink(from,to,r,_1f73,_1f71);
},populateNodeMap:function(){
this.nodeMap=new _1f28.m();
this.linkDetails=new Array(this.rowCount);
this.linkArrowHeadStylePerRow=new Array(this.rowCount);
var _1f75=this.defaultArrowHeadStyle(false);
var _1f76=this.defaultArrowHeadStyle(true);
this.needArrowHeadOffset=_1f75!=null||_1f76!=null;
for(var _1f77=0;_1f77<this.rowCount;++_1f77){
var from=this.adapter.getFieldNumericValue(this.fromField,_1f77);
if(from==null){
continue;
}
var _1f78=this.nodeShapes.get(from);
var to=this.adapter.getFieldNumericValue(this.toField,_1f77);
if(to==null){
continue;
}
var _1f79=this.nodeShapes.get(to);
this.dummyPathToBeStyled.setEndArrow(_1f75==null?_1f34.m.NONE:_1f75.getName());
this.dummyPathToBeStyled.setStartArrow(_1f76==null?_1f34.m.NONE:_1f76.getName());
var _1f7a=this.adapter.getStyledShape(this.fromField,this.dummyPathToBeStyled,_1f77);
this.linkArrowHeadStylePerRow[_1f77]=new Array(2);
this.linkArrowHeadStylePerRow[_1f77][0]=_1f34.m.byName(_1f7a.getStartArrow());
this.linkArrowHeadStylePerRow[_1f77][1]=_1f34.m.byName(_1f7a.getEndArrow());
if(this.linkArrowHeadStylePerRow[_1f77][0]!=null||this.linkArrowHeadStylePerRow[_1f77][1]!=null){
this.needArrowHeadOffset=true;
}
if((_1f78!=null)&&(_1f79!=null)){
var _1f7b=new _1f2a.m();
if(this.nodeMap.containsKey(_1f78)){
_1f7b=this.nodeMap.get(_1f78);
}
_1f7b.add(_1f79);
this.nodeMap.put(_1f78,_1f7b);
_1f7b=new _1f2a.m();
if(this.nodeMap.containsKey(_1f79)){
_1f7b=this.nodeMap.get(_1f79);
}
_1f7b.add(_1f78);
this.nodeMap.put(_1f79,_1f7b);
if(this.itemsOnSameLayer(_1f78,_1f79)&&this.adapter.getSharedLayoutInfo().getRoutingInfo(_1f78.getRows()[0],_1f79.getRows()[0]).length==0){
var _1f7c=this.inLayerDirectLinks.get(_1f78);
if(_1f7c==null){
_1f7c=new _1f2a.m();
}
_1f7c.add(_1f79);
this.inLayerDirectLinks.put(_1f78,_1f7c);
}
}
}
for(var _1f7d=0;_1f7d<this.rowCount;++_1f7d){
var from=this.adapter.getFieldNumericValue(this.fromField,_1f7d);
var _1f78=this.nodeShapes.get(from);
var to=this.adapter.getFieldNumericValue(this.toField,_1f7d);
var _1f79=this.nodeShapes.get(to);
if(_1f78!=null&&_1f79!=null){
var _1f7e=this.linkArrowHeadStylePerRow[_1f7d][0];
var _1f7f=this.linkArrowHeadStylePerRow[_1f7d][1];
this.linkDetails[_1f7d]=this.populateLinkSideMap(_1f78,_1f79,_1f7e,_1f7f,this.connectionCountMap,this.inLayerDirectLinks);
}else{
this.linkDetails[_1f7d]=null;
}
}
},defaultArrowHeadStyle:function(_1f80){
var style=this.adapter.getStyle();
if(style!=null){
var _1f81=_1f80?style.startArrow:style.endArrow;
return _1f34.m.byName(_1f81);
}
return null;
},populateLinkSideMap:function(_1f82,_1f83,_1f84,_1f85,_1f86,_1f87){
var lcp=this.determineConnectionPointLocation(_1f82,_1f83,_1f84,_1f85,_1f86,_1f87);
lcp.updateCounts(_1f86);
return lcp;
},determineConnectionPointLocation:function(_1f88,_1f89,_1f8a,_1f8b,_1f8c,_1f8d){
var _1f8e=_1f8d.get(_1f88);
var _1f8f=_1f2e.m.initCountMap(_1f8c,_1f88);
var _1f90;
var _1f91;
if(this.adapter.isSwapXY()){
if(!this.adapter.isReflectY()){
if(_1f88==_1f89){
_1f90=_1f35.m.RIGHT;
_1f91=_1f35.m.TOP;
}else{
if(_1f8e!=null&&_1f8e.contains(_1f89)){
if(_1f88.getCenter().y>_1f89.getCenter().y){
_1f90=_1f35.m.TOP;
_1f91=_1f35.m.BOTTOM;
}else{
_1f90=_1f35.m.BOTTOM;
_1f91=_1f35.m.TOP;
}
}else{
if(this.itemsOnSameLayer(_1f88,_1f89)){
var _1f92=_1f2e.m.countTotalLinksOnSide(_1f8f,_1f35.m.LEFT);
var _1f93=_1f2e.m.countTotalLinksOnSide(_1f8f,_1f35.m.RIGHT);
if(_1f92>_1f93){
_1f90=_1f35.m.RIGHT;
_1f91=_1f35.m.RIGHT;
}else{
_1f90=_1f35.m.LEFT;
_1f91=_1f35.m.LEFT;
}
}else{
if(_1f88.getCenter().x<_1f89.getCenter().x){
_1f90=_1f35.m.RIGHT;
_1f91=_1f35.m.LEFT;
}else{
_1f90=_1f35.m.LEFT;
_1f91=_1f35.m.RIGHT;
}
}
}
}
}else{
if(_1f88==_1f89){
_1f90=_1f35.m.LEFT;
_1f91=_1f35.m.TOP;
}else{
if(_1f8e!=null&&_1f8e.contains(_1f89)){
if(_1f88.getCenter().y>_1f89.getCenter().y){
_1f90=_1f35.m.TOP;
_1f91=_1f35.m.BOTTOM;
}else{
_1f90=_1f35.m.BOTTOM;
_1f91=_1f35.m.TOP;
}
}else{
if(this.itemsOnSameLayer(_1f88,_1f89)){
var _1f92=_1f2e.m.countTotalLinksOnSide(_1f8f,_1f35.m.LEFT);
var _1f93=_1f2e.m.countTotalLinksOnSide(_1f8f,_1f35.m.RIGHT);
if(_1f92>=_1f93){
_1f90=_1f35.m.RIGHT;
_1f91=_1f35.m.RIGHT;
}else{
_1f90=_1f35.m.LEFT;
_1f91=_1f35.m.LEFT;
}
}else{
if(_1f88.getCenter().x<_1f89.getCenter().x){
_1f90=_1f35.m.RIGHT;
_1f91=_1f35.m.LEFT;
}else{
_1f90=_1f35.m.LEFT;
_1f91=_1f35.m.RIGHT;
}
}
}
}
}
}else{
if(this.adapter.isReflectY()){
if(_1f88==_1f89){
_1f90=_1f35.m.TOP;
_1f91=_1f35.m.RIGHT;
}else{
if(_1f8e!=null&&_1f8e.contains(_1f89)){
if(_1f88.getCenter().x<_1f89.getCenter().x){
_1f90=_1f35.m.RIGHT;
_1f91=_1f35.m.LEFT;
}else{
_1f90=_1f35.m.LEFT;
_1f91=_1f35.m.RIGHT;
}
}else{
if(this.itemsOnSameLayer(_1f88,_1f89)){
var _1f94=_1f2e.m.countTotalLinksOnSide(_1f8f,_1f35.m.TOP);
var _1f95=_1f2e.m.countTotalLinksOnSide(_1f8f,_1f35.m.BOTTOM);
if(_1f94>=_1f95){
_1f90=_1f35.m.BOTTOM;
_1f91=_1f35.m.BOTTOM;
}else{
_1f90=_1f35.m.TOP;
_1f91=_1f35.m.TOP;
}
}else{
if(_1f88.getCenter().y<_1f89.getCenter().y){
_1f90=_1f35.m.BOTTOM;
_1f91=_1f35.m.TOP;
}else{
_1f90=_1f35.m.TOP;
_1f91=_1f35.m.BOTTOM;
}
}
}
}
}else{
if(_1f88==_1f89){
_1f90=_1f35.m.BOTTOM;
_1f91=_1f35.m.RIGHT;
}else{
if(_1f8e!=null&&_1f8e.contains(_1f89)){
if(_1f88.getCenter().x<_1f89.getCenter().x){
_1f90=_1f35.m.RIGHT;
_1f91=_1f35.m.LEFT;
}else{
_1f90=_1f35.m.LEFT;
_1f91=_1f35.m.RIGHT;
}
}else{
if(this.itemsOnSameLayer(_1f88,_1f89)){
var _1f94=_1f2e.m.countTotalLinksOnSide(_1f8f,_1f35.m.TOP);
var _1f95=_1f2e.m.countTotalLinksOnSide(_1f8f,_1f35.m.BOTTOM);
if(_1f94>_1f95){
_1f90=_1f35.m.BOTTOM;
_1f91=_1f35.m.BOTTOM;
}else{
_1f90=_1f35.m.TOP;
_1f91=_1f35.m.TOP;
}
}else{
if(_1f88.getCenter().y<_1f89.getCenter().y){
_1f90=_1f35.m.BOTTOM;
_1f91=_1f35.m.TOP;
}else{
_1f90=_1f35.m.TOP;
_1f91=_1f35.m.BOTTOM;
}
}
}
}
}
}
var _1f96=new _1f36.m(_1f90,_1f8a);
var _1f97=new _1f36.m(_1f91,_1f8b);
return new _1f2e.m(_1f88,_1f89,_1f96,_1f97);
},connectionPoint:function(_1f98,_1f99,_1f9a){
var _1f9b=null;
var from=_1f99.from;
var to=_1f99.to;
var item=_1f98?_1f99.from:_1f99.to;
var _1f9c=!_1f98?_1f99.from:_1f99.to;
var side=_1f98?_1f99.fromConnectionPoint:_1f99.toConnectionPoint;
if(this.adapter.isOriented()){
var _1f9d=_1f9a.get(item);
var _1f9e=!this.isCenterAttachmentPoint();
var _1f9f=_1f2e.m.countDifferentLinkTypesAt(_1f9d,side.side);
var _1fa0=_1f2e.m.determineIndexOfUsedType(_1f9d,side);
_1f9b=side.determinePoint(item.getBounds(),_1f9f,_1fa0);
var _1fa1=_1f9f==1;
if(_1f9e&&(_1fa1)&&!this.itemsOnSameLayer(from,to)){
var _1fa2=this.adapter.getSharedLayoutInfo().getRoutingInfo(from.getRows()[0],to.getRows()[0]);
var _1fa3=_1f98?_1f99.toConnectionPoint:_1f99.fromConnectionPoint;
var _1fa4=this.adapter.getAttachExtent(item,_1f2e.m.isFarSide(side.side),this.extent);
if(from==to){
if(_1f98){
var b=from.getBounds();
var p=b.getCenter();
switch(_1fa3.side){
case _1f35.m.RIGHT:
p=new _1f2f.m(b.getX2(),b.y);
break;
case _1f35.m.LEFT:
p=new _1f2f.m(b.x,b.getY2());
break;
case _1f35.m.TOP:
p=new _1f2f.m(b.getX2(),b.y);
break;
case _1f35.m.BOTTOM:
p=new _1f2f.m(b.x,b.getY2());
break;
}
_1f9b=this.getClosestPointOnAttachExtent(_1fa4,p);
}
}else{
var _1fa5=this.adapter.getAttachExtent(_1f9c,_1f2e.m.isFarSide(_1fa3.side),this.extent);
var _1fa6=_1f2e.m.countTotalLinksOnSide(_1f9d,side.side);
var _1fa7=_1fa6==1;
var _1fa8=_1fa2.length==0;
if(_1fa8){
var rA=_1f39.computeRange(_1fa4,this.adapter.isSwapXY());
var rB=_1f39.computeRange(_1fa5,this.adapter.isSwapXY());
if(this.adapter.isSwapXY()){
if(rA.containsRange(rB)){
_1f9b=new _1f2f.m(_1fa4[0].x,(rB.min+rB.max)/2);
}else{
if(rB.containsRange(rA)){
_1f9b=new _1f2f.m(_1fa4[0].x,(rA.min+rA.max)/2);
}else{
if(_1fa4[1].y<=_1fa5[0].y){
if(_1fa4[0].y>=_1fa5[0].y&&_1fa4[0].y<=_1fa5[1].y){
_1f9b=new _1f2f.m(_1fa4[0].x,(_1fa5[0].y+_1fa4[0].y)/2);
}else{
if(!_1fa7){
_1f9b=this.getClosestPointOnAttachExtent(_1fa4,_1f9c.getCenter());
}
}
}else{
if(_1fa4[1].y>=_1fa5[0].y){
if(_1fa4[1].y>_1fa5[0].y&&_1fa4[1].y<_1fa5[1].y){
_1f9b=new _1f2f.m((_1fa4[0].x),(_1fa5[0].y+_1fa4[1].y)/2);
}else{
if(_1fa5[1].y>_1fa4[0].y&&_1fa5[1].y<_1fa4[1].y){
_1f9b=new _1f2f.m(_1fa4[0].x,(_1fa5[0].y+_1fa4[1].y)/2);
}else{
if(!_1fa7){
_1f9b=this.getClosestPointOnAttachExtent(_1fa4,_1f9c.getCenter());
}
}
}
}
}
}
}
}else{
if(rA.containsRange(rB)){
_1f9b=new _1f2f.m((rB.min+rB.max)/2,_1fa4[0].y);
}else{
if(rB.containsRange(rA)){
_1f9b=new _1f2f.m((rA.min+rA.max)/2,_1fa4[0].y);
}else{
if(_1fa4[0].x>_1fa5[0].x){
if(_1fa4[0].x>=_1fa5[0].x&&_1fa4[0].x<=_1fa5[1].x){
_1f9b=new _1f2f.m((_1fa4[0].x+_1fa5[1].x)/2,_1fa4[0].y);
}else{
if(!_1fa7){
_1f9b=this.getClosestPointOnAttachExtent(_1fa4,_1f9c.getCenter());
}
}
}else{
if(_1fa4[0].x<_1fa5[0].x){
if(_1fa4[1].x>=_1fa5[0].x&&_1fa4[1].x<=_1fa5[1].x){
_1f9b=new _1f2f.m((_1fa4[1].x+_1fa5[0].x)/2,_1fa4[1].y);
}else{
if(!_1fa7){
_1f9b=this.getClosestPointOnAttachExtent(_1fa4,_1f9c.getCenter());
}
}
}
}
}
}
}
}else{
var _1fa9=this.getPaddedBounds(this.extent);
var idx=_1f98?0:_1fa2.length-1;
var pnt=new _1f2f.m(_1f32.m.fromBoundedXCoord(_1fa2[idx].x,_1fa9),_1f32.m.fromBoundedYCoord(_1fa2[idx].y,_1fa9));
_1f9b=this.getClosestPointOnAttachExtent(_1fa4,pnt);
}
}
}
}else{
if(to==from){
var b=from.getBounds();
if(_1f98){
_1f9b=this.adapter.getAttachPoint(from,new _1f2f.m(b.getCenter().x,b.getY2()),this.extent);
}else{
_1f9b=this.adapter.getAttachPoint(from,new _1f2f.m(b.getX2(),b.getCenter().y),this.extent);
}
}else{
_1f9b=this.adapter.getAttachPoint(item,_1f9c.getCenter(),this.extent);
}
}
return _1f9b;
},connectionPointFrom:function(_1faa,_1fab){
return this.connectionPoint(true,_1faa,_1fab);
},connectionPointTo:function(_1fac,_1fad){
return this.connectionPoint(false,_1fac,_1fad);
}});
_1f39.getGoodSpaceToFit=function(_1fae,_1faf,_1fb0){
var _1fb1=Math.max(8,_1fb0*4.2);
return (_1fae*_1fb0*2+_1fb1)/_1faf;
};
_1f39.computeRange=function(p,_1fb2){
var r=null;
if(_1fb2){
r=new _1f33.m(p[0].y,p[1].y);
}else{
r=new _1f33.m(p[0].x,p[1].x);
}
return r;
};
_1f37.add("com/ibm/vis/engine/internal/grammar/layout/LinkLayout",["com/ibm/vis/engine/internal/grammar/layout/Layout","com/ibm/vis/engine/internal/data/Range"],function(){
_1f39.ATTACH_CENTER="center";
_1f39.ATTACH_CLOSEST="closestPoint";
});
return _1f39;
});
},"com/ibm/vis/engine/internal/struct/Star":function(){
define("com/ibm/vis/engine/internal/struct/Star",["./Poly","com/ibm/init/statics","dojo/_base/declare"],function(_1fb3,_1fb4,_1fb5){
var Star=_1fb5("com.ibm.vis.engine.internal.struct.Star",[_1fb3],{constructor:function(cx,cy,_1fb6,_1fb7){
},getType:function(){
return "star";
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("poly".CPVisEngineEquals(type)||"star".CPVisEngineEquals(type)){
return true;
}
return false;
}});
_1fb4.add("com/ibm/vis/engine/internal/struct/Star",["com/ibm/vis/engine/internal/struct/Poly"],function(){
Star.STAR_FLAGS=0;
Star.STAR_NAME="star";
});
return Star;
});
},"com/ibm/vis/engine/internal/LegendContainerAdapter":function(){
define("com/ibm/vis/engine/internal/LegendContainerAdapter",["./ContentFrame","com/ibm/init/fork!./oldlegends/LegendContainer","com/ibm/init/fork!./oldlegendlayout/OldFlow","com/ibm/init/fork!./struct/Dim","com/ibm/init/fork!./Bounds","com/ibm/init/statics","dojo/_base/declare"],function(_1fb8,_1fb9,_1fba,_1fbb,_1fbc,_1fbd,_1fbe){
var _1fbf=_1fbe("com.ibm.vis.engine.internal.LegendContainerAdapter",[_1fb8],{flow:null,index:0,container:null,vis:null,specifiedBounds:null,constructor:function(_1fc0,_1fc1,_1fc2,vis,_1fc3,flow,index){
this.specifiedBounds=_1fc0;
this.style=_1fc2;
this.setId("L"+index);
this.setBackgroundIdSuffixes("-backoutline","-back");
this.setRequiresBackgroundShape(true);
this.flow=flow;
this.index=index;
this.vis=vis;
var _1fc4=null;
if(_1fc2!=null){
_1fc4=new Object();
_1fc4.align=_1fc2.align;
_1fc4.valign=_1fc2.valign;
_1fc4.fill="transparent";
_1fc4.outline="transparent";
}
this.container=new _1fb9.m(_1fc1,_1fc4,vis,_1fc3,flow);
},getContentPreferredSize:function(){
var _1fc5;
this.container.preferredSize;
if(this.flow==_1fba.m.horizontal){
_1fc5=new _1fbb.m(400,60);
}else{
_1fc5=new _1fbb.m(100,400);
}
if(this.specifiedBounds!=null){
_1fc5=this.specifiedBounds.getRect(this.vis.getSize()).getExtent();
}
return _1fc5;
},getContentMinimumSize:function(){
return new _1fbb.m(0,0);
},getContentMaximumSize:function(){
if(this.specifiedBounds!=null){
return this.specifiedBounds.getRect(this.vis.getSize()).getExtent();
}
return new _1fbb.m(Infinity,Infinity);
},layoutWithBounds:function(_1fc6,_1fc7,_1fc8){
this.inherited(arguments,[_1fc6,_1fc7,_1fc8]);
var spec=new Object();
spec.left=0;
spec.top=0;
spec.width=_1fc6.width;
spec.height=_1fc6.height;
this.container.outerBounds=new _1fbc.m(spec,this.vis.getLogger());
this.container.createLayout(this.vis.getExtent(),null);
this.container.layoutWithBounds(_1fc6.getExtent().makeRect());
},createContent:function(){
var _1fc9=this.inherited(arguments,[]);
this.container.createShapesInScene(_1fc9,"L"+this.index,this.getExtent().makeRect());
return _1fc9;
}});
return _1fbf;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/DefaultGraphLayouts":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/DefaultGraphLayouts",["../../../../../extension/ExtensionFactory","com/ibm/init/fork!../../../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./DAG","com/ibm/init/fork!./GridGraphLayout","com/ibm/init/fork!./stress/StressLayout","com/ibm/init/fork!../SwimlaneLayout","com/ibm/init/statics","dojo/_base/declare"],function(_1fca,_1fcb,_1fcc,_1fcd,_1fce,_1fcf,_1fd0,_1fd1){
var _1fd2=_1fd1("com.ibm.vis.engine.internal.grammar.layout.graph.DefaultGraphLayouts",[_1fca],{newInstance:function(name,_1fd3){
if("dag".CPVisEngineEquals(name)){
return new _1fcc.m(_1fd3);
}else{
if("grid".CPVisEngineEquals(name)){
return new _1fcd.m(_1fd3);
}else{
if("network".CPVisEngineEquals(name)){
return new _1fce.m(_1fd3);
}
}
}
if("swimlane".CPVisEngineEquals(name)){
return new _1fcf.m(_1fd3);
}
return null;
}});
_1fd2.registerExtensions=function(){
if(!_1fd2.registered){
_1fd2.registered=true;
_1fcb.m.INSTANCE.registerDefaultFactory(new _1fd2());
}
};
_1fd0.add("com/ibm/vis/engine/internal/grammar/layout/graph/DefaultGraphLayouts",["com/ibm/vis/extension/ExtensionFactory","com/ibm/vis/extension/internal/RAVEExtensionManager"],function(){
_1fd2.registered=false;
});
return _1fd2;
});
},"com/ibm/vis/engine/internal/nativeImpl/String":function(){
define("com/ibm/vis/engine/internal/nativeImpl/String",["dojo/_base/lang"],function(lang){
String.prototype.CPVisEngineEquals=function stringEquals(other){
return this==other;
};
function _1fd4(){
return this.length;
};
String.prototype.CPVisEngineLength=_1fd4;
String.prototype.CPVisEngineIsEmpty=function(){
return this.length===0;
};
String.prototype.CPVISEngineEndsWith=function(value){
return this.indexOf(value,this.length-value.length)!==-1;
};
String.prototype.CPVISEngineStartsWith=function(value){
return this.slice(0,value.length)==value;
};
String.prototype.CPVISEngineTrim=function(){
return lang.trim(this);
};
String.prototype.CPVisEngineMatches=function(regex){
if(this.match(regex)){
return true;
}
return false;
};
String.prototype.CPVisEngineReplace=function(_1fd5,_1fd6){
var regex=new RegExp(_1fd5,"g");
return this.replace(regex,_1fd6);
};
String.CPVisEngineValueOf=function(value){
if(value==null){
return new String(value);
}
return value.toString();
};
});
},"com/ibm/vis/engine/internal/struct/Triangle":function(){
define("com/ibm/vis/engine/internal/struct/Triangle",["./Poly","com/ibm/init/statics","dojo/_base/declare"],function(_1fd7,_1fd8,_1fd9){
var _1fda=_1fd9("com.ibm.vis.engine.internal.struct.Triangle",[_1fd7],{constructor:function(cx,cy,_1fdb,_1fdc){
},getType:function(){
return "tri";
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("poly".CPVisEngineEquals(type)||"tri".CPVisEngineEquals(type)){
return true;
}
return false;
}});
_1fd8.add("com/ibm/vis/engine/internal/struct/Triangle",["com/ibm/vis/engine/internal/struct/Poly"],function(){
_1fda.TRIANGLE_FLAGS=0;
_1fda.TRIANGLE_NAME="tri";
});
return _1fda;
});
},"com/ibm/vis/engine/internal/globalization/LocalizationUtil":function(){
define("com/ibm/vis/engine/internal/globalization/LocalizationUtil",["com/ibm/init/statics","dojo/_base/declare"],function(_1fdd,_1fde){
var _1fdf=_1fde("com.ibm.vis.engine.internal.globalization.LocalizationUtil",null,{});
_1fdf.createLocationSpec=function(_1fe0){
var spec=new Object();
spec.mirror=_1fe0.isMirror();
spec.baseTextDirection=_1fe0.getBaseTextDirection();
spec.nationalShaping=new Object();
spec.nationalShaping.digits=_1fe0.getNationalDigitShapingCode();
spec.contextualShaping=new Object();
spec.contextualShaping.digits=_1fe0.getContextualShapingDigitCodes();
spec.contextualShaping.defaultContext=_1fe0.getContextualShapingDefaultContext();
return spec;
};
return _1fdf;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/ConjugateGradient":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/ConjugateGradient",["com/ibm/init/statics","dojo/_base/declare"],function(_1fe1,_1fe2){
var _1fe3=_1fe2("com.ibm.vis.engine.internal.grammar.layout.graph.stress.matrix.ConjugateGradient",null,{solve:function(A,x,b){
var iters=this.solveForStartingPoint(A,x,b,200);
if(iters!=-1){
return iters;
}
for(var i=0;i<x.length;++i){
x[i]=1;
}
iters=this.solveForStartingPoint(A,x,b,1000);
for(var i=0;i<x.length;++i){
x[i]=b[i];
}
iters=this.solveForStartingPoint(A,x,b,1000);
if(iters!=-1){
return iters;
}
throw new Error("Failed to converge");
},solveForStartingPoint:function(A,x,b,_1fe4){
var n=x.length;
var Mi=this.makePreconditioningDiagonal(A,n);
var r=A.multiply(x,null);
for(var i=0;i<n;++i){
r[i]=b[i]-r[i];
}
var z=Array.create([n],0);
this.diagMultiply(Mi,r,z);
var p=Array.create([n],0);
for(var i=0;i<n;++i){
p[i]=z[i];
}
var rz=this.product(r,z);
var Ap=Array.create([n],0);
for(var k=1;k<_1fe4;++k){
A.multiply(p,Ap);
var alpha=rz/this.product(p,Ap);
var rr=0;
for(var i=0;i<n;++i){
x[i]+=alpha*p[i];
r[i]-=alpha*Ap[i];
rr+=r[i]*r[i];
}
if(rr<0.0001){
return k;
}
var rzNew=0;
for(var i=0;i<n;++i){
z[i]=Mi[i]*r[i];
rzNew+=r[i]*z[i];
}
for(var i=0;i<n;++i){
p[i]=rzNew/rz*p[i]+z[i];
}
rz=rzNew;
}
return -1;
},diagMultiply:function(a,b,v){
for(var i=0;i<a.length;++i){
v[i]=a[i]*b[i];
}
return v;
},makePreconditioningDiagonal:function(a,n){
var v=Array.create([n],0);
for(var i=0;i<n;++i){
var x=a.get(i,i);
if(x<0.01){
x=0.01;
}
v[i]=1/x;
}
return v;
},product:function(r,s){
var v=0;
for(var i=0;i<r.length;++i){
v+=r[i]*s[i];
}
return v;
}});
return _1fe3;
});
},"com/ibm/vis/engine/internal/GradientStop":function(){
define("com/ibm/vis/engine/internal/GradientStop",["com/ibm/init/fork!../../exceptions/RaveException","com/ibm/init/fork!./ColorUtil","com/ibm/init/fork!./nativeImpl/BasicFactory","com/ibm/init/fork!./util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_1fe5,_1fe6,_1fe7,_1fe8,_1fe9,_1fea){
var _1feb=_1fea("com.ibm.vis.engine.internal.GradientStop",null,{color:null,offset:0,constructor:function(color,_1fec){
this.color=color;
this.offset=_1fec;
}});
_1feb.fromSpec=function(stops){
if(stops==null){
throw new _1fe5.m("Gradient fill: missing \"colors\"",_1fe5.m.SPEC_INVALID_VALUE);
}
if(stops.length==0){
throw new _1fe5.m("Gradient fill: empty \"colors\"",_1fe5.m.SPEC_INVALID_VALUE);
}
var N=stops.length;
var _1fed=new Array(N);
for(var i=0;i<N;++i){
var stop=stops[i];
var color;
if(stop.color==null){
color=_1fe6.m.getDefaultFillColor();
}else{
color=_1fe6.m.toCanonicalColor(stop.color);
}
var _1fee;
if(stop.offset==null){
_1fee=(N==1)?0:i/(N-1);
}else{
_1fee=(stop.offset);
}
if(_1fee<0||_1fee>1){
throw new _1fe5.m("Gradient fill: \"colors\" offsets must be between 0.0 and 1.0",_1fe5.m.SPEC_INVALID_VALUE);
}
_1fed[i]=new _1feb(color,_1fee);
}
return _1fed;
};
_1feb.modifyGradientWithSolid=function(stops,solid){
var _1fef=new Array(stops.length);
for(var i=0;i<stops.length;++i){
_1fef[i]=new _1feb(_1fe6.m.makeCombinedColor(solid,stops[i].color),stops[i].offset);
}
return _1fef;
};
_1feb.modifySolidWithGradient=function(stops,solid){
var _1ff0=new Array(stops.length);
for(var i=0;i<stops.length;++i){
_1ff0[i]=new _1feb(_1fe6.m.makeCombinedColor(stops[i].color,solid),stops[i].offset);
}
return _1ff0;
};
_1feb.toJSON=function(stops){
var N=stops.length;
var _1ff1=Array.create([N],0);
for(var i=0;i<N;++i){
_1ff1[i]=stops[i].offset;
}
var _1ff2=_1fe7.m.makeSortOrder(_1ff1);
var array=_1fe7.m.createSizedJSONArray(N);
for(var i=0;i<N;++i){
var stop=stops[_1ff2[i]];
var item=_1fe7.m.createJSONObject();
_1fe7.m.put(item,"color",stop.color.toJSON());
_1fe7.m.put(item,"offset",_1fe8.m.r3(stop.offset));
array.push(item);
}
return array;
};
return _1feb;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/DefaultDAGExtensions":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/DefaultDAGExtensions",["../../../../../extension/ExtensionFactory","com/ibm/init/fork!../../../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./SymmetricNodePlacement","com/ibm/init/fork!./MaximumOverlap","com/ibm/init/fork!./SpreadLayersToEdge","com/ibm/init/fork!./CenteredInLayer","com/ibm/init/fork!./AdaptiveLayerVerticalPlacement","com/ibm/init/statics","dojo/_base/declare"],function(_1ff3,_1ff4,_1ff5,_1ff6,_1ff7,_1ff8,_1ff9,_1ffa,_1ffb){
var _1ffc=_1ffb("com.ibm.vis.engine.internal.grammar.layout.graph.DefaultDAGExtensions",[_1ff3],{newInstance:function(name,_1ffd){
if("symmetric".CPVisEngineEquals(name)){
return new _1ff5.m(_1ffd);
}else{
if("maxOverlap".CPVisEngineEquals(name)){
return new _1ff6.m(_1ffd);
}else{
if("spread".CPVisEngineEquals(name)){
return new _1ff7.m(_1ffd);
}else{
if("centered".CPVisEngineEquals(name)){
return new _1ff8.m(_1ffd);
}else{
if("adaptive".CPVisEngineEquals(name)){
return new _1ff9.m(_1ffd);
}
}
}
}
}
return null;
}});
_1ffc.registerExtensions=function(){
if(!_1ffc.registered){
_1ffc.registered=true;
_1ff4.m.INSTANCE.registerDefaultFactory(new _1ffc());
}
};
_1ffa.add("com/ibm/vis/engine/internal/grammar/layout/graph/DefaultDAGExtensions",["com/ibm/vis/extension/ExtensionFactory","com/ibm/vis/extension/internal/RAVEExtensionManager"],function(){
_1ffc.registered=false;
});
return _1ffc;
});
},"com/ibm/vis/engine/internal/nativeImpl/render/SilverlightExt":function(){
define("com/ibm/vis/engine/internal/nativeImpl/render/SilverlightExt",["dojo/_base/declare","dojox/gfx","dojo/_base/array","dojo/_base/lang","dojo/_base/config","dojo/_base/Deferred","dojo/has","dojo/_base/sniff","./SurfaceCreationManager","./SilverlightAsynchAlwaysPatch","../BasicFactory"],function(_1ffe,g,_1fff,lang,_2000,_2001,has,sniff,_2002,_2003,BF){
if(g.renderer=="silverlight"){
var gs=g.shape,sl=g.silverlight;
var _2004=null;
function _2005(color){
var c=g.normalizeColor(color),t=c.toHex(),a=Math.round(c.a*255);
a=(a<0?0:a>255?255:a).toString(16);
return "#"+(a.length<2?"0"+a:a)+t.slice(1);
};
var _2006=g.silverlight.Shape.prototype.setFill;
var _2007=g.silverlight.Shape.prototype.setStroke;
lang.extend(g.silverlight.Shape,{setStroke:function(_2008){
var _2009=lang.clone(this.shape);
if(_2008.width&&_2008.width>=1){
var width=_2008.width;
var half=width/2;
var n=this.shape;
if(n.width!=null&&n.width!=undefined){
n.width+=width;
}
if(n.height!=null&&n.height!=undefined){
n.height+=width;
}
if(n.x!=null&&n.x!=undefined){
n.x-=half;
}
if(n.y!=null&&n.y!=undefined){
n.y-=half;
}
if(n.type!="rect"&&n.r!=null&&n.r!=undefined){
n.r+=half;
}
if(n.rx!=null&&n.rx!=undefined){
n.rx+=half;
}
if(n.ry!=null&&n.ry!=undefined){
n.ry+=half;
}
this.setShape(n);
}
var _200a=_2007.call(this,_2008);
this.shape=_2009;
return _200a;
},setEffect:function(_200b,shape){
var e;
if(_200b.shadow!=null){
e=_200b.shadow;
}else{
if(_200b.glow!=null){
e=_200b.glow;
}else{
return;
}
}
var _200c=e.color.a;
if(typeof _200c==undefined||_200c==null){
_200c=1;
}
var color=BF.toCSSHexColor(e.color,false);
var _200d=e.stdDev*4;
var depth;
var _200e;
if(_200b.shadow!=null){
var y=_200b.shadow.dy;
var x=_200b.shadow.dx;
_200e=Math.atan2(-y,x)*180/Math.PI;
depth=Math.sqrt(x*x+y*y);
}else{
if(_200b.glow!=null){
_200e=0;
depth=0;
}
}
var _200f="<DropShadowEffect "+"ShadowDepth=\""+depth+"\" "+"Direction=\""+_200e+"\" "+"Opacity=\""+_200c+"\" "+"Color=\""+color+"\" "+"BlurRadius=\""+_200d+"\"/>";
this.rawNode.Effect=this.rawNode.getHost().content.CreateFromXaml(_200f);
},setFill:function(fill){
var p=this.rawNode.getHost().content,r=this.rawNode,f;
if(!fill){
this.fillStyle=null;
this._setFillAttr(null);
return this;
}
if(typeof (fill)=="object"&&"type" in fill){
switch(fill.type){
case "linear":
this.fillStyle=f=g.makeParameters(g.defaultLinearGradient,fill);
var lgb=p.createFromXaml("<LinearGradientBrush/>");
lgb.spreadMethod="Pad";
if(this.shape.type=="rect"){
var x1=(f.x1-this.shape.x)/this.shape.width;
var x2=(f.x2-this.shape.x)/this.shape.width;
var y1=(f.y1-this.shape.y)/this.shape.height;
var y2=(f.y2-this.shape.y)/this.shape.height;
lgb.startPoint=x1+","+y1;
lgb.endPoint=x2+","+y2;
}else{
lgb.mappingMode="Absolute";
lgb.startPoint=f.x1+","+f.y1;
lgb.endPoint=f.x2+","+f.y2;
}
_1fff.forEach(f.colors,function(c){
var t=p.createFromXaml("<GradientStop/>");
t.offset=c.offset;
t.color=_2005(c.color);
lgb.gradientStops.add(t);
});
this._setFillAttr(lgb);
break;
case "radial":
this.fillStyle=f=g.makeParameters(g.defaultRadialGradient,fill);
var rgb=p.createFromXaml("<RadialGradientBrush/>");
var c,pt;
c=g.matrix.multiplyPoint(g.matrix.invert(this._getAdjustedMatrix()),f.cx,f.cy),pt=c.x+","+c.y;
rgb.mappingMode="Absolute";
rgb.gradientOrigin=pt;
rgb.center=pt;
rgb.radiusX=rgb.radiusY=f.r;
_1fff.forEach(f.colors,function(c){
var t=p.createFromXaml("<GradientStop/>");
t.offset=c.offset;
t.color=_2005(c.color);
rgb.gradientStops.add(t);
});
this._setFillAttr(rgb);
break;
default:
return _2006.call(this,fill);
}
return this;
}
return _2006.call(this,fill);
}});
lang.extend(g.silverlight.Surface,{clear:function(){
if(this.rawNode&&typeof (this.rawNode)!="undefined"&&this.rawNode.children){
this.rawNode.children.clear();
}
return g.shape.Container.clear.apply(this,arguments);
}});
var _2010=sl.Surface.prototype.destroy;
lang.extend(g.silverlight.Surface,{destroy:function(){
this._destroyed=true;
try{
_2010.apply(this,arguments);
}
catch(e){
debug("ERROR destroying surface:"+e);
}
finally{
this._destroyed=true;
if(this.turn){
_2002.done(this.turn);
this.turn=null;
}
}
},remove:function(shape,_2011){
if(this==shape.getParent()){
try{
var _2012=shape.rawNode.getParent();
if(_2012){
_2012.children.remove(shape.rawNode);
}
}
catch(e){
}
}
g.shape.Container.remove.apply(this,arguments);
return this;
},createObject:function(_2013,_2014){
if(!this.rawNode){
return null;
}
try{
var shape=new _2013();
var node=this.rawNode.getHost().content.createFromXaml("<"+_2013.nodeType+"/>");
shape.setRawNode(node);
shape.setShape(_2014);
this.add(shape);
return shape;
}
catch(e){
}
return null;
},_copyInto:function(_2015){
_2015.rawNode=this.rawNode;
_2015._parent=this._parent;
_2015._nodes=this._nodes;
_2015._events=this._events;
_2015.isLoaded=this.isLoaded;
_2015.width=this.width;
_2015.height=this.height;
_2015._nodeName=this._nodeName;
_2015._onLoadName=this._onLoadName;
}});
function debug(msg){
if(_2000.isDebug&&console){
console.log(msg);
}
};
var _2016=g.createSurface;
sl.createSurface=g.createSurface=function(_2017,width,_2018){
var args=arguments;
var _2019=new sl.Surface();
_2019.isLoaded=false;
var _201a=_2002;
var _201b=_2017;
var _201c=function(){
return function(){
var vis=_201b&&_201b.parentNode&&(_201b.parentNode.offsetWidth>0||_201b.parentNode.offsetHeight>0);
return vis;
};
}();
var turn=_201a.getTurn(_201c);
_2019.turn=turn;
_2001.when(turn,lang.hitch(this,function(){
if(_2019._destroyed){
debug("surface was already destroyed -- exiting");
_201a.done(turn);
return;
}
debug("about to create surface");
var s=_2016.apply(this,args);
s.isLoaded=false;
var _201d=window[s._onLoadName];
window[s._onLoadName]=function(_201e){
var self=this;
var fn=function(){
if(_2019._destroyed){
debug("surface was already destroyed -- exiting (2)");
_201a.done(turn);
return;
}
debug("new SL surface -- NEW onLoad");
s.isLoaded=true;
s.rawNode=null;
_201d.call(self,_201e);
s._copyInto(_2019);
_2019.onLoad(_2019);
_201a.done(turn);
};
if(has("ie")){
fn.apply(this);
}else{
setTimeout(fn,1);
}
};
}));
return _2019;
};
var _201f={normal:400,bold:700};
var fonts={serif:"Times New Roman",times:"Times New Roman","sans-serif":"Arial",helvetica:"Arial",monotone:"Courier New",courier:"Courier New"};
g.silverlight.Text.extend({setShape:function(_2020){
this.shape=g.makeParameters(this.shape,_2020);
this.bbox=null;
var r=this.rawNode,s=this.shape;
r.text=s.text;
r.textDecorations=s.decoration==="underline"?"Underline":"None";
r["Canvas.Left"]=-10000;
r["Canvas.Top"]=-10000;
this._delayAlignment();
return this;
},_setFont:function(){
var f=this.fontStyle,r=this.rawNode,t=f.family.toLowerCase();
r.fontStyle=f.style=="italic"?"Italic":"Normal";
r.fontWeight=f.weight;
r.fontSize=g.normalizedLength(f.size);
r.fontFamily=t in fonts?fonts[t]:f.family;
this._delayAlignment();
}});
}
});
},"com/ibm/vis/engine/internal/grammar/layout/DimUtil":function(){
define("com/ibm/vis/engine/internal/grammar/layout/DimUtil",["com/ibm/init/statics","dojo/_base/declare"],function(_2021,_2022){
var _2023=_2022("com.ibm.vis.engine.internal.grammar.layout.DimUtil",null,{});
_2023.fromXCoord=function(x,_2024){
return x*_2024.width;
};
_2023.fromYCoord=function(y,_2025){
return _2025.height-y*_2025.height;
};
_2023.fromBoundedXCoord=function(x,_2026){
return x*_2026.width+_2026.x;
};
_2023.fromBoundedYCoord=function(y,_2027){
return _2027.height-y*_2027.height+_2027.y;
};
return _2023;
});
},"com/ibm/vis/engine/internal/grammar/layout/treemap/Squarify":function(){
define("com/ibm/vis/engine/internal/grammar/layout/treemap/Squarify",["./TreeMapAlgorithm","com/ibm/init/fork!../../../struct/Rect","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!../../../nativeImpl/BasicFactory","com/ibm/init/fork!./TreeNodeAreaComparator","com/ibm/init/statics","dojo/_base/declare"],function(_2028,_2029,_202a,_202b,_202c,_202d,_202e){
var _202f=_202e("com.ibm.vis.engine.internal.grammar.layout.treemap.Squarify",[_2028],{constructor:function(){
},createBounds:function(root,rect,_2030){
if(root.rowIndex!=-1){
_2030.setBounds(root,rect);
}
if(root.getChildren().size()>0){
this.layoutChildLevel(root,rect);
for(var _2031=0,_2032=root.getChildren(),_2033=_2032.size();_2031<_2033;++_2031){
var child=_2032.get(_2031);
this.createBounds(child,child.bounds,_2030);
}
}
},layoutChildLevel:function(_2034,rect){
var _2035=rect.width*rect.height;
var _2036=_2034.getAggregatedSize();
if(_2034.getSize()>0){
var _2037=_2035*(_2034.getSize()/_2036);
var _2038=this.getShortSideLength(rect);
var _2039=_2037/_2038;
var _203a;
if(this.isVerticalLayout(rect)){
_203a=new _2029.m(rect.x,rect.y,rect.width,rect.height-_2039);
}else{
_203a=new _2029.m(rect.x,rect.y,rect.width-_2039,rect.height);
}
rect=_203a;
_2035=rect.width*rect.height;
_2036=_2036-_2034.getSize();
}
var _203b=new _202a.m();
_203b.addAll(_2034.getChildren());
for(var _203c=0,_203d=_2034.getChildren(),_203e=_203d.size();_203c<_203e;++_203c){
var child=_203d.get(_203c);
child.area=_2035*(child.getAggregatedSize()/_2036);
}
this.sortDecendingOnArea(_203b);
for(var _203f=0,_2040=_2034.getChildren(),_2041=_2040.size();_203f<_2041;++_203f){
var child=_2040.get(_203f);
if(child.area<=0){
_203b.remove(child);
}
}
this.squarify(_203b,rect,this.getShortSideLength(rect));
},squarify:function(_2042,rect,_2043){
var _2044=new _202a.m();
while(!_2042.isEmpty()){
if(_2042.size()+_2044.size()==1){
var _2045=_2042.size()==1?_2042.get(0):_2044.get(0);
_2045.bounds=rect;
break;
}
if(_2042.size()>=2&&_2044.size()==0){
var _2046=_2042.get(0);
_2044.add(_2046);
_2042.remove(_2046);
}
var _2047=this.worstAspectRatio(_2044,_2043);
var node=_2042.get(0);
var _2048=new _202a.m();
_2048.addAll(_2044);
_2048.add(node);
var _2049=this.worstAspectRatio(_2048,_2043);
if(_2047>=_2049){
node=_2042.get(0);
_2044.add(node);
_2042.remove(node);
}else{
rect=this.layoutRow(_2044,rect,_2043);
_2043=this.getShortSideLength(rect);
_2044=new _202a.m();
}
}
if(_2042.size()==0){
if(_2044.size()>0){
this.layoutRow(_2044,rect,_2043);
}
}
},layoutRow:function(_204a,rect,_204b){
if(this.isVerticalLayout(rect)){
return this.layoutHRow(_204a,rect,_204b);
}else{
return this.layoutVRow(_204a,rect,_204b);
}
},layoutVRow:function(_204c,rect,_204d){
var _204e=0;
for(var _204f=0,_2050=_204c.size();_204f<_2050;++_204f){
var _2051=_204c.get(_204f);
_204e+=_2051.area;
}
var width=_204e/_204d;
var _2052=0;
for(var _2053=0,_2054=_204c.size();_2053<_2054;++_2053){
var _2051=_204c.get(_2053);
var _2055=_2051.area/width;
var _2056=new _2029.m(rect.x,rect.y+_2052,width,_2055);
_2051.bounds=_2056;
_2052+=_2055;
}
return new _2029.m(rect.x+width,rect.y,rect.width-width,rect.height);
},layoutHRow:function(_2057,rect,_2058){
var _2059=0;
for(var _205a=0,_205b=_2057.size();_205a<_205b;++_205a){
var _205c=_2057.get(_205a);
_2059+=_205c.area;
}
var _205d=_2059/_2058;
var _205e=0;
for(var _205f=0,_2060=_2057.size();_205f<_2060;++_205f){
var _205c=_2057.get(_205f);
var width=_205c.area/_205d;
var _2061=new _2029.m(rect.x+_205e,rect.y,width,_205d);
_205c.bounds=_2061;
_205e+=width;
}
return new _2029.m(rect.x,rect.y+_205d,rect.width,rect.height-_205d);
},getShortSideLength:function(rect){
return rect.width<rect.height?rect.width:rect.height;
},isVerticalLayout:function(rect){
return rect.width<rect.height;
},worstAspectRatio:function(nodes,_2062){
if(nodes==null||nodes.size()==0){
return 1.7976931348623157e+308;
}else{
var _2063=0;
var _2064=1.7976931348623157e+308;
var _2065=0;
var area;
for(var _2066=0,_2067=nodes.size();_2066<_2067;++_2066){
var node=nodes.get(_2066);
area=node.area;
if(area==0){
continue;
}
_2063+=area;
if(_2064>area){
_2064=area;
}
if(_2065<area){
_2065=area;
}
}
if(_2063==0){
return 5e-324;
}
var _2068=_2062*_2062;
var _2069=_2063*_2063;
var _206a=_2069/(_2068*_2064);
var _206b=(_2068*_2065)/_2069;
return _206a>_206b?_206a:_206b;
}
},sortDecendingOnArea:function(nodes){
_202b.m.sortList(nodes,new _202c.m(true));
}});
return _202f;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/CoordinateTransformFactory":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/CoordinateTransformFactory",["com/ibm/init/fork!./cluster/ClusterTransform","com/ibm/init/fork!./stack/StackTransform","com/ibm/init/fork!./ProjectionTransform","com/ibm/init/fork!./TransposeTransform","com/ibm/init/fork!./PolarTransform","com/ibm/init/fork!../../nativeImpl/WebEngineException","com/ibm/init/statics","dojo/_base/declare"],function(_206c,_206d,_206e,_206f,_2070,_2071,_2072,_2073){
var _2074=_2073("com.ibm.vis.engine.internal.grammar.coordinate.CoordinateTransformFactory",null,{});
_2074.make=function(spec,_2075,_2076,vis){
if("cluster".CPVisEngineEquals(spec.type)){
return new _206c.m(_2075,vis);
}
if("stack".CPVisEngineEquals(spec.type)){
return new _206d.m();
}
if("projection".CPVisEngineEquals(spec.type)){
if(spec.projectionParameters!=null){
var pps=spec.projectionParameters;
return new _206e.m(vis.visContext,pps.name,pps.standardLongitude);
}
return new _206e.m(vis.visContext,null,null);
}
if("transpose".CPVisEngineEquals(spec.type)){
return new _206f.m();
}
if("polar".CPVisEngineEquals(spec.type)){
var _2077=null;
var _2078=true;
var _2079=null;
if(spec.polarParameters!=null){
var pps=spec.polarParameters;
_2077=pps.startAngle;
_2078=pps.CCW==null?_2078:!pps.CCW;
_2079=pps.diameter;
}
return new _2070.m(_2077,_2076,_2078,_2079);
}
throw new _2071.m("Unknown type: "+spec.type);
};
return _2074;
});
},"com/ibm/vis/interaction/internal/events/EventDispatcher":function(){
define("com/ibm/vis/interaction/internal/events/EventDispatcher",["com/ibm/init/statics","dojo/_base/declare"],function(_207a,_207b){
var _207c=_207b("com.ibm.vis.interaction.internal.events.EventDispatcher",null,{notify:function(event){
}});
return _207c;
});
},"com/ibm/vis/engine/internal/grammar/layout/LinkConnectionPoint":function(){
define("com/ibm/vis/engine/internal/grammar/layout/LinkConnectionPoint",["com/ibm/init/fork!./ConnectionSide","com/ibm/init/fork!../../struct/ArrowType","com/ibm/init/fork!./ConnectionPoint","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/statics","dojo/_base/declare"],function(_207d,_207e,_207f,_2080,_2081,_2082){
var _2083=_2082("com.ibm.vis.engine.internal.grammar.layout.LinkConnectionPoint",null,{from:null,to:null,fromConnectionPoint:null,toConnectionPoint:null,constructor:function(from,to,_2084,_2085){
this.from=from;
this.to=to;
this.fromConnectionPoint=_2084;
this.toConnectionPoint=_2085;
},getFrom:function(){
return this.from;
},getTo:function(){
return this.to;
},getFromSide:function(){
return this.fromConnectionPoint;
},getToSide:function(){
return this.toConnectionPoint;
},toString:function(){
return "[ "+this.from.getRows()[0]+" -> "+this.to.getRows()[0]+" ]"+this.fromConnectionPoint+" -> "+this.toConnectionPoint;
},isOnlyLinkOnSide:function(_2086,_2087){
var item=_2086?this.from:this.to;
var side=_2086?this.fromConnectionPoint.side:this.toConnectionPoint.side;
var _2088=_2087.get(item);
return _2083.countTotalLinksOnSide(_2088,side)==1;
},updateCounts:function(_2089){
var _208a=_2083.initCountMap(_2089,this.from);
var _208b=_2083.initCountMap(_2089,this.to);
var _208c=_208a.get(this.fromConnectionPoint.hashCode());
_208a.put(this.fromConnectionPoint.hashCode(),_208c+1);
var _208d=_208b.get(this.toConnectionPoint.hashCode());
_208b.put(this.toConnectionPoint.hashCode(),_208d+1);
}});
_2083.code2string=function(code){
return code.toString();
};
_2083.isFarSide=function(side){
return side==_207d.m.RIGHT||side==_207d.m.BOTTOM;
};
_2083.initCountMap=function(_208e,item){
var _208f=_208e.get(item);
if(_208f==null){
_208f=new _2080.m();
for(var _2090=0,_2091=_2083.ALL_CONNECTION_POINTS,_2092=_2091.length;_2090<_2092;++_2090){
var side=_2091[_2090];
_208f.put(side.hashCode(),new Number(0));
}
_208e.put(item,_208f);
}
return _208f;
};
_2083.countDifferentLinkTypesAt=function(_2093,side){
var count=0;
for(var _2094=0,_2095=_2083.ALL_CONNECTION_POINTS,_2096=_2095.length;_2094<_2096;++_2094){
var _2097=_2095[_2094];
if(_2097.side==side&&_2093.get(_2097.hashCode())>0){
count++;
}
}
return count;
};
_2083.countTotalLinksOnSide=function(_2098,side){
var count=0;
for(var _2099=0,_209a=_2083.ALL_CONNECTION_POINTS,_209b=_209a.length;_2099<_209b;++_2099){
var _209c=_209a[_2099];
if(_209c.side==side){
count+=_2098.get(_209c.hashCode());
}
}
return count;
};
_2083.determineIndexOfUsedType=function(_209d,_209e){
var index=0;
for(var _209f=0,_20a0=_2083.ALL_CONNECTION_POINTS,_20a1=_20a0.length;_209f<_20a1;++_209f){
var _20a2=_20a0[_209f];
if(_20a2.side==_209e.side&&_209d.get(_20a2.hashCode())>0){
if(_20a2.arrowStyle==_209e.arrowStyle){
return index;
}
index++;
}
}
return index;
};
_2081.add("com/ibm/vis/engine/internal/grammar/layout/LinkConnectionPoint",["com/ibm/vis/engine/internal/grammar/layout/ConnectionSide","com/ibm/vis/engine/internal/struct/ArrowType","com/ibm/vis/engine/internal/grammar/layout/ConnectionPoint","com/ibm/vis/engine/internal/nativeImpl/Map"],function(){
_2083.ALL_CONNECTION_POINTS=null;
var sides=[_207d.m.LEFT,_207d.m.RIGHT,_207d.m.TOP,_207d.m.BOTTOM];
var _20a3=new Array(_207e.m.ArrowTypes.length+1);
_20a3[_207e.m.ArrowTypes.length]=null;
for(var i=0;i<_207e.m.ArrowTypes.length;++i){
_20a3[i]=_207e.m.ArrowTypes[i];
}
_2083.ALL_CONNECTION_POINTS=new Array(sides.length*_20a3.length);
var idx=0;
for(var _20a4=0,_20a5=sides.length;_20a4<_20a5;++_20a4){
var side=sides[_20a4];
for(var _20a6=0,_20a7=_20a3.length;_20a6<_20a7;++_20a6){
var _20a8=_20a3[_20a6];
_2083.ALL_CONNECTION_POINTS[idx]=new _207f.m(side,_20a8);
idx++;
}
}
});
return _2083;
});
},"com/ibm/vis/engine/internal/legend/SizeMappingStop":function(){
define("com/ibm/vis/engine/internal/legend/SizeMappingStop",["com/ibm/init/statics","dojo/_base/declare"],function(_20a9,_20aa){
var _20ab=_20aa("com.ibm.vis.engine.internal.legend.SizeMappingStop",null,{at:0,value:0,constructor:function(at,val){
this.at=at;
this.value=val;
}});
return _20ab;
});
},"com/ibm/vis/engine/internal/interaction/defender/ScrollUnitRenderer":function(){
define("com/ibm/vis/engine/internal/interaction/defender/ScrollUnitRenderer",["com/ibm/init/fork!../effect/ScrollUnitEffect","com/ibm/init/statics","dojo/_base/declare"],function(_20ac,_20ad,_20ae){
var _20af=_20ae("com.ibm.vis.engine.internal.interaction.defender.ScrollUnitRenderer",null,{scrollUnitEffect:null,last:0,shape:null,builder:null,blnScroll:false,mainGrabber:null,firstGrabber:null,secondGrabber:null,median:null,rectLeft:null,rectRight:null,thumbNailWidth:0,clickedPart:null,vis:null,constructor:function(){
this.scrollUnitEffect=new _20ac.m(0);
},install:function(_20b0,vis){
if(_20b0!=null){
this.builder=_20b0;
}
this.vis=vis;
var vc=vis.visContext;
this.shape=vc.objectMap.retrieveObject("scrollUnit");
if(this.shape!=null){
this.setGrabbers();
this.thumbNailWidth=this.getThumbNailGrammarWidth();
}
},setStartPoint:function(x,y){
var _20b1=this.getPartContainingPoint(x,y);
if(_20b1!=null){
this.last=x;
this.blnScroll=true;
this.clickedPart=_20b1;
}else{
this.blnScroll=false;
}
},updateScrollUnit:function(xx,_20b2,_20b3,_20b4,_20b5,_20b6){
if(this.blnScroll){
var _20b7=xx-this.last;
if(_20b6){
this.last=xx;
}
this.readjustScrollUnit(_20b7,_20b2,_20b3,_20b4,_20b5,_20b6);
}
return this.getScrollUnitCoordinates(_20b2,_20b3,_20b4,_20b5);
},showScrollUnit:function(){
if(this.builder!=null){
this.scrollUnitEffect.setScrollUnitShape(this.shape);
this.builder.renderModifiedScene();
}
},readjustScrollUnit:function(_20b8,_20b9,_20ba,_20bb,_20bc,_20bd){
var _20be=true;
var _20bf=true;
if(Math.round(_20b9.x)==Math.round(_20ba.x)){
_20be=this.setOverlaidGrabber(_20b8,_20b9,_20bb,_20bc);
_20bf=false;
}
if(("median".CPVisEngineEquals(this.clickedPart)||_20af.MAIN_GRABBER.CPVisEngineEquals(this.clickedPart))&&_20be){
this.moveScrollUnit(_20b8,_20b9,_20ba,_20bb,_20bc);
}else{
if(_20af.FIRST_GRABBER.CPVisEngineEquals(this.clickedPart)){
this.dragGrabber(_20b8,_20b9);
}else{
if(_20af.SECOND_GRABBER.CPVisEngineEquals(this.clickedPart)){
this.dragGrabber(_20b8,_20ba);
}
}
}
this.adjustMedian(_20b9,_20ba,_20bc);
this.validateAndRepositionGrabber(_20b9,_20b9,_20ba,_20bc);
this.validateAndRepositionGrabber(_20ba,_20b9,_20ba,_20bc);
if(_20bf){
this.updateBaseGrabber(_20bb,_20bc);
}
if(Math.round(_20b9.x)==Math.round(_20ba.x)){
this.setOverlaidGrabber(_20b8,_20b9,_20bb,_20bc);
}
if(_20bd){
this.adjustInactiveRegions();
}
},validateAndRepositionGrabber:function(_20c0,_20c1,_20c2,_20c3){
if(_20c0.x<0){
_20c0.x=0;
_20c3.x=_20c0.x+_20c0.width/2;
_20c3.width=Math.abs(_20c1.x-_20c2.x);
}else{
if(_20c0.x+_20c0.width>this.thumbNailWidth){
_20c0.x=this.thumbNailWidth-_20c0.width;
_20c3.width=Math.abs(_20c1.x-_20c2.x);
}
}
},adjustMedian:function(_20c4,_20c5,_20c6){
var _20c7=_20c4.x<=_20c5.x?_20c4.x:_20c5.x;
var _20c8=_20c4.x>=_20c5.x?_20c4.x:_20c5.x;
var _20c9=_20c4.width;
_20c6.x=_20c7+_20c9/2;
_20c6.width=_20c8-_20c7;
},dragGrabber:function(_20ca,_20cb){
_20ca=this.capShiftXForGrabber(_20ca,_20cb);
_20cb.x=_20cb.x+_20ca;
},adjustInactiveRegions:function(){
this.rectLeft.width=this.median.x-this.rectLeft.x;
this.rectRight.x=this.median.x+this.median.width;
this.rectRight.width=this.thumbNailWidth-this.rectLeft.width-this.median.width;
},setOverlaidGrabber:function(_20cc,_20cd,_20ce,_20cf){
var _20d0=true;
_20cf.x=_20cd.x+_20cd.width/3;
_20cf.width=_20cd.width/3;
_20ce.width=_20cd.height/2;
if(Math.round(_20cd.x)==0){
_20ce.x=_20cf.x;
}else{
_20ce.x=_20cf.x-_20cd.height/2;
}
if(_20ce.x<0&&_20cc<=0){
_20ce.x=0;
_20d0=false;
}else{
if(_20ce.x+_20ce.width>this.thumbNailWidth){
_20ce.x=this.thumbNailWidth-_20ce.width;
_20d0=false;
}
}
return _20d0;
},updateBaseGrabber:function(_20d1,_20d2){
_20d1.x=_20d2.x+_20d2.width/4;
_20d1.width=_20d2.width/2;
},moveScrollUnit:function(_20d3,_20d4,_20d5,_20d6,_20d7){
_20d3=this.capShiftX(_20d3);
_20d6.affine(1,_20d3,1,0,false);
_20d4.affine(1,_20d3,1,0,false);
_20d5.affine(1,_20d3,1,0,false);
_20d7.affine(1,_20d3,1,0,false);
},capShiftX:function(_20d8){
var _20d9=this.firstGrabber.x<=this.secondGrabber.x?this.firstGrabber.x:this.secondGrabber.x;
var _20da=this.firstGrabber.x>=this.secondGrabber.x?this.firstGrabber.x:this.secondGrabber.x;
var _20db=this.firstGrabber.width;
if(_20d8<0&&(_20d8+_20d9)<0){
return -_20d9;
}else{
if(_20d8>0&&(_20d8+_20da+_20db)>this.thumbNailWidth){
return this.thumbNailWidth-(_20da+_20db);
}
}
return _20d8;
},capShiftXForGrabber:function(_20dc,_20dd){
if(_20dc<0&&(_20dc+_20dd.x)<0){
return -_20dd.x;
}else{
if(_20dc>0&&(_20dc+_20dd.x+_20dd.width)>this.thumbNailWidth){
return this.thumbNailWidth-(_20dd.x+_20dd.width);
}
}
return _20dc;
},setGrabbers:function(){
var parts=this.shape.getParts();
for(var i=0;i<parts.length;++i){
if(_20af.MAIN_GRABBER.CPVisEngineEquals(parts[i].getElementPart())){
this.mainGrabber=parts[i];
}else{
if(_20af.FIRST_GRABBER.CPVisEngineEquals(parts[i].getElementPart())){
this.firstGrabber=parts[i];
}else{
if(_20af.SECOND_GRABBER.CPVisEngineEquals(parts[i].getElementPart())){
this.secondGrabber=parts[i];
}else{
if("median".CPVisEngineEquals(parts[i].getElementPart())){
this.median=parts[i];
}else{
if("rectLeft".CPVisEngineEquals(parts[i].getElementPart())){
this.rectLeft=parts[i];
}else{
if("rectRight".CPVisEngineEquals(parts[i].getElementPart())){
this.rectRight=parts[i];
}
}
}
}
}
}
}
},getPartContainingPoint:function(x,y){
var part=null;
if(this.firstGrabber.isPointInRect(x,y)){
part=this.firstGrabber.getElementPart();
}else{
if(this.secondGrabber.isPointInRect(x,y)){
part=this.secondGrabber.getElementPart();
}else{
if(this.median.isPointInRect(x,y)){
part=this.median.getElementPart();
}else{
if(this.mainGrabber.isPointInRect(x,y)){
part=this.mainGrabber.getElementPart();
}
}
}
}
return part;
},getScrollUnitCoordinates:function(_20de,_20df,_20e0,_20e1){
var cord=Array.create([4],0);
var _20e2=_20de.width/2;
cord[0]=_20e1.y;
cord[1]=_20e1.y+_20e1.height;
if(_20de.x==_20df.x){
cord[2]=_20e0.x;
cord[3]=(_20e0.x+_20e2)>=this.thumbNailWidth?this.thumbNailWidth:_20e0.x+_20e2;
}else{
cord[2]=_20e1.x;
cord[3]=_20e1.x+_20e1.width;
}
return cord;
},resetGrabbers:function(_20e3,_20e4,_20e5,_20e6){
var parts=this.shape.getParts();
for(var i=0;i<parts.length;++i){
if(_20af.MAIN_GRABBER.CPVisEngineEquals(parts[i].getElementPart())){
this.mainGrabber=_20e5;
}else{
if(_20af.FIRST_GRABBER.CPVisEngineEquals(parts[i].getElementPart())){
this.firstGrabber=_20e3;
}else{
if(_20af.SECOND_GRABBER.CPVisEngineEquals(parts[i].getElementPart())){
this.secondGrabber=_20e4;
}else{
if("median".CPVisEngineEquals(parts[i].getElementPart())){
this.median=_20e6;
}
}
}
}
}
},getThumbNailGrammarWidth:function(){
return this.rectLeft.width+this.median.width+this.rectRight.width;
},getScrollUnit:function(){
return this.shape;
},isBlnScroll:function(){
return this.blnScroll;
},updateSpec:function(_20e7,vis){
var type="scrollUnit";
if(_20e7.length==2){
var _20e8=vis.grammar;
for(var i=0;i<_20e8.length;++i){
var _20e9=_20e8[i].elements;
for(var _20ea=0,_20eb=_20e9.length;_20ea<_20eb;++_20ea){
var _20ec=_20e9[_20ea];
if(type.CPVisEngineEquals(_20ec.interactionType)){
this.updateScrollUnitSpec(_20e7,_20ec.spec);
break;
}
}
}
}
return vis.currentSpec;
},updateScrollUnitSpec:function(d,_20ed){
var _20ee=_20ed.style;
var _20ef=_20ee.symbol;
var _20f0=_20ed.position;
var _20f1=this.shape;
var _20f2=_20f1.getParts();
var wid=_20ee.width;
var ht=_20ee.height;
var newCX=this.median.x+this.median.width/2;
var oldCY=_20f1.y+ht/2;
var dx=newCX-wid/2;
var dy=oldCY-ht/2;
var _20f3=new Object();
_20f3.field=_20f0[1].field;
_20f3.value=(d[0]+d[1])/2;
_20f0[1]=_20f3;
for(var i=0;i<_20f2.length;++i){
var shape=_20f2[i];
var part=shape.getElementPart();
if(!"rectLeft".CPVisEngineEquals(part)&&!"rectRight".CPVisEngineEquals(part)){
for(var j=0;j<_20ef.shape.length;++j){
var spec=_20ef.shape[j];
if(part.CPVisEngineEquals(spec.part)){
_20af.modifyShape(spec,shape,dx,dy,wid,ht);
}
}
}
}
},getFirstGrabber:function(){
return this.firstGrabber;
},getSecondGrabber:function(){
return this.secondGrabber;
},getMedian:function(){
return this.median;
},getThumbNailWidth:function(){
return this.thumbNailWidth;
},getMainGrabber:function(){
return this.mainGrabber;
},getClickedPart:function(){
return this.clickedPart;
},getVis:function(){
return this.vis;
}});
_20af.modifyShape=function(_20f4,shape,dx,dy,wid,ht){
_20f4.x=(shape.x-dx)*100/wid+"%";
_20f4.y=(shape.y-dy)*100/ht+"%";
_20f4.width=shape.width*100/wid+"%";
_20f4.height=shape.height*100/ht+"%";
};
_20ad.add("com/ibm/vis/engine/internal/interaction/defender/ScrollUnitRenderer",[],function(){
_20af.RECT_RIGHT="rectRight";
_20af.RECT_LEFT="rectLeft";
_20af.MEDIAN="median";
_20af.SECOND_GRABBER="secondGrabber";
_20af.FIRST_GRABBER="firstGrabber";
_20af.MAIN_GRABBER="mainGrabber";
});
return _20af;
});
},"com/ibm/vis/engine/internal/interaction/morph/MorphablePair":function(){
define("com/ibm/vis/engine/internal/interaction/morph/MorphablePair",["com/ibm/init/statics","dojo/_base/declare"],function(_20f5,_20f6){
var _20f7=_20f6("com.ibm.vis.engine.internal.interaction.morph.MorphablePair",null,{type:null,source:null,target:null,score:0,constructor:function(type,_20f8,_20f9){
this.type=type;
this.source=_20f8;
this.target=_20f9;
}});
return _20f7;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/SizeAestheticScaleValue":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/SizeAestheticScaleValue",["com/ibm/init/statics","dojo/_base/declare"],function(_20fa,_20fb){
var _20fc=_20fb("com.ibm.vis.engine.internal.grammar.aesthetic.SizeAestheticScaleValue",null,{widthScale:0,heightScale:0,constructor:function(_20fd,_20fe){
this.widthScale=_20fd;
this.heightScale=_20fe;
},getWidthScale:function(){
return this.widthScale;
},getHeightScale:function(){
return this.heightScale;
}});
return _20fc;
});
},"com/ibm/vis/engine/internal/nativeImpl/WebEngineLayer":function(){
define("com/ibm/vis/engine/internal/nativeImpl/WebEngineLayer",["./Array","./Character","./Error","./String","./Double","../Vis"],function(){
});
},"com/ibm/vis/engine/internal/data/transform/NormalDistributionType":function(){
define("com/ibm/vis/engine/internal/data/transform/NormalDistributionType",["./TransformType","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_20ff,_2100,_2101,_2102){
var _2103=_2102("com.ibm.vis.engine.internal.data.transform.NormalDistributionType",[_20ff],{sumOfWeights:0,xBar:0,standardDeviation:0,windowWidth:-1,xData:null,constructor:function(){
},setGroupMoments:function(n,xbar,_2104){
this.sumOfWeights=n;
this.xBar=xbar;
this.standardDeviation=_2104;
},getDensity:function(x,scale){
var a=x-this.xBar;
var _2105=(-(a*a))/(2*this.standardDeviation*this.standardDeviation);
var denom=_2103.SQR_ROOT_TWO_PI*this.standardDeviation;
var _2106=Math.exp(_2105)/denom;
if(_2100.m.isNaN(scale)){
scale=this.sumOfWeights;
}
return _2106*scale;
},setOverallDataDetails:function(input,xI,_2107){
this.xData=Array.create([_2107.length],0);
var n=0;
for(var _2108=0,_2109=_2107.length;_2108<_2109;++_2108){
var i=_2107[_2108];
var x=input[i].data[xI];
this.xData[n++]=x;
}
var _210a=0;
for(var i=0;i<n;++i){
_210a+=this.xData[i];
}
_210a/=this.xData.length;
var sd=0;
for(var i=0;i<n;++i){
var v=this.xData[i];
sd+=(v-_210a)*(v-_210a);
}
sd=Math.sqrt(sd/this.xData.length);
this.windowWidth=sd*3;
},getWindowWidth:function(){
return this.windowWidth;
}});
_2101.add("com/ibm/vis/engine/internal/data/transform/NormalDistributionType",["com/ibm/vis/engine/internal/data/transform/TransformType"],function(){
_2103.SQR_ROOT_TWO_PI=Math.sqrt(2*3.141592653589793);
_2103.EXPAND_LEVEL=3;
});
return _2103;
});
},"com/ibm/init/forkloader":function(){
define("com/ibm/init/forkloader",["exports","dojo/_base/array"],function(_210b,array){
var cache={};
var _210c=0;
var _210d=[];
var _210e=function(id){
_210c--;
if(!_210c){
array.forEach(_210d,function(c){
c(null);
});
_210d=[];
}
};
_210b.wait=function(_210f){
if(!_210c){
_210f(null);
}else{
_210d.push(_210f);
}
};
_210b.fork=function(id,_2110,_2111){
if(id in cache){
_2111(cache[id]);
}else{
var _2112={state:0,id:id};
_210c++;
cache[id]=_2112;
_2110([id],function(_2113){
_2112.state=1;
_2112.m=_2113;
_210e(id);
});
_2111(_2112);
}
};
});
},"com/ibm/vis/engine/internal/grammar/values/PercentageValueProvider":function(){
define("com/ibm/vis/engine/internal/grammar/values/PercentageValueProvider",["./ValueProvider","com/ibm/init/fork!../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_2114,_2115,_2116,_2117){
var _2118=_2117("com.ibm.vis.engine.internal.grammar.values.PercentageValueProvider",[_2114],{fraction:null,constructor:function(_2119,_211a){
this.fraction=_211a;
},getNumber:function(row){
return this.fraction;
},toZeroOne:function(value,scale){
return this.fraction;
},getRange:function(){
return new _2115.m(this.fraction,this.fraction);
},getIncludeInRange:function(){
return false;
},isCategorical:function(){
return false;
},getUnit:function(){
return null;
},getLabel:function(){
return this.fraction.toString();
},getBaseField:function(){
return null;
},getGranularity:function(){
return null;
},enableOrdering:function(_211b){
}});
return _2118;
});
},"com/ibm/vis/engine/internal/struct/RasterEdgeData":function(){
define("com/ibm/vis/engine/internal/struct/RasterEdgeData",["com/ibm/init/statics","dojo/_base/declare"],function(_211c,_211d){
var _211e=_211d("com.ibm.vis.engine.internal.struct.RasterEdgeData",null,{i0:0,i1:0,x:0,dx:0});
return _211e;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/functions/LinearFunctionalPath":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/functions/LinearFunctionalPath",["./FunctionalPath","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!./DoubleOrderedSet","com/ibm/init/fork!../../../struct/Point","com/ibm/init/fork!./LineSegment","com/ibm/init/fork!../../../struct/Line","com/ibm/init/fork!../../../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_211f,_2120,_2121,_2122,_2123,_2124,_2125,_2126,_2127){
var _2128=_2127("com.ibm.vis.engine.internal.grammar.coordinate.functions.LinearFunctionalPath",[_211f],{segments:null,samples:null,xAxisCrossings:null,positive:true,negative:true,lastFound:-1,last:null,lastPositive:null,current:null,defaultValue:0,constructor:function(){
this.segments=new _2120.m();
this.samples=new _2121.m(10);
this.xAxisCrossings=new _2121.m(10);
this.current=new _2122.m(-Infinity,0);
this.__constructor_com_ibm_vis_engine_internal_grammar_coordinate_functions_LinearFunctionalPath.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_grammar_coordinate_functions_LinearFunctionalPath:function(_2129){
this.defaultValue=_2129;
},moveTo:function(x,y){
this.samples.add(x);
this.current=new _2122.m(x,y);
},lineTo:function(x,y){
this.samples.add(x);
var next=new _2122.m(x,y);
var _212a=new _2123.m(this.current,next);
this.segments.add(_212a);
if(this.current.y<0||next.y<0){
this.positive=false;
}
if(this.current.y>0||next.y>0){
this.negative=false;
}
this.current=next;
if(_212a.crossesXAxis()){
this.xAxisCrossings.add(_212a.getXIntercept());
}
if(this.last!=null){
if(this.isStepCrossing(this.last,_212a)||this.isDelayedCrossing(this.last,_212a,this.lastPositive)){
this.xAxisCrossings.add(_212a.getP1().x);
}
}
if(_212a.getP2().y>0){
this.lastPositive=true;
}else{
if(_212a.getP2().y<0){
this.lastPositive=false;
}
}
this.last=_212a;
},curveTo:function(x1,y1,c1x,c1y,c2x,c2y){
var x0=this.current.x;
var y0=this.current.y;
var dc1=_2124.m.distanceToLine(x0,y0,x1,y1,c1x,c1y);
var dc2=_2124.m.distanceToLine(x0,y0,x1,y1,c2x,c2y);
var _212b=Math.max(dc1,dc2);
if(_212b<=0.5){
this.lineTo(x1,y1);
}else{
var xt=0.125*x0+0.375*c1x+0.375*c2x+0.125*x1;
var yt=0.125*y0+0.375*c1y+0.375*c2y+0.125*y1;
var ax=0.5*(x0+c1x);
var ay=0.5*(y0+c1y);
var bx=0.5*(c1x+c2x);
var by=0.5*(c1y+c2y);
var cx=0.5*(c2x+x1);
var cy=0.5*(c2y+y1);
var mx=0.5*(ax+bx);
var my=0.5*(ay+by);
var nx=0.5*(bx+cx);
var ny=0.5*(by+cy);
this.curveTo(xt,yt,ax,ay,mx,my);
this.curveTo(x1,y1,nx,ny,cx,cy);
}
},getY:function(x){
var _212c=this.findSegmentsContaining(x);
if(_212c==null){
return this.defaultValue;
}
for(var _212d=0,_212e=_212c.size();_212d<_212e;++_212d){
var _212f=_212c.get(_212d);
if(_212f.containsX(x)){
if(x!=_212f.getP1().x||x==_212f.getP2().x){
return _212f.interpolateY(x);
}
}
}
return this.defaultValue;
},getRightY:function(x){
var _2130=this.findSegmentsContaining(x);
if(_2130==null){
return this.defaultValue;
}
for(var _2131=0,_2132=_2130.size();_2131<_2132;++_2131){
var _2133=_2130.get(_2131);
var x2=_2133.getP2().x;
if(x<x2&&_2133.containsX(x)){
return _2133.interpolateY(x);
}
}
return this.defaultValue;
},getLeftY:function(x){
var _2134=this.findSegmentsContaining(x);
if(_2134==null){
return this.defaultValue;
}
for(var _2135=0,_2136=_2134.size();_2135<_2136;++_2135){
var _2137=_2134.get(_2135);
var x1=_2137.getP1().x;
if(x>x1&&_2137.containsX(x)){
return _2137.interpolateY(x);
}
}
return this.defaultValue;
},findSegmentsContaining:function(x){
var _2138=null;
var index=this.findIndexOfSegmentContaining(x);
if(index>=0){
_2138=new _2120.m(2);
_2138.add(this.segments.get(index));
if(index+1<this.segments.size()){
var _2139=this.segments.get(index+1);
if(_2139.containsX(x)){
_2138.add(_2139);
}
}
if(index-1>=0){
var _2139=this.segments.get(index-1);
if(_2139.containsX(x)){
_2138.add(_2139);
}
}
}
return _2138;
},findIndexOfSegmentContaining:function(x){
var size=this.segments.size();
if(size==0){
return -1;
}
var minX=this.segments.get(0).getP1().x;
var maxX=this.segments.get(size-1).getP2().x;
if(minX>x||x>maxX){
return -1;
}
var _213a=0;
var top=size-1;
var _213b=this.lastFound;
if(_213b<0){
_213b=Math.floor((_213a+top)/2);
}
while(_213a<=top){
var _213c=this.segments.get(_213b);
if(_213c.containsX(x)){
this.lastFound=_213b;
return _213b;
}else{
if(x>_213c.getP2().x){
_213a=_213b+1;
}else{
top=_213b-1;
}
}
_213b=Math.floor((_213a+top)/2);
}
return -1;
},isDiscontinuity:function(x){
var _213d=this.getRightY(x);
var y=this.getY(x);
var leftY=this.getLeftY(x);
if(_2125.m.isNaN(y)){
return !_2125.m.isNaN(_213d)||!_2125.m.isNaN(leftY);
}else{
if(_2125.m.isNaN(_213d)||_2125.m.isNaN(leftY)){
return true;
}else{
return _213d!=y||leftY!=y;
}
}
},isNonNegative:function(){
return this.positive;
},isNonPositive:function(){
return this.negative;
},getXSamples:function(){
return this.samples;
},getXAxisCrossingPoints:function(){
return this.xAxisCrossings;
},isStepCrossing:function(last,_213e){
if(last.getP2().y!=_213e.getP1().y){
var _213f=new _2123.m(last.getP2(),_213e.getP1());
if(_213f.crossesXAxis()){
return true;
}
}
return false;
},isDelayedCrossing:function(last,_2140,_2141){
if(last.getP2().y==0){
if(_2141!=null){
if((_2141&&_2140.getP2().y<0)||(!_2141&&_2140.getP2().y>0)){
return true;
}
}
}
return false;
}});
return _2128;
});
},"com/ibm/vis/engine/internal/grammar/layout/LinkLength":function(){
define("com/ibm/vis/engine/internal/grammar/layout/LinkLength",["com/ibm/init/statics","dojo/_base/declare"],function(_2142,_2143){
var _2144=_2143("com.ibm.vis.engine.internal.grammar.layout.LinkLength",null,{linkRow:0,linkLength:0,constructor:function(row,len){
this.linkLength=len;
this.linkRow=row;
},getValue:function(){
return this.linkRow;
},getLinkLength:function(){
return this.linkLength;
}});
return _2144;
});
},"com/ibm/vis/engine/internal/util/SceneIdUtil":function(){
define("com/ibm/vis/engine/internal/util/SceneIdUtil",["com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_2145,_2146,_2147){
var _2148=_2147("com.ibm.vis.engine.internal.util.SceneIdUtil",null,{});
_2148.isPartId=function(id){
return id.indexOf("_",1)!=-1;
};
_2148.isCoordsId=function(id){
return id!=null&&id.indexOf("Coords")>-1;
};
_2148.isOutId=function(id){
return id!=null&&id.indexOf("Out")>-1;
};
_2148.isBackId=function(id){
return id!=null&&id.indexOf("ack")>-1;
};
_2148.getMainId=function(_2149){
var ix=_2149.indexOf("_",1);
if(ix<0){
return _2149;
}
return _2149.substring(0,ix);
};
_2148.getBaseIdForSceneItem=function(item){
var id=_2145.m.getItem(item,"id");
if(id!=null){
return _2148.baseId(id);
}
var _214a=_2145.m.getItem(item,"children");
if(_214a==null){
return null;
}
var size=_214a.length;
for(var i=0;i<size;++i){
var child=_214a[i];
id=_2148.getBaseIdForSceneItem(child);
if(id!=null){
return _2148.baseId(id);
}
}
return null;
};
_2148.baseId=function(id){
if(id.indexOf("L")==0){
return _2148.getLegendBaseId(id);
}
var _214b=id.indexOf("A");
if(_214b!=-1){
return _2148.getAxisBaseId(id);
}
var _214c=id.indexOf("E");
if(_214c!=-1){
return _2148.getElementBaseId(id);
}
return id;
};
_2148.getFacetIndex=function(id){
if(id==null||id.indexOf("F")!=0){
return null;
}
var _214d=id.indexOf("G");
return id.substring(1,_214d);
};
_2148.stripFacetIndexFromId=function(id){
if(id==null||id.indexOf("F")!=0){
return id;
}
var _214e=id.indexOf("G");
return "F"+id.substring(_214e);
};
_2148.isFaceted=function(id){
return (id!=null&&id.indexOf("F")==0);
};
_2148.setFacetIndexInId=function(id,index){
if(id==null||index==null||id.indexOf("FG")!=0){
return id;
}
return "F"+index+id.substring(1);
};
_2148.getElementBaseId=function(id){
var _214f=id.indexOf("S");
if(_214f!=-1){
return id.substring(0,_214f);
}
var _2150=id.indexOf("L");
if(_2150!=-1){
return id.substring(0,_2150);
}
return id;
};
_2148.getGraphIndex=function(id){
var _2151=id.indexOf("G");
if(_2151==-1){
return null;
}
var _2152=id.indexOf("A");
if(_2152>_2151){
return id.substring(_2151,_2152);
}
var _2153=id.indexOf("E");
if(_2153>_2151){
return id.substring(_2151,_2153);
}
var _2154=id.indexOf("Coords");
if(_2154>_2151){
return id.substring(_2151,_2154);
}
return null;
};
_2148.getAxisBaseId=function(id){
var _2155=id.indexOf("T");
if(_2155!=-1){
return id.substring(0,_2155);
}
var _2156=id.indexOf("L");
if(_2156!=-1){
return id.substring(0,_2156);
}
var _2157=id.indexOf("M");
if(_2157!=-1){
return id.substring(0,_2157);
}
var _2158=id.indexOf("G");
var _2159=id.lastIndexOf("G");
if(_2159!=_2158){
return id.substring(0,_2159+1);
}
return id;
};
_2148.getLegendBaseId=function(id){
if(id.indexOf("ack")>0){
return null;
}
var _215a=id.indexOf("LC");
return id.substring(0,_215a+2);
};
_2146.add("com/ibm/vis/engine/internal/util/SceneIdUtil",[],function(){
_2148.GRIDLINE="axis-back";
_2148.LEGEND="legend";
_2148.AXIS="axis";
_2148.ELEMENT="element";
_2148.STROKE="stroke";
_2148.CHILDREN="children";
_2148.FACET="facet";
_2148.TYPE="type";
_2148.ID="id";
_2148.ELEMENT_TYPE="elementType";
_2148.BACK="ack";
_2148.UNDERSCORE="_";
_2148.COORDS="Coords";
_2148.OUT="Out";
});
return _2148;
});
},"com/ibm/vis/engine/internal/nativeImpl/List":function(){
define("com/ibm/vis/engine/internal/nativeImpl/List",["dojo/_base/declare","dojo/_base/array"],function(_215b,array){
var List=_215b("com.ibm.vis.engine.internal.nativeImpl.List",null,{data:null,length:0,constructor:function(_215c){
if(_215c!=null&&_215c.toArray){
this.data=_215c.toArray();
this.length=this.data.length;
}else{
this.data=[];
}
},add:function(index,value){
if(typeof value!="undefined"){
this.data.splice(index,0,value);
}else{
this.data[this.length]=index;
}
this.length++;
},addAll:function(){
if(arguments.length==1&&arguments[0].data&&arguments[0].data.length){
this.data=this.data.concat(arguments[0].data);
}else{
if(arguments.length==2&&arguments[1].data&&arguments[1].data.length){
var index=arguments[0];
var _215d=arguments[1];
var _215e=this.data.slice(0,index);
var _215f=this.data.slice(index);
this.data=_215e.concat(_215d.data,_215f);
}
}
this.length=this.data.length;
},clear:function(){
this.data=[];
this.length=0;
},contains:function(value){
return array.indexOf(this.data,value)>-1;
},get:function(index){
return this.data[index];
},size:function(){
return this.data.length;
},toArray:function(){
return this.data.slice();
},set:function(index,value){
this.data[index]=value;
},indexOf:function(value){
return array.indexOf(this.data,value);
},isEmpty:function(){
return this.size()==0;
},remove:function(_2160){
var index=array.indexOf(this.data,_2160);
if(index>=0){
this.data.splice(index,1);
this.length=this.data.length;
return true;
}
return false;
},removeAll:function(){
var _2161=false;
if(arguments.length==1&&arguments[0].data){
for(var i=0;i<arguments[0].data.length;i++){
var index=array.indexOf(this.data,arguments[0].data[i]);
if(index>=0){
this.data.splice(index,1);
_2161=true;
}
this.length=this.data.length;
}
}
return _2161;
},trimToSize:function(){
}});
return List;
});
},"com/ibm/vis/interaction/internal/events/EventDispatcherImpl":function(){
define("com/ibm/vis/interaction/internal/events/EventDispatcherImpl",["./EventDispatcher","com/ibm/init/statics","dojo/_base/declare"],function(_2162,_2163,_2164){
var _2165=_2164("com.ibm.vis.interaction.internal.events.EventDispatcherImpl",[_2162],{notify:function(event){
try{
event.dispatch();
}
catch(e){
if(e instanceof Error){
}else{
throw e;
}
}
}});
return _2165;
});
},"com/ibm/vis/engine/internal/grammar/values/DerivedValueProvider":function(){
define("com/ibm/vis/engine/internal/grammar/values/DerivedValueProvider",["./ValueProvider","com/ibm/init/fork!../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_2166,_2167,_2168,_2169){
var _216a=_2169("com.ibm.vis.engine.internal.grammar.values.DerivedValueProvider",[_2166],{target:null,functionName:null,variableProvider:null,constructor:function(_216b,_216c,_216d,_216e){
this.target=_216c;
this.functionName=_216d;
this.variableProvider=_216e;
},getNumber:function(row){
var arg=this.variableProvider.getNumber(row);
return this.target.getDerivedValue(this.functionName,arg,this.span);
},toZeroOne:function(value,scale){
return this.variableProvider.toZeroOne(value,scale);
},getIncludeInRange:function(){
return this.variableProvider.getIncludeInRange();
},getRange:function(){
var range=this.variableProvider.getRange();
return new _2167.m(this.target.getDerivedValue(this.functionName,range.min,this.span),this.target.getDerivedValue(this.functionName,range.max,this.span));
},isCategorical:function(){
return false;
},getLabel:function(){
return this.variableProvider.getLabel();
},getBaseField:function(){
return null;
},getUnit:function(){
return this.variableProvider.getUnit();
},getGranularity:function(){
return this.variableProvider.getGranularity();
},enableOrdering:function(_216f){
}});
return _216a;
});
},"com/ibm/vis/engine/internal/grammar/layout/cloud/flow/ShapeFlow":function(){
define("com/ibm/vis/engine/internal/grammar/layout/cloud/flow/ShapeFlow",["com/ibm/init/fork!../../../../nativeImpl/List","com/ibm/init/fork!./FlowRow","com/ibm/init/statics","dojo/_base/declare"],function(_2170,_2171,_2172,_2173){
var _2174=_2173("com.ibm.vis.engine.internal.grammar.layout.cloud.flow.ShapeFlow",null,{currentRow:null,bounds:null,rows:null,padding:null,constructor:function(_2175,_2176){
this.bounds=_2175;
this.padding=_2176;
this.rows=new _2170.m();
},canAddAnotherRow:function(){
if(this.currentRow!=null){
return (this.currentRow.y+this.currentRow.rowHeight)<(this.bounds.y+this.bounds.height);
}else{
return this.bounds.height>0;
}
},addShape:function(shape){
var row=this.getCurrentRow();
if(!row.addShape(shape)){
row=this.makeNewRow(row);
var add=row.addShape(shape);
return add;
}
return true;
},addRow:function(x,y,width,_2177){
var row=new _2171.m(x,y,width,_2177,this.padding);
this.rows.add(row);
return row;
},makeNewRow:function(_2178){
if(_2178==null){
this.currentRow=this.addRow(this.bounds.x,this.bounds.y,this.bounds.width,this.bounds.height);
return this.currentRow;
}
this.currentRow=this.addRow(this.bounds.x,_2178.y+_2178.rowHeight,this.bounds.width,((this.bounds.y+this.bounds.height)-(_2178.y+_2178.rowHeight)));
return this.currentRow;
},getCurrentRow:function(){
if(this.currentRow==null){
this.currentRow=this.addRow(this.bounds.x,this.bounds.y,this.bounds.width,this.bounds.height);
}
return this.currentRow;
},getAllBounds:function(){
var _2179=new _2170.m();
for(var _217a=0,_217b=this.rows,_217c=_217b.size();_217a<_217c;++_217a){
var row=_217b.get(_217a);
for(var _217d=0,_217e=row.rowItems,_217f=_217e.size();_217d<_217f;++_217d){
var item=_217e.get(_217d);
_2179.add(item.getBounds());
}
}
return _2179;
},alignRows:function(align,_2180){
for(var _2181=0,_2182=this.rows,_2183=_2182.size();_2181<_2183;++_2181){
var row=_2182.get(_2181);
row.alignAllRowBounds(align,_2180);
}
},alignBaseLine:function(_2184){
for(var _2185=0,_2186=this.rows,_2187=_2186.size();_2185<_2187;++_2185){
var row=_2186.get(_2185);
row.adjustForDescent(_2184);
}
}});
return _2174;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/functions/FunctionalPath":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/functions/FunctionalPath",["com/ibm/init/statics","dojo/_base/declare"],function(_2188,_2189){
var _218a=_2189("com.ibm.vis.engine.internal.grammar.coordinate.functions.FunctionalPath",null,{getXSamples:function(){
},getY:function(x){
},isDiscontinuity:function(x){
},getRightY:function(x){
},getLeftY:function(x){
},isNonNegative:function(){
},isNonPositive:function(){
}});
return _218a;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/CoordinateTransform":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/CoordinateTransform",["com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_218b,_218c,_218d){
var _218e=_218d("com.ibm.vis.engine.internal.grammar.coordinate.CoordinateTransform",null,{scales:null,isInitialized:false,transformShape:function(shape,_218f,scale){
},inverseTransform:function(_2190,_2191,_2192){
},calculateGapSize:function(width,_2193){
},isTranspose:function(){
return false;
},needsInsideAxes:function(){
return false;
},isStacking:function(){
return false;
},isCluster:function(){
return false;
},isPolar:function(){
return false;
},preProcess:function(_2194,size){
return _2194;
},initialize:function(_2195){
if(this.isInitialized){
return;
}
this.scales=_2195;
this.isInitialized=true;
},postProcess:function(size){
},getDiameterSpec:function(){
return null;
},getClockwise:function(){
return false;
},transformShapes:function(_2196,_2197,scale){
var _2198=new _218b.m();
for(var _2199=0,_219a=_2196.size();_2199<_219a;++_2199){
var _219b=_2196.get(_2199);
var shape=this.transformShape(_219b,_2197,scale);
if(shape!=null){
shape.meta=_219b.meta;
shape.visible=_219b.visible;
_2198.add(shape);
}
}
return _2198;
},isInversible:function(){
return true;
},getScales:function(){
return this.scales;
}});
return _218e;
});
},"com/ibm/vis/engine/internal/migration/ArrayRange":function(){
define("com/ibm/vis/engine/internal/migration/ArrayRange",["com/ibm/init/statics","dojo/_base/declare"],function(_219c,_219d){
var _219e=_219d("com.ibm.vis.engine.internal.migration.ArrayRange",null,{start:0,end:0,current:0,constructor:function(start,end){
this.start=start;
this.end=end;
this.current=start;
}});
return _219e;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/distance/BFSDistance":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/distance/BFSDistance",["com/ibm/init/fork!../matrix/FullMatrix","com/ibm/init/fork!../util/DepthAssignation","com/ibm/init/fork!../../../../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_219f,_21a0,_21a1,_21a2,_21a3){
var _21a4=_21a3("com.ibm.vis.engine.internal.grammar.layout.graph.stress.distance.BFSDistance",null,{graph:null,directed:false,bound:0,constructor:function(_21a5,graph,bound){
this.directed=_21a5;
this.graph=graph;
this.bound=bound;
},compute:function(){
var nodes=this.graph.nodes;
var n=nodes.length;
var d=new _219f.m(n,!this.directed);
d.fill(2147483647);
for(var i=0;i<n;++i){
var node=nodes[i];
var bfs=new _21a0.m(this.graph,this.directed);
bfs.bound=this.bound;
var _21a6=new _21a1.m();
_21a6.add(node);
bfs.execute(_21a6);
for(var j=0;j<n;++j){
d.set(i,j,Math.min(d.get(i,j),nodes[j].info));
}
}
return d;
}});
return _21a4;
});
},"com/ibm/vis/engine/internal/legend/VerticalSwatchLegend":function(){
define("com/ibm/vis/engine/internal/legend/VerticalSwatchLegend",["./SwatchLegend","com/ibm/init/fork!../Data","com/ibm/init/statics","dojo/_base/declare"],function(_21a7,_21a8,_21a9,_21aa){
var _21ab=_21aa("com.ibm.vis.engine.internal.legend.VerticalSwatchLegend",[_21a7],{constructor:function(_21ac,_21ad,_21ae,vis){
},makePositions:function(_21af){
_21af.type="point";
var yPos=new Object();
yPos.field=new Object();
if(this.numFacets==1){
yPos.field.$ref="yForLegend";
}else{
yPos.field.$ref=_21a7.Pos_Field;
}
var xPos=new Object();
xPos.field=new Object();
xPos.field.$ref="xForLegend";
_21af.position=[yPos,xPos];
},makeData:function(_21b0,_21b1,_21b2,_21b3,_21b4){
var index=_21b0.index;
var _21b5=new Object();
_21b5.id="xForLegend";
_21b5.min=0;
_21b5.max=Math.min(6,_21b3/_21b2.width)+1;
var _21b6=new Object();
_21b6.id="yForLegend";
_21b6.granularity=1;
_21b6.categories=_21b0.categories;
_21b6.label=_21b0.label;
var _21b7=null;
if(this.numFacets==1){
_21b7=new Array(index+2);
for(var i=0;i<index;++i){
_21b7[i]=new Object();
}
_21b7[index]=_21b6;
_21b7[index+1]=_21b5;
}else{
var _21b8=new Object();
_21b8.id=_21a7.Pos_Field;
_21b8.categories=_21b0.categories;
var _21b9=new Object();
_21b9.id=_21a7.FacetCommon_Field;
_21b9.categories=["FacetColm1"];
var _21ba=new Object();
_21ba.id=_21a7.Facet1_Field;
_21ba.categories=new Array(this.numFacets);
for(var i=0;i<this.numFacets;++i){
_21ba.categories[i]="colm"+i;
}
_21b7=new Array(index+5);
for(var i=0;i<index;++i){
_21b7[i]=new Object();
}
_21b7[index+4]=_21b8;
_21b7[index+3]=_21b9;
_21b7[index+2]=_21ba;
_21b7[index+1]=_21b5;
_21b7[index]=_21b6;
}
var _21bb=new Object();
_21bb.fields=_21b7;
if(this.numFacets==1){
_21bb.rows=this.makeRows(this.getValidTickValues(),index);
}else{
_21bb.rows=this.makeFacetRows(this.getValidTickValues(),index);
}
var data=new _21a8.m("legendData",_21b1,_21bb);
data.fields[index].categories=_21b0.categories;
data.fields[index].unit=_21b0.unit;
data.fields[index].label=_21b0.label;
data.fields[index].setSpecifiedFormatter(_21b0.getSpecifiedFormatter());
_21b1.currentSpec.data=[_21bb];
return data;
},makeRows:function(_21bc,index){
var _21bd=_21bc.size();
var _21be=new Array(_21bd);
for(var i=0;i<_21bd;++i){
var row=new Array(index+2);
row[index]=_21bc.get(i);
row[index+1]=1;
_21be[i]=row;
}
return _21be;
},makeFacetRows:function(_21bf,index){
var _21c0=_21bf.size();
var _21c1=new Array(_21c0);
var _21c2=0;
var value=0;
for(var i=0;i<_21c0;++i){
var row=new Array(index+5);
value=_21bf.get(i);
if((i>0)&&(i%this.facetSize==0)){
_21c2++;
}
row[index]=value;
row[index+1]=1;
row[index+2]=_21c2;
row[index+3]=0;
row[index+4]=value%this.facetSize;
_21c1[i]=row;
}
return _21c1;
},reduceTickCount:function(){
return false;
}});
return _21ab;
});
},"com/ibm/vis/engine/internal/facet/FacetMethodNone":function(){
define("com/ibm/vis/engine/internal/facet/FacetMethodNone",["./Faceting","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_21c3,_21c4,_21c5,_21c6){
var _21c7=_21c6("com.ibm.vis.engine.internal.facet.FacetMethodNone",[_21c3],{makeSharedCellsScene:function(_21c8,_21c9){
return null;
},makeUnsharedCellsScene:function(_21ca,_21cb,_21cc,_21cd,_21ce){
return null;
},getPanelSize:function(scene,_21cf){
return _21cf;
},getSelectedPanelSize:function(scene,_21d0,_21d1,_21d2,_21d3,_21d4,_21d5,_21d6){
return _21d0;
},isChartInChart:function(){
return false;
},updateKey:function(key,row){
return key;
},splitAesthetic:function(_21d7,_21d8){
var _21d9=new _21c4.m();
for(var i=0;i<_21d8.data.rows.length;++i){
_21d9.add(i);
}
_21d7.add(_21d9);
},applyFacetingToShape:function(shape,row,_21da){
},isFacetedElement:function(_21db){
return true;
},addFacetInfoToShapes:function(_21dc,_21dd){
},getFacetSpec:function(){
return null;
}});
return _21c7;
});
},"com/ibm/vis/widget/AnimationControl":function(){
require({cache:{"url:com/ibm/vis/widget/templates/AnimationControl.html":"<div>\r\n\r\n<table>\r\n\t<tr>\r\n\t\t<td><select data-dojo-type=\"dijit.form.ComboBox\"\r\n\t\t\tdata-dojo-attach-point=\"fieldCombo\"\r\n\t\t\tdata-dojo-attach-event=\"onChange:_setFacetVariable\">\r\n\t\t</select></td>\r\n\r\n\t\t<td>\r\n\t\t<div data-dojo-attach-point=\"slider\" data-dojo-attach-event=\"onChange:_showScene\" data-dojo-type=\"dijit.form.HorizontalSlider\" value=\"6\" data-dojo-props=\"minimum:-10, maximum:10, discreteValues:11, intermediateChanges:true, showButtons:false\" style=\"width: 300px;\"></div>\r\n\t\t</td>\r\n\r\n\t\t<td>\r\n\t\t<button data-dojo-type=\"dijit.form.Button\" data-dojo-attach-point=\"runButton\" data-dojo-attach-event=\"onClick:playOrStop\">Run</button>\r\n\t\t</td>\r\n\t\t<td><span data-dojo-attach-point=\"variableName\"></span>=<span data-dojo-attach-point=\"variableValue\"></span></td>\r\n\t</tr>\r\n</table>\r\n</div>\r\n\r\n"}});
define("com/ibm/vis/widget/AnimationControl",["dojo/_base/declare","dojo/_base/array","dojo/_base/lang","./_AnimationControlBase","dijit/_Widget","dijit/_TemplatedMixin","dijit/_WidgetsInTemplateMixin","dojo/store/Memory","dojo/text!./templates/AnimationControl.html","dijit/form/HorizontalSlider","dijit/form/ComboBox","dijit/form/Button"],function(_21de,_21df,lang,_21e0,_21e1,_21e2,_21e3,_21e4,_21e5){
var _21e6=_21de("com.ibm.vis.widget.AnimationControl",[_21e0,_21e1,_21e2,_21e3],{templateString:_21e5,postCreate:function(){
this.inherited(arguments);
this.slider.on("focus",lang.hitch(this,"_onSliderFocus"));
this.slider.on("blur",lang.hitch(this,"_onSliderBlur"));
},initializeDropDown:function(ids){
this.inherited(arguments);
this.fieldCombo.store=this._createItemFileReadStore(ids);
this.fieldCombo.set("value",ids[0]);
},setDisabled:function(_21e7){
this.inherited(arguments);
this.slider.set("disabled",_21e7);
this.fieldCombo.set("disabled",_21e7);
this.runButton.set("disabled",_21e7);
this.variableName.innerHTML="";
this.variableValue.innerHTML="";
},setRunButtonLabel:function(label){
this.runButton.set("label",label);
},getSliderValue:function(){
return this.slider.get("value");
},getSliderMax:function(){
return this.slider.get("maximum");
},initializeForKey:function(key){
this.slider.set("minimum",0);
this.slider.set("maximum",this.faceting.getCellCount()-1);
this.slider.set("discreteValues",this.faceting.getCellCount());
this.slider.set("value",0);
this.variableName.innerHTML=key;
},_showScene:function(index){
if(this.faceting==null||this.currentSceneIndex==index){
return;
}
this.inherited(arguments);
if(this.slider.get("value")!=index){
this.slider.set("value",index);
}
this.variableValue.innerHTML=this.faceting.getFacetTitle(index);
},_createItemFileReadStore:function(ids){
var store=new _21e4();
_21df.forEach(ids,function(id){
store.put({name:id});
});
return store;
}});
return _21e6;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/cluster/ClusterTransform":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/cluster/ClusterTransform",["../CoordinateTransform","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!../../../spechelper/CategoryStructureSpecHelper","com/ibm/init/fork!./ClusterShapeGroup","com/ibm/init/fork!../../../spechelper/ScaleSpecHelper","com/ibm/init/fork!./ClusterLayout","com/ibm/init/fork!./ClusterShapeNode","com/ibm/init/fork!./NestedClusterShapeGroup","com/ibm/init/statics","dojo/_base/declare"],function(_21e8,_21e9,_21ea,_21eb,_21ec,_21ed,_21ee,_21ef,_21f0,_21f1){
var _21f2=_21f1("com.ibm.vis.engine.internal.grammar.coordinate.cluster.ClusterTransform",[_21e8],{specHelpers:null,visSize:null,rootShapeGroup:null,scaleSpec:null,constructor:function(_21f3,vis){
this.specHelpers=new _21e9.m(_21f3.length);
for(var _21f4=0,_21f5=_21f3.length;_21f4<_21f5;++_21f4){
var _21f6=_21f3[_21f4];
var _21f7=new _21ea.m(null);
if(_21f6.scale!=null&&_21f6.scale.categoryStructure!=null){
_21f7=new _21ea.m(_21f6.scale.categoryStructure);
}
this.specHelpers.add(_21f7);
}
this.visSize=vis.getSize();
this.rootShapeGroup=new _21eb.m(this.visSize.width);
this.scaleSpec=new _21ec.m(_21f3[1].scale);
},calculateGapSize:function(width,_21f8){
var _21f9;
_21f9=this.specHelpers.get(1).getGap().getPreferred(width,this.visSize.width);
return _21f9*_21f8;
},transformShape:function(shape,_21fa,_21fb){
return shape;
},postProcess:function(_21fc){
this.rootShapeGroup.preProcess();
this.rootShapeGroup.padding=this.scaleSpec.getPadding(_21fc.width,this.visSize.width);
this.rootShapeGroup.calculateSizeAndGaps(_21fc.width,_21fc.width);
this.rootShapeGroup.setAlignment(this.specHelpers.get(1).getAlign());
var _21fd=new _21ed.m();
_21fd.layout(this.rootShapeGroup,0);
},setupShapeGroup:function(_21fe,_21ff,_2200){
var scale=_21fe[_21ff];
var ticks=scale.getAllTicks();
var _2201=_21ff==this.scales.length-1;
if(_2201&&_2200.nodeNested){
return;
}
if(scale.reverse){
for(var _2202=ticks.size()-1;_2202>=0;--_2202){
var tick=ticks.get(_2202);
this.createGroup(tick.value,_21ff,_2200,scale.reverse);
}
}else{
for(var _2202=0;_2202<ticks.size();++_2202){
var tick=ticks.get(_2202);
this.createGroup(tick.value,_21ff,_2200,scale.reverse);
}
}
},createGroup:function(value,_2203,_2204,_2205){
var _2206=_2203==this.scales.length-1;
if(_2206){
var node=new _21ee.m(this.visSize.width);
node.id=value;
_2204.add(node,value);
}else{
var _2207=this.specHelpers.get(_2203+1);
var group;
if(_2207.isNested()){
group=new _21ef.m(this.visSize.width);
group.nodesReversed=_2205;
}else{
group=new _21eb.m(this.visSize.width);
}
group.id=value;
group.setGapSpecHelper(_2207.getGap());
_2204.add(group,value);
this.setupShapeGroup(this.scales,_2203+1,group);
}
},inverseTransform:function(_2208,_2209,_220a){
return _2208;
},isCluster:function(){
return true;
},preProcess:function(_220b,size){
var _220c=new _21e9.m(_220b.size());
for(var _220d=0;_220d<_220b.size();++_220d){
var shape=_220b.get(_220d);
if(shape.position==null&&shape.positions==null){
continue;
}
if(this.rootShapeGroup.addShapeToMatchingNode(shape)){
_220c.add(shape);
}
}
this.rootShapeGroup.fixOrdering();
return _220c;
},initialize:function(_220e){
if(this.isInitialized){
return;
}
this.inherited(arguments,[_220e]);
var _220f=this.specHelpers.get(1);
var _2210=_220f.isNested();
if(_2210){
this.rootShapeGroup=new _21ef.m(this.visSize.width);
}
this.rootShapeGroup.setGapSpecHelper(_220f.getGap());
this.setupShapeGroup(_220e,1,this.rootShapeGroup);
var _2211=this.specHelpers.get(this.specHelpers.size()-1);
this.rootShapeGroup.setWidthSpecHelper(_2211.getWidth());
}});
return _21f2;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/TransformClipInterpolator":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/TransformClipInterpolator",["./Interpolator","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../Affine","com/ibm/init/fork!./TransformInterpolator","com/ibm/init/fork!./ShapeInterpolator","com/ibm/init/statics","dojo/_base/declare"],function(_2212,_2213,_2214,_2215,_2216,_2217,_2218){
var _2219=_2218("com.ibm.vis.engine.internal.interaction.interpolation.TransformClipInterpolator",[_2212],{start_time:0,end_time:0,transformInterpolator:null,startClip:null,endClip:null,clipInterpolator:null,constructor:function(_221a,_221b,_221c,_221d,_221e,_221f){
if(_221a>_221d){
var t=_221a;
_221a=_221d;
_221d=t;
var tj=_221b;
_221b=_221e;
_221e=tj;
tj=_221c;
_221c=_221f;
_221f=tj;
}
this.start_time=_221a;
this.end_time=_221d;
if(_221b==null&&_221e==null){
this.transformInterpolator=null;
}else{
var _2220=(_221b==null)?_2214.m.identity():_2214.m.fromJSON(_221b);
var _2221=(_221e==null)?_2214.m.identity():_2214.m.fromJSON(_221e);
this.transformInterpolator=_2215.m.makeTransformInterpolator(_221a,_2220,_221d,_2221,7);
}
if(_221c!=null){
_221c=dojo.mixin({},_221c);
_2213.m.put(_221c,"type","rect");
}
if(_221f!=null){
_221f=dojo.mixin({},_221f);
_2213.m.put(_221f,"type","rect");
}
if(_221c==null||_221f==null){
this.clipInterpolator=null;
}else{
this.clipInterpolator=_2216.m.makeShapeInterpolator(_221a,_221c,_221d,_221f);
}
this.startClip=_221c!=null?_221c:_2219.EMPTY;
this.endClip=_221f!=null?_221f:_2219.EMPTY;
},interpolate:function(id,t){
var _2222=_2213.m.createJSONObject();
if(this.transformInterpolator!=null){
_2213.m.put(_2222,"transform",this.transformInterpolator.interpolate(id,t));
}else{
_2213.m.put(_2222,"transform",_2219.EMPTY);
}
if(this.clipInterpolator!=null){
_2213.m.put(_2222,"clip",this.clipInterpolator.interpolate(id,t));
}else{
if(t>=this.end_time){
_2213.m.put(_2222,"clip",this.endClip);
}else{
if(t<=this.start_time){
_2213.m.put(_2222,"clip",this.startClip);
}else{
_2213.m.put(_2222,"clip",_2219.EMPTY);
}
}
}
return _2222;
}});
_2219.makeTransformClipInterpolator=function(_2223,_2224,_2225,_2226,_2227,_2228){
return new _2219(_2223,_2224,_2225,_2226,_2227,_2228);
};
_2217.add("com/ibm/vis/engine/internal/interaction/interpolation/TransformClipInterpolator",["com/ibm/vis/engine/internal/interaction/interpolation/Interpolator","com/ibm/vis/engine/internal/nativeImpl/BasicFactory"],function(){
_2219.EMPTY=_2213.m.createJSONObject();
});
return _2219;
});
},"com/ibm/vis/interaction/internal/events/RaveEventImpl":function(){
define("com/ibm/vis/interaction/internal/events/RaveEventImpl",["./ActiveEvent","com/ibm/init/statics","dojo/_base/declare"],function(_2229,_222a,_222b){
var _222c=_222b("com.ibm.vis.interaction.internal.events.RaveEventImpl",[_2229],{listeners:null,constructor:function(_222d){
this.listeners=_222d;
},dispatch:function(){
this.notifyListeners();
},cancel:function(){
},notifyListeners:function(){
if(this.listeners!=null){
for(var _222e=0,_222f=this.listeners,_2230=_222f.size();_222e<_2230;++_222e){
var _2231=_222f.get(_222e);
this.notifyListener(_2231);
}
}
},notifyListener:function(_2232){
}});
return _222c;
});
},"com/ibm/vis/engine/internal/spechelper/SpecHelper":function(){
define("com/ibm/vis/engine/internal/spechelper/SpecHelper",["com/ibm/init/statics","dojo/_base/declare"],function(_2233,_2234){
var _2235=_2234("com.ibm.vis.engine.internal.spechelper.SpecHelper",null,{specDefined:false,constructor:function(spec){
this.specDefined=(spec!=null);
},isSpecDefined:function(){
return this.specDefined;
}});
return _2235;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/VisibilityAestheticValueProducer":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/VisibilityAestheticValueProducer",["./AestheticValueProducer","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_2236,_2237,_2238,_2239){
var _223a=_2239("com.ibm.vis.engine.internal.grammar.aesthetic.VisibilityAestheticValueProducer",[_2236],{interpolate:function(a,b,p){
if(a==null||b==null){
return true;
}
if(a==b){
return a;
}
return a;
},make:function(spec){
if(spec==null||spec.visible==null||!_2237.m.isBoolean(spec.visible)){
return null;
}
return spec.visible;
},forPalette:function(o){
if(o==null||!_2237.m.isBoolean(o)){
return null;
}
return o;
},modify:function(item,o,_223b){
var _223c=o;
if(_223c!=null&&_2237.m.isBoolean(_223c)){
if(_223c){
return item;
}
item.visible=false;
}
return item;
},getDefaultForCategory:function(index,_223d){
if(index==0){
return true;
}
return false;
},makeUsingPalette:function(v,_223e,_223f){
if(_223f.isCategorical()&&_223e!=null&&!(_223e.getPaletteSize()==0)){
return _223e.getPaletteItem(Math.abs(v)%_223e.getPaletteSize());
}
return null;
}});
return _223a;
});
},"com/ibm/vis/engine/internal/struct/PolyShape":function(){
define("com/ibm/vis/engine/internal/struct/PolyShape",["./Shape","./GeomShape","com/ibm/init/fork!./PolyGeom","com/ibm/init/fork!./Rect","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!./RasterEdgeData","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!./RasterEdgeDataYComparator","com/ibm/init/fork!./RasterEdgeDataXComparator","com/ibm/init/fork!./Circle","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/fork!./ArrowGeom","com/ibm/init/fork!../nativeImpl/StringBuilder","com/ibm/init/fork!../util/MathUtil","com/ibm/init/fork!../../../interaction/internal/TransformMatrix","com/ibm/init/fork!./ArrowType","com/ibm/init/fork!./Point","com/ibm/init/statics","dojo/_base/declare"],function(_2240,_2241,_2242,_2243,_2244,_2245,_2246,_2247,_2248,_2249,_224a,_224b,_224c,_224d,_224e,_224f,_2250,_2251,_2252){
var _2253=_2252("com.ibm.vis.engine.internal.struct.PolyShape",[_2240,_2241],{x:null,y:null,filled:false,symbol:null,startArrow:null,startArrowGeom:null,endArrow:null,endArrowGeom:null,bounds:null,preferHorizontal:null,transposeApplied:false,roundedRectangle:false,constructor:function(px,py,_2254){
this.x=px;
this.y=py;
this.filled=_2254;
this.bounds=null;
this.roundedRectangle=false;
},isFilled:function(){
return this.filled;
},applyPointTransform:function(t){
if(t.preservesLines()||this.allDistancesSmall()){
this.doInPlaceTransform(t);
return null;
}
var geom=_2242.m.makeSegmented(this.x,this.y,this.getTypes());
geom.setSnap(this.snap);
geom.applyPointTransform(t);
return geom;
},allDistancesSmall:function(){
var types=this.getTypes();
for(var i=1;i<this.x.length;++i){
if(types!=null&&(types[i]=="Z"||types[i]=="M")){
continue;
}
if(Math.abs(this.x[i]-this.x[i-1])>25||Math.abs(this.y[i]-this.y[i-1])>25){
return false;
}
}
return true;
},doInPlaceTransform:function(t){
for(var i=0;i<this.x.length;++i){
var p=t.transform(this.x[i],this.y[i]);
this.x[i]=p.x;
this.y[i]=p.y;
}
},getBounds:function(){
if(this.bounds==null){
this.bounds=_2253.computeBounds(this.x,this.y,this.getTypes());
this.bounds.snap=this.snap;
}
return this.bounds;
},affine:function(xx,dx,yy,dy,_2255){
var newXX=xx;
var newYY=yy;
if(!_2255){
if(!this.canScaleX()){
newXX=1;
}
if(!this.canScaleY()){
newYY=1;
}
}
for(var i=0;i<this.x.length;++i){
this.x[i]=this.x[i]*newXX+dx;
this.y[i]=this.y[i]*newYY+dy;
}
this.bounds=null;
},getCenter:function(){
return this.getBounds().getCenter();
},reflect:function(size,_2256){
for(var i=0;i<this.x.length;++i){
if(_2256){
this.y[i]=size.height-this.y[i];
}else{
this.x[i]=size.width-this.x[i];
}
}
this.bounds=null;
},transpose:function(b){
for(var i=0;i<this.x.length;++i){
var t=b.width-b.width*this.y[i]/b.height;
this.y[i]=b.height*(1-this.x[i]/b.width);
this.x[i]=t;
}
this.bounds=null;
this.transposeApplied=!this.transposeApplied;
},isRoundedRectangle:function(){
return this.roundedRectangle;
},setRoundedRectangle:function(flag){
this.roundedRectangle=flag;
},getLabelShape:function(align,_2257,_2258){
if(this.isGlyphLike()){
return this;
}
if("inside".CPVisEngineEquals(_2258)&&this.isFilled()){
return this.getShapeForInner();
}
return this.getShapeForOuter(align);
},rasterize:function(K,bb){
var N=this.x.length-1;
var b=new Array(K);
var _2259=0;
var edges=new _2244.m();
var dW=(bb.width/K);
var dH=(bb.height/K);
var x0=(this.x[0]-bb.x)/dW;
var y0=(this.y[0]-bb.y)/dH;
var t;
for(var i=1;i<=N;++i){
if(this.y[i-1]==this.y[i]){
continue;
}
var e=new _2245.m();
var x1=(this.x[i]-bb.x)/dW;
var y1=(this.y[i]-bb.y)/dH;
var xt=x1,yt=y1;
if(y1<y0||(y1==y0&&x1<x0)){
t=y0;
y0=y1;
y1=t;
t=x0;
x0=x1;
x1=t;
}
if(y0==Math.floor(y0)){
e.i0=Math.floor(y0);
}else{
e.i0=Math.floor(y0)+1;
}
if(y1==Math.floor(y1)){
e.i1=(Math.floor(y1)-1);
}else{
e.i1=Math.floor(y1);
}
e.dx=(x1-x0)/(y1-y0);
e.x=x0+e.dx*(e.i0-y0);
if(e.i1<e.i0){
continue;
}
x0=xt;
y0=yt;
edges.add(e);
}
_2246.m.sortList(edges,new _2247.m());
var _225a=0;
var _225b=new _2244.m();
for(var i=0;i<b.length;++i){
b[i]=Array.create([K],false);
}
for(var i=0;i<K;++i){
var _225c=new _2244.m();
for(var _225d=0,_225e=_225b.size();_225d<_225e;++_225d){
var e=_225b.get(_225d);
if(e.i1>=i){
e.x+=e.dx;
_225c.add(e);
}
}
_225b=_225c;
if(_225a<edges.size()){
var _225f=edges.get(_225a);
while(_225f.i0==i){
_225b.add(_225f);
if(++_225a<edges.size()){
_225f=edges.get(_225a);
}else{
break;
}
}
}
_2246.m.sortList(_225b,new _2248.m());
for(var p=0;p+1<_225b.size();p+=2){
var j0=Math.floor(_225b.get(p).x);
var j1=Math.floor(_225b.get(p+1).x)+1;
for(var j=j0;j<j1&&j<K;++j){
b[i][j]=true;
_2259++;
}
}
}
if(_2259==0){
return null;
}
return b;
},getShapeForInner:function(){
var bb=this.getBounds();
if(this.isRoundedRectangle()){
return this;
}
var K=16;
var b=this.rasterize(K,bb);
if(null==b){
return null;
}
var _2260=Array.create([K+1],0);
var _2261=Array.create([K],0);
var _2262=Array.create([K],0);
var sp=0;
var width;
var LRx=0,LRy=0,LRw=0,LRh=0;
for(var j=K-1;j>=0;--j){
for(var i=0;i<K;++i){
if(b[i][j]){
_2260[i]=_2260[i]+1;
}else{
_2260[i]=0;
}
}
sp=0;
width=0;
for(var i=0;i<K+1;++i){
if(_2260[i]>width){
_2262[sp]=i;
_2261[sp]=width;
width=_2260[i];
++sp;
}
if(_2260[i]<width){
var s_i,s_w;
do{
s_i=_2262[sp-1];
s_w=_2261[sp-1];
--sp;
var _2263=width*(i-s_i);
var _2264=(LRw*LRh);
if(_2263>_2264||((_2263==_2264)&&width>LRw)){
LRx=j;
LRy=s_i;
LRw=width;
LRh=i-s_i;
}
width=s_w;
}while(_2260[i]<width&&sp>0);
width=_2260[i];
if(width!=0){
_2262[sp]=s_i;
_2261[sp]=width;
++sp;
}
}
}
}
var r=[LRy,LRx,LRy+LRh-1,LRx+LRw-1];
var R=new _2243.m(bb.x+bb.width*r[1]/K,bb.y+bb.height*r[0]/K,bb.width*(r[3]-r[1]+1)/K,bb.height*(r[2]-r[0]+1)/K);
return R;
},getShapeForOuter:function(align){
if(this.isRoundedRectangle()){
return this.getBounds();
}
var px,py;
var n=this.x.length;
if(this.x.length==1){
px=this.x[0];
py=this.y[0];
}else{
if(this.x[0]!=this.x[n-1]||this.y[0]!=this.y[n-1]){
if("start".CPVisEngineEquals(align)){
px=this.x[0];
py=this.y[0];
}else{
if("end".CPVisEngineEquals(align)){
px=this.x[n-1];
py=this.y[n-1];
}else{
var n1=Math.floor((n-1)/2);
var n2=Math.ceil((n)/2);
px=(this.x[n1]+this.x[n2])/2;
py=(this.y[n1]+this.y[n2])/2;
}
}
}else{
if("start".CPVisEngineEquals(align)){
var minIx=0;
for(var i=0;i<n;++i){
if(this.x[i]<this.x[minIx]){
minIx=i;
}
}
px=this.x[minIx];
py=this.y[minIx];
}else{
if("end".CPVisEngineEquals(align)){
var maxIx=0;
for(var i=0;i<n;++i){
if(this.x[i]>this.x[maxIx]){
maxIx=i;
}
}
px=this.x[maxIx];
py=this.y[maxIx];
}else{
var max=this.x[0];
var min=this.x[0];
for(var i=1;i<n-1;++i){
if(this.x[i]<min){
min=this.x[i];
}
if(this.x[i]>max){
max=this.x[i];
}
}
var ix1,ix2;
var m=(min+max)/2;
ix1=0;
for(var i=1;i<n-1;++i){
if(Math.abs(this.x[i]-m)<Math.abs(this.x[ix1]-m)){
ix1=i;
}
}
var opt1=(ix1+(n-1)+1)%(n-1);
var opt2=(ix1+(n-1)-1)%(n-1);
if(Math.abs(this.x[opt1]-m)<Math.abs(this.x[opt2]-m)){
ix2=opt1;
}else{
ix2=opt2;
}
px=(this.x[ix1]+this.x[ix2])/2;
py=(this.y[ix1]+this.y[ix2])/2;
}
}
}
}
var _2265=new _2249.m(px,py,1);
_2265.snap=this.snap;
_2265.setGlyphLike();
return _2265;
},length:function(){
return this.x.length;
},getTangentAngle:function(align,_2266){
var n=this.x.length-1;
if("start".CPVisEngineEquals(align)){
return Math.atan2(this.y[1]-this.y[0],this.x[1]-this.x[0]);
}else{
if("end".CPVisEngineEquals(align)){
return Math.atan2(this.y[n]-this.y[n-1],this.x[n]-this.x[n-1]);
}else{
var mid=Math.floor(n/2);
return Math.atan2(this.y[mid+1]-this.y[mid],this.x[mid+1]-this.x[mid]);
}
}
},contains:function(px,py){
if(!this.filled||!this.getBounds().contains(px,py)){
return false;
}
return _2253.testContains(this.x,this.y,px,py);
},toJSON:function(){
if(this.startArrow!=null){
this.startArrowGeom=new _224b.m(this.startArrow);
this.startArrowGeom.configForStrokeWidth(this.stroke);
}
if(this.endArrow!=null){
this.endArrowGeom=new _224b.m(this.endArrow);
this.endArrowGeom.configForStrokeWidth(this.stroke);
}
var _2267=this.inherited(arguments,[]);
if(this.startArrow==null&&this.endArrow==null){
return _2267;
}
var _2268=_2246.m.createJSONArray();
var _2269=this.makeBasicItem();
_2246.m.put(_2269,"children",_2268);
var _226a=0;
_2246.m.put(_2267,"id",this.id+"_"+_2246.m.unformattedNumber(_226a++));
_2268.push(_2267);
if(this.startArrow!=null){
var a=this.startArrow.toJSON(_2267,this.startArrowGeom,this.id+"_"+_2246.m.unformattedNumber(_226a++));
this.finalizeArrow(a,this.startArrowGeom);
_2268.push(a);
}
if(this.endArrow!=null){
var a=this.endArrow.toJSON(_2267,this.endArrowGeom,this.id+"_"+_2246.m.unformattedNumber(_226a++));
this.finalizeArrow(a,this.endArrowGeom);
_2268.push(a);
}
this.getBounds().setShapeParameters(_2269);
return _2269;
},finalizeArrow:function(_226b,_226c){
var t=_2246.m.getItem(_226b,"transform");
var tm=new _224e.m();
tm.setJson(t);
var m=tm.asDoubleArray();
var shape=_2246.m.getItem(_226b,"shape");
var path=_2246.m.getItem(shape,"path");
var bb=new _2243.m(_226c.getX(),_226c.getY(),0,0);
_2246.m.put(shape,"path",_2253.mergeTransformIntoPath(path,m,bb));
_2246.m.remove(_226b,"transform");
this.getBounds().extendToRect(bb);
bb.setShapeParameters(shape);
},setShapeParameters:function(o){
var path=this.makePath(false);
if(path!=null){
if(this.getTypes()==null&&this.isFilled()){
path+="Z";
}
var b=this.getBounds();
b.setShapeParameters(o);
_2246.m.put(o,"type","path");
_2246.m.put(o,"path",path);
}else{
var newX=this.x;
var newY=this.y;
if(this.snap){
var _226d=newY[0]==newY[1]?true:false;
var _226e=newX[0]==newX[1]?true:false;
if(_226d||_226e){
newX[0]=this.snapValue(newX[0]);
newX[1]=this.snapValue(newX[1]);
newY[0]=this.snapValue(newY[0]);
newY[1]=this.snapValue(newY[1]);
}
if(_226d){
newY[0]+=0.5;
newY[1]+=0.5;
}
if(_226e){
newX[0]+=0.5;
newX[1]+=0.5;
}
}
_2246.m.put(o,"x1",_224d.m.r3(newX[0]));
_2246.m.put(o,"x2",_224d.m.r3(newX[newX.length-1]));
_2246.m.put(o,"y1",_224d.m.r3(newY[0]));
_2246.m.put(o,"y2",_224d.m.r3(newY[newY.length-1]));
_2246.m.put(o,"type","line");
}
},makePath:function(_226f){
var _2270=this.symbol!=null&&this.symbol.indexOf("urved")>=0;
var elbow=this.symbol!=null&&this.symbol.indexOf("lbow")>=0;
if(_2270||elbow){
var path=_2253.makeModifiedPath(this.x,this.y,this.getTypes(),_2270,elbow,this.preferHorizontal,this.startArrowGeom,this.endArrowGeom);
this.bounds=_2253.computeBounds(this.x,this.y,this.getTypes());
return path;
}else{
if(this.startArrow!=null||this.endArrow!=null||(_226f&&this.x.length>=2)||this.x.length>2){
return _2253.makeGeneralPath(this.x,this.y,this.getTypes(),this.startArrowGeom,this.endArrowGeom);
}else{
return null;
}
}
},getTypes:function(){
return null;
},setEdgeProperties:function(_2271,_2272,_2273,_2274){
this.preferHorizontal=_2271;
this.symbol=_2272;
this.setStartArrow(_2273);
this.setEndArrow(_2274);
},getStartArrow:function(){
if(this.startArrow==null){
return null;
}
return this.startArrow.getName();
},asBasic:function(){
return this;
},getEndArrow:function(){
if(this.endArrow==null){
return null;
}
return this.endArrow.getName();
},setStartArrow:function(arrow){
this.startArrow=_224f.m.byName(arrow);
},setEndArrow:function(arrow){
this.endArrow=_224f.m.byName(arrow);
},getPreferHorizontal:function(){
return this.preferHorizontal;
},area:function(){
return _2242.m.area(this.x,this.y);
},centroid:function(){
return _2242.m.centroid(this.x,this.y);
}});
_2253.computeBounds=function(x,y,types){
var minx=0;
var maxx=0;
if(x.length>0){
minx=x[0];
maxx=x[0];
for(var i=1;i<x.length;++i){
if((types==null||types[i]!="Z")&&x[i]==x[i]){
minx=Math.min(minx,x[i]);
maxx=Math.max(maxx,x[i]);
}
}
}
var miny=0;
var maxy=0;
if(y.length>0){
miny=y[0];
maxy=y[0];
for(var i=1;i<y.length;++i){
if((types==null||types[i]!="Z")&&y[i]==y[i]){
miny=Math.min(miny,y[i]);
maxy=Math.max(maxy,y[i]);
}
}
}
return new _2243.m(minx,miny,maxx-minx,maxy-miny);
};
_2253.testContains=function(x,y,px,py){
var _2275=0;
var j=x.length-1;
for(var i=0;i<x.length;++i){
var m=(y[j]-y[i])/(x[j]-x[i]);
if(_224a.m.isNaN(m)){
j=i;
continue;
}
if(m!=0&&!_224a.m.isInfinite(Math.abs(m))){
var b=y[i]-m*x[i];
var _2276=(py-b)/m;
if((_2276>=x[i]&&_2276<=x[j])||(_2276>=x[j]&&_2276<=x[i])){
if(_2276<px){
if(py==y[i]){
if(y[j]>py){
_2275++;
}
}else{
if(py==y[j]){
if(y[i]>py){
_2275++;
}
}else{
_2275++;
}
}
}
}
}else{
if(m==0){
j=i;
continue;
}else{
var _2276=x[i];
var _2277=py;
if((_2277>=y[i]&&_2277<=y[j])||(_2277>=y[j]&&_2277<=y[i])){
if(_2276<px){
if(_2277==y[i]){
if(y[j]>py){
_2275++;
}
}else{
if(_2277==y[j]){
if(y[i]>py){
_2275++;
}
}else{
_2275++;
}
}
}
}
}
}
j=i;
}
return (_2275%2>0);
};
_2253.mergeTransformIntoPath=function(path,m,_2278){
var _2279=new _224c.m();
var temp=new _224c.m();
var tempc=0;
var _227a="MmZzLlHhVvCcSsQqTtAa";
var p=Array.create([2],0);
var coord=0;
var end="\x00";
for(var i=0;i<path.CPVisEngineLength()||tempc>0;++i){
var c=(i>=path.CPVisEngineLength())?end:path.charAt(i);
if(_227a.indexOf(c)!=-1||","==c||end==c){
if(tempc>0){
p[coord]=_2246.m.parseDouble(temp.toString());
coord=(coord+1)%2;
if(coord==0){
p=_224d.m.multiplyPoint(m,p[0],p[1]);
_2279.append(_224d.m.r3(p[0])+","+_224d.m.r3(p[1]));
if(null!=_2278){
_2278.extendToPoint(p[0],p[1]);
}
}
tempc=0;
temp=new _224c.m();
}
if(c!=end&&c!=","){
_2279.append(c);
}
}else{
temp.append(c);
tempc++;
}
}
return _2279.toString();
};
_2253.makeModifiedPath=function(x,y,t,_227b,elbow,_227c,_227d,_227e){
var _227f=new _2244.m();
var types=new _2244.m();
var n=x.length;
if(_227d!=null){
if(_227c!=null){
_227f.add(new _2250.m(x[0],y[0]));
types.add("M");
t[0]="L";
if(_227c){
var dx=Math.min(_227d.getLength(),Math.abs(x[1]-x[0]));
x[0]+=(x[1]>x[0])?dx:-dx;
}else{
var dy=Math.min(_227d.getLength(),Math.abs(y[1]-y[0]));
y[0]+=(y[1]>y[0])?dy:-dy;
}
}
}
var _2280=null;
if(_227e!=null){
if(_227c!=null){
_2280=new _2250.m(x[n-1],y[n-1]);
var dx=Math.min(_227e.getLength(),Math.abs(x[n-1]-x[n-2]));
var dy=Math.min(_227e.getLength(),Math.abs(y[n-1]-y[n-2]));
if(_227c||dy==0){
x[n-1]-=(x[n-1]>x[n-2])?dx:-dx;
}else{
y[n-1]-=(y[n-1]>y[n-2])?dy:-dy;
}
}
}
for(var i=0;i<n;++i){
var type=t==null?(types.size()==0?"M":"L"):t[i];
var dx=i==0?0:Math.abs(x[i]-x[i-1]);
var dy=i==0?0:Math.abs(y[i]-y[i-1]);
var _2281=dx<1||dy<1;
var _2282=_227c==null?dx>dy:_227c;
if(type=="M"||type=="Z"){
}else{
if(_227b){
if(type=="L"&&!_2281){
if(elbow){
var cx=(x[i]+x[i-1])/2;
var cy=(y[i]+y[i-1])/2;
type=",";
if(_2282){
if(dy<=dx){
_227f.add(new _2250.m(cx,y[0]));
_227f.add(new _2250.m(cx,cy));
_227f.add(new _2250.m(cx,y[1]));
types.add("Q");
types.add(",");
types.add("Q");
}else{
var dd=y[1]>y[0]?dx/2:-dx/2;
_227f.add(new _2250.m(cx,y[0]));
_227f.add(new _2250.m(cx,y[0]+dd));
_227f.add(new _2250.m(cx,y[1]-dd));
_227f.add(new _2250.m(cx,y[1]));
types.add("Q");
types.add(",");
types.add("L");
types.add("Q");
}
}else{
if(dx<=dy){
_227f.add(new _2250.m(x[0],cy));
_227f.add(new _2250.m(cx,cy));
_227f.add(new _2250.m(x[1],cy));
types.add("Q");
types.add(",");
types.add("Q");
}else{
var dd=x[1]>x[0]?dy/2:-dy/2;
_227f.add(new _2250.m(x[0],cy));
_227f.add(new _2250.m(x[0]+dd,cy));
_227f.add(new _2250.m(x[1]-dd,cy));
_227f.add(new _2250.m(x[1],cy));
types.add("Q");
types.add(",");
types.add("L");
types.add("Q");
}
}
}else{
types.add("C");
types.add(",");
type=",";
if(_2282){
_227f.add(new _2250.m((x[i-1]+2*x[i])/3,y[i-1]));
_227f.add(new _2250.m((2*x[i-1]+x[i])/3,y[i]));
}else{
_227f.add(new _2250.m(x[i-1],(y[i-1]+2*y[i])/3));
_227f.add(new _2250.m(x[i],(2*y[i-1]+y[i])/3));
}
}
}
}else{
type="L";
if(elbow&&!_2281){
types.add("L");
types.add("L");
if(_2282){
var cx=(x[i-1]+x[i])/2;
_227f.add(new _2250.m(cx,y[i-1]));
_227f.add(new _2250.m(cx,y[i]));
}else{
var cy=(y[i-1]+y[i])/2;
_227f.add(new _2250.m(x[i-1],cy));
_227f.add(new _2250.m(x[i],cy));
}
}
}
}
_227f.add(new _2250.m(x[i],y[i]));
types.add(type);
}
if(_2280!=null){
types.add("L");
_227f.add(_2280);
}
n=_227f.size();
var newX=Array.create([n],0);
var newY=Array.create([n],0);
var newT=Array.create([n],"\x00");
for(var i=0;i<n;++i){
newT[i]=types.get(i);
var p=_227f.get(i);
newX[i]=p.x;
newY[i]=p.y;
}
return _2253.makeGeneralPath(newX,newY,newT,_227d,_227e);
};
_2253.setupArrowLocation=function(g,x,y,ix,dir){
if(g!=null){
var a=_224d.m.getAngleAtLocation(x,y,ix,dir);
g.setAngle(a);
var xd=Math.cos(a);
var yd=Math.sin(a);
var ts=g.getTipSize();
x[ix]+=xd*ts;
y[ix]+=yd*ts;
g.setPos(x[ix],y[ix]);
var len=g.getLength()-ts;
x[ix]+=xd*len;
y[ix]+=yd*len;
}
};
_2253.makeGeneralPath=function(x,y,types,_2283,_2284){
var n=x.length;
var _2285=new _224c.m();
_2253.setupArrowLocation(_2283,x,y,0,1);
_2253.setupArrowLocation(_2284,x,y,n-1,-1);
for(var i=0;i<n;++i){
if(types==null){
_2285.append(i==0?"M":"L");
}else{
_2285.append(types[i]);
}
if(types==null||types[i]!="Z"){
_2285.append(_224d.m.r3(x[i])+","+_224d.m.r3(y[i]));
}
}
return _2285.toString();
};
_2251.add("com/ibm/vis/engine/internal/struct/PolyShape",["com/ibm/vis/engine/internal/struct/Shape","com/ibm/vis/engine/internal/struct/GeomShape","com/ibm/vis/engine/internal/struct/Rect","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/nativeImpl/Double","com/ibm/vis/engine/internal/nativeImpl/StringBuilder","com/ibm/vis/engine/internal/util/MathUtil","com/ibm/vis/engine/internal/struct/Point"],function(){
_2253.LABEL_GRID_SIZE=16;
});
return _2253;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/StressMajorizer":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/StressMajorizer",["com/ibm/init/fork!./matrix/ConjugateGradient","com/ibm/init/fork!./matrix/SparseMatrix","com/ibm/init/statics","dojo/_base/declare"],function(_2286,_2287,_2288,_2289){
var _228a=_2289("com.ibm.vis.engine.internal.grammar.layout.graph.stress.StressMajorizer",null,{pos:null,dist:null,iterations:0,edgelength:0,nodes:null,solver:null,constructor:function(nodes,_228b,_228c,_228d){
this.dist=_228b;
this.nodes=nodes;
this.pos=new Array(2);
this.pos[0]=Array.create([nodes.length],0);
this.pos[1]=Array.create([nodes.length],0);
for(var i=0;i<nodes.length;++i){
this.pos[0][i]=nodes[i].x;
this.pos[1][i]=nodes[i].y;
}
this.solver=new _2286.m();
this.iterations=_228c;
this.edgelength=_228d;
},run:function(){
var lp=this.getLaplacian();
this.majorize(lp);
lp=null;
for(var i=0;i<this.nodes.length;++i){
this.nodes[i].moveTo(this.pos[0][i],this.pos[1][i]);
}
},getLaplacian:function(){
var n=this.dist.n;
var _228e=Array.create([n],0);
for(var i=0;i<_228e.length;++i){
_228e[i]=0;
}
var _228f=new _2287.m(n);
var nz=0;
for(var i=0;i<n;++i){
for(var j=i+1;j<n;++j){
var d=this.dist.get(i,j);
if(d>10000000){
d=10000000;
}
if(d!=0){
var edd=-1/(this.edgelength*d*d);
_228f.set(i,j,edd);
_228f.set(j,i,edd);
_228e[i]=_228e[i]-edd;
_228e[j]=_228e[j]-edd;
nz=nz+2;
}
}
_228f.set(i,i,_228e[i]);
nz++;
}
return _228f;
},majorize:function(_2290){
var n=_2290.n;
var b=Array.create([n],0);
var _2291=1.7976931348623157e+308;
for(var i=0;i<this.iterations;++i){
var _2292=_2291;
_2291=this.optimizeOneDimension(_2290,b,this.pos[0]);
_2291=this.optimizeOneDimension(_2290,b,this.pos[1]);
if((Math.abs(_2292-_2291)<0.10000000149011612)){
break;
}
}
this.normalize(this.pos[0]);
this.normalize(this.pos[1]);
},optimizeOneDimension:function(_2293,b,_2294){
var _2295=0;
var n=_2293.n;
var x=this.pos[0];
var y=this.pos[1];
for(var i=0;i<b.length;++i){
b[i]=0;
}
var dd=(this.dist).d;
for(var i=0;i<n;++i){
var _2296=0;
var xx=x[i];
var yy=y[i];
var ioff=i*n;
for(var j=0;j<n;++j){
if(i!=j){
var _2297=dd[ioff+j];
if(_2297>0){
var dx=xx-x[j];
var dy=yy-y[j];
var _2298=Math.sqrt(dx*dx+dy*dy);
var Lij=-1/(_2298*_2297);
_2296-=Lij;
b[i]+=Lij*_2294[j];
_2295+=(_2298-_2297)*(_2298-_2297)*Lij;
}
}
}
b[i]+=_2296*_2294[i];
}
_2295=_2295/n;
this.solver.solve(_2293,_2294,b);
return _2295;
},normalize:function(d){
var sx=0;
for(var i=0;i<d.length;++i){
sx+=d[i];
}
sx/=d.length;
for(var i=0;i<d.length;++i){
d[i]-=sx;
}
}});
_2288.add("com/ibm/vis/engine/internal/grammar/layout/graph/stress/StressMajorizer",[],function(){
_228a.EPSILON=0.1;
});
return _228a;
});
},"com/ibm/vis/engine/internal/nativeImpl/render/ShapeIntersection":function(){
define("com/ibm/vis/engine/internal/nativeImpl/render/ShapeIntersection",["exports","../../struct/Bezier","../../struct/Poly","../../struct/Rect","../../struct/Line","../../struct/Point","../WebEngineException","../../util/SceneUtil"],function(_2299,_229a,Poly,Rect,Line,Point,_229b,_229c){
_2299.K_MARGINOFERROR=2;
_2299.K_TOLERANCE=0.000001;
_2299.intersects=function(_229d,_229e,_229f){
var _22a0=0;
var _22a1=_229f.stroke;
if(_22a1!=null&&_22a1.width!=null){
_22a0=_22a1.width/2;
}
var type=_229d.shape.type;
if(type=="path"||type=="line"){
_22a0=Math.max(this.K_MARGINOFERROR,_22a0);
}
var bb=_229d.cachedBounds||_229d.getBoundingBox();
var _22a2=null;
if(bb){
var _22a3=_229e.bounds||_229e.getBounds();
if(!_229d.cachedBounds){
_22a2=Rect.toRect(bb);
if(_22a0!=0){
_22a2=_22a2.expand(_22a0);
}
_229d.cachedBounds=_22a2;
}
_22a2=_229d.cachedBounds;
if(_22a2.isRectIntersects(_22a3)){
if(type=="rect"||type=="text"){
return true;
}
}else{
return false;
}
}
switch(type){
case "circle":
if(this._polygonIntersectsCircle(_229d,_229e,_22a0)){
return true;
}
return false;
case "path":
return this._pathIntersectsPolygon(_229d,_229e,_22a0);
case "rect":
return this._rectIntersectsPolygon(_22a2,_229e);
case "line":
var line=_229d.shape;
if(line.x1==line.x2||line.y1==line.y2){
return this._rectIntersectsPolygon(_22a2,_229e);
}
var _22a4=Line.make(line.x1,line.y1,line.x2,line.y2);
return _229e.contains(line.x1,line.y1)||_229e.contains(line.x2,line.y2)||this._lineIntersectsPolygon(_22a4,_229e,_22a0);
case "text":
return this._textIntersectsPolygon(_229d,_229e,_229f);
default:
throw new WebEngineException("Unsupported shape for ShapeIntersection "+type);
return false;
}
};
_2299.boundsIntersectsRect=function(_22a5,x,y,width,_22a6){
var _22a7=_22a5.getBounds();
var rect=new Rect(x,y,width,_22a6);
var _22a8=rect.isRectIntersects(_22a7);
return _22a8;
};
_2299._textIntersectsPolygon=function(_22a9,_22aa,_22ab){
if(!_22a9.cachedBounds){
_22a9.cachedBounds=_229c.getBounds(_22ab);
}
return this._rectIntersectsPolygon(_22a9.cachedBounds,_22aa);
};
_2299._rectIntersectsPolygon=function(bb,_22ac){
for(var i=0;i<_22ac.x.length;i++){
if(bb.isPointInRect(_22ac.x[i],_22ac.y[i])){
return true;
}
}
if(_22ac.contains(bb.x,bb.y)){
return true;
}
if(_22ac.contains(bb.x+bb.width,bb.y)){
return true;
}
if(_22ac.contains(bb.x+bb.width,bb.y+bb.height)){
return true;
}
if(_22ac.contains(bb.x,bb.y+bb.height)){
return true;
}
var lines=[];
lines.push(Line.make(bb.x,bb.y,bb.x,bb.y+bb.height));
lines.push(Line.make(bb.x,bb.y+bb.height,bb.x+bb.width,bb.y+bb.height));
lines.push(Line.make(bb.x+bb.width,bb.y+bb.height,bb.x+bb.width,bb.y));
lines.push(Line.make(bb.x+bb.width,bb.y,bb.x,bb.y));
for(var j=0;j<lines.length;j++){
if(this._lineIntersectsPolygon(lines[j],_22ac,0)){
return true;
}
}
return false;
};
_2299._polygonPointsInOrOnCircle=function(_22ad,_22ae,delta){
for(var i=0;i<_22ae.x.length;i++){
if(this._pointInOrOnCircle(_22ae.x[i],_22ae.y[i],_22ad,delta)){
return true;
}
}
return false;
};
_2299._pointInOrOnCircle=function(x,y,_22af,delta){
var _22b0=Math.pow(_22af.shape.r+delta,2);
var _22b1=_22af.shape.cx;
var _22b2=_22af.shape.cy;
var _22b3=Math.pow(x-_22b1,2);
var _22b4=Math.pow(y-_22b2,2);
if(_22b3+_22b4<=_22b0){
return true;
}
};
_2299._polygonIntersectsCircle=function(_22b5,_22b6,delta){
if(this._polygonPointsInOrOnCircle(_22b5,_22b6,delta)){
return true;
}
if(_22b6.contains(_22b5.shape.cx,_22b5.shape.cy)){
return true;
}
var _22b7=_22b6.getPolygonLines();
var cx=_22b5.shape.cx;
var cy=_22b5.shape.cy;
for(var i=0;i<_22b7.length;i++){
var line=_22b7[i];
var x1=line.x[0];
var x2=line.x[1];
var y1=line.y[0];
var y2=line.y[1];
var _22b8=(cx-x1)*(x2-x1)+(cy-y1)*(y2-y1);
var _22b9=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
var u=_22b8/_22b9;
if(u>=0&&u<=1){
var x=line.x[0]+u*(line.x[1]-line.x[0]);
var y=line.y[0]+u*(line.y[1]-line.y[0]);
if(this._pointInOrOnCircle(x,y,_22b5,delta)){
return true;
}
}
}
return false;
};
_2299._pathIntersectsPolygon=function(_22ba,_22bb,_22bc){
var _22bd=null;
if(_22bb.isDegenerate()){
_22bd=_22bb.constructNonDegeneratePolygon();
}
var _22be=null;
var _22bf=[];
var _22c0=[];
var _22c1=[];
var _22c2=[];
for(var i=0;i<_22ba.segments.length;i++){
_22be=_22ba.segments[i];
var _22c3=_22bf.length-1;
switch(_22be.action){
case "M":
if(_22be.args.length!=2){
throw new WebEngineException("L Segment has length less than 2 "+_22ba.shape.path);
break;
}
_22bf.push(_22be.args[0]);
_22c0.push(_22be.args[1]);
_22c1.push(_22be.args[0]);
_22c2.push(_22be.args[1]);
break;
case "L":
if(_22be.args.length!=2){
throw new WebEngineException("L Segment has length less than 2 "+_22ba.shape.path);
break;
}
var line=Line.make(_22bf[i-1],_22c0[i-1],_22be.args[0],_22be.args[1]);
var _22c4=this._lineIntersectsPolygon(line,_22bb,_22bc);
if(_22c4){
return true;
}
_22bf.push(_22be.args[0]);
_22c0.push(_22be.args[1]);
_22c1.push(_22be.args[0]);
_22c2.push(_22be.args[1]);
break;
case "Q":
var _22c5=new Array();
_22c5.push(new Point(_22bf[_22c3],_22c0[_22c3]));
if(_22be.args.length!=4){
throw new WebEngineException("Q Segment has length less than 4 "+_22ba.shape.path);
break;
}
_22c5.push(new Point(_22be.args[0],_22be.args[1]));
_22c5.push(new Point(_22be.args[2],_22be.args[3]));
var poly=_22bd?_22bd:_22bb;
var quad=new _229a(_22c5);
var _22c6=quad.intersectsPolygon(poly,_22bc);
if(_22c6){
return true;
}
_22bf.push(_22be.args[2]);
_22c0.push(_22be.args[3]);
_22c1.push(_22be.args[0]);
_22c2.push(_22be.args[1]);
_22c1.push(_22be.args[2]);
_22c2.push(_22be.args[3]);
break;
case "C":
if(_22be.args.length!=6){
break;
}
var _22c7=new Array();
_22c7.push(new Point(_22bf[_22c3],_22c0[_22c3]));
_22c7.push(new Point(_22be.args[0],_22be.args[1]));
_22c7.push(new Point(_22be.args[2],_22be.args[3]));
_22c7.push(new Point(_22be.args[4],_22be.args[5]));
var poly2=_22bd?_22bd:_22bb;
var cubic=new _229a(_22c7);
var _22c6=cubic.intersectsPolygon(poly2,_22bc);
if(_22c6){
return true;
}
_22bf.push(_22be.args[4]);
_22c0.push(_22be.args[5]);
_22c1.push(_22be.args[0]);
_22c2.push(_22be.args[1]);
_22c1.push(_22be.args[2]);
_22c2.push(_22be.args[3]);
_22c1.push(_22be.args[4]);
_22c2.push(_22be.args[5]);
break;
case "Z":
var line=Line.make(_22bf[_22c3],_22c0[_22c3],_22bf[0],_22c0[0]);
var _22c4=this._lineIntersectsPolygon(line,_22bb,_22bc);
if(_22c4){
return true;
}
_22bf.push(_22bf[0]);
_22c0.push(_22c0[0]);
_22c1.push(_22bf[0]);
_22c2.push(_22c0[0]);
break;
default:
throw new WebEngineException("Unsupported path segment type in ShapeIntersection._pathIntersectsPolygon: "+_22be.action);
}
if(_22bb.contains(_22bf[i],_22c0[i])){
return true;
}
}
if(_22ba.getFill()){
var _22c8=new Poly(_22c1,_22c2,true);
for(var i=0;i<_22bb.x.length;i++){
if(_22c8.contains(_22bb.x[i],_22bb.y[i])){
return true;
}
}
}
return false;
};
_2299._lineIntersectsPolygon=function(line,poly,_22c9){
for(var i=0;i<poly.x.length;i++){
var _22ca=i+1;
if(i==poly.x.length-1){
_22ca=0;
}
var _22cb=Line.make(poly.x[i],poly.y[i],poly.x[_22ca],poly.y[_22ca]);
if(poly.x[i]==poly.x[_22ca]&&poly.y[i]==poly.y[_22ca]){
var _22cc=line.pointOnLineSegment(new Point(poly.x[i],poly.y[i]),_22c9);
if(_22cc){
return true;
}
}else{
if(Line.intersectsWithinTolerance(line.x[0],line.y[0],line.x[1],line.y[1],_22cb.x[0],_22cb.y[0],_22cb.x[1],_22cb.y[1],_22c9)){
return true;
}
}
}
return false;
};
});
},"com/ibm/vis/engine/internal/grammar/layout/SharedLayoutInfo":function(){
define("com/ibm/vis/engine/internal/grammar/layout/SharedLayoutInfo",["com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/statics","dojo/_base/declare"],function(_22cd,_22ce,_22cf){
var _22d0=_22cf("com.ibm.vis.engine.internal.grammar.layout.SharedLayoutInfo",null,{routeInfo:null,layerRanges:null,selfLinkRadius:null,levelCount:null,constructor:function(){
this.routeInfo=new _22cd.m();
},addRoutingInfo:function(_22d1,toRow,_22d2){
var _22d3=_22d2.toArray(new Array(_22d2.size()));
var key=_22d0.makeLinkKey(_22d1,toRow);
this.routeInfo.put(key,_22d3);
},getRoutingInfo:function(_22d4,toRow){
var key=_22d0.makeLinkKey(_22d4,toRow);
var _22d5=this.routeInfo.get(key);
if(_22d5==null){
_22d5=_22d0.NO_ROUTE;
}
return _22d5;
},setSelfLinkRadius:function(_22d6){
this.selfLinkRadius=_22d6;
},getSelfLinkRadius:function(){
return this.selfLinkRadius;
},getGraphLayerRanges:function(){
return this.layerRanges;
},setGraphLayerRanges:function(){
},setLayerInfo:function(_22d7,_22d8){
this.levelCount=_22d8;
this.layerRanges=_22d7;
},getIntraLayerLinkLevelCount:function(layer){
return this.levelCount[layer];
}});
_22d0.makeLinkKey=function(_22d9,toRow){
return "key"+_22d9+"_"+toRow;
};
_22ce.add("com/ibm/vis/engine/internal/grammar/layout/SharedLayoutInfo",[],function(){
_22d0.NO_ROUTE=new Array(0);
});
return _22d0;
});
},"com/ibm/vis/engine/internal/nativeImpl/ResourceUtil":function(){
require({cache:{"url:resources/migration.json":"[\r\n\t{\r\n\t\t\"targetVersion\": \"2.0\",\r\n\t\t\"mapping\": [\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"//size\",\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"context\": \"size.palette\",\r\n\t\t\t\t\t\t\"source\": \"[*]\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\", \"parameters\": {\"multiplier\": 1}}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"context\": \"size.mapping[*]\",\r\n\t\t\t\t\t\t\"source\": \"size\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\", \"parameters\": {\"multiplier\": 1}}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"//size[*]\",\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"context\": \"palette\",\r\n\t\t\t\t\t\t\"source\": \"[*]\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\", \"parameters\": {\"multiplier\": 1}}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"context\": \"mapping[*]\",\r\n\t\t\t\t\t\t\"source\": \"size\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\", \"parameters\": {\"multiplier\": 1}}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"targetVersion\": \"1.3\",\r\n\t\t\"mapping\": [\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"//mapping\",\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"field.\\\\$ref\"}],\r\n\t\t\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"variables\": {\r\n\t\t\t\t\t\t\t\t\t\"idRef\": \"field.\\\\$ref\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"guard\": [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"logic\": \"or\",\r\n\t\t\t\t\t\t\t\t\t\t\"expression\": \"/data[*].fields[*].id\", \"value\": \"$idRef\",\r\n\t\t\t\t\t\t\t\t\t\t\"guard\": [\r\n\t\t\t\t\t\t\t\t\t\t\t{\"expression\": \"/data[$0].fields[$1].categories\"}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"context\": \"mapping[*]\",\r\n\t\t\t\t\t\t\t\t\t\t\"source\": \"offset\",\r\n\t\t\t\t\t\t\t\t\t\t\"target\": \"at\",\r\n\t\t\t\t\t\t\t\t\t\t\"method\": \"move\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\"elseMapping\": [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"context\": \"mapping[*]\",\r\n\t\t\t\t\t\t\t\t\t\t\"source\": \"offset\",\r\n\t\t\t\t\t\t\t\t\t\t\"target\": \"at\",\r\n\t\t\t\t\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"},\r\n\t\t\t\t\t\t\t\t\t\t\"method\": \"move\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\"elseMapping\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"context\": \"mapping[*]\",\r\n\t\t\t\t\t\t\t\t\"source\": \"offset\",\r\n\t\t\t\t\t\t\t\t\"target\": \"at\",\r\n\t\t\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"},\r\n\t\t\t\t\t\t\t\t\"method\": \"move\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"context\": \"mapping[*]\",\r\n\t\t\t\t\t\t\"source\": \"offsetByValue\",\r\n\t\t\t\t\t\t\"target\": \"at\",\r\n\t\t\t\t\t\t\"method\": \"move\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"//shape[*]\",\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"x\", \"type\": \"number\"}],\r\n\t\t\t\t\t\t\"source\": \"x\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"y\", \"type\": \"number\"}],\r\n\t\t\t\t\t\t\"source\": \"y\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"r\", \"type\": \"number\"}],\r\n\t\t\t\t\t\t\"source\": \"r\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"width\", \"type\": \"number\"}],\r\n\t\t\t\t\t\t\"source\": \"width\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"height\", \"type\": \"number\"}],\r\n\t\t\t\t\t\t\"source\": \"height\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"grammar[*].facet.fields[*]\",\r\n\t\t\t\t\"target\": \"axis\",\r\n\t\t\t\t\"value\": {}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"//arrow\",\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"arrow\", \"value\": \"end\"}],\r\n\t\t\t\t\t\t\"target\": \"endArrow\",\r\n\t\t\t\t\t\t\"value\": \"arrow\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"arrow\", \"value\": \"start\"}],\r\n\t\t\t\t\t\t\"target\": \"startArrow\",\r\n\t\t\t\t\t\t\"value\": \"arrow\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"arrow\", \"value\": \"both\"}],\r\n\t\t\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"target\": \"startArrow\",\r\n\t\t\t\t\t\t\t\t\"value\": \"arrow\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"target\": \"endArrow\",\r\n\t\t\t\t\t\t\t\t\"value\": \"arrow\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t] \r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"arrow\",\r\n\t\t\t\t\t\t\"method\": \"delete\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"guard\": [{\"expression\": \"legends\"}],\r\n\t\t\t\t\"strategy\": {\"id\": \"migration.legends\"},\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*]\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0]\",\r\n\t\t\t\t\t\t\"method\": \"init\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*]\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1]\",\r\n\t\t\t\t\t\t\"method\": \"init\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].titleStyle\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].titleStyle\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].location\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].location\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.flow\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].orientation\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.method\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].method\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.columns\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].orientation\",\r\n\t\t\t\t\t\t\"value\": \"horizontal\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.columns\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].stripes\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.rows\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].orientation\",\r\n\t\t\t\t\t\t\"value\": \"vertical\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.rows\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].stripes\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.reverse\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].scale.reverse\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].aesthetics\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].aesthetics\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].swatchStyle\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].itemStyle\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].text\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].title\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].swatchBoxStyle\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].itemBoxStyle\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].textStyle\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].labelStyle\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].local\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].scale.local\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].categories\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].scale.spans[0].categories\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.flow\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].orientation\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.method\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].method\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.columns\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].stripes\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.columns\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].orientation\",\r\n\t\t\t\t\t\t\"value\": \"horizontal\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.rows\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].stripes\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.rows\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].orientation\",\r\n\t\t\t\t\t\t\"value\": \"vertical\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.reverse\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].scale.reverse\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].bounds\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].location\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].style\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].boundsStyle\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends\",\r\n\t\t\t\t\t\t\"method\": \"delete\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"__legends[*].legends[*]\",\r\n\t\t\t\t\t\t\"target\": \"legends[]\",\r\n\t\t\t\t\t\t\"method\": \"concat\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"__legends\",\r\n\t\t\t\t\t\t\"method\": \"delete\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"grammar[*].coordinates\",\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"transforms[*].clusterParameters.categoryWidth\",\r\n\t\t\t\t\t\t\"target\": \"dimensions[$(dimensions.length)-1].scale.categoryStructure.width\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"transforms[*].clusterParameters.align\",\r\n\t\t\t\t\t\t\"target\": \"dimensions[1].scale.categoryStructure.align\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"transforms[*].clusterParameters.gaps[*]\",\r\n\t\t\t\t\t\t\"target\": \"dimensions[$1+1].scale.categoryStructure.gap\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"transforms[*].clusterParameters.nest[*]\",\r\n\t\t\t\t\t\t\"target\": \"dimensions[$1+2].scale.categoryStructure.nest\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"transforms[*].clusterParameters\",\r\n\t\t\t\t\t\t\"method\": \"delete\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n]\r\n","url:resources/raveSchema.json":"{\r\n\t\"copyright\": \"(C) Copyright IBM Corp. 2011,2013\",\r\n\t\"version\": \"2.0.1\",\r\n\t\"type\": \"object\",\r\n\t\"classType\": \"VisJSONSpec\",\r\n\t\"properties\": {\r\n\t\t\"parameters\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"classType\": \"ParameterSpec\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"label\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"description\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"required\": {\r\n\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"type\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"required\": true,\r\n\t\t\t\t\t\t\"enum\": [ \"integer\", \"boolean\", \"double\", \"string\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"defaultValue\": {\r\n\t\t\t\t\t\t\"type\": [\"string\", \"number\", \"boolean\", \"integer\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"resolution\" : {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\" : {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"ResolutionSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"method\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"required\": true,\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"set\", \"remove\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"target\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"sourceParameter\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\"string\", \"number\", \"boolean\", \"integer\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"sourceValue\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\"string\", \"number\", \"boolean\", \"integer\"]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"parameterValues\" : {\r\n\t\t\t\"type\":  \"array\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"classType\": \"ParameterValueSpec\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"value\": {\r\n\t\t\t\t\t\t\"type\": [\"string\", \"number\", \"boolean\", \"integer\"],\r\n\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"copyright\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t},\r\n\t\t\"version\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t},\r\n\t\t\"description\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t},\r\n\t\t\"localization\": {\r\n\t\t\t\"type\": \"object\",\r\n\t\t\t\"classType\": \"LocalizationSpec\",\r\n\t\t\t\"properties\": {\r\n\t\t\t\t\"mirror\": {\r\n\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t},\r\n\t\t\t\t\"baseTextDirection\": {\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t\"nationalShaping\": {\r\n\t\t\t\t\t\"id\": \"nationalShaping\",\r\n\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\"classType\": \"NationalShapingSpec\",\r\n\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\"digits\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"contextualShaping\": {\r\n\t\t\t\t\t\"id\": \"contextualShaping\",\r\n\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\"classType\": \"ContextualShapingSpec\",\r\n\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\"digits\": {\r\n\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"defaultContext\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"legendPosition\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"enum\": [\"left\", \"right\", \"top\", \"bottom\"]\r\n\t\t},\r\n\t\t\"size\": {\r\n\t\t\t\"type\": \"object\",\r\n\t\t\t\"classType\": \"SizeSpec\",\r\n\t\t\t\"properties\": {\r\n\t\t\t\t\"height\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"number\",\r\n\t\t\t\t\t\t\t\"minimum\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"width\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"number\",\r\n\t\t\t\t\t\t\t\"minimum\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"data\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"id\": \"data\",\r\n\t\t\t\t\"classType\": \"DataSpec\",\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"fields\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"id\": \"fields\",\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"FieldSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"label\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"unit\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"categories\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"order\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"min\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"max\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"key\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"granularity\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"format\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"id\": \"format\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"FormatSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"numericPattern\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"suffix\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"prefix\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"rows\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\"null\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"type\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"source\": {\r\n\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"group\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"DerivedGroupSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"input\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"output\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"fields\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"granularity\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"input\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"DerivedInputFieldSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"field\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"role\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"output\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"id\": \"derivedOutputField\",\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"DerivedOutputFieldSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"role\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"parameters\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"DerivedParameterSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"summaryFunction\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"window\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"binStart\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"input\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"field\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"fields\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"augment\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"id\": \"augment\",\r\n\t\t\t\t\"classType\": \"AugmentSpec\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"target\": {\r\n\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"source\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"method\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"enum\": [\"intersect\", \"includeAllSource\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"thinningDistanceFraction\": {\r\n\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"dataKeys\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"sourceKeys\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"sourceFields\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"$ref\": \"fields\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"grammar\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"id\": \"grammar\",\r\n\t\t\t\t\"classType\": \"GrammarSpec\",\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"axesOverflow\": {\r\n\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"bounds\": {\r\n\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\"id\": \"bounds\",\r\n\t\t\t\t\t\t\"classType\": \"BoundsSpec\",\r\n\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\"left\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"right\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"width\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"top\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"bottom\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"height\": {\r\n\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"coordinates\": {\r\n\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\"classType\": \"CoordinatesSpec\",\r\n\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"dimensions\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"DimensionSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"scale\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"id\": \"scale\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"ScaleSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"padding\": {\r\n\t\t\t\t\t\t\t\t\t\t\t        \"$ref\": \"padding\"\r\n\t\t\t\t\t\t\t\t\t\t        },\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"reverse\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"local\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"categoryStructure\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"CategoryStructureSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"align\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"start\", \"middle\", \"end\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"width\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"gap\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"nest\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"spans\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"span\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"SpanSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"unit\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"min\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"max\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"fit\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"outRange\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"outRange\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"SpanOutRangeSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"min\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"max\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"minorDivisions\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"tickDelta\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"categories\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"integer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"method\":{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"linear\", \"log\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"axis\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t         \t\"array\",\r\n\t\t\t\t\t\t\t\t         \t\t{\r\n\t\t\t\t\t\t\t\t\t         \t\t\"$ref\": \"axis\"\r\n\t\t\t\t\t\t\t\t         \t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"AxisSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"axis\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"method\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"horizontal\", \"vertical\", \"stagger\", \"auto\", \"between\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"lineStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"markStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"minorStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"boxStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"gridStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"tickStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"titleStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"preferredSize\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"preferredSize\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"PreferredSizeSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"max\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"min\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"preferred\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"visible\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"opposite\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"transforms\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"TransformSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"polar\", \"transpose\", \"cluster\", \"stack\", \"projection\"],\r\n\t\t\t\t\t\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"projectionParameters\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"ProjectionParametersSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"standardLongitude\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"polarParameters\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"PolarParametersSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"startAngle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"CCW\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"diameter\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"insetParameters\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"InsetParametersSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"left\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"right\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"bottom\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"top\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"elements\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"ElementsSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"interactionType\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"scrollUnit\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"clip\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"atBounds\", \"overlap\", \"none\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"type\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"point\", \"interval\", \"path\", \"line\", \"polygon\", \"area\", \"edge\", \"text\", \"schema\", \"schema:pie\", \"schema:profile\", \"schema:star\", \"schema:boxplot\", \"schema:rose\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"data\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"interpolation\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"smooth\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"positionModifier\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"dodge\", \"stack\", \"none\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"content\": {\r\n\t\t\t\t\t\t\t\t\t\"id\": \"content\",\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"DerivedValueSpec\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"components\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\"classType\": \"ComponentSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"field\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"value\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"positioning\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"LayoutSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"method\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"nodePlacement\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"symmetric\", \"maxOverlap\"]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"family\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"parent\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"size\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"leafOnly\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"padding\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"padding\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"spacing\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"layout\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"recursive\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"RecursiveSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"parent\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"child\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"levels\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"levelLabelStyles\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"LevelLabelSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"labelCollisionHandling\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"none\", \"hide\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"internal\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ElementLabelSpec\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"leaf\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ElementLabelSpec\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"levelStyles\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"LevelStyleSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"internal\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"leaf\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"swimLanes\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"SwimLaneSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"maxRowValue\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"idealNodeCountValue\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"from\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"to\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"orientation\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"top-to-bottom\", \"left-to-right\", \"bottom-to-top\", \"right-to-left\"]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"layer\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"order\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"layerPlacement\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"centered\", \"spread\", \"adaptive\"]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"attachmentPoint\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"center\", \"closestPoint\"]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"prunedNodes\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"integer\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"prunedEdges\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"integer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"color\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\"id\": \"aesthetic\",\r\n\t\t\t\t\t\t\t\t\t\t\"classType\": \"AestheticSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"scale\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"scale\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"field\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"reference\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"ReferenceSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"value\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"mapping\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"MappingSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ColorSpec\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"at\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"size\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"pattern\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"symbol\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"symbol\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"visible\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"palette\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"boolean\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ColorSpec\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"symbol\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"key\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"modifies\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"outline\", \"fill\", \"both\", \"width\", \"height\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"modifies\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"ModifiesSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"enum\": [\"outline\", \"fill\", \"both\", \"width\", \"height\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"part\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"dashing\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"meta\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"size\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"split\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"styleBy\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"symbol\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"visibility\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"offset\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"position\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\"classType\": \"PositionSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"field\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"value\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"includeInRange\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"span\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"integer\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"derivedValue\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"id\": \"DerivedValueSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"DerivedValueSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"target\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"functionName\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"variable\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"symbolStyle\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"tooltip\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\"classType\": \"TooltipSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"content\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"content\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"modifies\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"PartSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"part\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"label\": {\r\n\t\t\t\t\t\t\t\t\t\"id\": \"label\",\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"id\": \"ElementLabelSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\"classType\": \"ElementLabelSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"lineStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"backgroundStyle\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"color\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"size\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"content\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"content\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"modifies\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"modifies\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"visibility\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"aesthetic\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"lineMinSize\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"facet\": {\r\n\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\"classType\": \"FacetSpec\",\r\n\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\"sharedAxes\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"method\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"enum\": [\"chartInChart\", \"panel\"]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"targetElement\": {\r\n\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"padding\": {\r\n\t\t\t\t\t\t\t\t\"$ref\": \"padding\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"fields\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"id\": \"facetField\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"FacetFieldSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"field\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"axis\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"axis\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"legends\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"id\": \"legend\",\r\n\t\t\t\t\"classType\": \"LegendSpec\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"aesthetics\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"AestheticReferenceSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"aesthetic\": {\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"scale\": {\r\n\t\t\t\t\t\t\"$ref\": \"scale\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"title\": {\r\n\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"$ref\": \"reference\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"location\": {\r\n\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"$ref\": \"bounds\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"orientation\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"method\": {\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"mirroredLabels\": {\r\n\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"stripes\": {\r\n\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"itemStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"itemBoxStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"lineStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"tickStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"markStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"minorStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"labelStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"titleStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"boundsStyle\": {\r\n\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"style\": {\r\n\t\t\t\"type\": \"object\",\r\n\t\t\t\"classType\": \"StyleSpec\",\r\n\t\t\t\"id\": \"style\",\r\n\t\t\t\"properties\": {\r\n\t\t\t\t\"outlineMethod\": {\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t\"snap\": {\r\n\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t},\r\n\t\t\t\t\"align\": {\r\n\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\"enum\": [\"start\", \"middle\", \"end\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"valign\": {\r\n\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\"enum\": [\"start\", \"middle\", \"end\", \"middleOfFirstLine\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"endArrow\": {\r\n\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\"enum\": [\"none\", \"arrow\", \"closedArrow\", \"filledArrow\", \"circle\", \"filledCircle\", \"square\", \"filledSquare\", \"diamond\", \"filledDiamond\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"startArrow\": {\r\n\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\"enum\": [\"none\", \"arrow\", \"closedArrow\", \"filledArrow\", \"circle\", \"filledCircle\", \"square\", \"filledSquare\", \"diamond\", \"filledDiamond\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"location\": {\r\n\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\"enum\": [\"outside\", \"callout\", \"inside\", \"fit\", \"stretch\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"angle\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"cornerRadius\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"effect\": {\r\n\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\"classType\": \"EffectSpec\",\r\n\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\"shadow\": {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"ShadowSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"dx\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"dy\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"stdDev\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"color\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ColorSpec\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"glow\": {\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"GlowSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"color\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ColorSpec\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"stdDev\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"size\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"stroke\": {\r\n\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\"classType\": \"StrokeSpec\",\r\n\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"cap\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\"enum\": [\"butt\", \"round\", \"square\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"join\": {\r\n\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"miter\", \"round\", \"bevel\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"width\": {\r\n\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"symbol\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"SymbolSpec\",\r\n\t\t\t\t\t\t\t\"id\": \"symbol\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"scaleDimensions\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"none\", \"x\", \"y\", \"both\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"shape\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"RectangleShapeSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"scaleDimensions\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"x\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"y\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"width\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"height\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"part\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"CircleShapeSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"scaleDimensions\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"x\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"y\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"r\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"part\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"classType\": \"PathShapeSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"scaleDimensions\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"path\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"style\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"part\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"font\": {\r\n\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\"classType\": \"FontSpec\",\r\n\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\"family\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"size\": {\r\n\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"style\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"weight\": {\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"size\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"width\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"height\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"$ref\": \"preferredSize\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"padding\": {\r\n\t\t\t\t\t\"id\": \"padding\",\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\"number\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"id\": \"PaddinSpec\",\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"PaddingSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"left\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"right\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"top\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"bottom\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"outline\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"$ref\": \"ColorSpec\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"fill\": {\r\n\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"ColorSpec\",\r\n\t\t\t\t\t\t\t\"id\": \"ColorSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"r\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"g\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"b\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"a\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"h\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"s\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"l\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"v\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"dAlpha\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"dSaturation\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"dLightness\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"dValue\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\"classType\": \"FillSpec\",\r\n\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\"type\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\"enum\": [\"linear\", \"radial\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"colors\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\t\"classType\": \"ColorOffsetSpec\",\r\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"color\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"ColorSpec\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\"offset\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"angle\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"number\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"focus\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\t\t\t\t\t\"classType\": \"FocusSpec\",\r\n\t\t\t\t\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\t\t\t\t\"x\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"y\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"global\": {\r\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"}});
define("com/ibm/vis/engine/internal/nativeImpl/ResourceUtil",["exports","dojo/has","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/nativeImpl/WebEngineException","dojo/text!resources/migration.json","dojo/text!resources/raveSchema.json"],function(_22da,has,_22db,_22dc,_22dd,_22de){
_22da.getFontMetricsArray=function(){
if(has("rave-precomputed-metrics")){
var _22df=require("com/ibm/vis/engine/internal/nativeImpl/PrecomputedFontMetrics");
return _22df.FONTMETRICS;
}
throw new _22dc("RAVE precomputed metrics unavailable.");
};
_22da.getDeclarativeSpecMigrationStrategies=function(){
return _22dd!=null?_22db.parseObjectOrArray(_22dd):null;
};
_22da.getRaveSchema=function(){
return _22de!=null?_22db.parseObjectOrArray(_22de):null;
};
});
},"com/ibm/vis/engine/internal/grammar/coordinate/stack/StackState":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/stack/StackState",["com/ibm/init/fork!./DataStack","com/ibm/init/fork!../../../nativeImpl/LinkedHashcodeMap","com/ibm/init/fork!../functions/FunctionalPath","com/ibm/init/fork!../../../struct/PolyPathMaker","com/ibm/init/statics","dojo/_base/declare"],function(_22e0,_22e1,_22e2,_22e3,_22e4,_22e5){
var _22e6=_22e5("com.ibm.vis.engine.internal.grammar.coordinate.stack.StackState",null,{min:null,max:null,transformedPolyMap:null,constructor:function(){
this.min=new _22e0.m(false);
this.max=new _22e0.m(true);
this.transformedPolyMap=new _22e1.m();
},clear:function(){
this.min=new _22e0.m(false);
this.max=new _22e0.m(true);
},updateStackInfo:function(_22e7){
this.min.updateStackInfo(_22e7);
this.max.updateStackInfo(_22e7);
},getStackingOffset:function(x,_22e8,_22e9,_22ea){
this.updateStackInfo(_22e8);
var _22eb=_22ea-_22e9;
if(_22eb<0){
return this.min.getStackingOffset(x,_22eb);
}else{
return this.max.getStackingOffset(x,_22eb);
}
},stack:function(_22ec,_22ed,zero,_22ee,_22ef){
this.updateStackInfo(_22ec);
if(_22ed.isNonNegative()){
return this.max.stackPath(_22ed,zero,_22ee,_22ef);
}else{
return this.min.stackPath(_22ed,zero,_22ee,_22ef);
}
},getTransformedPoly:function(_22f0){
return this.transformedPolyMap.get(_22f0);
},setTransformedShapeForPoly:function(poly,_22f1){
this.transformedPolyMap.put(poly,_22f1);
}});
return _22e6;
});
},"com/ibm/vis/engine/internal/oldlegendlayout/OldAutoGridLayout":function(){
define("com/ibm/vis/engine/internal/oldlegendlayout/OldAutoGridLayout",["./OldGridLayout","com/ibm/init/fork!./OldFlow","com/ibm/init/statics","dojo/_base/declare"],function(_22f2,_22f3,_22f4,_22f5){
var _22f6=_22f5("com.ibm.vis.engine.internal.oldlegendlayout.OldAutoGridLayout",[_22f2],{MAX_CHILDREN_TO_AVERAGE:0,constructor:function(flow,rows,_22f7){
this.MAX_CHILDREN_TO_AVERAGE=100;
},layout:function(_22f8){
var _22f9=0;
var _22fa=0;
var _22fb=0;
var _22fc=0;
var _22fd=0;
for(var _22fe=0,_22ff=_22f8.getChildren(),_2300=_22ff.size();_22fe<_2300;++_22fe){
var _2301=_22ff.get(_22fe);
if(_22fb++>this.MAX_CHILDREN_TO_AVERAGE){
break;
}
_22fc=Math.max(_22fc,_2301.getPreferredSize().height);
_22fd=Math.max(_22fd,_2301.getPreferredSize().width);
_22f9+=_2301.getPreferredSize().height;
_22fa+=_2301.getPreferredSize().width;
}
var _2302=_22f8.getChildren().size();
if(_22fc!=0&&_22fd!=0){
var _2303=Math.max(1,Math.floor(_22f8.getBounds().height/_22fc));
var _2304=Math.max(1,Math.floor(_22f8.getBounds().width/_22fd));
this.rowsSpecified=_2303;
this.columnsSpecified=_2304;
if(this.columnsSpecified*this.rowsSpecified<_2302){
var _2305=_22f9/_22fb;
var _2306=_22fa/_22fb;
this.rowsSpecified=Math.max(1,Math.floor(_22f8.getBounds().height/_2305));
this.columnsSpecified=Math.max(1,Math.floor(_22f8.getBounds().width/_2306));
if(this.flow==_22f3.m.horizontal){
var _2307=Math.ceil(_2302/_2303);
if(_2307>1&&_2307*_2303>=_2302){
this.columnsSpecified=Math.min(this.columnsSpecified,_2307);
}
}else{
var _2308=Math.ceil(_2302/_2304);
if(_2308>1&&_2308*_2304>=_2302){
this.rowsSpecified=Math.min(this.rowsSpecified,_2308);
}
}
}else{
if(this.flow==_22f3.m.horizontal){
this.columnsSpecified=Math.min(this.columnsSpecified,Math.ceil(_22f8.getBounds().width/_22fd));
this.columnsSpecified=Math.max(this.columnsSpecified,1);
var _2309=_2302/this.columnsSpecified;
this.rowsSpecified=Math.ceil(_2309);
}else{
this.rowsSpecified=Math.min(this.rowsSpecified,Math.ceil(_22f8.getBounds().height/_22fc));
this.rowsSpecified=Math.max(this.columnsSpecified,1);
var _230a=_2302/this.rowsSpecified;
this.columnsSpecified=Math.ceil(_230a);
}
}
}
_22f8.getBounds().width=Math.min(this.columnsSpecified*_22fd,_22f8.getBounds().width);
_22f8.getBounds().height=Math.min(this.rowsSpecified*_22fc,_22f8.getBounds().height);
this.inherited(arguments,[_22f8]);
var _230b=Math.min(this.rowsSpecified,_2302);
var _230c=Math.min(this.columnsSpecified,_2302);
_22f8.getBounds().width=Math.min(_230c*_22fd,_22f8.getBounds().width);
_22f8.getBounds().height=Math.min(_230b*_22fc,_22f8.getBounds().height);
}});
return _22f6;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/LiteGraph":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/LiteGraph",["com/ibm/init/fork!../../../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_230d,_230e,_230f){
var _2310=_230f("com.ibm.vis.engine.internal.grammar.layout.graph.stress.LiteGraph",null,{nodes:null,links:null,constructor:function(nodes,links){
this.nodes=new _230d.m();
this.links=new _230d.m();
if(nodes!=null){
for(var _2311=0,_2312=nodes.length;_2311<_2312;++_2311){
var n=nodes[_2311];
this.nodes.add(n);
}
}
if(links!=null){
for(var _2313=0,_2314=links.length;_2313<_2314;++_2313){
var e=links[_2313];
this.links.add(e);
}
}
},getLinksCount:function(){
return this.links.size();
},getNodesCount:function(){
return this.nodes.size();
},getLinks:function(){
return this.links;
},getNodes:function(){
return this.nodes;
},addNode:function(n){
this.nodes.add(n);
},addLink:function(e){
this.links.add(e);
},getLinkBetween:function(p1,p2){
for(var _2315=0,_2316=p1.getLinks(),_2317=_2316.length;_2315<_2317;++_2315){
var edge=_2316[_2315];
if(edge.getOpposite(p1)==p2){
return edge;
}
}
return null;
}});
_2310.fromLayout=function(model){
return new _2310(model.nodes,model.links);
};
return _2310;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/DefaultDAGCrossingReductionAlgorithm":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/DefaultDAGCrossingReductionAlgorithm",["./DAGCrossingReductionAlgorithm","com/ibm/init/fork!./Crossings","com/ibm/init/fork!../../../data/Range","com/ibm/init/fork!../../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_2318,_2319,_231a,_231b,_231c,_231d){
var _231e=_231d("com.ibm.vis.engine.internal.grammar.layout.graph.DefaultDAGCrossingReductionAlgorithm",[_2318],{adapter:null,constructor:function(_231f){
this.adapter=_231f;
},layout:function(graph,_2320){
this.assignCoordinates(graph,_2320);
this.foldScale(graph,_2320);
if(_2320.length==1){
this.distributeLayer(_2320[0]);
}else{
for(var i=0;i<3;++i){
this.alignDaughters(graph,_2320);
this.alignParents(graph,_2320);
}
}
this.doWithinLayerSwaps(graph,_2320);
},doWithinLayerSwaps:function(graph,_2321){
var _2322=new _2319.m(graph.nodes,graph.links);
while(_2322.total>0){
var _2323=0;
for(var _2324=0,_2325=_2321.length;_2324<_2325;++_2324){
var layer=_2321[_2324];
for(var i=0;i<layer.length-1;++i){
var a=layer[i];
for(var j=i+1;j<layer.length;++j){
var b=layer[j];
if(((a.isOrdered()&&b.isOrdered())&&(a.order==b.order))||(!a.isOrdered()&&(!b.isOrdered()))){
if(_2322.swapNodes(a,b)){
_2323++;
}
}
}
}
}
if(_2323==0){
break;
}
}
if(this.adapter.hasListeners()){
this.adapter.logDetail("Finished DAG layout","crossings",_2322.total);
}
},alignDaughters:function(graph,_2326){
var _2327=_2326.length;
for(var i=_2327-2;i>=0;--i){
var layer=_2326[i];
for(var _2328=0,_2329=layer.length;_2328<_2329;++_2328){
var node=layer[_2328];
if(node.inLink.length>0){
var sum=0;
for(var _232a=0,_232b=node.inLink,_232c=_232b.length;_232a<_232c;++_232a){
var link=_232b[_232a];
sum+=link.from.x;
}
node.setX((sum/node.inLink.length+0.000001*node.x)/(1+0.000001));
}
}
this.distributeLayer(layer);
}
},alignParents:function(graph,_232d){
var _232e=_232d.length;
for(var i=1;i<_232e;++i){
var layer=_232d[i];
for(var _232f=0,_2330=layer.length;_232f<_2330;++_232f){
var node=layer[_232f];
if(node.outLink.length>0){
var sum=0;
for(var _2331=0,_2332=node.outLink,_2333=_2332.length;_2331<_2333;++_2331){
var link=_2332[_2331];
sum+=link.to.x;
}
node.setX((sum/node.outLink.length+0.000001*node.x)/(1+0.000001));
}
}
this.distributeLayer(layer);
}
},assignCoordinates:function(graph,_2334){
var _2335=_2334.length;
for(var i=0;i<_2335;++i){
var layer=_2334[i];
for(var j=0;j<layer.length;++j){
var node=layer[j];
var _2336=node.degree();
for(var _2337=0,_2338=node.inLink,_2339=_2338.length;_2337<_2339;++_2337){
var link=_2338[_2337];
_2336+=0.1*link.from.degree();
}
for(var _233a=0,_233b=node.outLink,_233c=_233b.length;_233a<_233c;++_233a){
var link=_233b[_233a];
_2336+=0.1*link.to.degree();
}
if(j<layer.length/2){
_2336+=1e-8*j;
}else{
_2336+=1e-8*(1+layer.length/2-j);
}
node.setX(_2336);
node.setY(i);
}
}
},foldScale:function(graph,_233d){
var _233e=_233d.length;
var _233f=0;
for(var i=0;i<_233e;++i){
var layer=_233d[i];
_233f=Math.max(_233f,layer.length);
}
var _2340=0.5*(_233f-1);
for(var i=0;i<_233e;++i){
var _2341=0.01*Math.sqrt(i);
var layer=_233d[i];
var n=layer.length;
var ix=this.getLayerOrder(layer);
var left=0;
var right=n-1;
for(var j=0;j<n;j+=2){
var n1=layer[ix[j]];
var n2=n1;
if(j<n-1){
n2=layer[ix[j+1]];
}
if(n1.outLink.length>0){
var link=n1.outLink[0];
if(link.to.x>_2340){
var lpj=n1;
n1=n2;
n2=lpj;
}
}else{
if(n2.outLink.length>0){
var link=n2.outLink[0];
if(link.to.x<_2340){
var lpj=n1;
n1=n2;
n2=lpj;
}
}
}
n1.setX(left-_2341);
if(j<n-1){
n2.setX(right+_2341);
}
left++;
right--;
}
}
},distributeLayer:function(layer){
var order=this.getLayerOrder(layer);
for(var j=0;j<order.length;++j){
var idx=order[j];
layer[idx].setX(j-order.length/2);
}
},getLayerOrder:function(layer){
var x=Array.create([layer.length],0);
var range=_231a.m.EMPTY;
for(var i=0;i<layer.length;++i){
if(layer[i].isOrdered()){
x[i]=layer[i].order;
range=range.unionValue(x[i]);
}else{
x[i]=layer[i].x;
}
}
if(!range.isEmpty()){
if(range.range==0){
for(var i=0;i<layer.length;++i){
if(layer[i].isOrdered()){
x[i]=0;
}
}
}else{
for(var i=0;i<layer.length;++i){
if(layer[i].isOrdered()){
x[i]=range.toZeroOne(x[i]);
}
}
}
}
return _231b.m.makeSortOrder(x);
}});
_231c.add("com/ibm/vis/engine/internal/grammar/layout/graph/DefaultDAGCrossingReductionAlgorithm",["com/ibm/vis/engine/internal/grammar/layout/graph/DAGCrossingReductionAlgorithm"],function(){
_231e.BIAS_FACTOR=0.000001;
});
return _231e;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/DAG":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/DAG",["./AbstractGraphLayout","com/ibm/init/fork!./DefaultDAGExtensions","com/ibm/init/fork!../../../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./LongestDistanceToTerminal","com/ibm/init/fork!../../../../../exceptions/EngineException","com/ibm/init/fork!../../../../../exceptions/ErrorCode","com/ibm/init/fork!./AssignLayerFromSpec","com/ibm/init/fork!./DefaultCycleRemovalAlgorithm","com/ibm/init/fork!./DefaultDAGCrossingReductionAlgorithm","com/ibm/init/fork!./Graph","com/ibm/init/fork!./DefaultDAGNodeWrappingAlgorithm","com/ibm/init/fork!./DAGInLayerLinkHandling","com/ibm/init/fork!../../../struct/Dim","com/ibm/init/fork!../../../nativeImpl/BasicFactory","com/ibm/init/fork!../../units/UnitConverter","com/ibm/init/fork!../../../struct/Insets","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!./Node","com/ibm/init/fork!./Link","com/ibm/init/fork!../../../struct/Point","com/ibm/init/statics","dojo/_base/declare"],function(_2342,_2343,_2344,_2345,_2346,_2347,_2348,_2349,_234a,_234b,_234c,_234d,_234e,_234f,_2350,_2351,_2352,_2353,_2354,_2355,_2356,_2357){
var DAG=_2357("com.ibm.vis.engine.internal.grammar.layout.graph.DAG",[_2342],{layers:null,layerCount:0,cycleRemovalAlgorithm:null,layerAssignmentAlgorithm:null,crossingReductionAlgorithm:null,horizontalNodePlacementAlgorithm:null,verticalNodePlacementAlgorithm:null,preferredSize:null,constructor:function(_2358){
_2343.m.registerExtensions();
var spec=_2358.getSpec();
var _2359=spec.nodePlacement==null?"symmetric":spec.nodePlacement;
this.horizontalNodePlacementAlgorithm=_2344.m.INSTANCE.newInstance(_2359,_2358);
var _235a=spec.layerPlacement==null?"spread":spec.layerPlacement;
this.verticalNodePlacementAlgorithm=_2344.m.INSTANCE.newInstance(_235a,_2358);
var _235b=(spec.layer==null)?null:spec.layer.$ref;
if(_235b==null){
this.layerAssignmentAlgorithm=new _2345.m();
}else{
if(_2358.getSpec().layer!=null){
var range=_2358.getFieldRange(_2358.getSpec().layer.$ref);
if(range!=null&&range.min<0){
throw new _2346.m(_2358.getSpec().layer.$ref,_2347.m.DATA_CONVERSION,"layer field may not have negative values",null);
}
}
this.layerAssignmentAlgorithm=new _2348.m(_2358);
}
this.cycleRemovalAlgorithm=new _2349.m(_2358);
this.crossingReductionAlgorithm=new _234a.m(_2358);
},directedAlgorithm:function(){
return true;
},respectsTransforms:function(){
return false;
},layoutNodes:function(_235c){
var graph=new _234b.m(this.nodes,this.links);
this.cycleRemovalAlgorithm.removeCycles(graph);
this.layerCount=this.layerAssignmentAlgorithm.assignLayers(graph);
if(this.nodeWrappingRequired()){
this.layerCount=new _234c.m(this.adapter).assignRows(graph);
}
this.nodes=graph.nodes;
this.links=graph.links;
this.insertDummyNodes();
this.layers=this.computeLayerArrays();
graph=new _234b.m(this.nodes,this.links);
this.crossingReductionAlgorithm.layout(graph,this.layers);
var _235d=_234d.m.insertDummyNodesForLinksInLayers(this.layers,this.nodes,this.links);
this.nodes=_235d.get(0);
this.links=_235d.get(1);
this.layers=this.computeLayerArrays();
},getPreferredSize:function(_235e){
if(this.preferredSize!=null){
return this.preferredSize;
}
this.makeShapes(_235e,new _234e.m(5000,5000));
this.preferredSize=this.getPreferredSizeOfDAG();
return this.preferredSize;
},getPreferredSizeOfDAG:function(){
if(this.layers==null){
return new _234e.m(400,400);
}
var _235f=this.getNodesGap();
var _2360=0;
var width=0;
var _2361=0;
for(var _2362=0,_2363=this.layers,_2364=_2363.length;_2362<_2364;++_2362){
var layer=_2363[_2362];
var _2365=0;
var _2366=0;
var _2367=this.getLayerGap(layer,_235f.height);
for(var _2368=0,_2369=layer.length;_2368<_2369;++_2368){
var node=layer[_2368];
if(this.adapter.isSwapXY()){
_2365+=node.getCurrentBounds().height+_235f.height;
_2366=Math.max(_2366,node.getCurrentBounds().width);
}else{
_2365+=node.getCurrentBounds().width+_235f.width;
_2366=Math.max(_2366,node.getCurrentBounds().height);
}
}
if(_2360==0&&_2366!=0){
_2360=_2366;
}else{
if(_2366==0){
_2366=_2360;
}
}
width=Math.max(width,_2365);
_2361+=_2366+_2367;
}
width=Math.max(400,width);
if(this.layers.length==1){
_2361=Math.max(400,_2361+_235f.height/4);
}else{
_2361=Math.max(400,_2361+_235f.height/2);
}
if(this.adapter.isSwapXY()){
return this.getExpandedBounds(new _234e.m(_2361,width));
}else{
return this.getExpandedBounds(new _234e.m(width,_2361));
}
},getNodesGap:function(){
var _236a=this.adapter.getLinkStyle();
var _236b=DAG.getStrokeWidthFromStyle(_236a);
var _236c=10+2*_236b*4.2;
var _236d=new _234e.m(_236c,_236c);
for(var _236e=0,_236f=this.nodes,_2370=_236f.length;_236e<_2370;++_236e){
var node=_236f[_236e];
_236d.width=Math.max(_236d.width,node.getCurrentBounds().width/2);
_236d.height=Math.max(_236d.height,node.getCurrentBounds().height/2);
}
if(this.adapter.isSwapXY()){
_236d=new _234e.m(_236d.height,_236d.width);
}
_236d.width=Math.min(_236d.width,100);
_236d.height=Math.min(_236d.height,100);
return _236d;
},getLayerGap:function(layer,_2371){
var _2372=DAG.getMaxLevel(layer);
var _2373=_2371;
if(_2372>0){
var _2374=this.adapter.getLinkStyle();
var _2375=DAG.getStrokeWidthFromStyle(_2374);
var _2376=Math.max(8,_2375*4.2);
_2373+=2*(_2372*_2375*2+_2376);
}
return _2373;
},getExpandedBounds:function(_2377){
if(this.adapter.getSpec().padding==null){
return _2377;
}
var _2378=_2351.m.makeForStylePadding(this.adapter.getSpec().padding,_2377,_2377);
return new _234e.m(_2377.width+_2378.getHorizontal(),_2377.height+_2378.getVertical());
},nodeWrappingRequired:function(){
return (this.adapter.getSpec().swimLanes!=null)&&(this.adapter.getSpec().swimLanes.id!=null)&&(this.adapter.getSpec().swimLanes.maxRowValue!=null);
},placeInExtent:function(_2379){
var _237a=_2379;
if(this.adapter.isSwapXY()){
_237a=new _234e.m(_2379.height,_2379.width);
}
this.horizontalNodePlacementAlgorithm.layoutNodes(this.layers,_237a);
_234d.m.assignLevelToDummyNodesInSameLayer(this.layers,this.links);
for(var _237b=0,_237c=this.nodes,_237d=_237c.length;_237b<_237d;++_237b){
var n=_237c[_237b];
if(n.isDummy()){
var info=n.info;
if(info!=null){
info.setLevel(info.getLevel()/2);
}
}
}
this.verticalNodePlacementAlgorithm.layoutNodes(this.layers,_237a);
if(this.adapter.isReflectY()){
for(var _237e=0,_237f=this.layers,_2380=_237f.length;_237e<_2380;++_237e){
var layer=_237f[_237e];
for(var _2381=0,_2382=layer.length;_2381<_2382;++_2381){
var node=layer[_2381];
node.setY(1-node.y);
}
}
}
if(this.adapter.isSwapXY()){
for(var _2383=0,_2384=this.layers,_2385=_2384.length;_2383<_2385;++_2383){
var layer=_2384[_2383];
for(var _2386=0,_2387=layer.length;_2386<_2387;++_2386){
var node=layer[_2386];
var temp=node.x;
node.setX(node.y);
node.setY(temp);
}
}
}
this.removeDummyNodes(_2379);
},insertDummyNodes:function(){
var _2388=new _2352.m();
for(var _2389=0,_238a=this.nodes,_238b=_238a.length;_2389<_238b;++_2389){
var node=_238a[_2389];
_2388.add(node);
}
var _238c=new _2352.m();
for(var _238d=0,_238e=this.links,_238f=_238e.length;_238d<_238f;++_238d){
var link=_238e[_238d];
if(link.getSpan()>1){
this.divideLink(_2388,_238c,link);
}else{
_238c.add(link);
}
}
this.nodes=_2388.toArray(new Array(_2388.size()));
this.links=_238c.toArray(new Array(_238c.size()));
},divideLink:function(_2390,_2391,link){
var _2392=this.makeFirstLink(_2390,_2391,link);
if(link.from.layer>link.to.layer){
for(var i=link.from.layer-2;i>=link.to.layer+1;--i){
_2392=this.makeInteriorLink(_2390,_2391,link,_2392,i);
}
}else{
for(var i=link.from.layer+2;i<=link.to.layer-1;++i){
_2392=this.makeInteriorLink(_2390,_2391,link,_2392,i);
}
}
this.makeFinalLink(_2391,link,_2392);
},makeFirstLink:function(_2393,_2394,_2395){
var next=new _2353.m(-_2393.size());
if(_2395.from.layer>_2395.to.layer){
next.layer=_2395.from.layer-1;
}else{
next.layer=_2395.from.layer+1;
}
_2393.add(next);
var _2396=new _2354.m(_2395.from,next);
_2396.reversed=_2395.reversed;
_2396.setLinkPruned(_2395.isLinkPruned());
_2394.add(_2396);
_2395.from.replaceOutlink(_2395,_2396);
next.inLink=[_2396];
return next;
},makeInteriorLink:function(_2397,_2398,_2399,_239a,layer){
var next=new _2353.m(-_2397.size());
next.layer=layer;
_2397.add(next);
var _239b=new _2354.m(_239a,next);
_239b.reversed=_2399.reversed;
_239b.setLinkPruned(_2399.isLinkPruned());
_2398.add(_239b);
_239a.outLink=[_239b];
next.inLink=[_239b];
return next;
},makeFinalLink:function(_239c,_239d,_239e){
var _239f=new _2354.m(_239e,_239d.to);
_239f.reversed=_239d.reversed;
_239f.setLinkPruned(_239d.isLinkPruned());
_239c.add(_239f);
_239e.outLink=[_239f];
_239d.to.replaceInlink(_239d,_239f);
},removeDummyNodes:function(_23a0){
var _23a1=this.adapter.getElementSize();
var _23a2=new _234e.m(_23a1.width/_23a0.width/2,_23a1.height/_23a0.height/2);
var _23a3=new _2352.m();
var _23a4=new _2352.m();
for(var _23a5=0,_23a6=this.nodes,_23a7=_23a6.length;_23a5<_23a7;++_23a5){
var node=_23a6[_23a5];
if(node!=null&&!node.isDummy()&&!node.isNodePruned()){
_23a4.add(node);
}
}
for(var _23a8=0,_23a9=this.links,_23aa=_23a9.length;_23a8<_23aa;++_23a8){
var link=_23a9[_23a8];
if(link.isLinkPruned()){
continue;
}
var _23ab=link.from.layer==link.to.layer;
if(!link.from.isDummy()&&link.to.isDummy()){
var _23ac=new _2352.m();
var _23ad=link;
while(_23ad.to.isDummy()){
var pt1=null;
var pt2=null;
if(_23ab){
var info=_23ad.to.info;
pt1=new _2355.m(NaN,info.getLevel());
}else{
if(this.adapter.isSwapXY()){
if(this.adapter.isReflectY()){
pt1=new _2355.m(_23ad.to.x-_23a2.width,_23ad.to.y);
pt2=new _2355.m(_23ad.to.x+_23a2.width,_23ad.to.y);
}else{
pt1=new _2355.m(_23ad.to.x+_23a2.width,_23ad.to.y);
pt2=new _2355.m(_23ad.to.x-_23a2.width,_23ad.to.y);
}
}else{
if(this.adapter.isReflectY()){
pt1=new _2355.m(_23ad.to.x,_23ad.to.y-_23a2.height);
pt2=new _2355.m(_23ad.to.x,_23ad.to.y+_23a2.height);
}else{
pt1=new _2355.m(_23ad.to.x,_23ad.to.y+_23a2.height);
pt2=new _2355.m(_23ad.to.x,_23ad.to.y-_23a2.height);
}
}
}
_23ac.add(pt1);
if(pt2!=null){
_23ac.add(pt2);
}
_23ad=_23ad.to.outLink[0];
var n1=link.from;
var n2=_23ad.to;
var _23ae=new _2354.m(n1,n2);
if(link.reversed){
this.adapter.getSharedLayoutInfo().addRoutingInfo(n2.row,n1.row,this.reverse(_23ac));
}else{
this.adapter.getSharedLayoutInfo().addRoutingInfo(n1.row,n2.row,_23ac);
}
n1.replaceOutlink(link,_23ae);
n2.replaceInlink(_23ad,_23ae);
if(!n1.isNodePruned()&&!n2.isNodePruned()){
_23a3.add(_23ae);
}
}
}else{
if(!link.from.isDummy()&&!link.to.isDummy()){
_23a3.add(link);
}
}
}
this.nodes=_23a4.toArray(new Array(_23a4.size()));
this.links=_23a3.toArray(new Array(_23a3.size()));
this.layers=this.computeLayerArrays();
},reverse:function(_23af){
var _23b0=new _2352.m();
for(var _23b1=0,_23b2=_23af.size();_23b1<_23b2;++_23b1){
var p=_23af.get(_23b1);
_23b0.add(0,p);
}
return _23b0;
},computeLayerArrays:function(){
var _23b3=new Array(this.layerCount);
for(var i=0;i<this.layerCount;++i){
var n=0;
for(var _23b4=0,_23b5=this.nodes,_23b6=_23b5.length;_23b4<_23b6;++_23b4){
var node=_23b5[_23b4];
if(node!=null&&node.layer==i){
n++;
}
}
_23b3[i]=new Array(n);
n=0;
for(var _23b7=0,_23b8=this.nodes,_23b9=_23b8.length;_23b7<_23b9;++_23b7){
var node=_23b8[_23b7];
if(node!=null&&node.layer==i){
_23b3[i][n++]=node;
}
}
}
return _23b3;
},getLayerCount:function(){
return this.layerCount;
}});
DAG.getStrokeWidthFromStyle=function(style){
var _23ba=1;
if(style!=null&&style.stroke!=null){
if(_234f.m.isNumber(style.stroke.width)){
_23ba=(style.stroke.width);
}else{
if(_234f.m.isString(style.stroke.width)){
var size=1;
_23ba=_2350.m.convertLength(style.stroke.width,size,400);
}
}
}
return _23ba;
};
DAG.getMaxLevel=function(nodes){
var _23bb=0;
for(var _23bc=0,_23bd=nodes.length;_23bc<_23bd;++_23bc){
var n=nodes[_23bc];
for(var _23be=0,_23bf=n.outLink,_23c0=_23bf.length;_23be<_23c0;++_23be){
var e=_23bf[_23be];
if(e.to.layer==e.from.layer&&e.to.isDummy()){
var info=e.to.info;
_23bb=Math.max(_23bb,info.getLevel());
}
}
}
return _23bb;
};
_2356.add("com/ibm/vis/engine/internal/grammar/layout/graph/DAG",["com/ibm/vis/engine/internal/grammar/layout/graph/AbstractGraphLayout","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/grammar/units/UnitConverter"],function(){
DAG.MAX_GAP_SIZE=100;
});
return DAG;
});
},"com/ibm/vis/engine/internal/migration/Guard":function(){
define("com/ibm/vis/engine/internal/migration/Guard",["com/ibm/init/fork!./PathExpression","com/ibm/init/fork!./EvaluationContext","com/ibm/init/fork!./EvaluationResult","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_23c1,_23c2,_23c3,_23c4,_23c5,_23c6,_23c7){
var Guard=_23c7("com.ibm.vis.engine.internal.migration.Guard",null,{expression:null,hasValue:false,value:null,type:null,logic:null,guards:null,constructor:function(_23c8,_23c9,value,type,logic,_23ca){
this.expression=_23c8!=null?new _23c1.m(_23c8):null;
this.hasValue=_23c9;
this.value=value;
this.type=type;
this.logic=logic;
this.guards=_23ca;
},execute:function(_23cb){
var _23cc=this.doExecute(new _23c2.m(_23cb.context,_23cb));
return "not".CPVisEngineEquals(this.logic)?!_23cc:_23cc;
},doExecute:function(_23cd){
if(this.expression!=null){
do{
var _23ce=this.executeExpression(_23cd)&&this.executeChildGuards(_23cd);
if("or".CPVisEngineEquals(this.logic)){
if(_23ce){
return true;
}
}else{
if(!_23ce){
return false;
}
}
}while(this.expression.next(_23cd));
return "or".CPVisEngineEquals(this.logic)?false:true;
}
return this.executeChildGuards(_23cd);
},executeChildGuards:function(_23cf){
if(this.guards!=null){
for(var _23d0=0,_23d1=this.guards,_23d2=_23d1.size();_23d0<_23d2;++_23d0){
var guard=_23d1.get(_23d0);
var _23d3=guard.execute(_23cf);
if("or".CPVisEngineEquals(this.logic)){
if(_23d3){
return true;
}
}else{
if(!_23d3){
return false;
}
}
}
return "or".CPVisEngineEquals(this.logic)?false:true;
}
return true;
},executeExpression:function(_23d4){
var _23d5=this.expression.evaluate(_23d4);
if(this.type!=null&&_23d5!=_23c3.m.DOES_NOT_EXIST){
var _23d6=true;
if("string".CPVisEngineEquals(this.type)){
_23d6=_23d5.isString();
}else{
if("object".CPVisEngineEquals(this.type)){
_23d6=_23d5.isObject();
}else{
if("array".CPVisEngineEquals(this.type)){
_23d6=_23d5.isArray();
}else{
if("number".CPVisEngineEquals(this.type)){
_23d6=_23d5.isNumber();
}else{
if("boolean".CPVisEngineEquals(this.type)){
_23d6=_23d5.isBoolean();
}
}
}
}
}
if(!_23d6){
return false;
}
}
if(!this.hasValue){
return _23d5!=_23c3.m.DOES_NOT_EXIST;
}
if(_23d5==_23c3.m.DOES_NOT_EXIST){
return false;
}
var _23d7=this.getResolvedValue(_23d4);
if(_23c4.m.isString(_23d7)){
return _23d5.isString()&&(_23d7).CPVisEngineEquals(_23d5.value);
}
if(_23c4.m.isNumber(_23d7)){
return _23d5.isNumber()&&(_23d7)==(_23d5.value);
}
if(_23c4.m.isBoolean(_23d7)){
return _23d5.isBoolean()&&(_23d7)==(_23d5.value);
}
if(_23c4.m.isArray(_23d7)){
return _23d5.isArray()&&_23c4.m.isEqual(_23d7,_23d5.value);
}
if(_23c4.m.isObject(_23d7)){
return _23d5.isObject()&&_23c4.m.isEqual(_23d7,_23d5.value);
}
return _23d7==_23d5.value;
},getResolvedValue:function(_23d8){
if(_23c4.m.isString(this.value)){
var str=(this.value);
if(str.CPVISEngineStartsWith("$")){
return _23d8.getVariable(str.substring(1));
}
if(str.CPVISEngineStartsWith("\\$")){
return str.substring(1);
}
}
return this.value;
}});
Guard.parse=function(arr){
var len=(arr==null?0:arr.length);
var _23d9=new _23c5.m(len);
for(var i=0;i<len;++i){
var item=arr[i];
_23d9.add(new Guard(_23c4.m.getItem(item,"expression"),_23c4.m.containsKey(item,"value"),_23c4.m.getItem(item,"value"),_23c4.m.getItem(item,"type"),_23c4.m.getItem(item,"logic"),Guard.parse(_23c4.m.getItem(item,"guard"))));
}
return _23d9;
};
_23c6.add("com/ibm/vis/engine/internal/migration/Guard",["com/ibm/vis/engine/internal/nativeImpl/BasicFactory"],function(){
Guard.NOT="not";
Guard.OR="or";
Guard.T_STRING="string";
Guard.T_OBJECT="object";
Guard.T_ARRAY="array";
Guard.T_NUMBER="number";
Guard.T_BOOLEAN="boolean";
});
return Guard;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/stack/Stacker":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/stack/Stacker",["com/ibm/init/statics","dojo/_base/declare"],function(_23da,_23db){
var _23dc=_23db("com.ibm.vis.engine.internal.grammar.coordinate.stack.Stacker",null,{stack:function(shape,zero,_23dd){
}});
return _23dc;
});
},"com/ibm/vis/interaction/internal/GraphInteractivityImpl":function(){
define("com/ibm/vis/interaction/internal/GraphInteractivityImpl",["../GraphInteractivity","com/ibm/init/fork!../../engine/internal/nativeImpl/WebEngineException","com/ibm/init/fork!../../engine/internal/nativeImpl/List","com/ibm/init/fork!../../exceptions/EngineException","com/ibm/init/fork!../../exceptions/ErrorCode","com/ibm/init/fork!../../engine/internal/nativeImpl/Map","com/ibm/init/statics","dojo/_base/declare"],function(_23de,_23df,_23e0,_23e1,_23e2,_23e3,_23e4,_23e5){
var _23e6=_23e5("com.ibm.vis.interaction.internal.GraphInteractivityImpl",[_23de],{interactivity:null,vis:null,grammarIndex:0,nodeSpecs:null,nodeData:null,linkSpecs:null,linkData:null,idFieldIndex:-1,fromFieldIndex:-1,toFieldIndex:-1,inIconFieldIndex:-1,outIconFieldIndex:-1,centerNowRow:-1,allParents:null,allParentsEdges:null,allChildren:null,allChildrenEdges:null,prunedNodes:null,prunedEdges:null,currentExpandLevels:null,currentExpandLevel:0,searchedNode:null,centerNodeParents:null,centerNodeChildren:null,constructor:function(_23e7,vis){
this.vis=vis;
this.interactivity=_23e7;
this.initializeExpandLevelState();
},hideChildrenOf:function(_23e8,rows,_23e9,_23ea){
var _23eb=this.centerNowRow;
this.initialize(_23e8,_23e9,_23ea);
if(_23eb!=this.centerNowRow){
this.updateCenterNode(_23eb);
}
this.updatePrunedListsForNodes(rows,-1,false,false);
this.updatePrunedItems();
},hideParentsOf:function(_23ec,rows,_23ed,_23ee){
var _23ef=this.centerNowRow;
this.initialize(_23ec,_23ed,_23ee);
if(_23ef!=this.centerNowRow){
this.updateCenterNode(_23ef);
}
this.updatePrunedListsForNodes(rows,-1,true,false);
this.updatePrunedItems();
},showChildrenOf:function(_23f0,rows,_23f1,_23f2){
for(var _23f3=0,_23f4=rows.length;_23f3<_23f4;++_23f3){
var row=rows[_23f3];
if(row>this.nodeData.rows.length-1){
throw new _23df.m("Passed node row is not available in data");
}
this.searchedNode=this.nodeData.rows[row][this.idFieldIndex];
var _23f5=this.currentExpandLevels.get(this.searchedNode);
var _23f6=(_23f5==null)?1:_23f5;
this.showChildrenForExpandLevel(_23f0,[row],_23f6,_23f1,_23f2);
}
this.searchedNode=null;
},showChildrenForExpandLevel:function(_23f7,rows,_23f8,_23f9,_23fa){
var _23fb=this.centerNowRow;
this.initialize(_23f7,_23f9,_23fa);
if(_23fb!=this.centerNowRow){
this.updateCenterNode(_23fb);
}
this.updatePrunedListsForNodes(rows,_23f8,false,true);
this.updatePrunedItems();
},showParentsOf:function(_23fc,rows,_23fd,_23fe){
for(var _23ff=0,_2400=rows.length;_23ff<_2400;++_23ff){
var row=rows[_23ff];
if(row>this.nodeData.rows.length-1){
throw new _23df.m("Passed node row is not available in data");
}
this.searchedNode=this.nodeData.rows[row][this.idFieldIndex];
var _2401=this.currentExpandLevels.get(this.searchedNode);
var _2402=(_2401==null)?1:_2401;
this.showParentsForExpandLevel(_23fc,[row],_2402,_23fd,_23fe);
}
this.searchedNode=null;
},showParentsForExpandLevel:function(_2403,rows,_2404,_2405,_2406){
var _2407=this.centerNowRow;
this.initialize(_2403,_2405,_2406);
if(_2407!=this.centerNowRow){
this.updateCenterNode(_2407);
}
this.updatePrunedListsForNodes(rows,_2404,true,true);
this.updatePrunedItems();
},showAll:function(_2408,_2409,_240a){
this.showOnly(_2408,-1,_2409,_240a);
},showOnly:function(_240b,_240c,_240d,_240e){
this.initialize(_240b,_240d,_240e);
this.clearPruneLists();
this.updatePrunedListsForCenterNode(_240b,_240c,true);
this.updatePrunedItems();
},expandLineage:function(_240f,_2410,_2411,_2412,_2413,_2414){
var _2415=false;
var edge=null;
var nodes;
this.readSpecObjects();
if(_2410){
nodes=new _23e0.m(1);
nodes.add(this.nodeData.rows[_240f][this.idFieldIndex]);
this.findRelatedNodesAndEdges(nodes,true,_2411,false,false);
this.findRelatedNodesAndEdges(nodes,false,_2412,false,false);
}else{
nodes=new _23e0.m(2);
var _2416=this.getNodeRowNumber(this.linkData.rows[_240f][this.fromFieldIndex]);
var _2417=this.getNodeRowNumber(this.linkData.rows[_240f][this.toFieldIndex]);
edge=[this.linkData.rows[_240f][this.fromFieldIndex],this.linkData.rows[_240f][this.toFieldIndex]];
if(_2411>0||_2411==-1){
nodes.add(_2416);
this.findRelatedNodesAndEdges(nodes,true,_2411==-1?-1:_2411-1,false,false);
nodes.remove(0);
}
if(_2412>0||_2412==-1){
nodes.clear();
nodes.add(_2417);
this.findRelatedNodesAndEdges(nodes,false,_2412==-1?-1:_2412-1,false,false);
}
nodes.clear();
if(_2411!=0){
nodes.add(_2416);
}
if(_2412!=0){
nodes.add(_2417);
}
}
if(_2413!=null){
var _2418=_23e6.getFieldIndex(this.nodeData.fields,_2413);
if(_2418==-1){
throw new _23df.m("Data field '"+_2413+"' does not exist.");
}
var rows=this.nodeData.rows;
for(var i=0;i<rows.length;++i){
var node=rows[i][this.idFieldIndex];
var _2419=this.allParents.contains(node)||this.allChildren.contains(node)||nodes.contains(node);
var state=rows[i][_2418];
if(state!=0){
if(_2419){
if(state==2){
_2415=true;
rows[i][_2418]=1;
}
}else{
if(state==1){
_2415=true;
rows[i][_2418]=2;
}
}
}
}
}
if(_2414!=null){
var _241a=_23e6.getFieldIndex(this.linkData.fields,_2414);
if(_241a==-1){
throw new _23df.m("Link field '"+_2414+"' does not exist.");
}
var rows=this.linkData.rows;
for(var i=0;i<rows.length;++i){
var _241b=rows[i][this.fromFieldIndex];
var _241c=rows[i][this.toFieldIndex];
var _241d=[_241b,_241c];
var _241e=(edge!=null&&_23e6.isEdgeEqual(edge,_241d))||_23e6.isEdgeInList(this.allParentsEdges,_241d)||_23e6.isEdgeInList(this.allChildrenEdges,_241d);
var state=rows[i][_241a];
if(state!=0){
if(_241e){
if(state==2){
_2415=true;
rows[i][_241a]=1;
}
}else{
if(state==1){
_2415=true;
rows[i][_241a]=2;
}
}
}
}
}
if(_2415){
this.updateSpec();
}
},collapseLineageAll:function(_241f,_2420){
var _2421=false;
this.readSpecObjects();
if(_241f!=null){
var _2422=_23e6.getFieldIndex(this.nodeData.fields,_241f);
if(_2422==-1){
throw new _23df.m("Node field '"+_241f+"' does not exist.");
}
var rows=this.nodeData.rows;
for(var i=0;i<rows.length;++i){
if(rows[i][_2422]==1){
_2421=true;
rows[i][_2422]=2;
}
}
}
if(_2420!=null){
var _2423=_23e6.getFieldIndex(this.linkData.fields,_2420);
if(_2423==-1){
throw new _23df.m("Link field '"+_2420+"' does not exist.");
}
var rows=this.linkData.rows;
for(var i=0;i<rows.length;++i){
if(rows[i][_2423]==1){
_2421=true;
rows[i][_2423]=2;
}
}
}
if(_2421){
this.updateSpec();
}
},getNodeLineageFieldValues:function(_2424){
this.readSpecObjects();
var _2425=_23e6.getFieldIndex(this.nodeData.fields,_2424);
if(_2425==-1){
throw new _23df.m("Node field '"+_2424+"' does not exist.");
}
var rows=this.nodeData.rows;
var _2426=Array.create([rows.length],0);
for(var i=0;i<rows.length;++i){
_2426[i]=rows[i][_2425];
}
return _2426;
},getEdgeLineageFieldValues:function(_2427){
this.readSpecObjects();
var _2428=_23e6.getFieldIndex(this.linkData.fields,_2427);
if(_2428==-1){
throw new _23df.m("Link field '"+_2427+"' does not exist.");
}
var rows=this.linkData.rows;
var _2429=Array.create([rows.length],0);
for(var i=0;i<rows.length;++i){
_2429[i]=rows[i][_2428];
}
return _2429;
},setGrammarIndex:function(index){
this.grammarIndex=index;
},readSpecObjects:function(){
var _242a=this.getElementSpec("dag");
var _242b=this.getElementSpec("link");
if(_242a==null||_242b==null){
throw new _23e1.m(null,_23e2.m.SPEC_INVALID_VALUE,("Input specs do not represent a DAG graph."),null);
}
this.nodeSpecs=_242a.positioning;
this.linkSpecs=_242b.positioning;
for(var _242c=0,_242d=this.vis.currentSpec.data,_242e=_242d.length;_242c<_242e;++_242c){
var _242f=_242d[_242c];
if(_242f.id.CPVisEngineEquals(_242a.data.$ref)){
this.nodeData=_242f;
}else{
if(_242f.id.CPVisEngineEquals(_242b.data.$ref)){
this.linkData=_242f;
}
}
}
if(this.nodeSpecs==null||this.linkSpecs==null||this.nodeData==null||this.linkData==null){
throw new _23e1.m(null,_23e2.m.SPEC_INVALID_VALUE,("Input specs do not represent a DAG graph."),null);
}
this.idFieldIndex=_23e6.getFieldIndex(this.nodeData.fields,this.nodeSpecs.id.$ref);
this.fromFieldIndex=_23e6.getFieldIndex(this.linkData.fields,this.linkSpecs.from.$ref);
this.toFieldIndex=_23e6.getFieldIndex(this.linkData.fields,this.linkSpecs.to.$ref);
this.initializeGlobalLists();
this.clearPruneLists();
},initialize:function(_2430,_2431,_2432){
this.readSpecObjects();
if(_2430>this.nodeData.rows.length-1){
throw new _23df.m("Passed center node row is not available in data");
}
this.centerNowRow=_2430;
this.inIconFieldIndex=_23e6.getFieldIndex(this.nodeData.fields,_2431);
if(this.inIconFieldIndex==-1){
throw new _23df.m("In icon field do not exists in data");
}
this.outIconFieldIndex=_23e6.getFieldIndex(this.nodeData.fields,_2432);
if(this.outIconFieldIndex==-1){
throw new _23df.m("Out icon field do not exists in data");
}
if(this.nodeSpecs.prunedNodes!=null){
for(var i=0;i<this.nodeSpecs.prunedNodes.length;++i){
this.prunedNodes.add(this.nodeSpecs.prunedNodes[i]);
}
}
if(this.nodeSpecs.prunedEdges!=null){
for(var i=0;i<this.nodeSpecs.prunedEdges.length;++i){
this.prunedEdges.add(this.nodeSpecs.prunedEdges[i]);
}
}
this.nodeSpecs.prunedNodes=null;
this.nodeSpecs.prunedEdges=null;
this.linkSpecs.prunedEdges=null;
},updateCenterNode:function(_2433){
this.updatePrunedListsForCenterNode(this.centerNowRow,-1,_2433<0);
if(_2433>0&&_2433<=this.nodeData.rows.length-1){
var node=this.nodeData.rows[_2433][this.idFieldIndex];
if(this.centerNodeParents.contains(node)){
this.setIconState(node,true,0);
}
if(this.centerNodeChildren.contains(node)){
this.setIconState(node,false,0);
}
}
},updatePrunedListsForNodes:function(rows,_2434,_2435,show){
var _2436=(_2435)?this.inIconFieldIndex:this.outIconFieldIndex;
var _2437=new _23e0.m();
var _2438=new _23e0.m();
var nodes=new _23e0.m();
for(var i=0;i<rows.length;++i){
if(rows[i]>this.nodeData.rows.length-1){
throw new _23df.m("Passed node row is not available in data");
}
var node=this.nodeData.rows[rows[i]][this.idFieldIndex];
nodes.add(node);
this.nodeData.rows[rows[i]][_2436]=(show)?this.getIconState(node,_2435,1):this.getIconState(node,_2435,0);
}
if(show){
this.findRelatedNodesAndEdges(nodes,_2435,_2434,!show,show);
_2437=(_2435)?this.allParents:this.allChildren;
_2438=(_2435)?this.allParentsEdges:this.allChildrenEdges;
}else{
for(var _2439=0,_243a=nodes.size();_2439<_243a;++_2439){
var node=nodes.get(_2439);
this.currentExpandLevel=0;
this.searchedNode=node;
var _243b=new _23e0.m();
_243b.add(node);
this.findRelatedNodesAndEdges(_243b,_2435,_2434,!show,show);
if(_2435){
_2437.addAll(this.allParents);
_2438.addAll(this.allParentsEdges);
}else{
_2437.addAll(this.allChildren);
_2438.addAll(this.allChildrenEdges);
}
this.initializeGlobalLists();
}
this.searchedNode=null;
}
for(var _243c=0,_243d=_2437.size();_243c<_243d;++_243c){
var node=_2437.get(_243c);
if(this.prunedNodes.contains(node)){
if(show){
this.prunedNodes.remove(node);
}
}else{
if(!show){
this.prunedNodes.add(node);
}
}
}
for(var i=0;i<_2438.size();++i){
var edge=_2438.get(i);
if(_23e6.isEdgeInList(this.prunedEdges,edge)){
if(show){
_23e6.removeEdgeFromList(this.prunedEdges,edge);
}
}else{
if(!show){
this.prunedEdges.add(edge);
}
}
}
if(show){
for(var _243e=0,_243f=_2437.size();_243e<_243f;++_243e){
var node=_2437.get(_243e);
this.currentExpandLevels.remove(node);
}
}
this.initializeGlobalLists();
},updatePrunedListsForCenterNode:function(_2440,_2441,_2442){
if(_2440<0){
return;
}
var _2443=new _23e0.m();
_2443.add(this.nodeData.rows[_2440][this.idFieldIndex]);
this.findRelatedNodesAndEdges(_2443,true,_2441,false,_2442);
this.findRelatedNodesAndEdges(_2443,false,_2441,false,_2442);
this.centerNodeParents=this.allParents;
this.centerNodeChildren=this.allChildren;
if(this.allParents.size()>0){
this.nodeData.rows[_2440][this.inIconFieldIndex]=this.isAnyNodeVisible(this.allParents)?2:1;
}else{
this.nodeData.rows[_2440][this.inIconFieldIndex]=this.getIconState(this.nodeData.rows[_2440][this.idFieldIndex],true,0);
}
if(this.allChildren.size()>0){
this.nodeData.rows[_2440][this.outIconFieldIndex]=this.isAnyNodeVisible(this.allChildren)?2:1;
}else{
this.nodeData.rows[_2440][this.outIconFieldIndex]=this.getIconState(this.nodeData.rows[_2440][this.idFieldIndex],false,0);
}
for(var i=0;i<this.nodeData.rows.length;++i){
var node=this.nodeData.rows[i][this.idFieldIndex];
if(!_2443.contains(node)&&!this.allParents.contains(node)&&!this.allChildren.contains(node)&&!this.prunedNodes.contains(node)){
this.prunedNodes.add(node);
}
}
for(var i=0;i<this.linkData.rows.length;++i){
var _2444=this.linkData.rows[i][this.fromFieldIndex];
var _2445=this.linkData.rows[i][this.toFieldIndex];
var edge=[_2444,_2445];
if(!_23e6.isEdgeInList(this.allParentsEdges,edge)&&!_23e6.isEdgeInList(this.allChildrenEdges,edge)&&!_23e6.isEdgeInList(this.prunedEdges,edge)){
this.prunedEdges.add(edge);
}
}
this.initializeGlobalLists();
},updatePrunedItems:function(){
if(this.prunedNodes.size()>0){
this.nodeSpecs.prunedNodes=new Array(this.prunedNodes.size());
for(var i=0;i<this.prunedNodes.size();++i){
this.nodeSpecs.prunedNodes[i]=this.prunedNodes.get(i);
}
}
for(var i=0;i<this.linkData.rows.length;++i){
var _2446=this.linkData.rows[i][this.fromFieldIndex];
var _2447=this.linkData.rows[i][this.toFieldIndex];
var edge=[_2446,_2447];
var _2448=_23e6.isEdgeInList(this.prunedEdges,edge);
if(!_2448){
if(this.prunedNodes.contains(_2446)){
this.prunedEdges.add(edge);
this.updateNodeIconState(this.getNodeRowNumber(_2447),1);
}else{
if(this.prunedNodes.contains(_2447)){
this.prunedEdges.add(edge);
this.updateNodeIconState(this.getNodeRowNumber(_2446),1);
}
}
}
}
if(this.prunedEdges.size()>0){
this.nodeSpecs.prunedEdges=new Array(this.prunedEdges.size());
for(var i=0;i<this.prunedEdges.size();++i){
this.nodeSpecs.prunedEdges[i]=this.prunedEdges.get(i);
}
this.linkSpecs.prunedEdges=this.nodeSpecs.prunedEdges;
}
this.updateSpec();
},updateSpec:function(){
this.vis.setVisJSONSpec(this.vis.currentSpec);
var scene=this.vis.recreateSceneTree();
if(scene!=null){
this.interactivity.setScene(scene);
}
},findRelatedNodesAndEdges:function(nodes,_2449,level,_244a,_244b){
if(level==0){
return;
}
if(level>0){
level--;
}
var _244c=new _23e0.m();
var _244d=new _23e0.m();
var _244e=new _23e0.m();
var _244f=(_2449)?this.toFieldIndex:this.fromFieldIndex;
var _2450=(_2449)?this.fromFieldIndex:this.toFieldIndex;
var _2451=false;
var _2452=(_244b)?true:false;
var _2453=(this.searchedNode!=null)?!this.currentExpandLevels.containsKey(this.searchedNode):true;
for(var _2454=0,_2455=nodes.size();_2454<_2455;++_2454){
var node=nodes.get(_2454);
for(var i=0;i<this.linkData.rows.length;++i){
if(node==(this.linkData.rows[i][_244f])){
var _2456=this.linkData.rows[i][_2450];
if(_244b){
_2452=(_2449)?!this.allParents.contains(_2456):!this.allChildren.contains(_2456);
}
if(!_244a||this.processRelatedNode(_2456,!_2449)){
_244c.add(_2456);
if(_2453||this.isNodeExpanded(_2456,_2449)){
_244d.add(_2456);
if(_2452){
this.setIconState(_2456,_2449,level);
}
}
}
var _2457=new Array(2);
_2457[0]=this.linkData.rows[i][this.fromFieldIndex];
_2457[1]=this.linkData.rows[i][this.toFieldIndex];
_244e.add(_2457);
}
}
}
if(_244e.size()>0){
if(_2449){
this.allParentsEdges.addAll(_244e);
}else{
this.allChildrenEdges.addAll(_244e);
}
}
_2451=(_2449)?_23e6.isNodesInList(this.allParents,_244c):_23e6.isNodesInList(this.allChildren,_244c);
if(_244c.size()>0&&!_2451){
if(_244a){
this.currentExpandLevel++;
}
if(_2449){
this.allParents.addAll(_244c);
}else{
this.allChildren.addAll(_244c);
}
if(level!=0){
this.findRelatedNodesAndEdges(_244d,_2449,level,_244a,_244b);
}
if(_244a&&this.searchedNode>=0){
this.currentExpandLevels.put(this.searchedNode,this.currentExpandLevel);
}
}
},isNodeExpanded:function(node,_2458){
var _2459=(_2458)?this.inIconFieldIndex:this.outIconFieldIndex;
var row=this.getNodeRowNumber(node);
if(row>=0&&row<=this.nodeData.rows.length-1&&this.nodeData.rows[row][_2459]==2){
return true;
}
return false;
},isAnyNodeVisible:function(nodes){
for(var _245a=0,_245b=nodes.size();_245a<_245b;++_245a){
var node=nodes.get(_245a);
if(!this.prunedNodes.contains(node)){
return true;
}
}
return false;
},processRelatedNode:function(node,_245c){
var _245d=(_245c)?this.toFieldIndex:this.fromFieldIndex;
var _245e=(_245c)?this.fromFieldIndex:this.toFieldIndex;
var _245f=(_245c)?this.outIconFieldIndex:this.inIconFieldIndex;
var nodes=(_245c)?this.allChildren:this.allParents;
for(var i=0;i<this.linkData.rows.length;++i){
if(node==(this.linkData.rows[i][_245d])){
var _2460=this.linkData.rows[i][_245e];
var _2461=new Array(2);
_2461[0]=(_245c)?_2460:node;
_2461[1]=(_245c)?node:_2460;
if(!nodes.contains(_2460)&&!this.prunedNodes.contains(_2460)&&!_23e6.isEdgeInList(this.prunedEdges,_2461)){
var row=this.getNodeRowNumber(_2460);
if(row>=0&&row<=this.nodeData.rows.length-1&&this.nodeData.rows[row][_245f]!=1){
return false;
}
}
}
}
if(_245c){
if(this.centerNodeParents!=null&&this.centerNodeParents.contains(node)){
return false;
}
}else{
if(this.centerNodeChildren!=null&&this.centerNodeChildren.contains(node)){
return false;
}
}
return true;
},getElementSpec:function(_2462){
var _2463=null;
var _2464=this.vis.currentSpec.grammar;
var _2465=_2464[this.grammarIndex].elements;
for(var _2466=0,_2467=_2465.length;_2466<_2467;++_2466){
var _2468=_2465[_2466];
var _2469=_2468.positioning;
if(_2469!=null&&_2462.CPVisEngineEquals(_2469.method)){
_2463=_2468;
break;
}
}
return _2463;
},updateNodeIconState:function(row,_246a){
if(row>=0&&row<=this.nodeData.rows.length-1){
if(this.nodeData.rows[row][this.inIconFieldIndex]!=0){
this.nodeData.rows[row][this.inIconFieldIndex]=_246a;
}
if(this.nodeData.rows[row][this.outIconFieldIndex]!=0){
this.nodeData.rows[row][this.outIconFieldIndex]=_246a;
}
}
},setIconState:function(node,_246b,level){
var row=this.getNodeRowNumber(node);
if(row>=0&&row<=this.nodeData.rows.length-1&&row!=this.centerNowRow){
this.nodeData.rows[row][this.inIconFieldIndex]=(_246b)?this.getIconState(node,_246b,level):0;
this.nodeData.rows[row][this.outIconFieldIndex]=(_246b)?0:this.getIconState(node,_246b,level);
}
},getIconState:function(node,_246c,level){
var _246d=(_246c)?this.toFieldIndex:this.fromFieldIndex;
var _246e=(_246c)?this.fromFieldIndex:this.toFieldIndex;
var _246f=0;
var _2470=new _23e0.m();
var _2471=new _23e0.m();
if(this.searchedNode==null||level!=0){
for(var i=0;i<this.linkData.rows.length;++i){
if(node==(this.linkData.rows[i][_246d])){
_246f=(level!=0)?2:1;
break;
}
}
}else{
if(_246c){
_2470=_23e6.removeNodesFromList(this.prunedNodes,this.allParents);
_2471=_23e6.removeEdgesFromList(this.prunedEdges,this.allParentsEdges);
}else{
_2470=_23e6.removeNodesFromList(this.prunedNodes,this.allChildren);
_2471=_23e6.removeEdgesFromList(this.prunedEdges,this.allChildrenEdges);
}
for(var i=0;i<this.linkData.rows.length;++i){
if(node==(this.linkData.rows[i][_246d])){
_246f=1;
var _2472=this.linkData.rows[i][_246e];
var _2473=new Array(2);
_2473[0]=(_246c)?_2472:node;
_2473[1]=(_246c)?node:_2472;
if(!_2470.contains(_2472)&&!_23e6.isEdgeInList(_2471,_2473)){
_246f=2;
break;
}
}
}
}
return _246f;
},getNodeRowNumber:function(node){
for(var i=0;i<this.nodeData.rows.length;++i){
if(node==(this.nodeData.rows[i][this.idFieldIndex])){
return i;
}
}
return -1;
},initializeGlobalLists:function(){
this.allParents=new _23e0.m();
this.allChildren=new _23e0.m();
this.allParentsEdges=new _23e0.m();
this.allChildrenEdges=new _23e0.m();
this.currentExpandLevel=0;
},clearPruneLists:function(){
this.prunedNodes=new _23e0.m();
this.prunedEdges=new _23e0.m();
},initializeExpandLevelState:function(){
this.currentExpandLevels=new _23e3.m();
}});
_23e6.getFieldIndex=function(_2474,_2475){
for(var i=0;i<_2474.length;++i){
if(_2475!=null&&_2475.CPVisEngineEquals(_2474[i].id)){
return i;
}
}
return -1;
};
_23e6.isEdgeInList=function(_2476,edge){
for(var i=0;i<_2476.size();++i){
if(_23e6.isEdgeEqual(edge,_2476.get(i))){
return true;
}
}
return false;
};
_23e6.isEdgeEqual=function(e1,e2){
return e1[0]==e2[0]&&e1[1]==e2[1];
};
_23e6.removeEdgeFromList=function(_2477,edge){
for(var i=0;i<_2477.size();++i){
var _2478=_2477.get(i);
if(_2478[0]==edge[0]&&_2478[1]==edge[1]){
_2477.remove(_2478);
return;
}
}
};
_23e6.isNodesInList=function(list,nodes){
for(var _2479=0,_247a=nodes.size();_2479<_247a;++_2479){
var node=nodes.get(_2479);
if(!list.contains(node)){
return false;
}
}
return true;
};
_23e6.removeNodesFromList=function(list,nodes){
var _247b=new _23e0.m();
for(var _247c=0,_247d=list.size();_247c<_247d;++_247c){
var node=list.get(_247c);
if(!nodes.contains(node)){
_247b.add(node);
}
}
return _247b;
};
_23e6.removeEdgesFromList=function(list,edges){
var _247e=new _23e0.m();
for(var _247f=0,_2480=list.size();_247f<_2480;++_247f){
var edge=list.get(_247f);
if(!_23e6.isEdgeInList(edges,edge)){
_247e.add(edge);
}
}
return _247e;
};
_23e4.add("com/ibm/vis/interaction/internal/GraphInteractivityImpl",["com/ibm/vis/interaction/GraphInteractivity"],function(){
_23e6.NO_STATE=0;
_23e6.EXPAND_STATE=1;
_23e6.COLLAPSE_STATE=2;
});
return _23e6;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/StressLayout":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/StressLayout",["../AbstractGraphLayout","com/ibm/init/fork!./ComponentSplitting","com/ibm/init/fork!../../../../data/Range","com/ibm/init/fork!./util/ExtractTree","com/ibm/init/fork!../../../../nativeImpl/HashcodeMap","com/ibm/init/fork!../Crossings","com/ibm/init/fork!./util/OverlapRemoval","com/ibm/init/fork!../../../../struct/Dim","com/ibm/init/fork!./StressMajorizer","com/ibm/init/fork!./MultilevelCoarsener","com/ibm/init/fork!./MultiLevelUncoarsener","com/ibm/init/fork!./matrix/FullMatrix","com/ibm/init/fork!./distance/FloydWarshallDistance","com/ibm/init/fork!./distance/BFSDistance","com/ibm/init/fork!../../../../nativeImpl/List","com/ibm/init/fork!./distance/Dijkstra","com/ibm/init/fork!./util/DepthAssignation","com/ibm/init/statics","dojo/_base/declare"],function(_2481,_2482,_2483,_2484,_2485,_2486,_2487,_2488,_2489,_248a,_248b,_248c,_248d,_248e,_248f,_2490,_2491,_2492,_2493){
var _2494=_2493("com.ibm.vis.engine.internal.grammar.layout.graph.stress.StressLayout",[_2481],{splitComponents:false,multiLevel:false,max_iterations:0,distances:null,stressMajorizer:null,pivotSet:null,preferred_edge_length:0,constructor:function(_2495){
this.max_iterations=500;
this.multiLevel=true;
this.splitComponents=true;
},copy:function(_2496,_2497,level,_2498){
var _2499=new _2494(this.adapter);
_2499.nodes=_2496.toArray(new Array(_2496.size()));
_2499.links=_2497.toArray(new Array(_2497.size()));
_2499.multiLevel=_2498;
_2499.splitComponents=false;
if(_2496.size()<150){
_2499.max_iterations=this.max_iterations;
}else{
_2499.max_iterations=20;
}
_2499.preferred_edge_length=this.preferred_edge_length*Math.pow(2,level);
return _2499;
},info:function(_249a){
this.adapter.logInfo("Stress Layout: "+_249a,null,null);
},detail:function(_249b,key,value){
this.adapter.logDetail("Stress Layout: "+_249b,key,value);
},layoutNodes:function(_249c){
this.info("Laying out nodes using Stress Layout Algorithm");
var _249d=this.adapter.getElementSize();
this.preferred_edge_length=Math.max(1,_249d.getMin());
this.detail("Choosing link size","preferred_edge_length",this.preferred_edge_length);
if(this.splitComponents){
var _249e=_2482.m.fromLayout(this);
var _249f=_249e.components;
if(_249f.length>1){
this.detail("Splitting Graph into Components","# components",_249f.length);
for(var _24a0=0,_24a1=_249f.length;_24a0<_24a1;++_24a0){
var sub=_249f[_24a0];
var _24a2=this.copy(sub.nodes,sub.links,8,this.multiLevel);
_24a2.layoutNodes(_249c);
}
_249e.combine(this.adapter,_249c,this.preferred_edge_length);
return;
}
}
this.detail("Graph size","# nodes",this.getNodesCount());
this.detail("Graph size","# edges",this.getLinksCount());
if(this.getNodesCount()>8){
this.initialPlacementUsingTree();
}else{
this.initialPlacementUsingCircle();
}
var _24a3=null;
var down=null;
for(var _24a4=0,_24a5=this.nodes,_24a6=_24a5.length;_24a4<_24a6;++_24a4){
var node=_24a5[_24a4];
if(_24a3==null){
_24a3=new _2483.m(node.x,node.x);
down=new _2483.m(node.y,node.y);
}else{
_24a3=_24a3.unionValue(node.x);
down=down.unionValue(node.y);
}
}
if(this.getNodesCount()<2){
return;
}
var h=new _2483.m(0,_249c.width);
var v=new _2483.m(0,_249c.height);
for(var _24a7=0,_24a8=this.nodes,_24a9=_24a8.length;_24a7<_24a9;++_24a7){
var node=_24a8[_24a7];
node.setX(h.fromZeroOne(_24a3.toZeroOne(node.x)));
node.setY(v.fromZeroOne(down.toZeroOne(node.y)));
}
if(this.multiLevel){
this.initialize();
this.doMultiLevelLayout(_249c);
}else{
this.doLayout(_249c);
}
},initialPlacementUsingTree:function(){
var tree=new _2484.m(this,false);
var _24aa=tree.calculate();
var sizes=new _2485.m();
this.recursivePolarPlace(_24aa,tree,1,0,2*3.141592653589793,sizes);
},initialPlacementUsingCircle:function(){
for(var i=0;i<this.nodes.length;++i){
var a=i*3.141592653589793*2/this.nodes.length;
this.nodes[i].moveTo(Math.cos(a),Math.sin(a));
}
var _24ab=new _2486.m(this.nodes,this.links);
var swaps=true;
while(swaps){
swaps=false;
for(var i=0;i<this.nodes.length;++i){
for(var j=0;j<i;++j){
if(_24ab.swap(i,j,0)){
swaps=true;
}
}
}
}
},recursivePolarPlace:function(_24ac,tree,r,a1,a2,sizes){
if(_24ac==null){
return;
}
var n=0;
for(var _24ad=0,_24ae=_24ac.size();_24ad<_24ae;++_24ad){
var c=_24ac.get(_24ad);
n+=this.getSize(tree,c,sizes);
}
var m=0;
for(var _24af=0,_24b0=_24ac.size();_24af<_24b0;++_24af){
var c=_24ac.get(_24af);
var ca1=a1+(a2-a1)*m/n;
m+=this.getSize(tree,c,sizes);
var ca2=a1+(a2-a1)*m/n;
c.moveTo(r*Math.cos((ca1+ca2)/2),r*Math.sin((ca1+ca2)/2));
this.recursivePolarPlace(tree.getChildren(c),tree,r+1,ca1,ca2,sizes);
}
},getSize:function(tree,node,sizes){
var size=sizes.get(node);
if(size==null){
var s=1;
if(node.info!=null){
for(var _24b1=0,_24b2=tree.getChildren(node),_24b3=_24b2.size();_24b1<_24b3;++_24b1){
var n=_24b2.get(_24b1);
s+=this.getSize(tree,n,sizes);
}
}
sizes.put(node,s);
return s;
}else{
return size;
}
},initialize:function(){
for(var _24b4=0,_24b5=this.nodes,_24b6=_24b5.length;_24b4<_24b6;++_24b4){
var n=_24b5[_24b4];
n.weight=n.degree();
for(var _24b7=0,_24b8=n.getNeighbors(),_24b9=_24b8.length;_24b7<_24b9;++_24b7){
var m=_24b8[_24b7];
n.weight=n.weight+m.degree();
}
}
},placeInExtent:function(_24ba){
for(var _24bb=0,_24bc=this.nodes,_24bd=_24bc.length;_24bb<_24bd;++_24bb){
var n=_24bc[_24bb];
var x=Math.round(n.x*10)/10;
var y=Math.round(n.y*10)/10;
n.moveTo(x,y);
}
if(true&&this.sufficientRoom(_24ba)){
this.info("Attempting to remove overlap");
this.scaleTo(_24ba);
var _24be=new _2487.m(this.nodes,_24ba.width/_24ba.height,1);
_24be.layout();
}
this.scaleTo(new _2488.m(1,1));
},sufficientRoom:function(_24bf){
var _24c0=0;
for(var _24c1=0,_24c2=this.nodes,_24c3=_24c2.length;_24c1<_24c3;++_24c1){
var n=_24c2[_24c1];
_24c0+=n.getCurrentBounds().area();
}
return _24c0/_24bf.width/_24bf.height<0.25;
},scaleTo:function(_24c4){
var _24c5=this.getNodeRanges();
var _24c6=_24c4.width/_24c5[0].range;
var _24c7=_24c4.height/_24c5[1].range;
var s=Math.min(_24c6,_24c7);
var xoff=-_24c5[0].min;
var yoff=-_24c5[1].min;
var dx=(_24c4.width-s*_24c5[0].range)/2;
var dy=(_24c4.height-s*_24c5[1].range)/2;
for(var _24c8=0,_24c9=this.nodes,_24ca=_24c9.length;_24c8<_24ca;++_24c8){
var node=_24c9[_24c8];
var x=s*(node.x+xoff)+dx;
var y=s*(node.y+yoff)+dy;
node.moveTo(x,y);
}
},getNodeRanges:function(){
var _24cb=[_2483.m.EMPTY,_2483.m.EMPTY];
for(var _24cc=0,_24cd=this.nodes,_24ce=_24cd.length;_24cc<_24ce;++_24cc){
var node=_24cd[_24cc];
var b=node.getCurrentBounds();
_24cb[0]=_24cb[0].unionValue(b.getMinX()).unionValue(b.getMaxX());
_24cb[1]=_24cb[1].unionValue(b.getMinY()).unionValue(b.getMaxY());
}
return _24cb;
},doLayout:function(_24cf){
this.distances=this.computeDistanceMatrix();
var _24d0=this.computeLinkLength(this.preferred_edge_length);
this.stressMajorizer=new _2489.m(this.nodes,this.distances,this.max_iterations,_24d0);
this.stressMajorizer.run();
},doMultiLevelLayout:function(_24d1){
var _24d2=new _248a.m(this);
var _24d3=_24d2.run(6);
this.detail("Using Mult-level layout","# levels",_24d3.size());
var _24d4=new _248b.m(this,_24d3,_24d1);
_24d4.run();
},computeDistanceMatrix:function(){
if(this.doSparseOptim()){
this.info("Distance Matrix -- Using Sparse Optimization");
var dist=new _248c.m(this.getNodesCount(),true);
this.pivotSet=this.createPivots(this.getNumberOfPivots(),dist);
this.detail("Created pivots","# pivots",this.pivotSet.size());
this.addLocalDistances(8,dist);
return dist;
}else{
if(this.linksWeighted()){
this.info("Distance Matrix -- Using Floyd-Warshall");
return new _248d.m(this).compute();
}else{
this.info("Distance Matrix -- Using BFS");
return new _248e.m(false,this,2147483647).compute();
}
}
},doSparseOptim:function(){
return this.getNodesCount()>=150&&true;
},getNumberOfPivots:function(){
return Math.min(100,Math.max(20,this.getNodesCount()*this.getNodesCount()/this.getLinksCount()));
},computeLinkLength:function(len){
if(true){
var _24d5=len;
for(var _24d6=0,_24d7=this.links,_24d8=_24d7.length;_24d6<_24d8;++_24d6){
var link=_24d7[_24d6];
_24d5=Math.max(len+this.getNodeSize(link.from)+this.getNodeSize(link.to),_24d5);
}
return _24d5;
}else{
return len;
}
},getNodeSize:function(node){
var b=node.getCurrentBounds();
return Math.max(b.width,b.height)/2;
},createPivots:function(_24d9,dist){
var _24da=new _2485.m();
var count=this.getNodesCount();
_24d9=Math.min(_24d9,count);
var _24db=Array.create([count],0);
for(var i=0;i<_24db.length;++i){
_24db[i]=1.7976931348623157e+308;
}
var nodes=this.nodes;
var _24dc=0;
var _24dd=new _248f.m();
var nz=0;
for(var m=0;m<_24d9;++m){
_24da.put(nodes[_24dc],this);
if(this.linksWeighted()){
this.detail("Creating pivots using Dijkstra's algorithm",null,null);
var algo=new _2490.m(this,nodes[_24dc],false,1.7976931348623157e+308);
algo.execute();
for(var i=0;i<count;++i){
var _24de=algo.getDistance(nodes[i]);
dist.set(_24dc,i,_24de);
nz++;
if(_24de<_24db[i]){
_24db[i]=_24de;
}
}
}else{
this.detail("Creating pivots using depth assignment algorithm",null,null);
var algo=new _2491.m(this,false);
_24dd.clear();
_24dd.add(nodes[_24dc]);
algo.execute(_24dd);
for(var i=0;i<count;++i){
var _24de=nodes[i].info;
dist.set(_24dc,i,_24de);
nz++;
if(_24de<_24db[i]){
_24db[i]=_24de;
}
}
}
var _24df=0;
for(var i=0;i<count;++i){
if(!_24da.containsKey(nodes[i])){
var _24de=_24db[i];
if(_24de>_24df){
_24df=_24de;
_24dc=i;
}
}
}
}
return _24da;
},addLocalDistances:function(bound,dist){
var _24e0=new _248f.m();
var n=this.getNodesCount();
for(var i=0;i<n;++i){
var node=this.nodes[i];
if(!this.pivotSet.containsKey(node)){
if(this.linksWeighted()){
var algo=new _2490.m(this,node,false,bound);
algo.execute();
for(var j=0;j<n;++j){
var depth=algo.getDistance(this.nodes[j]);
if(depth<2147483647){
dist.set(i,j,depth);
}
}
}else{
var algo=new _2491.m(this,false);
algo.bound=bound;
_24e0.clear();
_24e0.add(node);
algo.execute(_24e0);
for(var j=0;j<n;++j){
var other=this.nodes[j];
var depth=other.info;
if(depth<2147483647){
dist.set(i,j,depth);
}
}
}
}
}
}});
_2492.add("com/ibm/vis/engine/internal/grammar/layout/graph/stress/StressLayout",["com/ibm/vis/engine/internal/grammar/layout/graph/AbstractGraphLayout"],function(){
_2494.sparseOptimizationAtNodeCount=150;
_2494.min_pivots=20;
_2494.max_pivots=100;
_2494.close_hop_max=8;
_2494.respect_node_size=true;
_2494.allow_sparse_optimization=true;
});
return _2494;
});
},"com/ibm/vis/engine/internal/grammar/scale/Scale":function(){
define("com/ibm/vis/engine/internal/grammar/scale/Scale",["com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../struct/Insets","com/ibm/init/fork!../../struct/Dim","com/ibm/init/fork!../../../../exceptions/RaveException","com/ibm/init/fork!../../../../exceptions/SpecException","com/ibm/init/fork!../../../../exceptions/ErrorCode","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!./CategoricalScaleSpan","com/ibm/init/fork!../../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_24e1,_24e2,_24e3,_24e4,_24e5,_24e6,_24e7,_24e8,_24e9,_24ea,_24eb){
var Scale=_24eb("com.ibm.vis.engine.internal.grammar.scale.Scale",null,{MAX_PADDING:1,localScale:null,spans:null,ticks:null,reverse:false,ticksForData:null,allTicks:null,padding:null,paddingApplied:false,visSize:null,spec:null,addSpan:function(s){
this.spans.add(s);
},constructor:function(spec,vis){
this.visSize=vis.getSize();
this.spec=spec;
this.paddingApplied=false;
this.spans=new _24e1.m();
this.reverse=false;
this.localScale=false;
if(spec!=null){
if(spec.reverse!=null){
this.reverse=spec.reverse;
}
if(spec.local!=null){
this.localScale=spec.local;
}
if(spec.padding!=null){
this.padding=spec.padding;
}
}
},getDefaultElementSize:function(full,_24ec){
if(this.spans.isEmpty()){
return full;
}
var v=full;
for(var _24ed=0,_24ee=this.spans,_24ef=_24ee.size();_24ed<_24ef;++_24ed){
var span=_24ee.get(_24ed);
if(span.isApplicable(_24ec.getUnit())){
var _24f0;
if(_24ec.getGranularity()!=null){
_24f0=full*_24ec.getGranularity()*span.outRange.range/span.getAdjustedInputRange().range;
}else{
_24f0=span.getSuggestedElementSize(full);
}
if(_24f0!=null){
v=Math.min(v,_24f0);
}
}
}
if(v<full||(this.isCategorical()&&this.spans.get(0).getCategoryCount()==1)){
return v;
}
return Scale.getDefaultElementSizeWithNoScaleInfo(full);
},computeMaxSpanTickLength:function(font){
var max=0;
for(var _24f1=0,_24f2=this.spans,_24f3=_24f2.size();_24f1<_24f3;++_24f1){
var span=_24f2.get(_24f1);
max=Math.max(max,span.getMaxTickLength(font));
}
return max;
},getPaddingAsInsets:function(_24f4){
var _24f5=null;
if(this.padding!=null){
var _24f6=_24f4.isYAxis?this.visSize.height:this.visSize.width;
_24f5=_24e2.m.makeForStylePadding(this.padding,new _24e3.m(_24f4.len,_24f4.len),new _24e3.m(_24f6,_24f6));
}
return _24f5;
},initializeForDisplayableExtent:function(_24f7){
var _24f8=0;
var _24f9=0;
var _24fa=null;
if(this.padding!=null&&!this.paddingApplied){
_24fa=this.getPaddingAsInsets(_24f7);
if(_24fa!=null){
_24f8=_24fa.left/_24f7.len;
_24f9=_24fa.right/_24f7.len;
}else{
var _24fb="\"padding\": ";
throw new _24e4.m(_24fb+this.padding,_24e4.m.SPEC_INVALID_LENGTH);
}
if(_24f8+_24f9>this.MAX_PADDING){
var _24fb="\"padding\": ";
throw new _24e4.m(_24fb+this.padding,_24e4.m.LAYOUT_CANNOT_FIT);
}
this.paddingApplied=true;
}
for(var _24fc=0,_24fd=this.spans,_24fe=_24fd.size();_24fc<_24fe;++_24fc){
var span=_24fd.get(_24fc);
span.applyPadding(_24f8,_24f9);
span.setupForExtent(_24f7);
}
this.ticks=this.makeTicks();
},initializeForRequiredTickCount:function(_24ff){
for(var _2500=0,_2501=this.spans,_2502=_2501.size();_2500<_2502;++_2500){
var span=_2501.get(_2500);
var n;
if(span.desiredTicks!=null){
n=span.desiredTicks;
}else{
if(_24ff!=null){
n=_24ff;
}else{
n=Math.round(5/this.spans.size());
}
}
span.setupForTickCount(n,n*2);
}
this.ticks=this.makeTicks();
},makeMinorTicks:function(){
var _2503=new _24e1.m();
if(this.ticks.size()>1){
for(var _2504=0,_2505=this.spans,_2506=_2505.size();_2504<_2506;++_2504){
var span=_2505.get(_2504);
span.addMinorTicks(_2503);
}
if(this.reverse){
this.reverseTicks(_2503);
}
}
return _2503;
},reverseTicks:function(_2507){
for(var _2508=0,_2509=_2507.size();_2508<_2509;++_2508){
var tick=_2507.get(_2508);
tick.location=1-tick.location;
}
},makeTicks:function(){
var _250a=new _24e1.m();
for(var _250b=0,_250c=this.spans,_250d=_250c.size();_250b<_250d;++_250b){
var span=_250c.get(_250b);
span.addTicks(_250a,false);
}
if(this.reverse){
this.reverseTicks(_250a);
}
if(this.localScale==true){
this.ticksForData=_250a;
}
return _250a;
},makeTicksForSpans:function(spans){
var _250e=new _24e1.m();
for(var _250f=0,_2510=spans.size();_250f<_2510;++_250f){
var span=spans.get(_250f);
span.addTicks(_250e,false);
}
if(this.reverse){
this.reverseTicks(_250e);
}
if(this.localScale==true){
this.ticksForData=_250e;
}
return _250e;
},computeTickCountForExtent:function(_2511){
var sum=0;
for(var _2512=0,_2513=this.spans,_2514=_2513.size();_2512<_2514;++_2512){
var span=_2513.get(_2512);
span.setupForExtent(_2511);
sum+=span.computeTickCount();
}
return sum;
},getTicks:function(){
return this.ticks;
},getTicksForSpans:function(spans){
return this.makeTicksForSpans(spans);
},getAllTicks:function(){
if(this.allTicks!=null){
return this.allTicks;
}
this.makeAllTicks();
return this.allTicks;
},makeAllTicks:function(){
this.allTicks=new _24e1.m();
for(var _2515=0,_2516=this.spans,_2517=_2516.size();_2515<_2517;++_2515){
var span=_2516.get(_2515);
span.addAllTicks(this.allTicks,false);
}
if(this.reverse){
this.reverseTicks(this.allTicks);
}
},toZeroOne:function(value,unit,_2518){
if(value==null){
return null;
}
if(this.isSpanToUseValid(unit,_2518)){
var _2519=this.spans.get(_2518).toZeroOne(value,unit,false);
if(_2519!=null){
return this.reverse?(1-_2519):_2519;
}
return null;
}
var _251a=this.getSpanMatchingValue(value,unit);
if(_251a!=null){
var _2519=_251a.toZeroOne(value,unit,false);
if(_2519!=null){
return this.reverse?1-_2519:_2519;
}
}
return null;
},isSpanToUseValid:function(unit,_251b){
if(_251b==null){
return false;
}
if(_251b<0||_251b>=this.spans.size()){
throw new _24e5.m(null,_24e6.m.SPEC_INVALID_VALUE,"span index \""+_251b+"\" does not exist",null,null,null,null);
}
if(this.spans.get(_251b).isApplicable(unit)){
return true;
}
throw new _24e5.m(this.spec.toString(),_24e6.m.SPEC_INVALID_VALUE,"span unit \""+this.spans.get(_251b).inputUnit+"\" does not match data unit \""+unit.name+"\"",null,null,null,null);
},getSpanOrigin:function(value,unit,_251c){
if(value==null){
return this.reverse?1:0;
}
if(this.isSpanToUseValid(unit,_251c)){
var _251d=this.spans.get(_251c).toZeroOne(0,unit,false);
if(_251d!=null){
return this.reverse?(1-_251d):_251d;
}
return this.reverse?1:0;
}
var _251e=this.getSpanMatchingValue(value,unit);
if(_251e!=null){
var _251d=_251e.toZeroOne(0,null,false);
if(_251d!=null){
return this.reverse?1-_251d:_251d;
}
}
return this.reverse?1:0;
},getSpanMatchingValue:function(value,unit){
var _251f=null;
var diff=null;
for(var _2520=0,_2521=this.spans,_2522=_2521.size();_2520<_2522;++_2520){
var span=_2521.get(_2520);
if(span.isUnitApplicable(value,unit)){
var diff1=0;
var _2523=(unit!=null)?_24e7.m.convert(value,unit,span.inputUnit):value;
var _2524=span.getAdjustedInputRange();
if(_2524.contains(_2523)){
return span;
}else{
if(_2523<_2524.min){
diff1=_2524.min-_2523;
}else{
if(_2523>_2524.max){
diff1=_2523-_2524.max;
}
}
}
if(_251f==null){
_251f=span;
diff=diff1;
}else{
if(diff1<diff){
diff=diff1;
_251f=span;
}
}
}
}
return _251f;
},toZeroOneClamped:function(value,unit){
if(value==null){
return null;
}
for(var _2525=0,_2526=this.spans,_2527=_2526.size();_2525<_2527;++_2525){
var span=_2526.get(_2525);
var p=span.toZeroOne(value,unit,true);
if(p!=null){
return this.reverse?1-p:p;
}
}
return null;
},dimensionValueToDataValue:function(value,_2528){
var _2529=value/_2528;
if(this.reverse){
_2529=1-_2529;
}
for(var _252a=0,_252b=this.spans,_252c=_252b.size();_252a<_252c;++_252a){
var span=_252b.get(_252a);
if(span.outRange.contains(_2529)){
return span.zeroOneToDataValue(_2529);
}
}
return null;
},useValuesFrom:function(base){
var _252d=new _24e1.m();
if(base.spans.size()<1){
return;
}
if(this.spans.isEmpty()){
this.spans=base.spans;
}else{
for(var _252e=0,_252f=this.spans,_2530=_252f.size();_252e<_2530;++_252e){
var span=_252f.get(_252e);
var _2531=base.getSpanMatching(span.inputUnit);
if(_2531!=null){
span.getUndefinedParametersFrom(_2531);
_2531.isSpanMatching=true;
_252d.add(span);
}else{
span.getUndefinedFromMismatched(base.spans);
_252d.add(span);
}
}
for(var _2532=0,_2533=base.spans,_2534=_2533.size();_2532<_2534;++_2532){
var _2535=_2533.get(_2532);
if(!_2535.isSpanMatching){
_252d.add(_2535);
}
}
this.spans=_252d;
}
},getSpanMatching:function(unit){
for(var _2536=0,_2537=this.spans,_2538=_2537.size();_2536<_2538;++_2536){
var span=_2537.get(_2536);
if(span.isApplicable(unit)){
return span;
}
}
return null;
},getBase:function(){
for(var _2539=0,_253a=this.spans,_253b=_253a.size();_2539<_253b;++_2539){
var span=_253a.get(_2539);
var p=span.getBase(this.reverse);
if(p!=null){
return p;
}
}
return 0;
},getCategoryCount:function(){
var count=0;
if(this.spans.get(0) instanceof _24e8.m){
var _253c=this.spans.get(0);
count=_253c.getCategoryCount();
}
return count;
},getScaleCategoryIndex:function(_253d,unit){
var _253e=this.getSpanMatching(unit);
if(_253e==null){
return null;
}
var span=_253e;
var index=span.getScaleIndexFromFieldIndex(_253d);
if(this.reverse&&index!=null){
index=span.getCategoryCount()-1-index;
}
return index;
},getFieldCategoryIndex:function(_253f,unit){
var _2540=this.getSpanMatching(unit);
if(_2540==null){
return null;
}
var span=_2540;
if(this.reverse){
_253f=span.getCategoryCount()-1-_253f;
}
var index=span.getFieldIndexFromScaleIndex(_253f);
return index;
},getTicksForData:function(){
if(this.ticksForData==null){
this.ticksForData=new _24e1.m();
for(var _2541=0,_2542=this.spans,_2543=_2542.size();_2541<_2543;++_2541){
var span=_2542.get(_2541);
span.addTicks(this.ticksForData,true);
}
}
return this.ticksForData;
},includeValue:function(value){
if(this.spans.isEmpty()||this.isCategorical()){
return;
}
var span=this.spans.get(0);
span.inputNumDomain=span.inputNumDomain.unionValue(value);
},defineSpanOutputRanges:function(){
if(this.spans.isEmpty()){
return;
}
var total=0;
for(var _2544=0,_2545=this.spans,_2546=_2545.size();_2544<_2546;++_2544){
var s=_2545.get(_2544);
total+=s.getGoodDisplaySpanSize();
}
total+=this.spans.size()-1;
var _2547=0;
for(var _2548=0,_2549=this.spans,_254a=_2549.size();_2548<_254a;++_2548){
var s=_2549.get(_2548);
var size=s.getGoodDisplaySpanSize();
s.outRange=new _24e9.m(_2547,_2547+size/total);
_2547=_2547+(size+1)/total;
}
},getCategoryIndexFromZeroOne:function(_254b,unit){
var _254c=this.getSpanMatching(unit);
if(_254c==null){
return null;
}
var span=_254c;
var index=span.getIndexFromZeroOne(_254b);
if(this.reverse&&index!=null){
index=span.getCategoryCount()-1-index;
}
return index;
},isCategorical:function(){
return this.spans.size()==1&&this.spans.get(0).getCategoryCount()>0;
},getSpans:function(){
return this.spans;
},makeSpanGroups:function(){
var _254d=new _24e1.m();
var _254e=new _24e1.m();
var _254f=new _24e1.m();
for(var i=0;i<this.spans.size();++i){
var span=this.spans.get(i);
span.addToGroup(_254e,_254f);
}
_254d.add(_254e);
_254d.add(_254f);
return _254d;
},getSpec:function(){
return this.spec;
},isLocalUndefined:function(){
return this.localScale==null||(this.spec!=null&&this.spec.local==null);
}});
Scale.getDefaultElementSizeWithNoScaleInfo=function(full){
return Math.max(1,Math.round(full*0.03));
};
return Scale;
});
},"com/ibm/vis/interaction/EffectTarget":function(){
define("com/ibm/vis/interaction/EffectTarget",["com/ibm/init/fork!../engine/internal/nativeImpl/Map","com/ibm/init/fork!../engine/internal/nativeImpl/List","com/ibm/init/fork!../engine/internal/nativeImpl/BasicFactory","com/ibm/init/fork!../engine/internal/nativeImpl/IntegerUtil","com/ibm/init/statics","dojo/_base/declare"],function(_2550,_2551,_2552,_2553,_2554,_2555){
var _2556=_2555("com.ibm.vis.interaction.EffectTarget",null,{targets:null,constructor:function(){
this.targets=new _2550.m(4);
},setTarget:function(type,index){
var _2557=new _2551.m(1);
_2557.add(index);
this.targets.put(type,_2557);
},setTargets:function(type,_2558){
if(_2558==null){
this.targets.remove(type);
}else{
var _2559=new _2551.m(1);
for(var _255a=0,_255b=_2558.length;_255a<_255b;++_255a){
var i=_2558[_255a];
_2559.add(i);
}
this.targets.put(type,_2559);
}
},getTypes:function(){
return this.targets.keySet().toArray(new Array(this.targets.size()));
},getIndexes:function(type){
return this.targets.get(type).toArray();
},affectsId:function(id){
var _255c=0;
var types=this.getTypes();
for(var _255d=0,_255e=types.length;_255d<_255e;++_255d){
var type=types[_255d];
var _255f=_2556.getItemIndex(id,type);
if(_255f!=-1){
for(var _2560=0,_2561=this.getIndexes(type),_2562=_2561.length;_2560<_2562;++_2560){
var i=_2561[_2560];
if(i==-1||i==_255f){
_255c++;
break;
}
}
}
}
return _255c==types.length;
}});
_2556.getItemIndex=function(id,type){
var ePos=id.indexOf(type);
if(ePos!=-1){
var eEnd=-1;
ePos+=type.CPVisEngineLength();
for(var i=ePos,len=id.CPVisEngineLength();i<len;++i){
var ch=id.charAt(i);
if(!_2552.m.isNumerical(ch)){
break;
}
eEnd=i;
}
if(eEnd!=-1){
return _2553.m.parseInt(id.substring(ePos,eEnd+1),10);
}
}
return -1;
};
_2554.add("com/ibm/vis/interaction/EffectTarget",["com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/nativeImpl/IntegerUtil"],function(){
_2556.ANY=-1;
_2556.FACET="F";
_2556.GRAMMAR="G";
_2556.ELEMENT="E";
_2556.LEGEND="L";
});
return _2556;
});
},"com/ibm/vis/engine/internal/ColorNew":function(){
define("com/ibm/vis/engine/internal/ColorNew",["com/ibm/init/fork!./nativeImpl/Double","com/ibm/init/fork!./nativeImpl/WebEngineException","com/ibm/init/fork!./nativeImpl/BasicFactory","com/ibm/init/fork!./util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_2563,_2564,_2565,_2566,_2567,_2568){
var _2569=_2568("com.ibm.vis.engine.internal.ColorNew",null,{alpha:0,red:0,green:0,blue:0,hue:0,saturation:0,lightness:0,value:0,dAlpha:0,dSaturation:0,dLightness:0,dValue:0,needsHSLV:false,computedAlpha:0,constructor:function(red,green,blue,alpha){
this.setRed(red);
this.setGreen(green);
this.setBlue(blue);
this.setAlpha(alpha);
this.hue=NaN;
this.saturation=NaN;
this.lightness=NaN;
this.value=NaN;
this.dAlpha=NaN;
this.dSaturation=NaN;
this.dLightness=NaN;
this.dValue=NaN;
},isEmpty:function(){
if(!_2563.m.isNaN(this.red)){
return false;
}
if(!_2563.m.isNaN(this.blue)){
return false;
}
if(!_2563.m.isNaN(this.green)){
return false;
}
if(!_2563.m.isNaN(this.alpha)){
return false;
}
if(!_2563.m.isNaN(this.computedAlpha)){
return false;
}
if(!_2563.m.isNaN(this.dAlpha)){
return false;
}
if(!_2563.m.isNaN(this.dLightness)){
return false;
}
if(!_2563.m.isNaN(this.dSaturation)){
return false;
}
if(!_2563.m.isNaN(this.dValue)){
return false;
}
if(!_2563.m.isNaN(this.hue)){
return false;
}
if(!_2563.m.isNaN(this.lightness)){
return false;
}
if(!_2563.m.isNaN(this.saturation)){
return false;
}
if(!_2563.m.isNaN(this.value)){
return false;
}
return true;
},getRGBA:function(){
var RGBA=this.buildRGBA();
if(this.needsHSLV){
RGBA=this.initHSLV(RGBA);
}
return RGBA;
},initHSLV:function(RGBA){
var _256a=RGBA;
var HSV=this.convertRGBToHSV(_256a);
HSV=this.overrideHSVWithFieldValues(HSV);
HSV=this.applyModifiersToHSV(HSV);
if(HSV[0]!=HSV[0]){
HSV[1]=0;
HSV[1]=0;
}
if(!_2563.m.isNaN(this.getLightness())||!_2563.m.isNaN(this.getdLightness())){
var HSL=this.convertHSVToHSL(HSV);
HSL[2]=this.overrideValue(HSL[2],this.getLightness());
HSL=this.applyLightnessModifier(HSL);
_256a=this.convertHSLToRGBA(HSL);
}else{
_256a=this.convertHSVToRGB(HSV);
}
return _256a;
},setAlpha:function(_256b){
var _256c=this.clampToZeroOne(_256b);
if(this.alpha==_256c){
return;
}
this.alpha=_256c;
this.computedAlpha=this.alpha;
},setRed:function(r){
var _256d=this.clampRGBToLegalRange(r);
if(this.red==_256d){
return;
}
this.red=_256d;
},setGreen:function(g){
var _256e=this.clampRGBToLegalRange(g);
if(this.green==_256e){
return;
}
this.green=_256e;
},setBlue:function(b){
var _256f=this.clampRGBToLegalRange(b);
if(this.blue==_256f){
return;
}
this.blue=_256f;
},setHue:function(h){
if(this.hue==h){
return;
}
this.hue=h;
this.needsHSLV=true;
},setSaturation:function(s){
if(this.saturation==s){
return;
}
this.saturation=s;
this.needsHSLV=true;
},setLightness:function(l){
if(this.lightness==l){
return;
}
this.lightness=l;
this.needsHSLV=true;
},setValue:function(v){
if(this.value==v){
return;
}
this.value=v;
this.needsHSLV=true;
},setdAlpha:function(_2570){
var _2571=this.clampModifierToLegalRange(_2570);
if(this.dAlpha==_2571){
return;
}
this.dAlpha=_2571;
},setdSaturation:function(_2572){
var _2573=this.clampModifierToLegalRange(_2572);
if(this.dSaturation==_2573){
return;
}
this.dSaturation=_2573;
this.needsHSLV=true;
},setdLightness:function(_2574){
var _2575=this.clampModifierToLegalRange(_2574);
if(this.dLightness==_2575){
return;
}
this.dLightness=_2575;
this.needsHSLV=true;
},setdValue:function(_2576){
var _2577=this.clampModifierToLegalRange(_2576);
if(this.dValue==_2577){
return;
}
this.dValue=_2577;
this.needsHSLV=true;
},getAlpha:function(){
return this.alpha;
},getRed:function(){
return this.red;
},getGreen:function(){
return this.green;
},getBlue:function(){
return this.blue;
},getHue:function(){
return this.hue;
},getSaturation:function(){
return this.saturation;
},getLightness:function(){
return this.lightness;
},getValue:function(){
return this.value;
},getdAlpha:function(){
return this.dAlpha;
},getdSaturation:function(){
return this.dSaturation;
},getdLightness:function(){
return this.dLightness;
},getdValue:function(){
return this.dValue;
},clampToZeroOne:function(_2578){
if(_2578>=0&&_2578<=1){
return _2578;
}else{
if(_2578<0){
return 0;
}else{
if(_2578>1){
return 1;
}else{
return NaN;
}
}
}
},clampRGBToLegalRange:function(color){
if(color>=0&&color<=255){
return color;
}else{
if(_2563.m.isNaN(color)){
return color;
}else{
throw new _2564.m("Color parameter outside of expected range: 0<=RGB<=255");
}
}
},clampModifierToLegalRange:function(_2579){
if(_2579>=-1&&_2579<=1){
return _2579;
}else{
if(_2579<-1){
return -1;
}else{
if(_2563.m.isNaN(_2579)){
return _2579;
}else{
return 1;
}
}
}
},buildAlpha:function(){
var _257a=this.computedAlpha;
if(!_2563.m.isNaN(this.dAlpha)){
_257a=this.overrideValue(1,this.alpha)+this.overrideValue(0,this.dAlpha);
_257a=this.clampToZeroOne(_257a);
this.computedAlpha=_257a;
}
if(_257a!=_257a){
_257a=1;
}
return _257a;
},buildRGBA:function(){
var R=(this.red!=this.red)?0:this.red;
var G=(this.green!=this.green)?0:this.green;
var B=(this.blue!=this.blue)?0:this.blue;
return [R,G,B,this.buildAlpha()];
},convertRGBToHSV:function(RGB){
var _257b=Array.create([3],0);
var r=RGB[0];
var g=RGB[1];
var b=RGB[2];
var _257c;
var _257d;
var _257e;
var cmax=(r>g)?r:g;
if(b>cmax){
cmax=b;
}
var cmin=(r<g)?r:g;
if(b<cmin){
cmin=b;
}
_257e=cmax/255;
if(cmax!=0){
_257d=(cmax-cmin)/cmax;
}else{
_257d=0;
}
if(_257d==0){
_257c=NaN;
}else{
var redc=(cmax-r)/(cmax-cmin);
var _257f=(cmax-g)/(cmax-cmin);
var bluec=(cmax-b)/(cmax-cmin);
if(r==cmax){
_257c=bluec-_257f;
}else{
if(g==cmax){
_257c=2+redc-bluec;
}else{
_257c=4+_257f-redc;
}
}
_257c=_257c/6;
if(_257c<0){
_257c=_257c+1;
}
}
_257b[0]=_257c;
_257b[1]=_257d;
_257b[2]=_257e;
return [_257b[0],_257b[1],_257b[2]];
},convertHSVToRGB:function(HSV){
var _2580=HSV[0];
var _2581=HSV[1];
var _2582=HSV[2];
var r=0,g=0,b=0;
if(_2581==0){
r=g=b=(_2582*255+0.5);
}else{
var h=(_2580-Math.floor(_2580))*6;
var f=h-Math.floor(h);
var p=_2582*(1-_2581);
var q=_2582*(1-_2581*f);
var t=_2582*(1-(_2581*(1-f)));
if(Math.floor(h)==0){
r=(_2582*255+0.5);
g=(t*255+0.5);
b=(p*255+0.5);
}else{
if(Math.floor(h)==1){
r=(q*255+0.5);
g=(_2582*255+0.5);
b=(p*255+0.5);
}else{
if(Math.floor(h)==2){
r=(p*255+0.5);
g=(_2582*255+0.5);
b=(t*255+0.5);
}else{
if(Math.floor(h)==3){
r=(p*255+0.5);
g=(q*255+0.5);
b=(_2582*255+0.5);
}else{
if(Math.floor(h)==4){
r=(t*255+0.5);
g=(p*255+0.5);
b=(_2582*255+0.5);
}else{
if(Math.floor(h)==5){
r=(_2582*255+0.5);
g=(p*255+0.5);
b=(q*255+0.5);
}
}
}
}
}
}
}
var R=Math.floor(r);
var G=Math.floor(g);
var B=Math.floor(b);
var _2583=4278190080|(R<<16)|(G<<8)|(B<<0);
var _2584=(_2583>>16)&255;
var _2585=(_2583>>8)&255;
var _2586=(_2583>>0)&255;
return [_2584,_2585,_2586,this.buildAlpha()];
},convertHSLToRGBA:function(HSL){
var h=HSL[0];
var s=HSL[1];
var l=HSL[2];
var m2=(l<=0.5)?l*(s+1):(l+s-l*s);
var m1=l*2-m2;
var r=Math.round(this.hue2rgb(m1,m2,h+1/3)*255);
var g=Math.round(this.hue2rgb(m1,m2,h)*255);
var b=Math.round(this.hue2rgb(m1,m2,h-1/3)*255);
return [r,g,b,this.buildAlpha()];
},convertHSVToHSL:function(HSV){
var h=HSV[0];
var s=HSV[1];
var v=HSV[2];
var hh=h;
var ll=0;
var ss=0;
if(v!=0){
ll=(2-s)*v;
ss=s*v;
if(ss!=0){
if(ll<=1){
ss/=ll;
}else{
ss/=2-(ll);
}
}
ll/=2;
}else{
ss=HSV[1];
}
return [hh,ss,ll];
},overrideHSVWithFieldValues:function(_2587){
var HSV=Array.create([_2587.length],0);
HSV[0]=this.overrideValue(_2587[0],this.getHue());
HSV[1]=this.overrideValue(_2587[1],this.getSaturation());
HSV[2]=this.overrideValue(_2587[2],this.getValue());
return HSV;
},overrideValue:function(_2588,field){
if(!_2563.m.isNaN(field)){
return field;
}
return _2588;
},applyLightnessModifier:function(HSL){
var _2589=this.overrideValue(0,this.getdLightness());
var _258a=this.clampToZeroOne(HSL[2]+_2589);
return [HSL[0],HSL[1],_258a];
},applyModifiersToHSV:function(HSV){
var _258b=this.overrideValue(0,this.getdSaturation());
var _258c=this.overrideValue(0,this.getdValue());
var _258d=this.clampToZeroOne(HSV[1]+_258b);
var _258e=this.clampToZeroOne(HSV[2]+_258c);
return [HSV[0],_258d,_258e];
},hue2rgb:function(m1,m2,h){
var _258f=h;
if(_258f<0){
_258f=_258f+1;
}
if(_258f>1){
_258f=_258f-1;
}
if(_258f*6<1){
return m1+(m2-m1)*_258f*6;
}
if(_258f*2<1){
return m2;
}
if(_258f*3<2){
return m1+(m2-m1)*(2/3-_258f)*6;
}
return m1;
},toJSON:function(){
var _2590=_2565.m.createJSONObject();
var RGBA=this.getRGBA();
_2565.m.put(_2590,"r",_2566.m.r3(RGBA[0]));
_2565.m.put(_2590,"g",_2566.m.r3(RGBA[1]));
_2565.m.put(_2590,"b",_2566.m.r3(RGBA[2]));
if(RGBA[3]<0.9995){
_2565.m.put(_2590,"a",_2566.m.r3(RGBA[3]));
}
return _2590;
},cloneColor:function(){
var clone=new _2569(this.red,this.green,this.blue,this.alpha);
clone.hue=this.hue;
clone.saturation=this.saturation;
clone.lightness=this.lightness;
clone.value=this.value;
clone.dAlpha=this.dAlpha;
clone.dSaturation=this.dSaturation;
clone.dLightness=this.dLightness;
clone.dValue=this.dValue;
clone.needsHSLV=this.needsHSLV;
return clone;
},combineWithColor:function(color){
if(color!=null){
var _2591=color.getAlpha();
var red=color.getRed();
var green=color.getGreen();
var blue=color.getBlue();
var hue=color.getHue();
var _2592=color.getSaturation();
var _2593=color.getLightness();
var value=color.getValue();
var _2594=color.getdAlpha();
var _2595=color.getdSaturation();
var _2596=color.getdLightness();
var _2597=color.getdValue();
if(_2591==_2591){
this.setAlpha(_2591);
}
if(red==red){
this.setRed(red);
}
if(green==green){
this.setGreen(green);
}
if(blue==blue){
this.setBlue(blue);
}
if(hue==hue){
this.setHue(hue);
}
if(_2592==_2592){
this.setSaturation(_2592);
}
if(_2593==_2593){
this.setLightness(_2593);
}
if(value==value){
this.setValue(value);
}
if(_2594==_2594){
this.setdAlpha(_2594);
}
if(_2595==_2595){
this.setdSaturation(_2595);
}
if(_2596==_2596){
this.setdLightness(_2596);
}
if(_2597==_2597){
this.setdValue(_2597);
}
}
},convertToJSON:function(){
var _2598=_2565.m.createJSONObject();
_2565.m.put(_2598,"a",this.getAlpha());
_2565.m.put(_2598,"r",this.getRed());
_2565.m.put(_2598,"g",this.getGreen());
_2565.m.put(_2598,"b",this.getBlue());
_2565.m.put(_2598,"h",this.getHue());
_2565.m.put(_2598,"s",this.getSaturation());
_2565.m.put(_2598,"l",this.getLightness());
_2565.m.put(_2598,"v",this.getValue());
_2565.m.put(_2598,"dAlpha",this.getdAlpha());
_2565.m.put(_2598,_2569.D_SATURATION,this.getdSaturation());
_2565.m.put(_2598,"dLightness",this.getdLightness());
_2565.m.put(_2598,"dValue",this.getdValue());
return _2598;
},interpolateWithColor:function(_2599,v){
var r=this.getInterpolatedComponent(this.getRed(),_2599.getRed(),v,true);
var g=this.getInterpolatedComponent(this.getGreen(),_2599.getGreen(),v,true);
var b=this.getInterpolatedComponent(this.getBlue(),_2599.getBlue(),v,true);
var h=this.getInterpolatedComponent(this.getHue(),_2599.getHue(),v,false);
var s=this.getInterpolatedComponent(this.getSaturation(),_2599.getSaturation(),v,false);
var l=this.getInterpolatedComponent(this.getLightness(),_2599.getLightness(),v,false);
var val=this.getInterpolatedComponent(this.getValue(),_2599.getValue(),v,false);
var _259a=this.getInterpolatedComponent(this.getdAlpha(),_2599.getdAlpha(),v,false);
var _259b=this.getInterpolatedComponent(this.getdLightness(),_2599.getdLightness(),v,false);
var _259c=this.getInterpolatedComponent(this.getdSaturation(),_2599.getdSaturation(),v,false);
var _259d=this.getInterpolatedComponent(this.getdValue(),_2599.getdValue(),v,false);
var _259e=this.getAlpha();
var _259f=_2599.getAlpha();
var a=NaN;
if(!_2563.m.isNaN(_259e)||!_2563.m.isNaN(_259f)){
if(_2563.m.isNaN(_259e)){
_259e=1;
}
if(_2563.m.isNaN(_259f)){
_259f=1;
}
a=this.getInterpolatedComponent(_259e,_259f,v,false);
}
var _25a0=new _2569(r,g,b,a);
_25a0.setdAlpha(_259a);
_25a0.setdLightness(_259b);
_25a0.setdSaturation(_259c);
_25a0.setdValue(_259d);
_25a0.setHue(h);
_25a0.setLightness(l);
_25a0.setSaturation(s);
_25a0.setValue(val);
return _25a0;
},getInterpolatedComponent:function(_25a1,_25a2,v,isRGB){
var _25a3=0;
if(!_2563.m.isNaN(_25a1)&&!_2563.m.isNaN(_25a2)){
_25a3=this.interpolate(_25a1,_25a2,v);
if(isRGB){
_25a3=Math.round(_25a3);
}else{
_25a3=Math.round(_25a3*100)/100;
}
}else{
if(_2563.m.isNaN(_25a1)){
_25a3=_25a2;
}else{
_25a3=_25a1;
}
}
return _25a3;
},interpolate:function(a,b,v){
return (a*(1-v)+b*v);
}});
_2567.add("com/ibm/vis/engine/internal/ColorNew",[],function(){
_2569.RED="r";
_2569.GREEN="g";
_2569.BLUE="b";
_2569.ALPHA="a";
_2569.VALUE="v";
_2569.LIGHTNESS="l";
_2569.SATURATION="s";
_2569.HUE="h";
_2569.D_ALPHA="dAlpha";
_2569.D_LIGHTNESS="dLightness";
_2569.D_SATURATION="dSaturation";
_2569.D_VALUE="dValue";
});
return _2569;
});
},"com/ibm/vis/engine/internal/grammar/units/Measure":function(){
define("com/ibm/vis/engine/internal/grammar/units/Measure",["com/ibm/init/fork!./MeasureType","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_25a4,_25a5,_25a6,_25a7){
var _25a8=_25a7("com.ibm.vis.engine.internal.grammar.units.Measure",null,{type:null,categorical:false,zeroMeaningful:false,units:null,constructor:function(type,_25a9,_25aa){
this.type=type;
this.categorical=_25a9;
this.zeroMeaningful=_25aa;
this.units=new _25a5.m();
},toString:function(){
return this.type.toString();
},isGeneric:function(){
return this.type==_25a8.NUMERIC.type||this.type==_25a8.CATEGORY.type;
},matches:function(_25ab){
if(this.type==_25ab.type){
return true;
}
if(this.type==_25a8.NUMERIC.type&&!_25ab.categorical){
return true;
}
if(_25ab.type==_25a8.NUMERIC.type&&!this.categorical){
return true;
}
if(this.type==_25a8.CATEGORY.type&&_25ab.categorical){
return true;
}
if(_25ab.type==_25a8.CATEGORY.type&&this.categorical){
return true;
}
return false;
}});
_25a6.add("com/ibm/vis/engine/internal/grammar/units/Measure",["com/ibm/vis/engine/internal/grammar/units/MeasureType"],function(){
_25a8.LENGTH=new _25a8(_25a4.m.LENGTH,false,true);
_25a8.MASS=new _25a8(_25a4.m.MASS,false,true);
_25a8.COUNT=new _25a8(_25a4.m.COUNT,false,true);
_25a8.TIME=new _25a8(_25a4.m.TIME,false,false);
_25a8.DATETIME=new _25a8(_25a4.m.DATETIME,false,false);
_25a8.TEMPERATURE=new _25a8(_25a4.m.TEMPERATURE,false,true);
_25a8.ANGLE=new _25a8(_25a4.m.ANGLE,false,false);
_25a8.CURRENCY=new _25a8(_25a4.m.CURRENCY,false,true);
_25a8.CATEGORY=new _25a8(_25a4.m.CATEGORY,true,false);
_25a8.ORDINAL=new _25a8(_25a4.m.ORDINAL,true,false);
_25a8.NUMERIC=new _25a8(_25a4.m.NUMERIC,false,true);
_25a8.PT_IN=0.0138888889;
_25a8.PC_IN=0.1666666667;
_25a8.CM_IN=0.3937007874;
_25a8.MM_IN=0.0393700787;
});
return _25a8;
});
},"com/ibm/vis/engine/internal/oldlegendlayout/OldContentLayoutFactory":function(){
define("com/ibm/vis/engine/internal/oldlegendlayout/OldContentLayoutFactory",["com/ibm/init/fork!./OldFlowLayout","com/ibm/init/fork!./OldGridLayout","com/ibm/init/fork!./OldFlow","com/ibm/init/statics","dojo/_base/declare"],function(_25ac,_25ad,_25ae,_25af,_25b0){
var _25b1=_25b0("com.ibm.vis.engine.internal.oldlegendlayout.OldContentLayoutFactory",null,{constructor:function(){
}});
_25b1.makeLayout=function(_25b2){
if(_25b2!=null){
var flow=_25b1.getFlow(_25b2);
var rows=_25b1.getRows(_25b2);
var _25b3=_25b1.getColumns(_25b2);
if(rows==null&&_25b3==null){
return new _25ac.m(flow);
}
var grid=new _25ad.m(flow,rows,_25b3);
if(rows==null){
grid.setAdjustHeight(false);
}
if(_25b3==null){
grid.setAdjustWidth(false);
}
return grid;
}
return new _25ac.m(_25ae.m.vertical);
};
_25b1.getFlow=function(_25b4){
var flow=_25b4.flow;
if(flow==null){
return _25ae.m.vertical;
}
return _25ae.m.valueOf(flow);
};
_25b1.getRows=function(_25b5){
return _25b1.getIntegerValue(_25b5.rows);
};
_25b1.getColumns=function(_25b6){
return _25b1.getIntegerValue(_25b6.columns);
};
_25b1.getIntegerValue=function(_25b7){
if(_25b7==null){
return null;
}
return Math.floor(_25b7);
};
return _25b1;
});
},"com/ibm/vis/engine/internal/nativeImpl/render/CanvasExt":function(){
define("com/ibm/vis/engine/internal/nativeImpl/render/CanvasExt",["dojo/_base/declare","dojox/gfx","dojo/_base/lang","dojo/_base/array","../BasicFactory","../../data/Range","../../struct/Bezier","dojo/has","dojo/_base/sniff"],function(_25b8,g,lang,_25b9,BF,Range,_25ba,has){
if(g.renderer=="canvasWithEvents"||g.renderer=="canvas"){
var _25bb=g.renderer=="canvas"?g.canvas:g.canvasWithEvents;
var _25bc={solid:"none",shortdash:[4,1],shortdot:[1,1],shortdashdot:[4,1,1,1],shortdashdotdot:[4,1,1,1,1,1],dot:[1,3],dash:[4,3],longdash:[8,3],dashdot:[4,3,1,3],longdashdot:[8,3,1,3],longdashdotdot:[8,3,1,3,1,3]};
lang.extend(_25bb.Shape,{setEffect:function(_25bd,shape){
this.canvasStyleNode=new Object();
if(_25bd.shadow){
this.canvasStyleNode.shadowOffsetX=_25bd.shadow.dx;
this.canvasStyleNode.shadowOffsetY=_25bd.shadow.dy;
this.canvasStyleNode.shadowBlur=2*_25bd.shadow.stdDev;
this.canvasStyleNode.shadowColor=BF.toRGBAColor(_25bd.shadow.color);
}
if(_25bd.glow){
this.canvasStyleNode.shadowOffsetX=0;
this.canvasStyleNode.shadowOffsetY=0;
this.canvasStyleNode.shadowColor=BF.toRGBAColor(_25bd.glow.color);
this.canvasStyleNode.shadowBlur=_25bd.glow.stdDev*2;
}
},_renderStroke:function(ctx,apply){
var s=this.strokeStyle;
if(s){
var dash="solid";
if(this.strokeStyle&&this.strokeStyle.style){
dash=this.strokeStyle.style.toLowerCase();
}
if(dash!="solid"&&_25bc[dash]&&has("mozilla")){
var _25be=_25bc[dash].concat();
for(var i=0;i<_25be.length;i++){
_25be[i]=_25be[i]*s.width;
}
ctx.mozDash=_25be;
}
ctx.strokeStyle=s.color.toString();
ctx.lineWidth=s.width;
ctx.lineCap=s.cap;
if(typeof s.join=="number"){
ctx.lineJoin="miter";
ctx.miterLimit=s.join;
}else{
ctx.lineJoin=s.join;
}
if(apply){
ctx.stroke();
}
}else{
if(!apply){
ctx.strokeStyle="rgba(0,0,0,0.0)";
}
}
},_raveRenderLineStyle:function(ctx,dash,x1,y1,x2,y2){
this._raveCurrentX=x1;
this._raveCurrentY=y1;
this._raveIsVertLine=this._raveIsVerticalLine(x1,x2);
this._raveIsHorizLine=this._raveIsHorizontalLine(y1,y2);
this._raveCachedQuadRoots=new Object();
var done=false;
while(!done){
for(var i=0;i<_25bc[dash].length&&!done;i++){
var _25bf=(i%2!=0);
var _25c0=_25bc[dash][i]*this.strokeStyle.width;
done=this._raveRenderDashedLineSegment(ctx,_25c0,_25bf,x1,y1,x2,y2);
}
}
},_raveRenderDashedArc:function(ctx,dash,cx,cy,_25c1,_25c2,_25c3,_25c4){
var _25c5=_25c3-_25c2;
if(_25c5<=0){
return;
}
var _25c6=_25c1*_25c5;
var _25c7=_25c6;
var done=false;
var _25c8=_25c2;
var _25c9=_25c8;
while(!done){
for(var i=0;i<_25bc[dash].length&&!done;i++){
var _25ca=(i%2!=0);
var _25cb=_25bc[dash][i]*this.strokeStyle.width;
if(_25c7<_25cb){
done=true;
_25cb=_25c7;
}
_25c7=_25c7-_25cb;
var dphi=(_25cb)/_25c1;
if(_25c4){
_25c9=_25c8+dphi;
}else{
_25c9=_25c8-dphi;
}
this._raveRenderDashedArcSegment(ctx,_25cb,_25ca,cx,cy,_25c1,_25c8,_25c9,_25c4);
_25c8=_25c9;
}
}
},_raveRenderDashedArcSegment:function(ctx,_25cc,_25cd,cx,cy,_25ce,_25cf,_25d0,_25d1){
var dx=_25ce*Math.cos(_25d0);
var dy=_25ce*Math.sin(_25d0);
if(_25cd){
ctx.moveTo(cx+dx,cy+dy);
}else{
ctx.arc(cx,cy,_25ce,_25cf,_25d0,!_25d1);
}
},_raveIsVerticalLine:function(x1,x2){
var run=x2-x1;
if(Math.abs(run-0)<0.000001){
return true;
}
return false;
},_raveIsHorizontalLine:function(y1,y2){
var rise=y2-y1;
if(Math.abs(rise-0)<0.000001){
return true;
}
return false;
},_raveRenderDashedHorizontalLineSegment:function(ctx,_25d2,_25d3,x2){
var diff=x2-this._raveCurrentX;
var done=false;
if(Math.abs(diff)<=_25d2){
done=true;
}
var _25d2=Math.min(Math.abs(diff),_25d2);
var newX=diff>0?this._raveCurrentX+_25d2:this._raveCurrentX-_25d2;
if(_25d3){
ctx.moveTo(newX,this._raveCurrentY);
}else{
ctx.lineTo(newX,this._raveCurrentY);
}
this._raveCurrentX=newX;
return done;
},_raveRenderDashedVerticalLineSegment:function(ctx,_25d4,_25d5,y2){
var diff=y2-this._raveCurrentY;
var done=false;
if(Math.abs(diff)<=_25d4){
done=true;
}
var _25d4=Math.min(Math.abs(diff),_25d4);
var newY=diff>0?this._raveCurrentY+_25d4:this._raveCurrentY-_25d4;
if(_25d5){
ctx.moveTo(this._raveCurrentX,newY);
}else{
ctx.lineTo(this._raveCurrentX,newY);
}
this._raveCurrentY=newY;
return done;
},_raveRenderDashedLineSegment:function(ctx,_25d6,_25d7,x1,y1,x2,y2){
if(this._raveIsVertLine){
return this._raveRenderDashedVerticalLineSegment(ctx,_25d6,_25d7,y2);
}else{
if(this._raveIsHorizLine){
return this._raveRenderDashedHorizontalLineSegment(ctx,_25d6,_25d7,x2);
}else{
var m=(y2-y1)/(x2-x1);
var _25d8=_25ba.quadRoots;
var roots=null;
if(this._raveCachedQuadRoots[_25d6]){
roots=this._raveCachedQuadRoots[_25d6];
}else{
roots=_25d8(-(m*m+1),0,_25d6*_25d6);
this._raveCachedQuadRoots[_25d6]=roots;
}
var y=null;
var x=null;
for(var i=0;i<roots.length;i++){
x=this._raveCurrentX+roots[i];
var _25d9=new Range(this._raveCurrentX,x2);
if(_25d9.contains(x)){
var _25da=_25d6*_25d6-roots[i]*roots[i];
var _25db=new Range(this._raveCurrentY,y2);
var newY=this._raveCurrentY+Math.pow(_25da,1/2);
if(_25db.contains(newY)){
y=newY;
}else{
y=this._raveCurrentY-Math.pow(_25da,1/2);
}
break;
}
}
if(y!=null){
if(_25d7){
ctx.moveTo(x,y);
}else{
ctx.lineTo(x,y);
}
this._raveCurrentX=x;
this._raveCurrentY=y;
return false;
}
return true;
}
}
},_raveGetBezier:function(_25dc,_25dd,lastX,lastY){
function b1(t){
return t*t*t;
};
function b2(t){
return 3*t*t*(1-t);
};
function b3(t){
return 3*t*(1-t)*(1-t);
};
function b4(t){
return (1-t)*(1-t)*(1-t);
};
var pos={x:0,y:0};
var start={x:lastX,y:lastY};
var cp1={x:_25dc[0],y:_25dc[1]};
var cp2={x:_25dc[2],y:_25dc[3]};
var end={x:_25dc[4],y:_25dc[5]};
pos.x=start.x*b1(_25dd)+cp1.x*b2(_25dd)+cp2.x*b3(_25dd)+end.x*b4(_25dd);
pos.y=start.y*b1(_25dd)+cp1.y*b2(_25dd)+cp2.y*b3(_25dd)+end.y*b4(_25dd);
return [pos.x,pos.y];
},_raveCalculateDashedBezierCoordinates:function(_25de,_25df,lastX,lastY){
var step=0.001;
var delta=function(p0,p1){
return [p1[0]-p0[0],p1[1]-p0[1]];
};
var _25e0=function(p0,p1){
var d=delta(p0,p1);
return Math.sqrt(d[0]*d[0]+d[1]*d[1]);
};
var _25e1=[];
var loc=this._raveGetBezier(_25de,1,lastX,lastY);
var _25e2=loc;
var _25e3=0;
var _25e4=0;
var _25e5=[];
var _25e6=[];
_25df=_25b9.forEach(_25df,function(item){
_25e6.push(item*2);
});
for(var t=1-step;t>=0;t-=step){
loc=this._raveGetBezier(_25de,t,lastX,lastY);
_25e4+=_25e0(_25e2,loc);
_25e2=loc;
if(_25e4>=_25e6[_25e3]){
if(_25e3%2==0){
_25e1.push(_25e5);
}
_25e3=(_25e3+1)%_25e6.length;
_25e5=[];
_25e4=0;
}
if(_25e3%2==0){
_25e5.push(loc[0],loc[1]);
}
}
if(_25e5.length>0){
_25e1.push(_25e5);
}
return _25e1;
},_raveRenderDashedCurve:function(ctx,_25e7,_25e8,lastX,lastY){
var _25e9=this._raveCalculateDashedBezierCoordinates(_25e7,_25e8,lastX,lastY);
for(var i=0;i<_25e9.length;i++){
var part=_25e9[i];
if(part.length>0){
ctx.moveTo(part[0],part[1]);
}
for(var j=1;j<part.length/2;j++){
ctx.lineTo(part[2*j],part[2*j+1]);
}
}
}});
var _25ea=_25bb.Surface.prototype.setDimensions;
lang.extend(_25bb.Surface,{setDimensions:function(width,_25eb){
_25ea.call(this,width,_25eb);
this._raveScaleCanvas();
},_raveScaleCanvas:function(){
if(window.devicePixelRatio&&window.devicePixelRatio>1){
var _25ec=this.rawNode;
var _25ed=_25ec.width;
var _25ee=_25ec.height;
_25ec.width=_25ed*window.devicePixelRatio;
_25ec.height=_25ee*window.devicePixelRatio;
_25ec.style.width=""+_25ed+"px";
_25ec.style.height=""+_25ee+"px";
var ctx=this.rawNode.getContext("2d");
ctx.scale(window.devicePixelRatio,window.devicePixelRatio);
}
}});
var _25ef=_25bb.createSurface;
_25bb.createSurface=function(_25f0,width,_25f1){
var s=_25ef.call(_25bb,_25f0,width,_25f1);
s._raveScaleCanvas();
return s;
};
var _25f2={_render:function(ctx){
ctx.save();
if(this.canvasStyleNode){
lang.mixin(ctx,this.canvasStyleNode);
}
this._renderTransform(ctx);
this._renderFill(ctx,false);
this._renderStroke(ctx,true);
if(this.canvasStyleNode!=null&&this.canvasStyleNode.strokeStyle){
ctx.save();
var _25f3=this.strokeStyle;
ctx.lineWidth=2.5;
ctx.globalAlpha=0.3;
this.strokeStyle=this.canvasStyleNode.strokeStyle;
this._renderShape(ctx);
this.strokeStyle=_25f3;
ctx.restore();
}
this._renderShape(ctx);
ctx.restore();
}};
lang.extend(_25bb.Text,_25f2);
var _25f4={_renderShape:function(ctx){
if(this.canvasStyleNode){
lang.mixin(ctx,this.canvasStyleNode);
}
var s=this.shape;
var dash="solid";
if(this.strokeStyle&&this.strokeStyle.style){
dash=this.strokeStyle.style.toLowerCase();
}
if(dash=="solid"||!_25bc[dash]||has("mozilla")){
ctx.beginPath();
ctx.arc(s.cx,s.cy,s.r,0,2*Math.PI,1);
}else{
ctx.beginPath();
ctx.arc(s.cx,s.cy,s.r,0,2*Math.PI,1);
ctx.closePath();
this._renderFill(ctx,true);
ctx.beginPath();
this._raveRenderDashedArc(ctx,dash,s.cx,s.cy,s.r,0,2*Math.PI,true);
this._renderStroke(ctx);
}
}};
lang.extend(_25bb.Circle,_25f4);
var _25f5={_renderShape:function(ctx){
if(this.canvasStyleNode){
lang.mixin(ctx,this.canvasStyleNode);
}
var s=this.shape;
ctx.beginPath();
ctx.moveTo(s.x1,s.y1);
var dash="solid";
if(this.strokeStyle&&this.strokeStyle.style){
dash=this.strokeStyle.style.toLowerCase();
}
if(dash=="solid"||!_25bc[dash]||has("mozilla")){
ctx.lineTo(s.x2,s.y2);
}else{
this._raveRenderLineStyle(ctx,dash,s.x1,s.y1,s.x2,s.y2);
}
}};
lang.extend(_25bb.Line,_25f5);
var _25f6={_renderShape:function(ctx){
var p=this.canvasPolyline;
if(p.length){
ctx.beginPath();
ctx.moveTo(p[0],p[1]);
var dash="solid";
if(this.strokeStyle&&this.strokeStyle.style){
dash=this.strokeStyle.style.toLowerCase();
}
if(dash=="solid"){
for(var i=2;i<p.length;i+=2){
ctx.lineTo(p[i],p[i+1]);
}
}else{
for(var i=2;i<p.length;i+=2){
this._raveRenderLineStyle(ctx,dash,p[i-2],p[i-1],p[i],p[i+1]);
}
}
}
}};
lang.extend(_25bb.Polyline,_25f6);
var _25f7={_renderShape:function(ctx){
if(this.canvasStyleNode){
lang.mixin(ctx,this.canvasStyleNode);
}
var r=this.canvasPath;
ctx.beginPath();
var dash="solid";
if(this.strokeStyle&&this.strokeStyle.style){
dash=this.strokeStyle.style.toLowerCase();
}
if(dash=="solid"||has("mozilla")){
for(var i=0;i<r.length;i+=2){
ctx[r[i]].apply(ctx,r[i+1]);
}
}else{
var lastX=null;
var lastY=null;
for(var i=0;i<r.length;i+=2){
if(r[i]=="lineTo"&&lastX!==null){
this._raveRenderLineStyle(ctx,dash,lastX,lastY,r[i+1][0],r[i+1][1]);
}else{
if(r[i]=="moveTo"){
ctx.moveTo(r[i+1][0],r[i+1][1]);
}else{
if(r[i]=="bezierCurveTo"){
var _25f8=[r[i+1][0],r[i+1][1],r[i+1][2],r[i+1][3],r[i+1][4],r[i+1][5]];
this._raveRenderDashedCurve(ctx,_25f8,_25bc[dash],lastX,lastY);
}else{
ctx[r[i]].apply(ctx,r[i+1]);
}
}
}
var _25f9=r[i+1].length;
if(_25f9>=2){
lastX=r[i+1][_25f9-2];
lastY=r[i+1][_25f9-1];
}else{
lastX=null;
lastY=null;
}
}
}
}};
lang.extend(_25bb.Path,_25f7);
var _25fa={_renderShape:function(ctx){
if(this.canvasStyleNode){
lang.mixin(ctx,this.canvasStyleNode);
}
var s=this.shape;
var r=Math.min(s.r,s.height/2,s.width/2);
var xl=s.x;
var xr=xl+s.width;
var yt=s.y;
var yb=yt+s.height;
var xl2=xl+r;
var xr2=xr-r;
var yt2=yt+r;
var yb2=yb-r;
var dash="solid";
if(this.strokeStyle&&this.strokeStyle.style){
dash=this.strokeStyle.style.toLowerCase();
}
if(dash=="solid"||!_25bc[dash]){
ctx.beginPath();
ctx.moveTo(xl2,yt);
var _25fb=Math.PI/2;
if(r){
ctx.arc(xr2,yt2,r,-_25fb,0,false);
ctx.arc(xr2,yb2,r,0,_25fb,false);
ctx.arc(xl2,yb2,r,_25fb,pi,false);
ctx.arc(xl2,yt2,r,pi,pi+_25fb,false);
}else{
ctx.lineTo(xr2,yt);
ctx.lineTo(xr,yb2);
ctx.lineTo(xl2,yb);
ctx.lineTo(xl,yt2);
}
ctx.closePath();
}else{
if(r){
}else{
ctx.beginPath();
ctx.moveTo(xl2,yt);
ctx.lineTo(xr2,yt);
ctx.lineTo(xr,yb2);
ctx.lineTo(xl2,yb);
ctx.lineTo(xl,yt2);
ctx.closePath();
this._renderFill(ctx,true);
ctx.beginPath();
ctx.moveTo(xl2,yt);
this._raveRenderLineStyle(ctx,dash,xl2,yt,xr2,yt);
this._raveRenderLineStyle(ctx,dash,xr2,yt,xr,yb2);
this._raveRenderLineStyle(ctx,dash,xr,yb2,xl2,yb);
this._raveRenderLineStyle(ctx,dash,xl2,yb,xl,yt2);
this._renderStroke(ctx);
}
}
}};
lang.extend(_25bb.Rect,_25fa);
}
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/ExtractTree":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/ExtractTree",["./BFS","com/ibm/init/fork!../../../../../nativeImpl/HashcodeMap","com/ibm/init/fork!../../../../../nativeImpl/List","com/ibm/init/fork!./Farthest","com/ibm/init/statics","dojo/_base/declare"],function(_25fc,_25fd,_25fe,_25ff,_2600,_2601){
var _2602=_2601("com.ibm.vis.engine.internal.grammar.layout.graph.stress.util.ExtractTree",[_25fc],{graph:null,children:null,constructor:function(g,_2603){
this.graph=g;
this.children=new _25fd.m();
},calculate:function(){
this.children.clear();
var _2604=new _25fe.m();
var _2605=new _25fd.m();
for(var _2606=0,_2607=this.graph.nodes,_2608=_2607.length;_2606<_2608;++_2606){
var a=_2607[_2606];
if(!_2605.containsKey(a)){
var root=this.findCenter(a);
var base=new _25fe.m();
base.add(root);
this.execute(base);
_2604.add(root);
this.markHandled(root,_2605);
}
}
return _2604;
},getChildren:function(node){
return this.children.get(node);
},markHandled:function(node,_2609){
_2609.put(node,node);
for(var _260a=0,_260b=this.children.get(node),_260c=_260b.size();_260a<_260c;++_260a){
var c=_260b.get(_260a);
this.markHandled(c,_2609);
}
},markNode:function(node){
this.inherited(arguments,[node]);
this.children.put(node,new _25fe.m());
},discoverLink:function(link,_260d){
this.inherited(arguments,[link,_260d]);
var _260e=link.getOpposite(_260d);
if(!this.children.containsKey(_260e)){
var _260f=this.children.get(_260d);
_260f.add(_260e);
this.children.put(_260e,new _25fe.m());
}
},findCenter:function(a){
var far=this.findFarthest(a);
var b=far.getResult();
var best=far.getDistance();
while(true){
far=this.findFarthest(b);
if(far.getDistance()<=best){
break;
}
a=b;
b=far.getResult();
best=far.getDistance();
}
return this.findFarthest2(a,b).getResult();
},findFarthest:function(a){
var base=new _25fe.m();
base.add(a);
var _2610=new _25ff.m(this.graph,false);
_2610.execute(base);
return _2610;
},findFarthest2:function(a,b){
var base=new _25fe.m();
base.add(a);
base.add(b);
var _2611=new _25ff.m(this.graph,false);
_2611.execute(base);
return _2611;
}});
return _2602;
});
},"com/ibm/vis/interaction/navigation/Navigation":function(){
define("com/ibm/vis/interaction/navigation/Navigation",["com/ibm/init/statics","dojo/_base/declare"],function(_2612,_2613){
var _2614=_2613("com.ibm.vis.interaction.navigation.Navigation",null,{move:function(_2615,_2616){
},moveFeaturePart:function(shift){
},moveFacet:function(_2617,_2618){
},first:function(){
},back:function(){
},setSelected:function(_2619){
},nextFeature:function(shift){
}});
return _2614;
});
},"com/ibm/vis/engine/internal/migration/SpecifiedArrayRange":function(){
define("com/ibm/vis/engine/internal/migration/SpecifiedArrayRange",["./ArrayRange","com/ibm/init/statics","dojo/_base/declare"],function(_261a,_261b,_261c){
var _261d=_261c("com.ibm.vis.engine.internal.migration.SpecifiedArrayRange",[_261a],{array:null,constructor:function(start,end,array){
this.array=array;
}});
return _261d;
});
},"com/ibm/vis/engine/internal/data/transform/Transform":function(){
define("com/ibm/vis/engine/internal/data/transform/Transform",["com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/fork!../Range","com/ibm/init/statics","dojo/_base/declare"],function(_261e,_261f,_2620,_2621,_2622,_2623){
var _2624=_2623("com.ibm.vis.engine.internal.data.transform.Transform",null,{inputs:null,outputs:null,logger:null,weightIndex:0,multiplier:NaN,constructor:function(_2625,_2626,log){
this.inputs=_2625;
this.outputs=_2626;
this.logger=log;
this.weightIndex=this.getInputIndex("weight");
},getRowsCreated:function(){
},setValues:function(input,_2627,_2628,start,_2629){
},getInputIndex:function(role){
for(var _262a=0,_262b=this.inputs,_262c=_262b.size();_262a<_262c;++_262a){
var field=_262b.get(_262a);
if(role!=null&&role.CPVisEngineEquals(field.role)){
return field.inputIndex;
}
}
return -1;
},getOutputIndex:function(role){
for(var _262d=0,_262e=this.outputs,_262f=_262e.size();_262d<_262f;++_262d){
var field=_262e.get(_262d);
if(role!=null&&role.CPVisEngineEquals(field.role)){
return field.outputIndex;
}
}
return -1;
},getOutputFieldCount:function(){
return this.outputs.size();
},getMatchingInputField:function(df){
return this.getInputIndex(df.role);
},getUnit:function(){
return null;
},getWeight:function(row){
if(this.weightIndex<0){
return 1;
}
var ww=row.data[this.weightIndex];
if(ww!=null&&ww>0){
return ww;
}
return 0;
},sortAndRemoveMissing:function(input,xI,yI,_2630){
var good=new _261e.m();
for(var index=0;index<_2630.size();++index){
var i=_2630.get(index);
var w=this.getWeight(input[i]);
if(w<=0){
continue;
}
var x=input[i].data[xI];
if(x==null){
continue;
}
if(yI<0||input[i].data[yI]!=null){
good.add(i);
}
}
var data=Array.create([good.size()],0);
var n=0;
for(var index=0;index<good.size();++index){
var i=good.get(index);
var x=input[i].data[xI];
data[n++]=x;
}
var _2631=_261f.m.makeSortOrder(data);
for(var i=0;i<_2631.length;++i){
_2631[i]=good.get(_2631[i]);
}
return _2631;
},setOverallData:function(input,type,index){
if(type.getWindowWidth()<=0){
var _2632=new _261e.m();
for(var i=0;i<input.length;++i){
_2632.add(i);
}
var _2633=this.sortAndRemoveMissing(input,index,-1,_2632);
type.setOverallDataDetails(input,index,_2633);
}
},getRange:function(input,_2634,_2635,_2636){
var min=1.7976931348623157e+308;
var max=5e-324;
for(var i=0;i<_2634.size();++i){
var row=input[_2634.get(i)];
min=Math.min(min,row.data[_2635]);
max=Math.max(max,row.data[_2635]);
}
if(_2620.m.isNaN(min)){
min=_2636.min;
}
if(_2620.m.isNaN(max)){
max=_2636.max;
}
return new _2621.m(min,max);
},finishFieldDefinitions:function(_2637){
},getLogger:function(){
return this.logger;
},setMultiplier:function(_2638){
this.multiplier=_2638;
},getMultiplier:function(){
return this.multiplier;
},isPdf:function(){
return false;
}});
return _2624;
});
},"com/ibm/vis/engine/internal/grammar/values/ValueProvider":function(){
define("com/ibm/vis/engine/internal/grammar/values/ValueProvider",["com/ibm/init/fork!./DefaultValueProvider","com/ibm/init/fork!../units/Unit","com/ibm/init/fork!./DerivedValueProvider","com/ibm/init/fork!../../data/Field","com/ibm/init/fork!./FieldValueProvider","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!./NumberValueProvider","com/ibm/init/fork!./PercentageValueProvider","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/fork!../element/Element","com/ibm/init/statics","dojo/_base/declare"],function(_2639,_263a,_263b,_263c,_263d,_263e,_263f,_2640,_2641,_2642,_2643,_2644){
var _2645=_2644("com.ibm.vis.engine.internal.grammar.values.ValueProvider",null,{span:null,constructor:function(_2646){
this.span=_2646;
},getNumber:function(row){
},toZeroOne:function(value,scale){
return scale.toZeroOne(value,this.getUnit(),this.span);
},getIncludeInRange:function(){
},getBaseField:function(){
},isCategorical:function(){
},getLabel:function(){
},getUnit:function(){
},getGranularity:function(){
},getRange:function(){
return null;
},getFormatter:function(){
return null;
},getCategories:function(){
if(this.getUnit()!=null&&this.getUnit().measure.categorical){
return new Array(0);
}
return null;
},enableOrdering:function(_2647){
},getSpan:function(){
return this.span;
},setSpan:function(_2648){
this.span=_2648;
}});
_2645.makePositionProvider=function(spec,vis){
var _2649=spec.span==null?null:spec.span;
if(spec.derivedValue!=null){
return _2645.makeFromDerivedValue(vis,spec.derivedValue.target,spec.derivedValue.functionName,spec.derivedValue.variable,_2649);
}
if(spec.field!=null){
return _2645.makeFromField(vis,spec.field,false,_2649);
}
if(spec.value!=null){
var _264a=spec.includeInRange!=null&&spec.includeInRange;
return _2645.makeFromValue(spec.value,_264a,null,_2649);
}
return _2645.DEFAULT;
};
_2645.makeComponentProvider=function(spec,vis){
if(spec.field!=null){
return _2645.makeFromField(vis,spec.field,false,null);
}
if(spec.value!=null){
return _2645.makeFromNumber(spec.value,false,_263a.m.CATEGORICAL,null);
}
return _2645.DEFAULT;
};
_2645.makeAestheticProvider=function(spec,vis){
if(spec.field!=null){
return _2645.makeFromField(vis,spec.field,false,null);
}
if(spec.value!=null){
return _2645.makeFromNumber(spec.value,false,null,null);
}
return _2645.DEFAULT;
};
_2645.makeFromDerivedValue=function(vis,_264b,_264c,_264d,_264e){
var t=vis.getByID(_264b.$ref);
if(!_2645.isDerivedValueProducer(t)){
return _2645.DEFAULT;
}
var _264f;
if(_264d instanceof Object){
_264f=_2645.makeFromField(vis,_264d,false,_264e);
}else{
_264f=_2645.makeFromValue(_264d,false,null,_264e);
}
return new _263b.m(_264e,t,_264c,_264f);
};
_2645.makeFromField=function(vis,field,_2650,_2651){
var f=vis.getByID(field.$ref);
if(f instanceof _263c.m){
return new _263d.m(_2651,f,_2650);
}
return _2645.DEFAULT;
};
_2645.makeFromValue=function(value,_2652,unit,_2653){
if(_263e.m.isNumber(value)){
return _2645.makeFromNumber(value,_2652,unit,_2653);
}
if(_263e.m.isString(value)){
return _2645.makeFromString(value,unit,_2653);
}
return _2645.DEFAULT;
};
_2645.makeFromNumber=function(_2654,_2655,unit,_2656){
return new _263f.m(_2656,_2654,_2655,unit);
};
_2645.makeFromString=function(_2657,unit,_2658){
try{
if(_2657.CPVISEngineEndsWith("%")){
return new _2640.m(_2658,_2641.m.parseDouble(_2657.substring(0,_2657.CPVisEngineLength()-1))/100);
}
return new _263f.m(_2658,_2641.m.parseDouble(_2657),false,unit);
}
catch(e){
if(e instanceof Error){
}else{
throw e;
}
}
return _2645.DEFAULT;
};
_2645.isDerivedValueProducer=function(o){
return o instanceof _2642.m;
};
_2643.add("com/ibm/vis/engine/internal/grammar/values/ValueProvider",["com/ibm/vis/engine/internal/grammar/values/DefaultValueProvider","com/ibm/vis/engine/internal/grammar/units/Unit","com/ibm/vis/engine/internal/grammar/values/DerivedValueProvider","com/ibm/vis/engine/internal/data/Field","com/ibm/vis/engine/internal/grammar/values/FieldValueProvider","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/grammar/values/NumberValueProvider","com/ibm/vis/engine/internal/grammar/values/PercentageValueProvider","com/ibm/vis/engine/internal/nativeImpl/Double","com/ibm/vis/engine/internal/grammar/element/Element"],function(){
_2645.DEFAULT=new _2639.m(null,false,_263a.m.CATEGORICAL);
});
return _2645;
});
},"com/ibm/vis/engine/internal/interaction/effect/StyleEffect":function(){
define("com/ibm/vis/engine/internal/interaction/effect/StyleEffect",["./Effect","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_2659,_265a,_265b,_265c){
var _265d=_265c("com.ibm.vis.engine.internal.interaction.effect.StyleEffect",[_2659],{representation:null,addedHighlights:null,id:0,sceneState:null,constructor:function(time,_265e,id,_265f){
this.sceneState=_265f;
this.setRepresentation(_265e);
this.animated=false;
this.id=id;
},setTargetIDs:function(_2660){
this.sceneState.setSelectedIds(_2660,this.id);
},setRepresentation:function(_2661){
this.representation=_2661;
},apply:function(){
this.setTargetIDs(this.newTargetIds);
this.addedHighlights=this.builder.createStyle(this.representation,this.newTargetIds,this.builder.makeSceneItemMap(),this.id);
this.newTargetIds=new _265a.m();
},clear:function(){
this.remove();
},remove:function(){
this.setTargetIDs(null);
if(this.builder!=null){
this.builder.restore(this.addedHighlights);
}
}});
return _265d;
});
},"com/ibm/vis/engine/internal/grammar/layout/treemap/TreeNodeAreaComparator":function(){
define("com/ibm/vis/engine/internal/grammar/layout/treemap/TreeNodeAreaComparator",["../../../nativeImpl/Comparator","com/ibm/init/statics","dojo/_base/declare"],function(_2662,_2663,_2664){
var _2665=_2664("com.ibm.vis.engine.internal.grammar.layout.treemap.TreeNodeAreaComparator",[_2662],{inverse:false,constructor:function(_2666){
this.inverse=_2666;
},compare:function(_2667,_2668){
var nodeA=_2667;
var nodeB=_2668;
var _2669;
if(nodeA==null){
if(nodeB==null){
_2669=0;
}else{
_2669=1;
}
}else{
if(nodeB==null){
_2669=-1;
}else{
_2669=Math.round(nodeA.area-nodeB.area);
}
}
if(this.inverse){
_2669*=-1;
}
return _2669;
}});
return _2665;
});
},"com/ibm/vis/engine/internal/DefaultVisContentFrame":function(){
define("com/ibm/vis/engine/internal/DefaultVisContentFrame",["./ContentFrame","com/ibm/init/fork!./layout/OverlayLayout","com/ibm/init/fork!./layout/FlowLayout","com/ibm/init/fork!./layout/Flow","com/ibm/init/fork!./oldlegends/LegendPosition","com/ibm/init/fork!./struct/Rect","com/ibm/init/fork!./struct/Dim","com/ibm/init/statics","dojo/_base/declare"],function(_266a,_266b,_266c,_266d,_266e,_266f,_2670,_2671,_2672){
var _2673=_2672("com.ibm.vis.engine.internal.DefaultVisContentFrame",[_266a],{topFrame:null,bottomFrame:null,leftFrame:null,grammarFrame:null,rightFrame:null,legendFrame:null,constructor:function(){
this.setId("Back");
this.grammarFrame=new _266a();
this.grammarFrame.layoutMethod=new _266b.m();
this.grammarFrame.setId("grammar");
this.add(this.grammarFrame);
this.legendFrame=new _266a();
this.legendFrame.layoutMethod=new _266b.m();
this.legendFrame.setId("overlay");
this.add(this.legendFrame);
this.topFrame=new _266a();
this.topFrame.layoutMethod=new _266c.m(_266d.m.horizontal);
this.topFrame.setId("top");
this.add(this.topFrame);
this.bottomFrame=new _266a();
this.bottomFrame.layoutMethod=new _266c.m(_266d.m.horizontal);
this.bottomFrame.setId("bottom");
this.add(this.bottomFrame);
this.leftFrame=new _266a();
this.leftFrame.layoutMethod=new _266c.m(_266d.m.vertical);
this.leftFrame.setId("left");
this.add(this.leftFrame);
this.rightFrame=new _266a();
this.rightFrame.layoutMethod=new _266c.m(_266d.m.vertical);
this.rightFrame.setId("right");
this.add(this.rightFrame);
},addGrammar:function(_2674){
this.grammarFrame.add(_2674);
},addFloatingLegend:function(frame){
this.legendFrame.add(frame);
},addLegend:function(_2675,_2676){
if(_266e.m.LEFT==_2676){
this.leftFrame.add(_2675);
}else{
if(_266e.m.TOP==_2676){
this.topFrame.add(_2675);
}else{
if(_266e.m.BOTTOM==_2676){
this.bottomFrame.add(_2675);
}else{
this.rightFrame.add(_2675);
}
}
}
},layoutWithBounds:function(_2677,_2678,_2679){
this.inherited(arguments,[_2677,_2678,_2679]);
var _267a=this.getContentBounds();
var right=this.rightFrame.getPreferredSize();
var left=this.leftFrame.getPreferredSize();
var top=this.topFrame.getPreferredSize();
var _267b=this.bottomFrame.getPreferredSize();
var _267c=_267a.height-top.height-_267b.height;
var _267d=_267a.width-left.width-right.width;
if(_267c>0&&_267d>0){
this.topFrame.layoutWithBounds(new _266f.m(0,0,_267a.width,top.height),_2678,_2679);
this.leftFrame.layoutWithBounds(new _266f.m(0,top.height,left.width,_267c),_2678,_2679);
this.grammarFrame.layoutWithBounds(new _266f.m(left.width,top.height,_267d,_267c),_2678,_2679);
this.rightFrame.layoutWithBounds(new _266f.m(left.width+_267d,top.height,right.width,_267c),_2678,_2679);
this.bottomFrame.layoutWithBounds(new _266f.m(0,top.height+_267c,_267a.width,_267b.height),_2678,_2679);
}else{
this.topFrame.layoutWithBounds(new _266f.m(0,0,0,0),_2678,_2679);
this.leftFrame.layoutWithBounds(new _266f.m(0,0,0,0),_2678,_2679);
this.rightFrame.layoutWithBounds(new _266f.m(0,0,0,0),_2678,_2679);
this.bottomFrame.layoutWithBounds(new _266f.m(0,0,0,0),_2678,_2679);
this.grammarFrame.layoutWithBounds(this.getExtent().makeRect(),_2678,_2679);
}
this.legendFrame.layoutWithBounds(this.grammarFrame.getBounds(),_2678,_2679);
},getContentPreferredSize:function(){
var _267e=this.legendFrame.getPreferredSize();
var right=this.rightFrame.getPreferredSize();
var left=this.leftFrame.getPreferredSize();
var top=this.topFrame.getPreferredSize();
var _267f=this.bottomFrame.getPreferredSize();
var _2680=this.grammarFrame.getPreferredSize();
var _2681=Math.max(_267e.width,_2680.width);
var _2682=Math.max(_267e.height,_2680.height);
var width=right.width+_2681+left.width;
var _2683=top.height+_2682+_267f.height;
return new _2670.m(width,_2683);
}});
return _2673;
});
},"com/ibm/vis/engine/internal/nativeImpl/StringBuilder":function(){
define("com/ibm/vis/engine/internal/nativeImpl/StringBuilder",["dojo/_base/lang","exports"],function(lang,_2684){
var _2685=function(str){
var b="";
this._length=0;
this.length=function(){
return this._length;
},this.append=function(s){
if(arguments.length>1){
var tmp="",l=arguments.length;
switch(l){
case 9:
tmp=""+arguments[8]+tmp;
case 8:
tmp=""+arguments[7]+tmp;
case 7:
tmp=""+arguments[6]+tmp;
case 6:
tmp=""+arguments[5]+tmp;
case 5:
tmp=""+arguments[4]+tmp;
case 4:
tmp=""+arguments[3]+tmp;
case 3:
tmp=""+arguments[2]+tmp;
case 2:
b+=""+arguments[0]+arguments[1]+tmp;
break;
default:
var i=0;
while(i<arguments.length){
tmp+=arguments[i++];
}
b+=tmp;
}
}else{
b+=s;
}
this._length=b.length;
return this;
};
this.concat=function(s){
return this.append.apply(this,arguments);
};
this.appendArray=function(_2686){
return this.append.apply(this,_2686);
};
this.clear=function(){
b="";
this._length=0;
return this;
};
this.replace=function(_2687,_2688){
b=b.replace(_2687,_2688);
this._length=b.length;
return this;
};
this.remove=function(start,len){
if(len===undefined){
len=b.length;
}
if(len==0){
return this;
}
b=b.substr(0,start)+b.substr(start+len);
this._length=b.length;
return this;
};
this.insert=function(index,str){
if(index==0){
b=str+b;
}else{
b=b.slice(0,index)+str+b.slice(index);
}
this._length=b.length;
return this;
};
this.toString=function(){
return b;
};
if(str){
this.append(str);
}
};
return _2685;
});
},"com/ibm/vis/engine/internal/scene/ObjectMap":function(){
define("com/ibm/vis/engine/internal/scene/ObjectMap",["com/ibm/init/fork!../nativeImpl/Map","com/ibm/init/statics","dojo/_base/declare"],function(_2689,_268a,_268b){
var _268c=_268b("com.ibm.vis.engine.internal.scene.ObjectMap",null,{objectMap:null,constructor:function(){
this.objectMap=new _2689.m();
},clear:function(){
this.objectMap.clear();
},cacheObject:function(id,_268d){
this.objectMap.put(id,_268d);
},removeObject:function(id){
this.objectMap.remove(id);
},retrieveObject:function(id){
return this.objectMap.get(id);
}});
_268a.add("com/ibm/vis/engine/internal/scene/ObjectMap",[],function(){
_268c.INTERACTION_SCROLL_UNIT="scrollUnit";
});
return _268c;
});
},"com/ibm/vis/engine/internal/nativeImpl/Character":function(){
define("com/ibm/vis/engine/internal/nativeImpl/Character",["exports"],function(_268e){
_268e.digit=function(value,radix){
return parseInt(value,radix);
};
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/SparseMatrix":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/SparseMatrix",["./Matrix","com/ibm/init/fork!./SparseMutableVector","com/ibm/init/fork!./FullConstantVector","com/ibm/init/fork!./SparseConstantVector","com/ibm/init/statics","dojo/_base/declare"],function(_268f,_2690,_2691,_2692,_2693,_2694){
var _2695=_2694("com.ibm.vis.engine.internal.grammar.layout.graph.stress.matrix.SparseMatrix",[_268f],{d:null,immutable:false,constructor:function(n){
this.immutable=false;
this.d=new Array(n);
for(var i=0;i<n;++i){
this.d[i]=new _2690.m();
}
},set:function(i,j,v){
this.d[i].set(j,v);
},get:function(i,j){
return this.d[i].get(j);
},fill:function(v){
throw new Error("Cannot fill Sparse Matrices");
},multiply:function(x,y){
if(!this.immutable){
for(var i=0;i<this.n;++i){
var map=(this.d[i]).d;
if(map.size()>0.5*this.n){
this.d[i]=new _2691.m(this.n,map);
}else{
this.d[i]=new _2692.m(map);
}
}
this.immutable=true;
}
if(y==null){
y=Array.create([this.n],0);
}
for(var i=0;i<this.n;++i){
y[i]=this.d[i].dot(x);
}
return y;
}});
return _2695;
});
},"com/ibm/vis/engine/internal/MutableInt":function(){
define("com/ibm/vis/engine/internal/MutableInt",["com/ibm/init/statics","dojo/_base/declare"],function(_2696,_2697){
var _2698=_2697("com.ibm.vis.engine.internal.MutableInt",null,{value:0});
return _2698;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/Aesthetic":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/Aesthetic",["../../IdentifiableItem","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../values/ValueProvider","com/ibm/init/fork!./SizeAestheticValueProducer","com/ibm/init/fork!./DashingAestheticValueProducer","com/ibm/init/fork!./ColorAestheticValueProducer","com/ibm/init/fork!./MetaValueProducer","com/ibm/init/fork!./SymbolAestheticValueProducer","com/ibm/init/fork!./SplitAestheticValueProducer","com/ibm/init/fork!./StyleByAestheticValueProducer","com/ibm/init/fork!./VisibilityAestheticValueProducer","com/ibm/init/fork!./OffsetAestheticValueProducer","com/ibm/init/fork!../../nativeImpl/WebEngineException","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!./AestheticPalette","com/ibm/init/fork!../scale/Scale","com/ibm/init/fork!../scale/ScaleBuilder","com/ibm/init/fork!./AestheticMapping","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!../../struct/Dim","com/ibm/init/statics","dojo/_base/declare"],function(_2699,_269a,_269b,_269c,_269d,_269e,_269f,_26a0,_26a1,_26a2,_26a3,_26a4,_26a5,_26a6,_26a7,_26a8,_26a9,_26aa,_26ab,_26ac,_26ad,_26ae){
var _26af=_26ae("com.ibm.vis.engine.internal.grammar.aesthetic.Aesthetic",[_2699],{spec:null,valueProvider:null,element:null,producer:null,mapping:null,scale:null,palette:null,type:null,modifiesType:null,modifiesPart:null,vis:null,applicableToLegend:false,isSizeProducer:false,isSymbolProducer:false,isDashingProducer:false,constructor:function(id,vis,type,_26b0,spec){
this.vis=vis;
this.element=_26b0;
this.type=type;
this.valueProvider=_269b.m.makeAestheticProvider(spec,vis);
this.applicableToLegend=true;
this.spec=spec;
this.isSizeProducer=false;
this.isSymbolProducer=false;
this.isDashingProducer=false;
if(type.CPVisEngineEquals("size")){
this.producer=new _269c.m(vis.visContext);
this.isSizeProducer=true;
}else{
if(type.CPVisEngineEquals("dashing")){
this.producer=new _269d.m();
this.isDashingProducer=true;
}else{
if(type.CPVisEngineEquals("color")){
this.producer=new _269e.m();
}else{
if(type.CPVisEngineEquals("meta")){
this.producer=new _269f.m(spec.key,this.valueProvider);
}else{
if(type.CPVisEngineEquals("symbol")){
this.producer=new _26a0.m(this.element);
this.isSymbolProducer=true;
}else{
if(type.CPVisEngineEquals("split")){
this.producer=new _26a1.m();
}else{
if(type.CPVisEngineEquals("styleBy")){
this.producer=new _26a2.m(vis.visContext,this.element);
}else{
if(type.CPVisEngineEquals("visibility")){
this.producer=new _26a3.m();
}else{
if(type.CPVisEngineEquals("offset")){
this.producer=new _26a4.m(vis.visContext,this.element.grammar.coordinates);
this.applicableToLegend=false;
}else{
throw new _26a5.m("Unsupported aesthetic: "+type);
}
}
}
}
}
}
}
}
}
var _26b1=spec.modifies;
if(spec.modifies==null){
this.modifiesPart=null;
if(this.isSizeProducer){
this.modifiesType=_26b0.getDefaultSizeModifierType(_26b0.grammar.coordinates.transposesAxes());
}else{
this.modifiesType=null;
}
}else{
if(_26a6.m.isString(_26b1)){
this.modifiesType=_26b1;
this.modifiesPart=null;
}else{
var _26b2=_26b1;
this.modifiesPart=_26b2.part;
var _26b3=_26b2.type;
if(_26b3==null&&this.isSizeProducer){
this.modifiesType=_26b0.getDefaultSizeModifierType(_26b0.grammar.coordinates.transposesAxes());
}else{
this.modifiesType=_26b3;
}
}
}
this.palette=_26a7.m.makePalette(this.producer,spec);
var _26b4=this.valueProvider.isCategorical();
var _26b5=this.vis.visContext;
if(spec.scale==null){
this.scale=new _26a8.m(null,vis);
_26a9.m.makeForProvider(this.scale,this.valueProvider,_26b4,_26b5).createSpansFromProvider(this.valueProvider);
}else{
if(spec.scale.local!=null){
_26b4=spec.scale.local;
}
var units=new _269a.m();
units.add(this.valueProvider.getUnit());
this.scale=_26a9.m.createFromSpec(spec.scale,false,_26b4,units,vis);
if(this.valueProvider.getBaseField()!=null){
var _26b6=new _26a8.m(null,vis);
_26a9.m.makeForProvider(_26b6,this.valueProvider,_26b4,_26b5).createSpansFromProvider(this.valueProvider);
this.scale.useValuesFrom(_26b6);
}
}
var _26b7=null;
if(this.valueProvider.isCategorical()&&this.valueProvider.getBaseField()!=null){
_26b7=this.scale.getCategoryCount();
}
this.scale.initializeForRequiredTickCount(_26b7);
var _26b8=this.vis.currentSpec.version;
this.mapping=_26aa.m.makeMapping(this.producer,spec,this.scale,this.valueProvider,_26b8);
},isApplicableToLegend:function(){
return this.applicableToLegend;
},setApplicableToLegend:function(_26b9){
this.applicableToLegend=_26b9;
},apply:function(shape,row){
var value=this.valueProvider.getNumber(row);
var v=null;
if(value!=null){
v=this.scale.toZeroOneClamped(value,this.valueProvider.getUnit());
}
if(v==null){
return shape;
}
return this.applyValue(shape,v,value,true);
},applyValue:function(shape,v,_26ba,_26bb){
var _26bc=shape;
var o;
if(this.valueProvider.isCategorical()){
var dv=Math.round(_26ba);
var value=dv;
value=this.scale.getScaleCategoryIndex(dv,this.valueProvider.getUnit());
if(_26bb&&this.valueProvider.getBaseField()!=null&&this.valueProvider.getBaseField().order!=null){
value=this.valueProvider.getBaseField().order[value];
o=this.producer.applyCategoricalMapping(value,this.mapping);
}else{
o=this.producer.applyCategoricalMapping(dv,this.mapping);
}
if(o!=null&&(this.producer instanceof _26a4.m)){
var _26bd=this.producer.getDefaultForCategory(value,v);
o=_26ab.m.convertLength(o,_26bd,_26bd);
}
if(o==null){
o=this.producer.makeUsingPalette(value,this.palette,this.valueProvider);
if(o!=null&&(this.producer instanceof _26a4.m)){
var _26bd=this.producer.getDefaultForCategory(value,v);
o=_26ab.m.convertLength(o,_26bd,_26bd);
}
}
if(o==null){
o=this.producer.getDefaultForCategory(value,v);
}
}else{
o=this.producer.applyNumericMapping(shape,v,this.mapping,this.modifiesType);
if(o==null){
o=this.producer.getDefaultForNumeric(v);
}
}
if(this.producer instanceof _26a4.m){
this.producer.setGrammarSize(this.element.grammar.graphSize);
}
if(this.modifiesPart==null||(_26bc.getElementPart()!=null&&this.modifiesPart.CPVisEngineEquals(_26bc.getElementPart()))){
_26bc=this.producer.modify(_26bc,o,this.modifiesType);
}
if("symbol".CPVisEngineEquals(this.type)&&this.modifiesPart==null){
return _26bc;
}
if(!this.producer.isSizeAestheticValueProducer()||this.modifiesPart!=null){
var parts=_26bc.getParts();
if(parts!=null){
for(var i=0;i<parts.length;++i){
var _26be=parts[i].getMeta("part");
var _26bf=this.modifiesPart==null?_26be==null:this.modifiesPart.CPVisEngineEquals(_26be);
if(_26bf){
parts[i]=this.producer.modify(parts[i],o,this.modifiesType);
}
}
}
}
return _26bc;
},modifiesSymbol:function(){
return this.isSymbolProducer||"symbol".CPVisEngineEquals(this.modifiesPart);
},getDefaultSwatchSize:function(){
if(this.isDashingProducer){
return new _26ac.m(50,20);
}
return new _26ac.m(20,20);
},getProducer:function(){
return this.producer;
},getMapping:function(){
return this.mapping;
},getPalette:function(){
return this.palette;
},getModifiesType:function(){
return this.modifiesType;
},setAesthetic:function(_26c0){
var aSpec=[this.spec];
if(this.type.CPVisEngineEquals("color")){
_26c0.color=aSpec;
}else{
if(this.type.CPVisEngineEquals("size")){
_26c0.size=aSpec;
}else{
if(this.type.CPVisEngineEquals("dashing")){
_26c0.dashing=aSpec;
}else{
if(this.type.CPVisEngineEquals("symbol")){
_26c0.symbol=aSpec;
}else{
if(this.type.CPVisEngineEquals("meta")){
_26c0.meta=aSpec;
}else{
if(this.type.CPVisEngineEquals("styleBy")){
_26c0.styleBy=aSpec;
}else{
if(this.type.CPVisEngineEquals("visibility")){
_26c0.visibility=aSpec;
}else{
if(this.type.CPVisEngineEquals("split")){
_26c0.split=aSpec;
}
}
}
}
}
}
}
}
return aSpec;
}});
_26af.addAesthetic=function(list,name,_26c1,specs){
if(specs!=null){
for(var _26c2=0,_26c3=specs.length;_26c2<_26c3;++_26c2){
var spec=specs[_26c2];
list.add(new _26af(spec.id,_26c1.grammar.vis,name,_26c1,spec));
}
}
};
_26af.getLabelAesthetics=function(_26c4,spec){
if(spec.color==null&&spec.size==null&&spec.visibility==null){
return null;
}
var list=new _269a.m();
if(spec.color!=null){
list.add(new _26af(spec.color.id,_26c4.grammar.vis,"color",_26c4,spec.color));
}
if(spec.size!=null){
list.add(new _26af(spec.size.id,_26c4.grammar.vis,"size",_26c4,spec.size));
}
if(spec.visibility!=null){
list.add(new _26af(spec.visibility.id,_26c4.grammar.vis,"visibility",_26c4,spec.visibility));
}
return list.toArray(new Array(list.size()));
};
_26af.findAesthetics=function(_26c5,spec){
var list=new _269a.m();
_26af.addAesthetic(list,"color",_26c5,spec.color);
_26af.addAesthetic(list,"size",_26c5,spec.size);
_26af.addAesthetic(list,"dashing",_26c5,spec.dashing);
_26af.addAesthetic(list,"meta",_26c5,spec.meta);
_26af.addAesthetic(list,"symbol",_26c5,spec.symbol);
_26af.addAesthetic(list,"split",_26c5,spec.split);
_26af.addAesthetic(list,"styleBy",_26c5,spec.styleBy);
_26af.addAesthetic(list,"visibility",_26c5,spec.visibility);
_26af.addAesthetic(list,"offset",_26c5,spec.offset);
return list.toArray(new Array(list.size()));
};
_26af.make=function(id,vis,type,_26c6,spec){
return new _26af(id,vis,type,_26c6,spec);
};
_26ad.add("com/ibm/vis/engine/internal/grammar/aesthetic/Aesthetic",["com/ibm/vis/engine/internal/IdentifiableItem"],function(){
_26af.COLOR_KEYWORD="color";
_26af.SIZE_KEYWORD="size";
_26af.DASHING_KEYWORD="dashing";
_26af.META_KEYWORD="meta";
_26af.SYMBOL_KEYWORD="symbol";
_26af.SPLIT_KEYWORD="split";
_26af.STYLE_BY_KEYWORD="styleBy";
_26af.VISIBILITY_KEYWORD="visibility";
_26af.OFFSET_KEYWORD="offset";
});
return _26af;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/LongestDistanceToTerminal":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/LongestDistanceToTerminal",["./DAGLayerAssignmentAlgorithm","com/ibm/init/statics","dojo/_base/declare"],function(_26c7,_26c8,_26c9){
var _26ca=_26c9("com.ibm.vis.engine.internal.grammar.layout.graph.LongestDistanceToTerminal",[_26c7],{assignLayers:function(graph){
var maxy=0;
for(var _26cb=0,_26cc=graph.nodes,_26cd=_26cc.length;_26cb<_26cd;++_26cb){
var node=_26cc[_26cb];
node.info=null;
}
for(var _26ce=0,_26cf=graph.nodes,_26d0=_26cf.length;_26ce<_26d0;++_26ce){
var node=_26cf[_26ce];
node.layer=this.distanceToFarthestSink(node);
maxy=Math.max(maxy,node.layer);
}
var _26d1=maxy+1;
for(var i=_26d1-2;i>=0;--i){
for(var _26d2=0,_26d3=graph.nodes,_26d4=_26d3.length;_26d2<_26d4;++_26d2){
var node=_26d3[_26d2];
if(node.layer==i){
if(node.inLink.length>0){
var _26d5=_26d1;
for(var _26d6=0,_26d7=node.inLink,_26d8=_26d7.length;_26d6<_26d8;++_26d6){
var link=_26d7[_26d6];
_26d5=Math.min(_26d5,link.from.layer);
}
node.layer=_26d5-1;
}
}
}
}
return _26d1;
},distanceToFarthestSink:function(node){
if(node.info!=null){
return node.info;
}else{
var _26d9=0;
for(var _26da=0,_26db=node.outLink,_26dc=_26db.length;_26da<_26dc;++_26da){
var link=_26db[_26da];
_26d9=Math.max(_26d9,this.distanceToFarthestSink(link.to)+1);
}
node.info=_26d9;
return _26d9;
}
}});
return _26ca;
});
},"com/ibm/vis/engine/internal/facet/FacetingFactory":function(){
define("com/ibm/vis/engine/internal/facet/FacetingFactory",["com/ibm/init/fork!./FacetMethodNone","com/ibm/init/fork!../../../exceptions/RaveException","com/ibm/init/fork!./FacetMethodChartInChart","com/ibm/init/fork!./FacetMethodPanel","com/ibm/init/fork!./FacetMethodOverlay","com/ibm/init/fork!../../../monitor/LogLevel","com/ibm/init/fork!../../../monitor/LogComponent","com/ibm/init/fork!./FacetField","com/ibm/init/statics","dojo/_base/declare"],function(_26dd,_26de,_26df,_26e0,_26e1,_26e2,_26e3,_26e4,_26e5,_26e6){
var _26e7=_26e6("com.ibm.vis.engine.internal.facet.FacetingFactory",null,{});
_26e7.getFacetingInstance=function(spec,log,vis,_26e8){
var _26e9;
if(spec==null){
_26e9=_26e7.FACETING_NONE;
}else{
var _26ea=_26e7.extractFieldsFromSpecAndValidateElements(vis,spec,_26e8);
for(var _26eb=0,_26ec=_26ea.length;_26eb<_26ec;++_26eb){
var f=_26ea[_26eb];
if(!f.field.isCategorical()){
throw new _26de.m(null,16);
}
}
if(_26e7.FACET_METHOD_CHART_IN_CHART.CPVisEngineEquals(spec.method)){
_26e9=new _26df.m(spec,log,_26ea);
}else{
if("panel".CPVisEngineEquals(spec.method)){
_26e9=new _26e0.m(spec,log,_26ea,vis);
}else{
if("overlay".CPVisEngineEquals(spec.method)){
_26e9=new _26e1.m(spec,log,_26ea);
}else{
_26e9=_26e7.FACETING_NONE;
if(log.hasListeners()){
log.log(_26e2.m.Warning,_26e3.m.CommonGrammar,"Faceting","type unknown",spec.method);
}
}
}
}
if(log.hasListeners()){
log.log(_26e2.m.Info,_26e3.m.CommonGrammar,"Faceting","# variables",new Number(_26ea.length));
}
}
return _26e9;
};
_26e7.extractFieldsFromSpecAndValidateElements=function(vis,_26ed,_26ee){
if(_26ed.fields==null||_26ed.fields.length==0){
throw new _26de.m(null,15);
}
var _26ef;
var _26f0=_26ed.fields;
var n=(_26f0==null)?0:_26f0.length;
_26ef=new Array(n);
for(var i=0;i<n;++i){
var field=vis.getByID(_26f0[i].field.$ref);
if(field==null){
throw new _26de.m(null,16);
}
if(_26ee.length>i&&!_26e7.matchedDataSource(field,_26ee[i].positions)){
throw new _26de.m(null,_26de.m.SPEC_INVALID_VALUE);
}
_26ef[i]=new _26e4.m(_26f0[i],field);
}
return _26ef;
};
_26e7.matchedDataSource=function(_26f1,_26f2){
for(var i=0;i<_26f2.length;++i){
var _26f3=_26f2[i].getBaseField();
if(_26f3!=null&&!_26f3.data.id.CPVisEngineEquals(_26f1.data.id)){
return false;
}
}
return true;
};
_26e5.add("com/ibm/vis/engine/internal/facet/FacetingFactory",["com/ibm/vis/engine/internal/facet/FacetMethodNone","com/ibm/vis/exceptions/RaveException","com/ibm/vis/engine/internal/facet/FacetMethodChartInChart","com/ibm/vis/engine/internal/facet/FacetMethodPanel","com/ibm/vis/engine/internal/facet/FacetMethodOverlay","com/ibm/vis/monitor/LogLevel","com/ibm/vis/monitor/LogComponent","com/ibm/vis/engine/internal/facet/FacetField"],function(){
_26e7.FACETING_NONE=new _26dd.m();
_26e7.FACET_METHOD_CHART_IN_CHART="chartInChart";
_26e7.FACET_METHOD_PANEL="panel";
_26e7.FACET_METHOD_OVERLAY="overlay";
});
return _26e7;
});
},"com/ibm/vis/engine/internal/migration/StrategyReference":function(){
define("com/ibm/vis/engine/internal/migration/StrategyReference",["com/ibm/init/fork!../nativeImpl/WebEngineException","com/ibm/init/fork!../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./ExtensionParameter","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_26f4,_26f5,_26f6,_26f7,_26f8,_26f9){
var _26fa=_26f9("com.ibm.vis.engine.internal.migration.StrategyReference",null,{id:null,parameters:null,constructor:function(id,_26fb){
this.id=id;
this.parameters=_26fb;
},get:function(_26fc){
var _26fd=_26fc.getProperty(_26fa.VERSION_PROPERTY);
if(_26fd==null){
throw new _26f4.m("No 'version' property found in the evaluation context.");
}
return _26f5.m.INSTANCE.newInstance(this.id,new _26f6.m(_26fd,this.parameters));
}});
_26fa.parse=function(_26fe){
var _26ff=null;
if(_26fe!=null){
_26ff=new _26fa(_26f7.m.getItem(_26fe,"id"),_26f7.m.getItem(_26fe,"parameters"));
}
return _26ff;
};
_26f8.add("com/ibm/vis/engine/internal/migration/StrategyReference",["com/ibm/vis/engine/internal/nativeImpl/BasicFactory"],function(){
_26fa.VERSION_PROPERTY="StrategyReference.version";
});
return _26fa;
});
},"com/ibm/vis/engine/internal/struct/Plus":function(){
define("com/ibm/vis/engine/internal/struct/Plus",["./Poly","com/ibm/init/statics","dojo/_base/declare"],function(_2700,_2701,_2702){
var Plus=_2702("com.ibm.vis.engine.internal.struct.Plus",[_2700],{constructor:function(cx,cy,_2703,_2704){
},getType:function(){
return "plus";
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("plus".CPVisEngineEquals(type)||"poly".CPVisEngineEquals(type)){
return true;
}
return false;
}});
_2701.add("com/ibm/vis/engine/internal/struct/Plus",["com/ibm/vis/engine/internal/struct/Poly"],function(){
Plus.PLUS_FLAGS=0;
Plus.PLUS_NAME="plus";
});
return Plus;
});
},"com/ibm/vis/engine/internal/spechelper/ClusterGapSizeSpecHelper":function(){
define("com/ibm/vis/engine/internal/spechelper/ClusterGapSizeSpecHelper",["./PreferredSizeSpecHelper","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_2705,_2706,_2707,_2708){
var _2709=_2708("com.ibm.vis.engine.internal.spechelper.ClusterGapSizeSpecHelper",[_2705],{constructor:function(spec){
},getPreferred:function(width,_270a){
var value=this.inherited(arguments,[width,_270a]);
if(_2706.m.isNaN(value)){
return 0;
}
return value;
},getMin:function(width,_270b){
var value=this.inherited(arguments,[width,_270b]);
if(_2706.m.isNaN(value)){
return 0;
}
return value;
},getMax:function(width,_270c){
var value=this.inherited(arguments,[width,_270c]);
if(_2706.m.isNaN(value)){
return width;
}
return value;
}});
_2707.add("com/ibm/vis/engine/internal/spechelper/ClusterGapSizeSpecHelper",["com/ibm/vis/engine/internal/spechelper/PreferredSizeSpecHelper"],function(){
_2709.DEFAULT_GAP_WIDTH=0;
});
return _2709;
});
},"com/ibm/vis/engine/internal/grammar/layout/ConnectionPoint":function(){
define("com/ibm/vis/engine/internal/grammar/layout/ConnectionPoint",["com/ibm/init/fork!./ConnectionSide","com/ibm/init/fork!../../struct/Point","com/ibm/init/statics","dojo/_base/declare"],function(_270d,_270e,_270f,_2710){
var _2711=_2710("com.ibm.vis.engine.internal.grammar.layout.ConnectionPoint",null,{side:null,arrowStyle:null,constructor:function(side,_2712){
this.side=side;
this.arrowStyle=_2712;
},determinePoint:function(_2713,_2714,_2715){
var x=0;
var y=0;
var _2716=(_2715+1)/(_2714+1);
switch(this.side){
case _270d.m.LEFT:
x=_2713.x;
y=_2713.y+_2713.height*_2716;
break;
case _270d.m.RIGHT:
x=_2713.getX2();
y=_2713.getY2()-_2713.height*_2716;
break;
case _270d.m.TOP:
x=_2713.getX2()-_2713.width*_2716;
y=_2713.y;
break;
case _270d.m.BOTTOM:
x=_2713.x+_2713.width*_2716;
y=_2713.getY2();
}
return new _270e.m(x,y);
},hashCode:function(){
var prime=31;
var _2717=1;
_2717=prime*_2717+((this.arrowStyle==null)?0:this.arrowStyle.hashCode());
_2717=prime*_2717+this.side.ordinal();
return _2717;
},equals:function(obj){
if(this==obj){
return true;
}
if(obj==null){
return false;
}
if(!(obj instanceof _2711)){
return false;
}
var other=obj;
if(this.arrowStyle!=other.arrowStyle){
return false;
}
if(this.side!=other.side){
return false;
}
return true;
},toString:function(){
return "ConnectionPoint "+this.side+", "+this.arrowStyle;
}});
return _2711;
});
},"com/ibm/vis/engine/internal/migration/PathExpression":function(){
define("com/ibm/vis/engine/internal/migration/PathExpression",["com/ibm/init/fork!./PathSegment","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../nativeImpl/StringBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_2718,_2719,_271a,_271b,_271c){
var _271d=_271c("com.ibm.vis.engine.internal.migration.PathExpression",null,{lastSegment:null,constructor:function(path){
var parts=_2718.m.split(path,".");
for(var _271e=0,_271f=parts.length;_271e<_271f;++_271e){
var part=parts[_271e];
var _2720=_271d.splitArrays(part);
for(var _2721=0,_2722=_2720.length;_2721<_2722;++_2721){
var _2723=_2720[_2721];
this.lastSegment=new _2718.m(_2723,this.lastSegment);
}
}
},convertVariableDeclarationToReference:function(){
var _2724=this.lastSegment;
do{
_2724.convertVariableDeclarationToReference();
}while((_2724=_2724.parent)!=null);
},evaluate:function(_2725){
return this.lastSegment.evaluate(_2725);
},next:function(_2726){
return this.lastSegment.next(_2726);
},assign:function(_2727,_2728){
this.lastSegment.assign(_2727,_2728);
},concat:function(_2729,_272a){
this.lastSegment.concat(_2729,_272a);
},remove:function(_272b){
return this.lastSegment.remove(_272b);
}});
_271d.splitArrays=function(_272c){
var _272d=new _2719.m();
var len=_272c.CPVisEngineLength();
var sb=new _271a.m();
var depth=0;
var _272e="\x00";
for(var i=0;i<len;++i){
var c=_272c.charAt(i);
if(depth==0&&_272e=="]"){
if(c=="["){
depth++;
_272d.add(sb.toString());
sb=new _271a.m();
}
}else{
if(c=="["||c=="("){
depth++;
}else{
if(c=="]"||c==")"){
depth--;
}
}
}
sb.append(c);
_272e=c;
}
_272d.add(sb.toString());
return _272d.toArray(new Array(_272d.size()));
};
return _271d;
});
},"com/ibm/vis/engine/internal/layout/Layoutable":function(){
define("com/ibm/vis/engine/internal/layout/Layoutable",["com/ibm/init/statics","dojo/_base/declare"],function(_272f,_2730){
var _2731=_2730("com.ibm.vis.engine.internal.layout.Layoutable",null,{layoutWithBounds:function(_2732,_2733,_2734){
},getMinimumSize:function(){
},getMaximumSize:function(){
},getPreferredSize:function(){
},getExtent:function(){
},getChildren:function(){
},getBounds:function(){
},getSpecifiedBounds:function(){
}});
return _2731;
});
},"com/ibm/vis/engine/internal/Fill":function(){
define("com/ibm/vis/engine/internal/Fill",["com/ibm/init/statics","dojo/_base/declare"],function(_2735,_2736){
var Fill=_2736("com.ibm.vis.engine.internal.Fill",null,{solid:null,gradient:null,toJSON:function(){
if(this.solid!=null){
return this.solid.toJSON();
}else{
if(this.gradient!=null){
return this.gradient.toJSON();
}else{
return null;
}
}
}});
Fill.makeSolid=function(c){
var fill=new Fill();
fill.solid=c;
return fill;
};
Fill.makeGradient=function(g){
var fill=new Fill();
fill.gradient=g;
return fill;
};
return Fill;
});
},"com/ibm/vis/exp/KeyboardNavigation":function(){
define("com/ibm/vis/exp/KeyboardNavigation",["dojo/_base/declare","./FeatureNavigation","./Navigation","dojo/_base/event","dojo/keys"],function(_2737,_2738,_2739,evt,keys){
var _273a=_2737("com.ibm.vis.exp.KeyboardNavigation",null,{visControl:null,navigation:null,constructor:function(_273b){
this.visControl=_273b;
this.navigation=new _2739(_273b);
},selectOnEvent:function(_273c){
var _273d=this.visControl.getInteractivity();
var x=_273c.clientX;
var y=_273c.clientY;
var items=_273d.getItemsAtPoint(x,y);
var _273e=null;
for(var i=0;i<items.length;i++){
if(this._isItemOfInterest(items[i])){
_273e=items[i];
break;
}
}
this.navigation.setSelected(_273e);
return this.newSelection;
},move:function(_273f){
var key=_273f.keyCode;
if(key==keys.TAB){
if(_273f.ctrlKey){
return;
}
var _2740=(_273f.shiftKey)?false:true;
evt.stop(_273f);
return this.navigation.nextFeature(_2740);
}
var _2741=_2738.NORMAL_WEIGHT;
if(_273f.ctrlKey){
_2741=_2738.LIGHT_WEIGHT;
}
if(_273f.shiftKey){
_2741=_2738.HEAVY_WEIGHT;
}
if(key==keys.ESCAPE){
evt.stop(_273f);
return this.navigation.back();
}else{
if(key==keys.LEFT_ARROW){
evt.stop(_273f);
return this.navigation.move(_2738.LESSER_X,_2741);
}else{
if(key==keys.RIGHT_ARROW){
evt.stop(_273f);
return this.navigation.move(_2738.GREATER_X,_2741);
}else{
if(key==keys.UP_ARROW){
evt.stop(_273f);
return this.navigation.move(_2738.LESSER_Y,_2741);
}else{
if(key==keys.DOWN_ARROW){
evt.stop(_273f);
return this.navigation.move(_2738.GREATER_Y,_2741);
}
}
}
}
}
},_isItemOfInterest:function(item){
var id=item["id"];
var back=id.indexOf("ack");
if(back>-1){
return false;
}
var out=id.indexOf("Out");
if(out>-1){
return false;
}
var inDex=id.indexOf("In");
if(inDex>-1){
return false;
}
if(id.length<3){
return false;
}
return true;
}});
return _273a;
});
},"com/ibm/vis/engine/internal/Affine":function(){
define("com/ibm/vis/engine/internal/Affine",["./grammar/coordinate/SimplePointTransform","com/ibm/init/fork!./nativeImpl/BasicFactory","com/ibm/init/fork!./struct/Point","com/ibm/init/statics","dojo/_base/declare"],function(_2742,_2743,_2744,_2745,_2746){
var _2747=_2746("com.ibm.vis.engine.internal.Affine",[_2742],{m00:0,m01:0,m02:0,m10:0,m11:0,m12:0,translateOnly:false,constructor:function(m00,m01,m02,m10,m11,m12){
this.m00=m00;
this.m10=m10;
this.m01=m01;
this.m11=m11;
this.m02=m02;
this.m12=m12;
this.translateOnly=m00==1&&m01==0&&m11==1&&m10==0;
},toJSON:function(){
var o=_2743.m.createJSONObject();
_2743.m.put(o,"xx",this.m00);
_2743.m.put(o,"xy",this.m01);
_2743.m.put(o,"dx",this.m02);
_2743.m.put(o,"yx",this.m10);
_2743.m.put(o,"yy",this.m11);
_2743.m.put(o,"dy",this.m12);
return o;
},getInverse:function(){
if(this.translateOnly){
return new _2747(1,0,-this.m02,0,1,-this.m12);
}
var det=this.m00*this.m11-this.m01*this.m10;
return new _2747(this.m11/det,-this.m01/det,(this.m01*this.m12-this.m02*this.m11)/det,-this.m10/det,this.m00/det,(-this.m00*this.m12+this.m10*this.m02)/det);
},multiply:function(other){
return new _2747(this.m00*other.m00+this.m01*other.m10,this.m00*other.m01+this.m01*other.m11,this.m00*other.m02+this.m01*other.m12+this.m02,this.m10*other.m00+this.m11*other.m10,this.m10*other.m01+this.m11*other.m11,this.m10*other.m02+this.m11*other.m12+this.m12);
},transform:function(x,y){
if(this.translateOnly){
return new _2744.m(x+this.m02,y+this.m12);
}
return new _2744.m(x*this.m00+y*this.m01+this.m02,x*this.m10+y*this.m11+this.m12);
},preservesLines:function(){
return false;
}});
_2747.fromJSON=function(item){
if(item==null){
return null;
}
var dx=_2743.m.getNumberWithDefault(item,"dx",0);
var dy=_2743.m.getNumberWithDefault(item,"dy",0);
var xx=_2743.m.getNumberWithDefault(item,"xx",1);
var xy=_2743.m.getNumberWithDefault(item,"xy",0);
var yx=_2743.m.getNumberWithDefault(item,"yx",0);
var yy=_2743.m.getNumberWithDefault(item,"yy",1);
return new _2747(xx,xy,dx,yx,yy,dy);
};
_2747.identity=function(){
return new _2747(1,0,0,0,1,0);
};
return _2747;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/SparseMutableVector":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/SparseMutableVector",["./Vector","com/ibm/init/fork!../../../../../nativeImpl/Map","com/ibm/init/statics","dojo/_base/declare"],function(_2748,_2749,_274a,_274b){
var _274c=_274b("com.ibm.vis.engine.internal.grammar.layout.graph.stress.matrix.SparseMutableVector",[_2748],{d:null,constructor:function(){
this.d=new _2749.m();
},set:function(i,value){
if(value==0){
this.d.remove(i);
}else{
this.d.put(i,value);
}
},get:function(i){
var x=this.d.get(i);
return x==null?0:x;
},dot:function(x){
throw new Error("The whole point of these classes is not to run dot products on mutable classes");
},getMap:function(){
return this.d;
}});
return _274c;
});
},"com/ibm/vis/interaction/InteractivityEvent":function(){
define("com/ibm/vis/interaction/InteractivityEvent",["com/ibm/init/statics","dojo/_base/declare"],function(_274d,_274e){
var _274f=_274e("com.ibm.vis.interaction.InteractivityEvent",null,{getType:function(){
}});
return _274f;
});
},"com/ibm/vis/engine/internal/nativeImpl/FacetSplit":function(){
define("com/ibm/vis/engine/internal/nativeImpl/FacetSplit",["dojo/_base/declare","../Vis","../facet/Faceting"],function(_2750,Vis,_2751){
var _2752=_2750("com.ibm.vis.engine.internal.nativeImpl.FacetSplit",null,{contents:null,constructor:function(_2753,spec,_2754){
var vis=new Vis(null);
vis.copyVisContextSettings(_2753);
vis.setSpecification(spec);
var _2755=this.makeFaceting(_2754,vis.grammar[0]);
vis.grammar[0].faceting=_2755;
var scene=vis.makeSceneTree(null);
this.contents=_2755.divideScene(scene);
},makeFaceting:function(_2756,_2757){
var facet=new Object();
facet.method="overlay";
var vars=new Array(_2756.length);
facet.fields=vars;
for(var i=0;i<vars.length;i++){
var ref=new Object();
ref.$ref=_2756[i];
vars[i]=new Object();
vars[i].field=ref;
}
return new _2751(_2757,facet);
},getCellCount:function(){
return this.contents.size();
},getFacetTitle:function(i){
return this.contents.get(i).name;
},getFacetScene:function(i){
return this.contents.get(i).scene;
}});
return _2752;
});
},"com/ibm/vis/engine/internal/nativeImpl/render/DojoRenderer":function(){
define("com/ibm/vis/engine/internal/nativeImpl/render/DojoRenderer",["dojo/_base/declare","dojo/topic","dojo/_base/array","dojox/gfx/matrix","dojox/gfx","dojox/gfx/shape","dojox/gfx/_gfxBidiSupport","dojo/_base/Deferred","dojo/DeferredList","dojo/_base/lang","../../../../interaction/SceneItem","../../util/SceneUtil","../List","./ShapeIntersection","../../struct/Dim","../../struct/Poly","../../struct/Rect","../../../../interaction/internal/SceneItemImpl","../NativeTextMeasure","../BasicFactory","./CanvasExt","./VMLExt","./SilverlightExt","./ClippingMixin","./SVGFilters"],function(_2758,topic,array,m,g,_2759,_275a,_275b,_275c,lang,_275d,_275e,List,_275f,Dim,Poly,Rect,_2760,ntm,BF){
var _2761=_2758("com.ibm.vis.engine.internal.nativeImpl.render.DojoRenderer",null,{OBJECT_SELECTION_HANDLE:"/IBMVisEngine/ObjectSelected",container:null,surface:null,width:600,height:600,objectSelectionMouseEvent:null,nativeSceneMap:null,originalSceneMap:null,_sceneItemCache:null,_initDeferred:null,_groupsWithNoId:null,constructor:function(_2762,width,_2763){
this.container=_2762;
if(width!=null){
this.width=width;
}
if(_2763!=null){
this.height=_2763;
}
this.nativeSceneMap={};
this.originalSceneMap={};
this._sceneItemCache={};
this._groupsWithNoId=[];
this.surface=this._createSurface(_2762,this.width,this.height);
},destroy:function(){
this.clear();
this._destroyed=true;
this.objectSelectionMouseEvent=null;
this._sceneItemCache=null;
this.nativeSceneMap=null;
this.originalSceneMap=null;
this._groupsWithNoId=null;
if(this.surface){
this.surface.destroy();
}
},init:function(){
if(!this._initDeferred){
this._initDeferred=new _275b();
var _2764=new _275b();
this.surface.whenLoaded(this,function(_2765){
if(!this._destroyed){
_2764.resolve(this);
}else{
var error=new Error("DojoRendered already destroyed");
error.log=false;
_2764.reject(error);
}
});
var _2766=new _275c([_2764,ntm.init()],false,true);
_2766.then(lang.hitch(this,function(){
this._initDeferred.resolve(this);
}),lang.hitch(this,function(error){
this._initDeferred.reject(error);
}));
}
return this._initDeferred;
},_createSurface:function(_2767,width,_2768){
if(this.surface==null){
var _2769=g.createSurface(_2767,width,_2768);
return _2769;
}else{
return this.surface;
}
},setSize:function(width,_276a){
if(width!=this.width||_276a!=this.height){
this.surface.setDimensions(width,_276a);
}
this.width=width;
this.height=_276a;
},clear:function(){
if(this.surface){
this.surface.clear();
}
delete this.originalSceneMap;
delete this._sceneItemCache;
this.originalSceneMap={};
this._sceneItemCache={};
for(var shape in this.nativeSceneMap){
this._disposeShape(this.nativeSceneMap[shape]);
}
delete this.nativeSceneMap;
this.nativeSceneMap={};
var _276b=this._groupsWithNoId.length;
for(var i=0;i<_276b;i++){
this._disposeShape(this._groupsWithNoId[i]);
}
delete this._groupsWithNoId;
this._groupsWithNoId=[];
},_disposeShape:function(shape){
try{
_2759.dispose(shape);
}
catch(err){
}
},render:function(scene){
this.clear();
if(window["_clearSVGFilterCache"]){
_clearSVGFilterCache();
}
this.surface.setTextDir("auto");
this.deserialize(this.surface,scene);
},connectObjectSelected:function(shape,event,meta){
shape.connect(event,function(e){
topic.publish(_2761.OBJECT_SELECTION_HANDLE,[e,meta]);
});
},getSceneSize:function(){
return new Dim(this.width,this.height);
},getSceneItems:function(){
var _276c=new List();
this._addSceneItems(this.surface,_276c);
return _276c;
},_createSceneItem:function(id){
if(!this._sceneItemCache[id]){
this._sceneItemCache[id]=new _2760(this.originalSceneMap[id]);
}
return this._sceneItemCache[id];
},_addSceneItems:function(item,_276d){
_276d.add(new _275d(item));
if(item.children!=null){
for(var i=0;i<item.children.length;i++){
this._addSceneItems(item.children[i],_276d);
}
}
},getHitItemsMatching:function(_276e,_276f,_2770){
var _2771=new List();
if(_276e&&!_276e.bounds){
_276e.getBounds();
}
this._addHitItems(this.surface,_2771,_276e,_276f,_2770);
var data=_2771.toArray();
var _2772=new List();
for(var i=data.length-1;i>=0;i--){
_2772.add(data[i]);
}
return _2772.toArray();
},getItemsMatchingAnyRows:function(rows,vis){
var _2773=new List();
this._addMatchByRow(_2773,this.surface,rows,vis);
var data=_2773.toArray();
var _2774=new List();
for(var i=data.length-1;i>=0;i--){
_2774.add(data[i]);
}
return _2774.toArray();
},_matchLegendEntry:function(item,vis){
if(item.id==null||item.id.indexOf("LC")==-1){
return;
}
var _2775=item.children;
if(_2775!=null){
for(var i=0;i<_2775.length;i++){
var child=_2775[i];
var _2776=this.originalSceneMap[child.id];
if(_2776!=null&&_2776.value!=null){
var _2777={};
_2777.nativeSceneItem=child;
var _2778=new Array();
_2778.push(_2776.field);
var _2779=new Array();
_2779.push(_2776.value);
var _277a=vis.getMatchingRows(_2778,_2779,false);
_2777.rows=_277a;
return _2777;
}
}
}
},_addMatchByRow:function(_277b,item,rows,vis){
if(item.id!=null&&item.id.charAt(0)=="_"){
return;
}
var _277c=BF.getItem(item,"rows");
if(_277c==null){
var _277d=this._matchLegendEntry(item,vis);
if(_277d!=null){
item=_277d.nativeSceneItem;
_277c=_277d.rows;
}
}
if(_277c!=null){
var _277e=BF.size(_277c);
var found=false;
for(var j=0;j<rows.length&&!found;j++){
for(var i=0;i<_277e&&!found;i++){
var _277f=BF.getArrayItem(_277c,i);
if(_277f==rows[j]){
_277b.add(this._createSceneItem(item.id));
found=true;
}
}
}
}
if(item.children!=null){
for(var i=0;i<item.children.length;i++){
this._addMatchByRow(_277b,item.children[i],rows,vis);
}
}
},_addHitItems:function(item,_2780,_2781,_2782,_2783){
var id=item.id;
if(id!=null&&id.charAt(0)=="_"){
return;
}
if(this._getLevelInSceneTree(item)==1&&_2781){
item.fullCachedBounds=item.fullCachedBounds||this._getTransformedBoundingBox(item);
if(item.fullCachedBounds){
if(!item.fullCachedBounds.isRectIntersects(_2781.getBounds())){
return false;
}
}
}
var _2784=this.getTransformed(item,_2781);
if(this.matches(item,_2784,_2782,_2783)){
var _2785=this._createSceneItem(item.id);
_2780.add(_2785);
if(id&&id.indexOf("LE")>-1){
return;
}
}
if(item.children!=null){
for(var i=0;i<item.children.length;i++){
this._addHitItems(item.children[i],_2780,_2784,_2782,_2783);
}
}
},matches:function(item,poly,_2786,_2787){
if(item.id==null){
return false;
}
if(item.children!=null){
return false;
}
if(poly!=null&&!this.intersects(item,poly,this.originalSceneMap[item.id])){
return false;
}
if(poly!=null&&item.parent!=null&&item.parent.clip!=null){
var clip=item.parent.clip;
var inter=_275f.boundsIntersectsRect(poly,clip.x,clip.y,clip.width,clip.height);
if(!inter){
return false;
}
}
if(_2786!=null&&_2786!=_2760.getSceneType(item.id)){
return false;
}
return _2760.rowsMatch(_2787,item);
},getTransformed:function(item,_2788){
var _2789;
if(_2788==null){
return null;
}
if(item.matrix==null){
_2789=_2788;
}else{
if(item.inverseMatrixCache==null){
item.inverseMatrixCache=m.invert(item.matrix);
}
var x=new Array(_2788.x.length);
var y=new Array(_2788.x.length);
for(var i=0;i<x.length;i++){
var p=m.multiplyPoint(item.inverseMatrixCache,_2788.x[i],_2788.y[i]);
x[i]=p.x;
y[i]=p.y;
}
_2789=new Poly(x,y,true,true);
}
return _2789;
},parentBoundsIntersect:function(item,_278a){
var _278b=this.originalSceneMap[item.id];
if(_278b.width==null||_278b.height==null||_278b.x==null||_278b.y==null){
return false;
}
return _275f.boundsIntersectsRect(_278a,_278b.x,_278b.y,_278b.width,_278b.height);
},intersects:function(shape,_278c,_278d){
return shape!=null&&_275f.intersects(shape,_278c,_278d);
},add:function(_278e,id,_278f){
if(!_278e){
_278e=this.surface;
}
var _2790=this.deserialize(_278e,_278f);
if(id!=null){
this.nativeSceneMap[id]=_2790;
}
return _2790;
},addAfter:function(_2791,_2792,id,_2793){
var _2794=this.add(_2791,id,_2793);
if(_2792!=null){
_2791=_2794.getParent();
var len=_2791.children.length;
var _2795=len;
for(var i=0;i<len;i++){
if(_2792==_2791.children[i]["id"]){
_2795=i;
break;
}
}
if(_2795<len-2){
_2794.moveToBack();
for(var j=0;j<_2795+1;j++){
_2791.children[_2795+1].moveToBack();
}
}
}
return _2794;
},update:function(_2796,id){
var _2797=this.nativeSceneMap[id];
if(_2797){
var _2798=_2797.getParent();
this.surface.remove(_2797);
this._disposeShape(_2797);
return this.add(_2798,id,_2796);
}
return null;
},removeList:function(list){
if(list==null){
return;
}
var size=list.size();
for(var i=0;i<size;i++){
var item=list.get(i);
this.remove(item,item["id"]);
}
},remove:function(_2799,id){
if(this.nativeSceneMap[id]){
var item=this.nativeSceneMap[id];
if(item!=null){
this.surface.remove(item);
this._disposeShape(item);
delete this.nativeSceneMap[id];
}
this.originalSceneMap[id]=null;
}
},deserialize:function(_279a,_279b){
if(_279b instanceof Array){
return array.map(_279b,lang.hitch(this,this.deserialize,_279a));
}
var s=_279b.shape,shape;
if(s){
if(s.height<0){
console.log("DojoRenderer deserialize: Shape has invalid height "+s.height+"--cannot render");
return null;
}
if(s.width<0){
console.log("DojoRenderer deserialize: Shape has invalid width "+s.width+"--cannot render");
return null;
}
if(s.text){
s=lang.delegate(s,{text:s.text.replace(/ /g,"\xa0")});
}
shape=_279a.createShape(s);
}else{
shape=_279a.createGroup();
}
if(!shape){
return null;
}
if(_279b.transform){
shape.setTransform(_279b.transform);
}
if(_279b.stroke&&this._shouldOutlineShape(_279b,shape)){
shape.setStroke(this._getStroke(_279b.stroke));
}
if(_279b.fill&&this._shouldFillShape(_279b,shape)){
shape.setFill(this._getFill(_279b,shape));
}
if(_279b.font){
shape.setFont(_279b.font);
}
if(_279b.effect&&shape.setEffect){
shape.setEffect(_279b.effect,_279b.shape);
}
if(_279b.tooltip){
shape.tooltip=_279b.tooltip;
}
if(_279b.id){
shape.id=_279b.id;
if(g.renderer=="svg"||g.renderer=="vml"){
shape.rawNode.id=shape.id;
}
this.nativeSceneMap[_279b.id]=shape;
this.originalSceneMap[_279b.id]=_279b;
if(_279b.rows!=null){
shape.rows=_279b.rows;
if(this.objectSelectionMouseEvent!=null){
this.connectObjectSelected(shape,this.objectSelectionMouseEvent,_279b.rows);
}
}
if(_279b.id=="localization"){
var _279c=_279b.baseTextDirection;
if(_279c!=null){
if((_279c!="ltr")&&(_279c!="rtl")){
_279c="auto";
}
}else{
_279c="auto";
}
console.log("reached bidi localization node textDir = "+_279c);
_279a.setTextDir(_279c);
}
}else{
this._groupsWithNoId.push(shape);
}
if(_279b.children){
array.forEach(_279b.children,lang.hitch(this,this.deserialize,shape));
}
if(_279b.clip&&shape.setClip){
shape.setClip(_279b.clip);
}
return shape;
},_shouldOutlineShape:function(_279d,shape){
return !(_279d.shape&&_279d.shape.type=="text");
},_shouldFillShape:function(_279e,shape){
if(g.renderer!="vml"){
return true;
}
if(!_279e.shape){
return false;
}
var bb=shape.getBoundingBox();
if(_279e.shape.type!="text"&&bb!=null&&(bb.width==0||bb.height==0)){
return false;
}
return true;
},_getStroke:function(_279f){
if(_279f.color&&(typeof _279f.color.a=="undefined"||_279f.color.a==null)&&typeof _279f.color.colors=="undefined"){
_279f.color.a=1;
}
return _279f;
},_getFill:function(_27a0,shape){
var fill=lang.clone(_27a0.fill);
if(g.renderer=="vml"&&_27a0.shape&&_27a0.fill.type=="radial"&&_2761.VML_RADIAL_UNSUPPORTED_SHAPES[_27a0.shape.type]){
var _27a1=null;
var N=fill.colors.length;
if(N==2){
_27a1=fill.colors[0];
}else{
_27a1=fill.colors[Math.floor(N/2)];
}
if(typeof _27a1.color=="object"){
return "rgb("+_27a1.color.r+","+_27a1.color.g+","+_27a1.color.b+")";
}else{
return _27a1.color;
}
}
if(typeof fill.colors!="undefined"){
for(var i=0;i<fill.colors.length;i++){
var color=fill.colors[i].color;
if(typeof color.r=="undefined"){
color.r=255;
}
if(typeof color.g=="undefined"){
color.g=255;
}
if(typeof color.b=="undefined"){
color.b=255;
}
if(typeof color.a=="undefined"){
color.a=1;
}
}
}else{
if(typeof fill.r=="undefined"){
fill.r=255;
}
if(typeof fill.g=="undefined"){
fill.g=255;
}
if(typeof fill.b=="undefined"){
fill.b=255;
}
if(typeof fill.a=="undefined"){
fill.a=1;
}
}
return fill;
},_getTransformedBoundingBox:function(shape,_27a2){
if(shape.matrix){
_27a2=m.multiply(shape.matrix,_27a2);
}
var _27a3=null;
if(shape.children){
var endX=0;
var endY=0;
for(child in shape.children){
var _27a4=shape.children[child];
var _27a5=this._getTransformedBoundingBox(_27a4,_27a2);
if(_27a5!=null){
if(_27a3==null){
_27a3=_27a5;
endX=_27a3.x+_27a3.width;
endY=_27a3.y+_27a3.height;
}else{
_27a3.x=Math.min(_27a3.x,_27a5.x);
_27a3.y=Math.min(_27a3.y,_27a5.y);
endX=Math.max(endX,_27a5.x+_27a5.width);
endY=Math.max(endY,_27a5.y+_27a5.height);
}
}
}
if(_27a3){
_27a3.width=endX-_27a3.x;
_27a3.height=endY-_27a3.y;
}
_27a3=Rect.toRect(_27a3);
}else{
if(shape.id){
var _27a6=this.originalSceneMap[shape.id];
_27a3=_275e.getBounds(_27a6);
if(_27a3){
_27a6.bounds=_27a3;
if(_27a2){
var _27a7=m.multiplyPoint(_27a2,_27a3.x,_27a3.y);
_27a3.x=_27a7.x;
_27a3.y=_27a7.y;
}
}
}
}
return _27a3;
},_getLevelInSceneTree:function(item){
var level=0;
var _27a8=item.parent;
while(_27a8){
level++;
_27a8=_27a8.parent;
}
return level;
}});
_2761.VML_RADIAL_UNSUPPORTED_SHAPES={"path":true,"line":true,"polyline":true,"rectangle":true};
_2761.SILVERLIGHT_SUPPORTED_EVENTS={"onclick":true,"onmouseenter":true,"onmouseleave":true,"onmousedown":true,"onmouseup":true,"onmousemove":true,"onkeydown":true,"onkeyup":true};
return _2761;
});
},"com/ibm/vis/engine/internal/grammar/element/EdgeBuilder":function(){
define("com/ibm/vis/engine/internal/grammar/element/EdgeBuilder",["./Builder","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/fork!../../scene/ItemBuilder","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_27a9,_27aa,_27ab,_27ac,_27ad,_27ae){
var _27af=_27ae("com.ibm.vis.engine.internal.grammar.element.EdgeBuilder",[_27a9],{symbol:null,startArrow:null,endArrow:null,prefHorizontal:null,constructor:function(_27b0,_27b1,_27b2,style){
this.snap=_27aa.m.getSnap(style);
if(style!=null){
this.symbol=style.symbol;
this.startArrow=style.startArrow;
this.endArrow=style.endArrow;
}
this.prefHorizontal=_27b2.width>_27b2.height;
},makeShapeInside:function(b,_27b3){
return null;
},makeAugmentedShape:function(_27b4,_27b5){
var polys=_27b4.featurePolygons(_27b5);
if(polys==null){
return null;
}
var x1=polys[0].x[0];
var y1=polys[0].y[0];
var p=polys[polys.length-1];
var x2=p.x[p.x.length-1];
var y2=p.y[p.y.length-1];
return _27ab.m.makeLine(x1,y1,x2,y2,null);
},makeShape:function(_27b6,_27b7){
var x1,y1,x2,y2;
var line;
if(_27b6.XYUndefined()){
return null;
}else{
if(this.coords.scales.length==1&&_27b6.hasY2()){
x1=this.extent.width/2;
y1=this.extent.height-_27b6.Y()*this.extent.height;
x2=x1;
y2=this.extent.height-_27b6.Y2()*this.extent.height;
line=_27ab.m.makeLine(x1,y1,x2,y2,null);
}else{
if(this.coords.scales.length==2&&_27b6.hasX2()&&_27b6.hasY2()){
x1=_27b6.X()*this.extent.width;
y1=this.extent.height-_27b6.Y()*this.extent.height;
x2=_27b6.X2()*this.extent.width;
y2=this.extent.height-_27b6.Y2()*this.extent.height;
line=_27ab.m.makeLine(x1,y1,x2,y2,null);
}else{
return null;
}
}
}
line.setEdgeProperties(this.prefHorizontal,this.symbol,this.startArrow,this.endArrow);
if(_27b7!=null){
line.setRow(_27b7);
}
return line;
},makeSwatch:function(_27b8){
var _27b9=new _27ac.m();
var line=_27ab.m.makeLine(0,this.extent.height/2,this.extent.width,this.extent.height/2,null);
line.setEdgeProperties(true,this.symbol,this.startArrow,this.endArrow);
_27b9.add(line);
return _27b9;
}});
return _27af;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/CycleRemovalAlgorithm":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/CycleRemovalAlgorithm",["com/ibm/init/statics","dojo/_base/declare"],function(_27ba,_27bb){
var _27bc=_27bb("com.ibm.vis.engine.internal.grammar.layout.graph.CycleRemovalAlgorithm",null,{removeCycles:function(graph){
}});
return _27bc;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/ProjectionTransform":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/ProjectionTransform",["./CoordinateTransform","com/ibm/init/fork!./MapProjection","com/ibm/init/fork!../../struct/Path","com/ibm/init/statics","dojo/_base/declare"],function(_27bd,_27be,_27bf,_27c0,_27c1){
var _27c2=_27c1("com.ibm.vis.engine.internal.grammar.coordinate.ProjectionTransform",[_27bd],{visContext:null,projectionType:null,standardLongitude:null,transform:null,constructor:function(_27c3,_27c4,_27c5){
this.visContext=_27c3;
this.projectionType=_27c4;
this.standardLongitude=_27c5;
},setTransforms:function(_27c6,scale){
var y1=scale[0].dimensionValueToDataValue(0,_27c6.height);
var y2=scale[0].dimensionValueToDataValue(_27c6.height,_27c6.height);
var x1=scale[1].dimensionValueToDataValue(0,_27c6.width);
var x2=scale[1].dimensionValueToDataValue(_27c6.width,_27c6.width);
this.transform=new _27be.m(this.projectionType,this.standardLongitude,x1,x2,y1,y2,_27c6);
},needsInsideAxes:function(){
return true;
},transformShape:function(shape,_27c7,scale){
if(this.transform==null){
this.setTransforms(_27c7,scale);
}
if(shape.isGlyphLike()){
var p=shape.getCenter();
var q=this.transform.transform(p.x,p.y);
shape.affine(1,q.x-p.x,1,q.y-p.y,false);
}else{
if(shape.getParts()!=null){
var parts=shape.getParts();
for(var i=0;i<parts.length;++i){
parts[i]=this.transformShape(parts[i],_27c7,scale);
}
}else{
var geom=shape.applyPointTransform(this.transform);
if(geom!=null){
var _27c8=new _27bf.m(geom.x,geom.y,shape.isFilled(),geom.types);
_27c8.copyInfoFrom(shape);
shape=_27c8;
}
}
}
return shape;
},inverseTransform:function(_27c9,_27ca,_27cb){
return null;
},calculateGapSize:function(width,_27cc){
return width;
},isInversible:function(){
return false;
}});
return _27c2;
});
},"com/ibm/vis/engine/internal/grammar/scale/EmptyScaleSpan":function(){
define("com/ibm/vis/engine/internal/grammar/scale/EmptyScaleSpan",["./ScaleSpan","com/ibm/init/statics","dojo/_base/declare"],function(_27cd,_27ce,_27cf){
var _27d0=_27cf("com.ibm.vis.engine.internal.grammar.scale.EmptyScaleSpan",[_27cd],{constructor:function(unit,_27d1,info,_27d2,_27d3,_27d4,_27d5){
},addMinorTicks:function(ticks){
},addTicks:function(ticks,_27d6){
},getInputRange:function(){
return null;
},getAdjustedInputRange:function(){
return null;
},getMaxTickLength:function(font){
return NaN;
},getSuggestedElementSize:function(full){
return null;
},zeroOneToDataValue:function(value){
return null;
},getTickMin:function(){
return NaN;
},getTickSize:function(){
return NaN;
},getTickUnit:function(){
return null;
},setupForTickCount:function(_27d7,_27d8){
},computeTickCount:function(){
return 0;
},toZeroOne:function(value,unit,clamp){
return null;
},getCategoryCount:function(){
return 0;
},isApplicable:function(u){
return u==null||(u.measure.matches(this.inputUnit.measure));
},getUndefinedFromMismatched:function(spans){
},getGoodDisplaySpanSize:function(){
return 1;
},addAllTicks:function(ticks,_27d9){
this.addTicks(ticks,_27d9);
},getBase:function(_27da){
return null;
},isUnitApplicable:function(value,unit){
return false;
}});
return _27d0;
});
},"com/ibm/vis/engine/internal/struct/MultiLineText":function(){
define("com/ibm/vis/engine/internal/struct/MultiLineText",["./Text","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!../scene/Font","com/ibm/init/fork!../Affine","com/ibm/init/fork!./Rect","com/ibm/init/fork!./Dim","com/ibm/init/statics","dojo/_base/declare"],function(_27db,_27dc,_27dd,_27de,_27df,_27e0,_27e1,_27e2,_27e3,_27e4){
var _27e5=_27e4("com.ibm.vis.engine.internal.struct.MultiLineText",[_27db],{lines:null,clip:false,t:null,constructor:function(_27e6,x,y,_27e7,_27e8,font,style,_27e9,size,clip){
this.lines=new _27dc.m();
this.clip=clip;
this.makeParts(clip);
if(this.lines.size()>1){
this.text="";
for(var _27ea=0,_27eb=this.lines,_27ec=_27eb.size();_27ea<_27ec;++_27ea){
var t=_27eb.get(_27ea);
this.text+=t.text+"\n";
}
this.text=this.text.substring(0,this.text.CPVisEngineLength()-1);
}
},getType:function(){
return "multitext";
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("text".CPVisEngineEquals(type)||"multitext".CPVisEngineEquals(type)){
return true;
}
return false;
},buildParts:function(_27ed){
this.size=_27ed;
this.makeParts(this.clip);
},getNumLines:function(){
return this.lines.size();
},getWidth:function(){
return this.size.width;
},setTransform:function(_27ee){
this.cachedBounds=null;
this.t=_27ee;
for(var _27ef=0,_27f0=this.lines,_27f1=_27f0.size();_27ef<_27f1;++_27ef){
var child=_27f0.get(_27ef);
child.setTransform(_27ee);
}
},calculateTextWidth:function(){
var width=0;
for(var _27f2=0,_27f3=this.lines,_27f4=_27f3.size();_27f2<_27f4;++_27f2){
var line=_27f3.get(_27f2);
width=Math.max(line.getWidth(),width);
}
return width;
},modifyFontSize:function(_27f5){
this.cachedBounds=null;
for(var _27f6=0,_27f7=this.lines,_27f8=_27f7.size();_27f6<_27f8;++_27f6){
var line=_27f7.get(_27f6);
line.modifyFontSize(_27f5);
}
},clearForNumericalClipping:function(){
this.cachedBounds=null;
this.lines.clear();
var pTop=0;
if(this.style!=null&&this.style.padding!=null){
if(_27dd.m.isNumber(this.style.padding)){
var n=this.style.padding;
pTop=n;
}else{
try{
var ps=this.style.padding;
pTop=_27de.m.convertLength(ps.top,1,1);
}
catch(ex){
if(ex instanceof Error){
pTop=0;
}else{
throw ex;
}
}
}
}
var ctl=_27db.createTextWithShapedValue(_27df.m.HASH+_27df.m.HASH+_27df.m.HASH,this.p.x,pTop,this.align,"end",this.font,this.style,this.clipSymbol,this.size);
ctl.clipToFit(this.size.width);
this.text=ctl.text;
this.lines.add(ctl);
},makeParts:function(_27f9){
this.cachedBounds=null;
this.lines=new _27dc.m();
var _27fa=this.text;
var _27fb=new _27dc.m();
this.splitLines(_27fa,0,_27fb,_27f9);
for(var _27fc=0,_27fd=_27fb.size();_27fc<_27fd;++_27fc){
var line=_27fb.get(_27fc);
this.wasClipped=line.wasClipped?true:this.wasClipped;
line.copyInfoFrom(this);
if("".CPVisEngineEquals(line.text)){
line.text=" ";
}
this.lines.add(line);
}
if(this.wasClipped&&this.clipSymbol.CPVisEngineEquals(_27df.m.HASH)){
this.clearForNumericalClipping();
}
if(this.id!=null){
this.setID(this.id);
}
var top=this.getBounds().y;
for(var _27fe=0,_27ff=this.lines,_2800=_27ff.size();_27fe<_2800;++_27fe){
var t=_27ff.get(_27fe);
t.p.y+=top;
}
},splitLines:function(_2801,_2802,_2803,_2804){
this.cachedBounds=null;
var _2805=this.font.getHeight();
var _2806=this.clipSymbol.CPVisEngineEquals(_27df.m.ELLIPSIS);
var _2807=_2801.split("\n",-1);
for(var _2808=0,_2809=_2807.length;_2808<_2809;++_2808){
var line=_2807[_2808];
if(_2802+_2805>this.size.height){
var last=_2803.size()-1;
if(last>=0){
var _280a=_2803.get(last);
_2803.set(last,this.clipString(_280a.text+_27df.m.ELLIPSIS,_2802-_2805));
}
break;
}
line=line.CPVISEngineTrim();
var _280b=this.font.getAmountThatFits(line,this.size.width);
if(_280b==0&&line.CPVisEngineLength()>0){
return _2802;
}
var _280c=line;
var _280d="";
if(_280b<line.CPVisEngineLength()){
_280c=line.substring(0,_280b);
var _280e=false;
for(var i=_280b-1;i>0;--i){
if(_27dd.m.isWhitespace(_280c.charAt(i))){
_280b=i;
_280e=true;
break;
}
}
if(!_280e&&_27dd.m.isWhitespace(line.charAt(_280b))){
_280e=true;
}
_280c=line.substring(0,_280b);
_280d=line.substring(_280b);
if(!_280e&&_2804){
var _280f=false;
if(_2806&&_27dd.m.isPunctuation(_280c+_280d.substring(0,1),_280b-1)){
_280f=true;
}else{
var _2810=this.clipString(_280c+"...",_2802);
if(_2810.wasClipped){
this.wasClipped=true;
}
_280c=_2810.text;
}
if(!_280f){
for(var i=0;i<_280d.CPVisEngineLength();++i){
if(_2806&&_27dd.m.isPunctuation(_280d,i)){
_280f=true;
_280d=_280d.substring(i+1);
break;
}
}
}
if(!_280f){
_280d="";
}
}else{
if(!_280e&&!_2804){
for(var i=0;i<line.CPVisEngineLength();++i){
if(_27dd.m.isWhitespace(line.charAt(i))){
_280c=line.substring(0,i);
_280d=line.substring(i);
_280e=true;
break;
}
}
if(!_280e){
_280c=line;
_280d="";
}
}
}
}
if(_280d.CPVisEngineLength()>0&&_2802+_2805*2>this.size.height){
if(_2804){
var _2811=this.clipString(line,_2802);
_2811.wasClipped=true;
_280c=_2811.text;
_280d="";
}else{
_280c=line;
_280d="";
}
}
var _2812=_27db.createTextWithShapedValue(_280c,this.p.x,_2802,this.align,"end",this.font,this.style,this.clipSymbol,this.size);
if(this.wasClipped){
_2812.wasClipped=true;
}
_2803.add(_2812);
_2802+=_2805;
if(_280d.CPVisEngineLength()>0){
_2802=this.splitLines(_280d,_2802,_2803,_2804);
}
}
return _2802;
},clipString:function(line,y){
var _2813=_27db.createTextWithShapedValue(line,this.p.x,y,this.align,"end",this.font,this.style,this.clipSymbol,this.size);
_2813.clipToFit(this.size.width);
this.wasClipped=true;
return _2813;
},affine:function(xx,dx,yy,dy,_2814){
this.inherited(arguments,[xx,dx,yy,dy,_2814]);
this.makeParts(this.clip);
},setRows:function(rows){
this.rows=rows;
for(var _2815=0,_2816=this.lines,_2817=_2816.size();_2815<_2817;++_2815){
var part=_2816.get(_2815);
part.rows=rows;
part.key=this.key;
}
},setID:function(ID){
this.id=ID;
var i=0;
for(var _2818=0,_2819=this.lines,_281a=_2819.size();_2818<_281a;++_2818){
var part=_2819.get(_2818);
part.id=ID+"_"+(i++);
}
},setShapeParameters:function(o){
},toJSON:function(){
var o=this.makeBasicItem();
this.addBoundsToJson(o);
var _281b=_27dd.m.createSizedJSONArray(this.lines.size());
for(var _281c=0,_281d=this.lines,_281e=_281d.size();_281c<_281e;++_281c){
var part=_281d.get(_281c);
part.snap=this.snap;
var obj=part.toJSON();
_281b.push(obj);
}
_27dd.m.put(o,"children",_281b);
_27dd.m.put(o,"type","multitext");
return o;
},addBoundsToJson:function(o){
this.cachedBounds=null;
if(this.t==null){
this.getBounds().setShapeParameters(o);
}else{
var _281f=this.getTransformedBounds();
_281f.setShapeParameters(o);
}
},getTransformedBounds:function(){
var _2820=this.getBounds();
var _2821=_27e0.m.fromJSON(this.t);
var x2=_2820.getX2();
var y2=_2820.getY2();
var x1=_2820.x;
var y1=_2820.y;
var _2822=new Array(4);
_2822[0]=_2821.transform(x1,y1);
_2822[1]=_2821.transform(x1,y2);
_2822[2]=_2821.transform(x2,y1);
_2822[3]=_2821.transform(x2,y2);
var minX=_2822[0].x;
var maxX=minX;
var minY=_2822[0].y;
var maxY=minY;
for(var i=1;i<4;++i){
minX=Math.min(minX,_2822[i].x);
minY=Math.min(minY,_2822[i].y);
maxX=Math.max(maxX,_2822[i].x);
maxY=Math.max(maxY,_2822[i].y);
}
return new _27e1.m(minX,minY,maxX-minX,maxY-minY);
},transpose:function(b){
this.cachedBounds=null;
this.inherited(arguments,[b]);
for(var _2823=0,_2824=this.lines,_2825=_2824.size();_2823<_2825;++_2823){
var part=_2824.get(_2823);
part.transpose(b);
}
},fitInside:function(area){
this.cachedBounds=null;
var cur=new _27e2.m(area.width,area.height);
for(var _2826=0,_2827=this.lines,_2828=_2827.size();_2826<_2828;++_2826){
var line=_2827.get(_2826);
line=line.fitInside(cur);
if(line==null||line.wasClipped){
this.wasClipped=true;
}
if(line!=null){
cur.height-=line.getHeight();
}
}
return this;
},clipToFit:function(width){
this.cachedBounds=null;
var _2829="";
for(var _282a=0,_282b=this.lines,_282c=_282b.size();_282a<_282c;++_282a){
var line=_282b.get(_282a);
line.clipToFit(width);
if(line.wasClipped){
this.wasClipped=true;
}
_2829=_2829+line.text+"\n";
}
var _282d=_2829.CPVisEngineLength();
this.text=_282d>0?_2829.substring(0,_282d-1):"";
},stretchToFit:function(area){
this.cachedBounds=null;
var _282e=_27db.createTextWithShapedValue(this.text.CPVisEngineReplace("\n"," "),this.p.x,this.p.y,this.align,this.valign,this.font,this.style,this.clipSymbol,this.size);
_282e.copyInfoFrom(this);
return _282e.stretchToFit(area);
},getLines:function(){
return this.lines;
}});
_27e5.createMultiLineTextWithShapedValue=function(_282f,x,y,_2830,_2831,font,style,_2832,size,clip){
return new _27e5(_282f,x,y,_2830,_2831,font,style,_2832,size,clip);
};
_27e3.add("com/ibm/vis/engine/internal/struct/MultiLineText",["com/ibm/vis/engine/internal/struct/Text"],function(){
_27e5.MULTITEXT_FLAGS=0;
_27e5.MULTITEXT_NAME="multitext";
});
return _27e5;
});
},"com/ibm/vis/engine/internal/grammar/layout/cloud/DefaultCloudAlgorithms":function(){
define("com/ibm/vis/engine/internal/grammar/layout/cloud/DefaultCloudAlgorithms",["../../../../../extension/ExtensionFactory","com/ibm/init/fork!../../../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./flow/FlowLayoutAlgorithm","com/ibm/init/statics","dojo/_base/declare"],function(_2833,_2834,_2835,_2836,_2837){
var _2838=_2837("com.ibm.vis.engine.internal.grammar.layout.cloud.DefaultCloudAlgorithms",[_2833],{newInstance:function(name,_2839){
if("flow".CPVisEngineEquals(name)){
return new _2835.m();
}
return null;
}});
_2838.registerExtensions=function(){
if(!_2838.initialized){
_2838.initialized=true;
_2834.m.INSTANCE.registerDefaultFactory(new _2838());
}
};
_2836.add("com/ibm/vis/engine/internal/grammar/layout/cloud/DefaultCloudAlgorithms",["com/ibm/vis/extension/ExtensionFactory","com/ibm/vis/extension/internal/RAVEExtensionManager"],function(){
_2838.initialized=false;
});
return _2838;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/functions/CompositeOperation":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/functions/CompositeOperation",["com/ibm/init/statics","dojo/_base/declare"],function(_283a,_283b){
var _283c=_283b("com.ibm.vis.engine.internal.grammar.coordinate.functions.CompositeOperation",null,{combineValues:function(y1,y2){
}});
return _283c;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/TextInterpolator":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/TextInterpolator",["./Interpolator","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!./TextInterpolatorData","com/ibm/init/fork!./TransformInterpolator","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../Affine","com/ibm/init/statics","dojo/_base/declare"],function(_283d,_283e,_283f,_2840,_2841,_2842,_2843,_2844){
var _2845=_2844("com.ibm.vis.engine.internal.interaction.interpolation.TextInterpolator",[_283d],{start_time:0,start_data:null,end_time:0,end_data:null,transformInterpolator:null,constructor:function(_2846,_2847,_2848,_2849,_284a){
this.start_time=_2846;
this.start_data=_2847;
this.end_time=_2848;
this.end_data=_2849;
this.transformInterpolator=_284a;
},interpolate:function(id,origt){
var t=this.getNormalizedTime(origt,this.start_time,this.end_time);
var _284b=(t<0.5)?this.start_data:this.end_data;
var item=dojo.mixin({},_284b.item);
var shape=_2841.m.getItem(item,"shape");
_2841.m.put(shape,"x",0);
_2841.m.put(shape,"y",0);
_2841.m.put(shape,"align","middle");
_2841.m.put(item,"align","middle");
if(this.end_data.whitespace){
_2845.fadeAlpha(item,(t<0.05)?(1-20*t):0);
}else{
if(this.start_data.whitespace){
_2845.fadeAlpha(item,(t>0.95)?20*(t-0.95):0);
}
}
_2841.m.put(item,"transform",this.transformInterpolator.interpolate(id,origt));
return item;
}});
_2845.makeTextInterpolator=function(_284c,_284d,_284e,_284f){
_284c=_283e.m.ZERO_ONE.clamp(_284c);
_284e=_283e.m.ZERO_ONE.clamp(_284e);
if(_284c>_284e){
return _2845.makeTextInterpolator(_284e,_284f,_284c,_284d);
}
return new _2845(_284c,_283f.m.makeTextInterpolatorData(_284d),_284e,_283f.m.makeTextInterpolatorData(_284f),_2840.m.makeTextTransformInterpolator(_284c,_2845.makeTextAffine(_284d),_284e,_2845.makeTextAffine(_284f)));
};
_2845.makeTextAffine=function(item){
var _2850=_2841.m.getItem(item,"transform");
var _2851=(_2850==null)?_2842.m.identity():_2842.m.fromJSON(_2850);
var shape=_2841.m.getItem(item,"shape");
var _2852=_2841.m.getNumberWithDefault(shape,"x",0);
var _2853=_2841.m.getNumberWithDefault(shape,"y",0);
var width=_2841.m.getNumberWithDefault(shape,"width",0);
var align=_2841.m.getItemWithDefault(shape,"align","middle");
if("start".CPVisEngineEquals(align)){
_2852+=width/2;
}else{
if("end".CPVisEngineEquals(align)){
_2852-=width/2;
}
}
var x=_2852*_2851.m00+_2853*_2851.m01+_2851.m02;
var y=_2852*_2851.m10+_2853*_2851.m11+_2851.m12;
return new _2842.m(_2851.m00,_2851.m01,x,_2851.m10,_2851.m11,y);
};
_2845.fadeAlpha=function(item,_2854){
var fill=_2841.m.getItem(item,"fill");
if(fill!=null){
fill=_2841.m.deepClone(fill);
_2841.m.put(item,"fill",fill);
var _2855=_2841.m.getItem(fill,"colors");
if(_2855!=null){
var size=_2855.length;
for(var i=0;i<size;++i){
var color=_2841.m.getItem(_2855[i],"color");
if(color!=null){
var alpha=_2841.m.getNumberWithDefault(color,"a",1);
_2841.m.put(color,"a",alpha*_2854);
}
}
}else{
var alpha=_2841.m.getNumberWithDefault(fill,"a",1);
_2841.m.put(fill,"a",alpha*_2854);
}
}
};
_2845.areEqualTexts=function(item1,item2){
return _2841.m.isEqual(item1,item2);
};
return _2845;
});
},"com/ibm/vis/actions/internal/ScrollUnitControllerAction":function(){
define("com/ibm/vis/actions/internal/ScrollUnitControllerAction",["com/ibm/init/fork!../../engine/internal/util/DefenderUtil","com/ibm/init/statics","dojo/_base/declare"],function(_2856,_2857,_2858){
var _2859=_2858("com.ibm.vis.actions.internal.ScrollUnitControllerAction",null,{defenderUtil:null,constructor:function(){
this.defenderUtil=new _2856.m();
},modify:function(_285a,_285b){
if(this.defenderUtil.isDefenderJson(_285a)){
return this.defenderUtil.addTransparentRectangles(_285a,_285b);
}
return _285a;
},affine:function(shape,xx,dx,yy,dy){
var part=shape.getElementPart();
if(part!=null&&this.defenderUtil.isDefenderPart(part)){
this.defenderUtil.affineDefenderPart(shape,xx,dx,yy,dy);
}else{
shape.affine(xx,dx,yy,dy,false);
}
}});
return _2859;
});
},"com/ibm/vis/engine/internal/grammar/scale/NumericScaleSpan":function(){
define("com/ibm/vis/engine/internal/grammar/scale/NumericScaleSpan",["./ScaleSpan","com/ibm/init/fork!../../../../monitor/LogComponent","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!./Tick","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!../../struct/Text","com/ibm/init/fork!../../Alignment","com/ibm/init/fork!./MultiplierInfo","com/ibm/init/fork!../units/Measure","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/fork!./transform/LogScaleTransform","com/ibm/init/statics","dojo/_base/declare"],function(_285c,_285d,_285e,_285f,_2860,_2861,_2862,_2863,_2864,_2865,_2866,_2867,_2868){
var _2869=_2868("com.ibm.vis.engine.internal.grammar.scale.NumericScaleSpan",[_285c],{inputNumDomain:null,modifiedInputNumDomain:null,tickDomain:null,appliedGranularity:null,ticksUnit:null,tickDelta:0,minorDivisions:0,useTickDeltaFromSpec:false,useMinorDivisionsFromSpec:false,constructor:function(unit,_286a,_286b,_286c,_286d,_286e,_286f,_2870,_2871,num){
this.inputNumDomain=num;
if(_2871!=null){
this.minorDivisions=Math.round(_2871);
this.useMinorDivisionsFromSpec=true;
}else{
this.useMinorDivisionsFromSpec=false;
}
if(_2870!=null){
this.tickDelta=_2870;
this.useTickDeltaFromSpec=true;
}else{
this.useTickDeltaFromSpec=false;
}
if(this.useTickDeltaFromSpec&&this.tickDelta<=0){
if(this.visContext.logContext.hasListeners()){
this.visContext.logContext.grammarWarning(_285d.m.CommonGrammar,"badValueTickDelta (tickDelta must be greater than 0 in all scales)");
}
this.useTickDeltaFromSpec=false;
}
},addTicks:function(ticks,_2872){
if(this.inputNumDomain.range==0&&this.desiredTicks==null){
var v=_285e.m.convert(this.inputNumDomain.min,this.ticksUnit,this.inputUnit);
this.addTick(ticks,this.inputNumDomain.min,v);
}else{
for(var x=this.tickDomain.min;x<this.tickDomain.max+this.tickDelta;x+=this.tickDelta){
var v=_285e.m.convert(x,this.ticksUnit,this.inputUnit);
this.addTick(ticks,x,v);
}
}
},addTick:function(ticks,x,v){
if(this.shouldAddTick(v)){
var d=this.scaleTransform.transformToZeroOne(v);
var x1=this.visContext.formatContext.formatNumber(x,this.specifiedFormatter,-1,null,this.tickDomain,this.ticksUnit);
var tick=new _285f.m(x1,this.outRange.fromZeroOne(d),v);
if(tick.location<(1+0.000001)&&tick.location>(0-0.000001)){
ticks.add(tick);
}
}
},shouldAddTick:function(v){
if(!this.fitInfo.canExpand&&!this.inputNumDomain.containsTolerantly(v,0.0001)){
return false;
}
return _2860.m.ZERO_ONE.containsTolerantly(this.scaleTransform.transformToZeroOne(v),0.0001);
},getMaxTickLength:function(font){
this.makeNumericSpanDetails(5,20);
var a=this.visContext.formatContext.formatNumber(this.tickDomain.min,this.specifiedFormatter,-1,null,this.tickDomain,this.ticksUnit);
var b=this.visContext.formatContext.formatNumber(this.tickDomain.max,this.specifiedFormatter,-1,null,this.tickDomain,this.ticksUnit);
var aText=_2861.m.createTextWithUnshapedValue(a,0,0,"start",_2862.m.VALIGN_MIDDLE_1ST_LINE,font,null,null,this.visContext.getNumericShapingInfo(),null);
var bText=_2861.m.createTextWithUnshapedValue(b,0,0,"start",_2862.m.VALIGN_MIDDLE_1ST_LINE,font,null,null,this.visContext.getNumericShapingInfo(),null);
return Math.max(font.getWidth(aText),font.getWidth(bText));
},isApplicable:function(u){
if(u!=null&&(u.customUnit||this.inputUnit.customUnit)){
return u.name.CPVisEngineEquals(this.inputUnit.name)&&(u.measure.matches(this.inputUnit.measure));
}
return u==null||(u.measure.matches(this.inputUnit.measure));
},getBase:function(_2873){
if(this.modifiedInputNumDomain==null){
return null;
}
var x=(_2873)?1:0;
if(this.scaleTransform!=null){
x=this.scaleTransform.getOriginInZeroOne(_2873);
}
return this.outRange.fromZeroOne(x);
},toZeroOne:function(value,unit,clamp){
if(unit!=null&&!this.isApplicable(unit)){
return null;
}
if(unit==null||!unit.measure.categorical){
if(this.modifiedInputNumDomain==null){
return null;
}
var v=value;
if(unit!=null){
v=_285e.m.convert(v,unit,this.inputUnit);
}
var x=this.scaleTransform.transformToZeroOne(v);
if(clamp){
x=_2860.m.ZERO_ONE.clamp(x);
}
return this.outRange.fromZeroOne(x);
}
return null;
},setupForTickCount:function(_2874,_2875){
if(_2874<2){
_2874=2;
}
if(_2874>1000){
_2874=1000;
}
if(_2875<2){
_2875=2;
}
this.makeNumericSpanDetails(_2874-1,_2875-1);
},computeTickCount:function(){
return ((this.tickDomain.max-this.tickDomain.min)/this.tickDelta)+1;
},getUndefinedParametersFrom:function(_2876){
this.inherited(arguments,[_2876]);
if(!this.inputNumDomain.isComplete()){
var t=_2876;
this.inputNumDomain=this.inputNumDomain.complete(t.inputNumDomain);
if(!this.fitInfo.canExpand&&t.appliedGranularity!=null){
this.inputNumDomain=this.inputNumDomain.expand(-t.appliedGranularity/2);
}
}
},getUndefinedFromMismatched:function(_2877){
for(var _2878=0,_2879=_2877.size();_2878<_2879;++_2878){
var span=_2877.get(_2878);
if(!span.isApplicable(this.inputUnit)){
span.fitInfo=this.fitInfo;
}
}
},applyMultipliers:function(range,delta,_287a,_287b,_287c){
var best=new _2863.m(range,delta,1,this.fitInfo.canExpand);
for(var _287d=0,_287e=_287a.length;_287d<_287e;++_287d){
var m=_287a[_287d];
var trial=new _2863.m(range,delta,m,this.fitInfo.canExpand);
if(trial.isBetterThan(best,_287b,_287c)){
best=trial;
}
}
return delta*best.multiplier;
},findBestUnit:function(range,unit,units,_287f){
if(unit.measure!=_2864.m.DATETIME){
range/=2;
}
var best=null;
var dBest=0;
for(var _2880=0,_2881=units.size();_2880<_2881;++_2880){
var u=units.get(_2880);
var _2882=u.system;
if(_2882.CPVisEngineEquals(unit.system)){
var _2883=_285e.m.convert(range,unit,u);
if(_2865.m.isNaN(_2883)){
continue;
}
var d=Math.abs(_2883-_287f);
if(best==null||(_2883>2&&d<dBest)){
dBest=d;
best=u;
}
}
}
return best;
},makeNumericSpanDetails:function(_2884,_2885){
var _2886=this.expandInitialRange(this.inputNumDomain);
var _2887;
if(this.useTickDeltaFromSpec){
this.ticksUnit=this.inputUnit;
_2887=_2886;
}else{
this.ticksUnit=this.findBestUnit(_2886.range,this.inputUnit,this.inputUnit.measure.units,_2884);
_2887=_285e.m.convertRange(_2886,this.inputUnit,this.ticksUnit);
this.tickDelta=this.calculateTickDelta(_2884,_2885,_2887);
}
this.tickDomain=new _2860.m(Math.floor(_2887.min/this.tickDelta)*this.tickDelta,Math.ceil(_2887.max/this.tickDelta)*this.tickDelta);
var _2888;
if(this.centreSingleTick()){
_2888=_2887;
var nice=_285e.m.convertRange(_2888,this.ticksUnit,this.inputUnit);
this.modifiedInputNumDomain=nice;
}else{
_2888=this.tickDomain;
var nice=_285e.m.convertRange(_2888,this.ticksUnit,this.inputUnit);
if(this.scaleTransform instanceof _2866.m&&this.tickDomain.min==0){
var _2889=Math.floor(this.scaleTransform.transform(this.inputNumDomain.min));
var _288a=this.scaleTransform.transform(this.inputNumDomain.min)-_2889;
var _288b=Math.floor(this.scaleTransform.inverse(_288a))*this.scaleTransform.inverse(_2889);
_2888=new _2860.m(_288b,this.tickDomain.max);
nice=_285e.m.convertRange(_2888,this.ticksUnit,this.inputUnit);
}
this.modifiedInputNumDomain=this.fitInfo.finalizeRange(this.inputNumDomain,nice);
}
this.scaleTransform.setRange(this.modifiedInputNumDomain);
},centreSingleTick:function(){
return this.inputNumDomain.range==0;
},calculateTickDelta:function(_288c,_288d,_288e){
var delta;
var _288f=this.getFactorOfTen(_288e.range/_288c);
delta=this.applyMultipliers(_288e,_288f,this.ticksUnit.multipliers,_288c,_288d);
if(delta>=_288e.range&&!this.fitInfo.canExpand){
var _2890=_288e.range/_288d;
if(delta>_2890){
delta=_2890;
}
if(delta>_288e.range){
delta=_288e.range;
}
}
return delta;
},expandInitialRange:function(base){
if(base.range==0){
var r=this.makeRangeAbout(base.min);
return this.fitInfo.expandRange(r,this.inputUnit,true);
}
return this.fitInfo.expandRange(base,this.inputUnit,false);
},makeRangeAbout:function(v){
if(this.inputUnit.measure.zeroMeaningful){
if(v<0){
return new _2860.m(2*v,0);
}else{
if(v>0){
return new _2860.m(0,2*v);
}
}
}
return new _2860.m(v-1,v+1);
},getFactorOfTen:function(v){
var n=Math.floor(Math.log(v)/Math.log(10));
return Math.pow(10,n);
},getSuggestedElementSize:function(full){
return null;
},addMinorTicks:function(ticks){
var div=(!this.useMinorDivisionsFromSpec)?this.ticksUnit.minorDivisions:this.minorDivisions;
if(div<2){
return;
}
for(var x=this.tickDomain.min-this.tickDelta;x<this.tickDomain.max+this.tickDelta;x+=this.tickDelta){
for(var i=1;i<div;++i){
var t=x+this.tickDelta*i/div;
var v=_285e.m.convert(t,this.ticksUnit,this.inputUnit);
var d=this.scaleTransform.transformToZeroOne(v);
if(_2860.m.ZERO_ONE.containsTolerantly(d,0.0001)){
var tick=new _285f.m(null,this.outRange.fromZeroOne(d),v);
ticks.add(tick);
}
}
}
},getTickMin:function(){
return this.modifiedInputNumDomain.min;
},getTickSize:function(){
return this.tickDelta;
},getInputRange:function(){
return this.inputNumDomain;
},getAdjustedInputRange:function(){
return this.modifiedInputNumDomain;
},getTickUnit:function(){
return this.ticksUnit;
},zeroOneToDataValue:function(value){
return this.scaleTransform.transformFromZeroOne(value);
},getCategoryCount:function(){
return 0;
},getGoodDisplaySpanSize:function(){
if(this.inputNumDomain.isComplete()&&this.inputNumDomain.range<1e-9){
return 1;
}
return 9;
},addAllTicks:function(ticks,_2891){
this.addTicks(ticks,_2891);
},isUnitApplicable:function(value,unit){
if(unit!=null&&!this.isApplicable(unit)){
return false;
}
if(this.modifiedInputNumDomain==null){
return false;
}
return true;
}});
return _2869;
});
},"com/ibm/vis/engine/internal/nativeImpl/NativeTextMeasure":function(){
define("com/ibm/vis/engine/internal/nativeImpl/NativeTextMeasure",["dojo/_base/declare","exports","dojo/_base/window","dojo/dom-geometry","dojox/gfx","dojo/_base/Deferred"],function(_2892,_2893,win,geom,g,_2894){
var ntm=_2893;
var _2895={ascent_height_ratio:0.79,height_sample_chars:"Aj"};
var _2896=null;
var empty={};
var _2897=null;
var _2898=null;
var _2899=null;
ntm.initHtmlMeasuringNode=function(){
if(_2896==null){
var c,s,n;
n=win.doc.createElement("div");
c=win.doc.createElement("div");
c.appendChild(n);
s=c.style;
s.overflow="scroll";
s.position="absolute";
s.left="0px";
s.top="-10000px";
s.width="0px";
s.height="0px";
s.visibility="hidden";
s.borderWidth="0";
s.margin="0";
s.padding="0";
s.outline="0";
win.body().appendChild(c);
_2896=n;
}
};
ntm.updateStyle=function(m,style){
m.className="";
var s=m.style;
s.borderWidth="0";
s.margin="0";
s.padding="0";
s.outline="0";
s.whiteSpace="nowrap";
if(arguments.length>1&&style){
for(var i in style){
if(i in empty){
continue;
}
s[i]=style[i];
}
}
if(arguments.length>2&&className){
m.className=className;
}
};
ntm.getTextBox=function(text,style,_289a){
ntm.updateStyle(_2896,style);
_2896.innerHTML=text.replace(/ /g,"&nbsp;");
var box=geom.position(_2896);
box.w=Math.max(0,_2896.parentNode.scrollWidth);
return box;
};
ntm.initGfxMeasuringNode=function(){
if(_2897==null){
_2899=new _2894();
var c,s,n;
n=win.doc.createElement("div");
c=win.doc.createElement("div");
c.appendChild(n);
s=c.style;
s.overflow="scroll";
s.position="absolute";
s.left="0px";
s.top="-10000px";
s.width="10px";
s.height="10px";
s.borderWidth="0";
s.margin="0";
s.padding="0";
s.outline="0";
win.body().appendChild(c);
_2897=g.createSurface(n,"10px","10px");
_2897.whenLoaded(this,function(_289b){
_2898=_2897.createText({text:""});
_2899.resolve(_2898);
});
}
return _2899;
};
ntm.init=function(){
ntm.initHtmlMeasuringNode();
return ntm.initGfxMeasuringNode();
};
ntm.getGfxWidth=function(font,text){
if(_2898){
_2898.setFont(ntm._getGFXFontStyle(font));
_2898.setShape({text:text});
return _2898.getTextWidth();
}else{
return null;
}
};
ntm._getHTMLFontStyle=function(f){
return {fontFamily:f.family,fontSize:(f.size+"px"),fontWeight:f.bold?"bold":"normal"};
};
ntm._getGFXFontStyle=function(f){
return f.toJSON();
};
ntm._getTextBox=function(font,text){
return ntm.getTextBox(text,ntm._getHTMLFontStyle(font));
};
ntm.getWidth=function(font,text){
var res=null;
if(g.renderer=="silverlight"||g.renderer=="vml"){
res=ntm.getGfxWidth(font,text);
}
if(res==null){
res=this._getTextBox(font,text).w;
}
if(text!=null&&text.length>0&&res!=null){
font.getMetric().getFontStats().updAvg(res/text.length);
}
return res+3;
};
ntm.getAscent=function(font){
return this.getHeight(font)*_2895.ascent_height_ratio;
};
ntm.getHeight=function(font){
return this._getTextBox(font,_2895.height_sample_chars).h;
};
});
},"com/ibm/vis/engine/internal/legend/DataValueAndSizeMapping":function(){
define("com/ibm/vis/engine/internal/legend/DataValueAndSizeMapping",["com/ibm/init/fork!../struct/Circle","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_289c,_289d,_289e,_289f,_28a0){
var _28a1=_28a0("com.ibm.vis.engine.internal.legend.DataValueAndSizeMapping",null,{size:0,dataValue:0,zeroToOneClampedValue:0,defaultSize:null,aesthetic:null,constructor:function(_28a2,_28a3,_28a4){
this.dataValue=_28a2;
this.defaultSize=_28a4;
this.aesthetic=_28a3;
this.calculateZeroToOneValue();
this.calculateSize();
},getSize:function(){
return this.size;
},getDataValue:function(){
return this.dataValue;
},getZeroToOneClampedValue:function(){
return this.zeroToOneClampedValue;
},getDefaultSize:function(){
return this.defaultSize;
},calculateSize:function(){
var _28a5=new _289c.m(0,0,Math.min(this.defaultSize.width,this.defaultSize.height)/2);
var _28a6=this.aesthetic.producer.applyNumericMapping(_28a5,this.zeroToOneClampedValue,this.aesthetic.mapping,null);
if(_28a6==null){
_28a6=this.aesthetic.producer.getDefaultForNumeric(this.zeroToOneClampedValue);
}
if(_28a6!=null){
if(_289d.m.isNumber(_28a6)){
this.size=(_28a6);
}else{
var _28a7=_28a6;
var _28a8=_289e.m.parseDouble(_28a7.substring(0,_28a7.CPVisEngineLength()-1))/100;
this.size=this.defaultSize.height*_28a8;
}
}
},calculateZeroToOneValue:function(){
if(this.aesthetic.scale!=null){
this.zeroToOneClampedValue=(this.aesthetic.scale.toZeroOne(this.dataValue,this.aesthetic.valueProvider.getUnit(),this.aesthetic.valueProvider.span));
}
}});
return _28a1;
});
},"com/ibm/vis/engine/internal/migration/MigrationStrategy":function(){
define("com/ibm/vis/engine/internal/migration/MigrationStrategy",["com/ibm/init/statics","dojo/_base/declare"],function(_28a9,_28aa){
var _28ab=_28aa("com.ibm.vis.engine.internal.migration.MigrationStrategy",null,{getTargetVersion:function(){
},migrate:function(json){
}});
return _28ab;
});
},"com/ibm/vis/interaction/navigation/NavigationStub":function(){
define("com/ibm/vis/interaction/navigation/NavigationStub",["./Navigation","com/ibm/init/statics","dojo/_base/declare"],function(_28ac,_28ad,_28ae){
var _28af=_28ae("com.ibm.vis.interaction.navigation.NavigationStub",[_28ac],{constructor:function(_28b0){
},move:function(_28b1,_28b2){
return null;
},moveFeaturePart:function(shift){
return null;
},moveFacet:function(_28b3,_28b4){
return null;
},first:function(){
return null;
},back:function(){
return null;
},setSelected:function(_28b5){
},nextFeature:function(shift){
return null;
},sceneChanged:function(){
}});
return _28af;
});
},"com/ibm/vis/engine/internal/struct/Arc":function(){
define("com/ibm/vis/engine/internal/struct/Arc",["./Shape","com/ibm/init/fork!../nativeImpl/WebEngineException","com/ibm/init/fork!./Rect","com/ibm/init/fork!./Point","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!./ShapeFactory","com/ibm/init/fork!../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_28b6,_28b7,_28b8,_28b9,_28ba,_28bb,_28bc,_28bd,_28be){
var Arc=_28be("com.ibm.vis.engine.internal.struct.Arc",[_28b6],{x:0,y:0,r:0,a1:0,a2:0,constructor:function(cx,cy,_28bf,_28c0,_28c1){
this.x=cx;
this.y=cy;
this.r=_28bf;
this.a1=_28c0;
this.a2=_28c1;
},getType:function(){
return "arc";
},asBasic:function(){
throw new _28b7.m("This method will need writing as part of Shape refactoring");
},isTypeOf:function(type){
if("arc".CPVisEngineEquals(type)){
return true;
}
return false;
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},applyPointTransform:function(t){
return null;
},affine:function(xx,dx,yy,dy,_28c2){
if(_28c2){
this.r*=(xx+yy)/2;
}else{
}
},makeGeometryClone:function(){
return new Arc(this.x,this.y,this.r,this.a1,this.a2);
},getBounds:function(){
return Arc.computeBounds(this.x,this.y,this.r,this.a1,this.a2);
},getCenter:function(){
var _28c3=(this.a1+this.a2)/2;
return new _28b9.m(this.x+this.r*Math.cos(_28c3),this.y+this.r*Math.sin(_28c3));
},isFilled:function(){
return false;
},reflect:function(size,_28c4){
},setShapeParameters:function(o){
_28ba.m.put(o,"type","path");
_28ba.m.put(o,"path",_28bb.m.makeArcPath(this.x,this.y,this.r,this.a1,this.a2));
var c=this.getCenter();
_28ba.m.put(o,"cx",_28bc.m.r3(this.snapValue(c.x)));
_28ba.m.put(o,"cy",_28bc.m.r3(this.snapValue(c.y)));
var b=this.getBounds();
b.setShapeParameters(o);
},transpose:function(_28c5){
},contains:function(px,py){
return false;
}});
Arc.computeBounds=function(x,y,r,a1,a2){
var _28c6=(a1+a2)/2;
var cx=r*Math.cos(_28c6);
var cy=r*Math.sin(_28c6);
var px=r*Math.cos(a1);
var py=r*Math.sin(a1);
var rr=Math.sqrt(Math.abs((px-cx)*(py-cx)+(py-cy)*(py-cy)));
return new _28b8.m(x+cx-rr,y+cy-rr,2*rr,2*rr);
};
_28bd.add("com/ibm/vis/engine/internal/struct/Arc",["com/ibm/vis/engine/internal/struct/Shape","com/ibm/vis/engine/internal/struct/Rect"],function(){
Arc.ARC_FLAGS=0;
Arc.ARC_NAME="arc";
});
return Arc;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/stack/DefaultStacker":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/stack/DefaultStacker",["./Stacker","com/ibm/init/statics","dojo/_base/declare"],function(_28c7,_28c8,_28c9){
var _28ca=_28c9("com.ibm.vis.engine.internal.grammar.coordinate.stack.DefaultStacker",[_28c7],{stackState:null,constructor:function(_28cb){
this.stackState=_28cb;
},stack:function(shape,zero,_28cc){
var rect=shape.getBounds();
var _28cd;
if(rect.y==_28cc&&rect.height>0){
_28cd=rect.y+rect.height;
}else{
_28cd=rect.y;
}
var _28ce=this.stackState.getStackingOffset(rect.getCenter().x,shape.aestheticGroup,_28cd,_28cc);
shape.affine(1,0,1,-_28ce,false);
return shape;
}});
return _28ca;
});
},"com/ibm/vis/engine/internal/migration/spec/SpecMigrationExtensionFactory":function(){
define("com/ibm/vis/engine/internal/migration/spec/SpecMigrationExtensionFactory",["../../../../extension/ExtensionFactory","com/ibm/init/fork!../ExtensionParameter","com/ibm/init/fork!../../util/Version","com/ibm/init/fork!./LegendMigrator1_3","com/ibm/init/fork!./DoubleToPercentConverter","com/ibm/init/statics","dojo/_base/declare"],function(_28cf,_28d0,_28d1,_28d2,_28d3,_28d4,_28d5){
var _28d6=_28d5("com.ibm.vis.engine.internal.migration.spec.SpecMigrationExtensionFactory",[_28cf],{newInstance:function(name,_28d7){
if(name!=null){
if(name.CPVISEngineStartsWith(_28d6.CONVERTER_PREFIX)){
return _28d6.newConverter(name,_28d7);
}else{
if(name.CPVISEngineStartsWith("migration.")){
if(_28d7 instanceof _28d0.m){
return _28d6.newMigrationStrategy(name,_28d7);
}
}
}
}
return null;
}});
_28d6.newMigrationStrategy=function(name,_28d8){
var _28d9=null;
var _28da=_28d8.version;
if(_28da.equals(new _28d1.m(1,3,0))){
if(_28d6.LEGENDS.CPVisEngineEquals(name)){
_28d9=new _28d2.m();
}
}
return _28d9;
};
_28d6.newConverter=function(name,_28db){
var _28dc=null;
if(_28d6.DOUBLE_TO_PERCENT.CPVisEngineEquals(name)){
_28dc=new _28d3.m(_28db);
}
return _28dc;
};
_28d4.add("com/ibm/vis/engine/internal/migration/spec/SpecMigrationExtensionFactory",["com/ibm/vis/extension/ExtensionFactory","com/ibm/vis/engine/internal/util/Version","com/ibm/vis/engine/internal/migration/spec/LegendMigrator1_3","com/ibm/vis/engine/internal/migration/spec/DoubleToPercentConverter"],function(){
_28d6.MIGRATION_PREFIX="migration.";
_28d6.CONVERTER_PREFIX="migration."+"converter.";
_28d6.LEGENDS="migration."+"legends";
_28d6.DOUBLE_TO_PERCENT=_28d6.CONVERTER_PREFIX+"doubleToPercent";
});
return _28d6;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/Vector":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/matrix/Vector",["com/ibm/init/statics","dojo/_base/declare"],function(_28dd,_28de){
var _28df=_28de("com.ibm.vis.engine.internal.grammar.layout.graph.stress.matrix.Vector",null,{dot:function(x){
},get:function(i){
},set:function(i,value){
}});
return _28df;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/SymmetricNodePlacement":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/SymmetricNodePlacement",["./DAGNodePlacementAlgorithm","com/ibm/init/fork!../../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_28e0,_28e1,_28e2,_28e3){
var _28e4=_28e3("com.ibm.vis.engine.internal.grammar.layout.graph.SymmetricNodePlacement",[_28e0],{adapter:null,constructor:function(_28e5){
this.adapter=_28e5;
},layoutNodes:function(_28e6,_28e7){
var hgap=this.computeHorizontalNodeGap(_28e7,_28e6);
var vgap=this.computeVerticalLayerGap(_28e7,_28e6);
this.adapter.getSharedLayoutInfo().setSelfLinkRadius(Math.min(hgap,vgap)/2);
for(var _28e8=0,_28e9=_28e6.length;_28e8<_28e9;++_28e8){
var layer=_28e6[_28e8];
var _28ea=this.getLayerOrder(layer);
var _28eb=this.computeLayerWidth(_28e7,layer)+hgap*(layer.length-1);
var x=(_28e7.width-_28eb)/2;
for(var _28ec=0,_28ed=_28ea.length;_28ec<_28ed;++_28ec){
var index=_28ea[_28ec];
var node=layer[index];
var size=node.getNodeWidth(_28e7.width,this.adapter.isSwapXY());
node.setX((x+size/2)/_28e7.width);
x+=hgap+size;
}
}
},computeVerticalLayerGap:function(_28ee,_28ef){
var _28f0=0;
for(var _28f1=0,_28f2=_28ef.length;_28f1<_28f2;++_28f1){
var layer=_28ef[_28f1];
_28f0+=this.computeMaxNodeHeight(_28ee,layer);
}
return (_28ee.height-_28f0)/(_28ef.length-1);
},computeMaxNodeHeight:function(_28f3,layer){
var _28f4=0;
for(var _28f5=0,_28f6=layer.length;_28f5<_28f6;++_28f5){
var node=layer[_28f5];
_28f4=Math.max(_28f4,node.getNodeHeight(_28f3.height,this.adapter.isSwapXY()));
}
return _28f4;
},computeHorizontalNodeGap:function(_28f7,_28f8){
var _28f9=0;
var _28fa=0;
for(var _28fb=0,_28fc=_28f8.length;_28fb<_28fc;++_28fb){
var layer=_28f8[_28fb];
_28f9=Math.max(_28f9,this.computeLayerWidth(_28f7,layer));
_28fa=Math.max(_28fa,layer.length);
}
if(_28fa==1){
return (_28f7.width-_28f9)/2;
}else{
return (_28f7.width-_28f9)/(_28fa-1);
}
},computeLayerWidth:function(_28fd,layer){
var _28fe=0;
for(var _28ff=0,_2900=layer.length;_28ff<_2900;++_28ff){
var node=layer[_28ff];
_28fe+=node.getNodeWidth(_28fd.width,this.adapter.isSwapXY());
}
return _28fe;
},getLayerOrder:function(layer){
var x=Array.create([layer.length],0);
for(var i=0;i<layer.length;++i){
x[i]=layer[i].x;
}
return _28e1.m.makeSortOrder(x);
}});
return _28e4;
});
},"com/ibm/vis/engine/internal/oldlegendlayout/OldGridLayout":function(){
define("com/ibm/vis/engine/internal/oldlegendlayout/OldGridLayout",["./OldContentLayout","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!./OldFlow","com/ibm/init/fork!../struct/Rect","com/ibm/init/statics","dojo/_base/declare"],function(_2901,_2902,_2903,_2904,_2905,_2906){
var _2907=_2906("com.ibm.vis.engine.internal.oldlegendlayout.OldGridLayout",[_2901],{flow:null,rowsSpecified:null,columnsSpecified:null,preserveH:false,preserveW:false,constructor:function(flow,rows,_2908){
this.flow=flow;
this.rowsSpecified=rows;
this.columnsSpecified=_2908;
this.adjustWidth=true;
this.adjustHeight=false;
this.preserveH=rows==null;
this.preserveW=_2908==null;
},layout:function(_2909){
var _290a=_2909.getBounds();
var _290b=_2909.getChildren();
var count=_290b.size();
var _290c=this.findGridParameter(count,this.columnsSpecified,this.rowsSpecified);
var rows=this.findGridParameter(count,this.rowsSpecified,this.columnsSpecified);
var dim=new _2902.m(_290a.width/_290c,_290a.height/rows);
var _290d=0;
var _290e=0;
var _290f=count;
if(count>rows*_290c){
_290f=rows*_290c-1;
}
var _2910=Array.create([_290c],0);
var _2911=Array.create([rows],0);
for(var i=0;i<_290f;++i){
var child=_290b.get(i);
var _2912=this.computeCellCoordinatesDyn(dim,_290d,_290e,_2910,_2911);
var _2913=child.getPreferredSize();
if(_2913!=null){
if(_2913.height>0){
if(!this.adjustHeight){
_2912.height=Math.min(_2912.height,_2913.height);
}
}
if(_2913.width>0){
if(!this.adjustWidth){
_2912.width=Math.min(_2912.width,_2913.width);
}
}
_2910[_290d]=this.preserveW?Math.min(dim.width,Math.max(_2910[_290d],_2913.width)):dim.width;
_2911[_290e]=this.preserveH?Math.min(dim.height,Math.max(_2911[_290e],_2913.height)):dim.height;
}
child.layoutWithBounds(_2912);
if(this.flow==_2903.m.horizontal){
_290d++;
if(_290d>=_290c){
_290d=0;
_290e++;
}
}else{
_290e++;
if(_290e>=rows){
_290e=0;
_290d++;
}
}
}
if(count!=_290f){
var _2912=this.computeCellCoordinatesDyn(dim,_290d,_290e,_2910,_2911);
_2909.setContinuedArea(_2912);
}
this.usedHeight=this.sumArray(_2911,_2911.length);
this.usedWidth=this.sumArray(_2910,_2910.length);
},sumArray:function(arr,idx){
var sum=0;
if(idx>arr.length||idx<0){
return sum;
}
for(var h=0;h<idx;++h){
sum+=arr[h];
}
return sum;
},computeCellCoordinatesDyn:function(dim,_2914,_2915,_2916,_2917){
var _2918=new _2904.m(this.sumArray(_2916,_2914),this.sumArray(_2917,_2915),dim.width,dim.height);
return _2918;
},findGridParameter:function(count,spec,_2919){
if(spec==null){
return Math.floor((count-1)/_2919+1);
}else{
return spec;
}
},resetLayout:function(){
this.usedHeight=0;
this.usedWidth=0;
}});
return _2907;
});
},"com/ibm/vis/engine/internal/grammar/element/TextBuilder":function(){
define("com/ibm/vis/engine/internal/grammar/element/TextBuilder",["./Builder","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/fork!../../../../exceptions/SpecException","com/ibm/init/fork!../../../../exceptions/ErrorCode","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../label/TextProducer","com/ibm/init/fork!../../scene/Font","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../coordinate/Position","com/ibm/init/fork!../../struct/Dim","com/ibm/init/fork!../../struct/Point","com/ibm/init/fork!../../struct/Insets","com/ibm/init/fork!../../Alignment","com/ibm/init/fork!../../scene/ItemBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_291a,_291b,_291c,_291d,_291e,_291f,_2920,_2921,_2922,_2923,_2924,_2925,_2926,_2927,_2928,_2929){
var _292a=_2929("com.ibm.vis.engine.internal.grammar.element.TextBuilder",[_291a],{content:null,style:null,spec:null,size:null,vis:null,data:null,align:null,valign:null,stretch:false,fit:false,inside:false,clipSymbol:null,isLegendEntry:false,shapingInfo:null,constructor:function(_292b,_292c,_292d,vis,data,size,spec){
this.snap=_291b.m.getSnap(spec.style);
if(spec.content==null){
throw new _291c.m(null,_291d.m.SPEC_IS_NULL,"No content provided for element text",null,null,null,null);
}
this.content=spec.content;
this.style=spec.style;
this.spec=spec;
this.size=size;
this.vis=vis;
this.data=data;
this.shapingInfo=_292b.getNumericShapingInfo();
this.align=(this.style!=null&&this.style.align!=null)?this.style.align:"middle";
this.valign=(this.style!=null&&this.style.valign!=null)?this.style.valign:"middle";
this.inside=false;
if(this.style!=null&&this.style.location!=null&&_291e.m.isString(this.style.location)){
if("inside".CPVisEngineEquals(this.style.location)){
this.inside=true;
}else{
if("stretch".CPVisEngineEquals(this.style.location)){
this.stretch=true;
}else{
if("fit".CPVisEngineEquals(this.style.location)){
this.fit=true;
}
}
}
}
if(_291f.m.isCategorical(this.vis,this.content)){
this.clipSymbol=_2920.m.ELLIPSIS;
}else{
this.clipSymbol=_2920.m.HASH;
}
this.isLegendEntry=false;
},makeSwatch:function(_292e){
var _292f=new _2921.m();
this.isLegendEntry=true;
_292f.add(this.makeShape(_2922.m.NO_COORDS,null));
return _292f;
},makeShape:function(_2930,_2931){
var text;
if(this.isLegendEntry){
text="A";
this.align="middle";
this.valign="middle";
}else{
if(_2931==null){
_2931=-1;
}
text=_291f.m.makeTextForContent(this.vis,this.data,this.content,_2931);
}
if(text==null){
return null;
}
if(_2930.XYUndefined()){
return null;
}
var font=this.getFont(this.size,text);
var x,y;
if(_2930.length()==0){
x=this.extent.width/2;
y=this.extent.height/2;
}else{
if(_2930.length()==1){
x=this.extent.width/2;
y=this.extent.height-_2930.Y()*this.extent.height;
}else{
x=_2930.X()*this.extent.width;
y=this.extent.height-_2930.Y()*this.extent.height;
}
}
return this.buildShape(x,y,font,text);
},getFont:function(size,text){
var font=null;
var lines=text.split("\n");
var _2932=size.height/lines.length;
if(this.style!=null){
var _2933=this.style.font;
if(_2933!=null){
if(_2933.size==null){
_2933.size=_2932;
}
font=_2920.m.makeFont(_2933,this.visContext);
}else{
font=_2920.m.make(null,_2932,this.visContext);
}
}else{
font=_2920.m.make(null,_2932,this.visContext);
}
return font;
},makeShapeInside:function(_2934,_2935){
var _2936=this.build(_2934,_2935);
return _2936;
},build:function(_2937,_2938){
var text=_291f.m.makeTextForContent(this.vis,this.data,this.content,_2938);
var _2939=this.assembleText(_2937,text);
return _2939;
},assembleText:function(_293a,text){
var x=_293a.x;
var y=_293a.y;
var size=new _2923.m(_293a.width,_293a.height);
var _293b=this.align;
var _293c=this.valign;
var p=new _2924.m(x,y);
var _293d;
if(this.style!=null&&this.style.padding!=null){
_293d=_2925.m.makeForStylePadding(this.style.padding,size,size);
}else{
_293d=_2925.m.NONE;
}
var xx;
if("start".CPVisEngineEquals(_293b)){
xx=p.x+_293d.left;
}else{
if("end".CPVisEngineEquals(_293b)){
xx=p.x+_293a.width-_293d.right;
}else{
xx=p.x+(_293a.width/2);
}
}
var yy;
if("start".CPVisEngineEquals(this.valign)){
yy=p.y+_293d.top;
}else{
if("end".CPVisEngineEquals(this.valign)){
yy=p.y+_293a.height-_293d.bottom;
}else{
yy=p.y+(_293a.height/2);
}
}
if(_2926.m.VALIGN_MIDDLE_1ST_LINE.CPVisEngineEquals(_293c)){
_293c="middle";
}
var t=_2927.m.makeText(text,xx,yy,_293b,_293c,this.getFont(size,text),this.style,size,false,this.clipSymbol,this.shapingInfo);
if(this.fit){
t=t.sizeToFit(size,false);
}else{
if(this.stretch){
t=t.stretchToFit(size);
}else{
if(this.inside){
t.clipToFit(size.width);
}
}
}
if(t==null){
return null;
}
return t;
},buildShape:function(dx,dy,font,text){
var _293e=_2927.m.makeText(text,dx,dy,this.align,this.valign,font,this.style,this.size,false,_2920.m.ELLIPSIS,this.shapingInfo);
_293e.setTextElement(true);
if(this.fit){
_293e=_293e.sizeToFit(this.size,false);
}else{
if(this.stretch){
_293e=_293e.stretchToFit(this.size);
}else{
if(this.inside){
_293e.clipToFit(this.size.width);
}
}
}
if(_293e==null){
return null;
}
return _293e;
},makeAugmentedShape:function(_293f,_2940){
return null;
}});
_2928.add("com/ibm/vis/engine/internal/grammar/element/TextBuilder",["com/ibm/vis/engine/internal/grammar/element/Builder"],function(){
_292a.TEXT_ELEMENT_LEGEND_SWATCH="A";
});
return _292a;
});
},"com/ibm/vis/engine/internal/legend/LegendTitleFrame":function(){
define("com/ibm/vis/engine/internal/legend/LegendTitleFrame",["../ContentFrame","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../scene/Font","com/ibm/init/fork!../scene/ItemBuilder","com/ibm/init/fork!../globalization/NumericShapingInfo","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../struct/MultiLineText","com/ibm/init/fork!../nativeImpl/StringBuilder","com/ibm/init/fork!../data/Field","com/ibm/init/statics","dojo/_base/declare"],function(_2941,_2942,_2943,_2944,_2945,_2946,_2947,_2948,_2949,_294a,_294b){
var _294c=_294b("com.ibm.vis.engine.internal.legend.LegendTitleFrame",[_2941],{vis:null,defaultTitle:null,legendSpec:null,legendTitleString:null,font:null,titleStyle:null,legendIndex:0,constructor:function(spec,vis,_294d){
this.legendSpec=spec;
this.vis=vis;
this.defaultTitle=_294d;
this.legendTitleString=this.makeLegendTitleString();
var _294e=null;
if(this.legendSpec.titleStyle!=null){
this.titleStyle=this.legendSpec.titleStyle;
_294e=this.legendSpec.titleStyle.font;
}else{
this.titleStyle=new Object();
}
if(_294e==null){
_294e=new Object();
_294e.weight="bold";
}
this.font=_2943.m.makeFont(_294e,vis.visContext);
},setLegendIndex:function(i){
this.legendIndex=i;
},getFont:function(){
return this.font;
},getLegendTitleID:function(){
return "L"+this.legendIndex+"LC"+this.legendIndex+"T";
},getContentPreferredSize:function(){
var t=_2944.m.makeText(this.legendTitleString,0,0,"start","end",this.font,this.titleStyle,_294c.defaultTitleBounds,true,null,_2945.m.getShapingInfo(null));
var b=t.getBounds();
return new _2942.m(b.width,b.height);
},layoutWithBounds:function(_294f,_2950,_2951){
this.inherited(arguments,[_294f,_2950,_2951]);
},createContent:function(){
var _2952=this.makeTextShape();
var array=_2946.m.createJSONArray();
if(_2952!=null){
array.push(_2952.toJSON());
}
return array;
},makeTextShape:function(){
if(this.legendTitleString==null||this.legendTitleString.CPVisEngineLength()==0){
return null;
}
var _2953=this.getBounds();
var _2954=_2944.m.makeText(this.legendTitleString,_2953.x,_2953.y,"start","end",this.font,this.titleStyle,new _2942.m(_2953.width,_2953.height),true,null,_2945.m.getShapingInfo(null));
if(_2954==null){
return null;
}
_2954.setID(this.getLegendTitleID());
_2954.clipToFit(_2953.width);
var align=this.titleStyle!=null?this.titleStyle.align:"middle";
var _2955=this.titleStyle!=null?this.titleStyle.valign:"middle";
var dx=_294c.getTranslation(_2953.width,_2954.getWidth(),align);
var dy=_294c.getTranslation(_2953.height,_2954.getHeight(),_2955);
if(_2954 instanceof _2947.m){
for(var _2956=0,_2957=(_2954).lines,_2958=_2957.size();_2956<_2958;++_2956){
var p=_2957.get(_2956);
p.affine(1,dx,1,dy,true);
}
}else{
_2954.affine(1,dx,1,dy,true);
}
return _2954;
},makeLegendTitleString:function(){
var _2959=this.getTitleContent();
if(_2959==null){
return null;
}
var _295a=new _2948.m();
for(var _295b=0,_295c=_2959.length;_295b<_295c;++_295b){
var _295d=_2959[_295b];
if(_2946.m.isString(_295d)){
_295a.append(_295d);
}else{
if(_295d instanceof Object){
var _295e=_295d;
var item=this.vis.getByID(_295e.$ref);
if(item instanceof _2949.m){
var f=item;
if(f.label!=null){
_295a.append(f.label);
}
}
}
}
}
var title=_295a.toString();
return title;
},getTitleContent:function(){
if(this.legendSpec.title!=null){
return this.legendSpec.title;
}else{
if(this.defaultTitle==null){
return null;
}else{
return [this.defaultTitle];
}
}
},getContentMaximumSize:function(){
return new _2942.m(Infinity,Infinity);
}});
_294c.getTranslation=function(_295f,_2960,align){
var d=(_295f-_2960)/2;
if(d<0){
return 0;
}
if("start".CPVisEngineEquals(align)){
d=0;
}else{
if("end".CPVisEngineEquals(align)){
d*=2;
}
}
return d;
};
_294a.add("com/ibm/vis/engine/internal/legend/LegendTitleFrame",["com/ibm/vis/engine/internal/ContentFrame","com/ibm/vis/engine/internal/struct/Dim"],function(){
_294c.defaultTitleBounds=new _2942.m(200,50);
});
return _294c;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/LiteRect":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/LiteRect",["com/ibm/init/statics","dojo/_base/declare"],function(_2961,_2962){
var _2963=_2962("com.ibm.vis.engine.internal.grammar.layout.graph.LiteRect",null,{x:0,y:0,width:0,height:0,constructor:function(x,y,width,_2964){
this.x=x;
this.y=y;
this.width=width;
this.height=_2964;
},getX:function(){
return this.x;
},getY:function(){
return this.y;
},getWidth:function(){
return this.width;
},getHeight:function(){
return this.height;
},setX:function(x){
this.x=x;
},setY:function(y){
this.y=y;
},setWidth:function(width){
this.width=width;
},setHeight:function(_2965){
this.height=_2965;
},expand:function(gap){
this.x-=gap;
this.y-=gap;
this.width+=gap*2;
this.height+=gap*2;
},intersects:function(other){
return this.y+this.height>=other.y&&this.y<=other.y+other.height&&this.x+this.width>=other.x&&this.x<=other.x+other.width;
},getMinX:function(){
return Math.min(this.x,this.x+this.width);
},getMinY:function(){
return Math.min(this.y,this.y+this.height);
},getMaxX:function(){
return Math.max(this.x,this.x+this.width);
},getMaxY:function(){
return Math.max(this.y,this.y+this.height);
},area:function(){
return this.width*this.height;
},getCenterX:function(){
return this.x+this.width/2;
},getCenterY:function(){
return this.y+this.height/2;
}});
return _2963;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/DAGLayerAssignmentAlgorithm":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/DAGLayerAssignmentAlgorithm",["com/ibm/init/statics","dojo/_base/declare"],function(_2966,_2967){
var _2968=_2967("com.ibm.vis.engine.internal.grammar.layout.graph.DAGLayerAssignmentAlgorithm",null,{assignLayers:function(graph){
}});
return _2968;
});
},"com/ibm/vis/engine/internal/interaction/effect/RevealEffect":function(){
define("com/ibm/vis/engine/internal/interaction/effect/RevealEffect",["./Effect","com/ibm/init/fork!../../struct/Rect","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../util/MathUtil","com/ibm/init/fork!../interpolation/ShapeInterpolator","com/ibm/init/statics","dojo/_base/declare"],function(_2969,_296a,_296b,_296c,_296d,_296e,_296f){
var _2970=_296f("com.ibm.vis.engine.internal.interaction.effect.RevealEffect",[_2969],{direction:0,constructor:function(time){
this.setTarget(1);
this.direction=0;
},getDirection:function(){
return this.direction;
},setDirection:function(_2971){
if(_2971==0||_2971==1||_2971==2||_2971==3){
this.direction=_2971;
}
},install:function(_2972){
this.inherited(arguments,[_2972]);
var back=_296a.m.toRect(_296b.m.getItem(_2972.visScene[0],"shape"));
var _2973=_296a.m.makeRect(back.x,back.y,back.width,back.height);
var _2974=null;
if(this.direction==0){
_2974=_296a.m.makeRect(back.x,back.y,0,back.height);
}else{
if(this.direction==1){
_2974=_296a.m.makeRect(back.x+back.width,back.y,back.width,back.height);
}else{
if(this.direction==2){
_2974=_296a.m.makeRect(back.x,back.y,back.width,0);
}else{
if(this.direction==3){
_2974=_296a.m.makeRect(back.x,back.y+back.height,back.width,back.height);
}
}
}
}
this.installOnArray(_2972.getSceneTree(),_2974,_2973,_2972);
},installOnArray:function(array,_2975,_2976,_2977){
if(array==null){
return;
}
var len=array.length;
for(var i=0;i<len;++i){
var entry=array[i];
var _2978=_296b.m.getItem(entry,"children");
if(_2978==null){
continue;
}
var _2979=_2975;
var _297a=_2976;
var _297b=_296b.m.getItem(entry,"transform");
if(_297b!=null){
var _297c=_296c.m.dojoTransformToAffineArray(_297b);
var _297d=_296c.m.affineInverse(_297c);
_2979=this.transformRect(_297d,_2975);
_297a=this.transformRect(_297d,_2976);
}
var _297e=_2978.length;
var id=null;
for(var j=0;id==null&&j<_297e;++j){
var child=_2978[j];
id=_296b.m.getItem(child,"id");
}
if(id!=null&&this.isTarget(id)){
_2977.addAnimatedClip(id,entry,_296d.m.makeShapeInterpolator(0,_2979,1,_297a));
}else{
this.installOnArray(_2978,_2979,_297a,_2977);
}
}
},transformRect:function(_297f,rect){
var _2980=_296b.m.getNumberWithDefault(rect,"x",0);
var _2981=_296b.m.getNumberWithDefault(rect,"y",0);
var _2982=_2980+_296b.m.getNumberWithDefault(rect,"width",0);
var _2983=_2981+_296b.m.getNumberWithDefault(rect,"height",0);
var newX1=_297f[0]*_2980+_297f[1]*_2981+_297f[2];
var newY1=_297f[3]*_2980+_297f[4]*_2981+_297f[5];
var newX2=_297f[0]*_2982+_297f[1]*_2983+_297f[2];
var newY2=_297f[3]*_2982+_297f[4]*_2983+_297f[5];
var newX=Math.min(newX1,newX2);
var newW=Math.max(newX1,newX2)-newX;
var newY=Math.min(newY1,newY2);
var newH=Math.max(newY1,newY2)-newY;
return _296a.m.makeRect(newX,newY,newW,newH);
}});
_296e.add("com/ibm/vis/engine/internal/interaction/effect/RevealEffect",["com/ibm/vis/engine/internal/interaction/effect/Effect"],function(){
_2970.LEFT_TO_RIGHT=0;
_2970.RIGHT_TO_LEFT=1;
_2970.TOP_TO_BOTTOM=2;
_2970.BOTTOM_TO_TOP=3;
});
return _2970;
});
},"com/ibm/vis/widget/_VisControlBase":function(){
define("com/ibm/vis/widget/_VisControlBase",["dojo/_base/declare","dojo/_base/array","dojo/dom-attr","dojo/dom-style","dojo/_base/lang","dojo/_base/connect","dojo/topic","dojo/_base/xhr","../engine/internal/nativeImpl/render/DojoRenderer","../engine/internal/nativeImpl/BasicFactory","../engine/internal/nativeImpl/List","./VisControlInteractivity","dijit/_WidgetBase","../engine/internal/Vis","../engine/internal/struct/Dim","../engine/internal/nativeImpl/WebEngineLayer","../interaction/internal/events/EventDispatcherImpl","../interaction/internal/events/RaveEventImpl","../engine/internal/globalization/LocalizationUtil"],function(_2984,_2985,_2986,style,lang,_2987,topic,xhr,_2988,BF,List,_2989,_298a,Vis,Dim,_298b,_298c,_298d,_298e){
var _298f=_2984("com.ibm.vis.widget._VisControlBase",[_298a],{OBJECT_SELECTION_HANDLE:_2988.OBJECT_SELECTION_HANDLE,_vis:null,_renderer:null,_interactivity:null,_scene:null,_addedSceneTreeItems:null,_updateInteractivityOnSceneChanged:true,_transitionIndex:null,_ariaLabel:null,_eventDispatcher:null,_visControlLifecycleListeners:null,_visualizationListeners:null,visJSONUrl:null,width:700,height:700,postMixInProperties:function(){
this.inherited(arguments);
this._visualizationListeners=new List();
this._visControlLifecycleListeners=new List();
if(this.visControlLifecycleListener){
this.addVisControlLifecycleListener(this.visControlLifecycleListener);
}
},postCreate:function(){
this.inherited(arguments);
_2986.set(this.visContainer,"tabIndex","0");
_2986.set(this.visContainer,"aria-live","polite");
},startup:function(){
if(this._started){
return this.inherited(arguments);
}
this.inherited(arguments);
this._ariaLabel=_2986.get(this.domNode,"aria-label")||_2986.get(this.domNode,"title")||"interactive chart";
this._vis=new Vis();
this.width=style.get(this.visContainer,"width");
this.height=style.get(this.visContainer,"height");
this._addedSceneTreeItems=new List();
this._renderer=new _2988(this.visContainer,this.width,this.height);
this._eventDispatcher=new _298c();
this._interactivity=new _2989(this);
this._transitionIndex=0;
this._renderer.init().then(lang.hitch(this,function(_2990){
this._fireVisControlStartupEvent();
if(this.visJSONUrl!=null){
this.setSpecFromUrl(this.visJSONUrl);
}
this.resize();
}));
},initRenderer:function(){
return this._renderer.init().then(lang.hitch(this,function(_2991){
return this;
}));
},whenLoaded:function(_2992,_2993){
var f=lang.hitch(_2992,_2993);
this._renderer.init().then(f);
},uninitialize:function(){
this._fireVisControlBeingDestroyedEvent();
this.inherited(arguments);
this._scene=null;
this._vis=null;
this._interactivity=null;
this._renderer.destroy();
this._renderer=null;
this._fireVisControlDestroyEvent();
this._eventDispatcher=null;
this._visualizationListeners=null;
this._visControlLifecycleListeners=null;
},getSurfaceObj:function(){
return this._renderer.surface;
},wasDestroyed:function(){
return this._destroyed;
},ensureSpecifiedSize:function(){
if(this._scene==null){
return;
}
var back=BF.getArrayItem(this._scene,0);
if(back!=null){
var shape=BF.getItem(back,"shape");
var w=BF.getItem(shape,"width");
var h=BF.getItem(shape,"height");
var txfm=BF.getItem(back,"transform");
if(txfm){
var xx=BF.getItem(txfm,"xx");
if(xx){
w*=Math.abs(xx);
}
var yy=BF.getItem(txfm,"yy");
if(yy){
h*=Math.abs(yy);
}
}
if(w!=null&&h!=null){
this._renderer.setSize(w,h);
}
}
},resize:function(){
this.inherited(arguments);
this.ensureSpecifiedSize();
if(this._scene!=null&&this.resizeToWindow){
if(this.resizeTimeWindow){
clearTimeout(this._resizeTimeWindowHandler);
this._resizeTimeWindowHandler=setTimeout(lang.hitch(this,"sceneChanged"),this.resizeTimeWindow);
}else{
this.sceneChanged();
}
}
},getSpecification:function(){
return this._vis.getSpecification();
},setSpecFromUrl:function(url){
this.setSpecificationFromUrl(url);
},setSpecificationFromUrl:function(url){
this.visJSONUrl=url;
xhr.get({url:url,handleAs:"json",load:lang.hitch(this,function(_2994,_2995){
this.setSpecification(_2994);
}),error:function(_2996,_2997){
console.log("Failed to load spec from : "+url);
}});
},setSpecFromJson:function(json){
this.setSpecificationFromJson(json);
},setSpecificationFromJson:function(json){
this._vis.read(json);
this._fireSpecChangeEvent();
this.sceneChanged(true);
this._updateAriaLabel();
},setSpec:function(spec){
this.setSpecification(spec);
},setSpecification:function(spec){
this.setSpecificationWithTransition(spec,0);
},setSpecificationWithTransition:function(spec,_2998){
this._vis.setSpecification(spec);
this._fireSpecChangeEvent();
this._transitionIndex=_2998;
this.sceneChanged(true);
this._updateAriaLabel();
},setSpecWithTransition:function(spec,_2999){
this.setSpecificationWithTransition(spec,_2999);
},setObjectSelectMouseEvent:function(_299a){
this._renderer.objectSelectionMouseEvent=_299a;
},setLogger:function(_299b){
this._vis.setLogger(_299b);
},getLogger:function(_299c){
return this._vis.getLogger();
},numberFormatter:function(_299d){
this._vis.setNumberFormatter(_299d);
},dateFormatter:function(_299e){
this._vis.setDateFormatter(_299e);
},stringFormatter:function(_299f){
this._vis.setStringFormatter(_299f);
},setNumberFormatter:function(_29a0){
this._vis.setNumberFormatter(_29a0);
},setDateFormatter:function(_29a1){
this._vis.setDateFormatter(_29a1);
},setStringFormatter:function(_29a2){
this._vis.setStringFormatter(_29a2);
},mirror:function(_29a3){
this._vis.mirror=_29a3;
},setNativeStringMeasuring:function(flag){
this._vis.visContext.setNativeStringMeasuring(flag);
},setDefaultLocalizationSpec:function(_29a4){
this.setDefaultLocalization(_29a4);
},setDefaultLocalization:function(_29a5){
var _29a6=_298e.createLocationSpec(_29a5);
this._vis.setDefaultLocalization(_29a6);
},getInteractivity:function(){
return this._interactivity;
},interactivity:function(){
return this.getInteractivity();
},onSceneChange:function(_29a7){
this._renderer.clear();
this._addedSceneTreeItems=new List();
if(this.resizeToWindow){
this._renderer.setSize(this.width,this.height);
}else{
this.ensureSpecifiedSize();
}
this._renderer.render(this._scene);
if(this._updateInteractivityOnSceneChanged){
this._interactivity.setSceneWithTransition(this._scene,this._transitionIndex);
}
if(_29a7){
var _29a8=setTimeout(lang.hitch(this,function(){
clearTimeout(_29a8);
this._fireVisualizationRenderEvent();
}),1);
}
},setScene:function(scene){
this._setScene(scene);
},_setScene:function(scene){
this._scene=scene;
this.onSceneChange();
},getScene:function(){
return this._getScene();
},scene:function(){
return this._getScene();
},_getScene:function(){
return this._scene;
},sceneChanged:function(_29a9){
if(this.resizeToWindow){
this._scene=this._vis.makeSceneTree(new Dim(this.width,this.height));
}else{
this._scene=this._vis.makeSceneTree(null);
}
if(_29a9){
topic.publish(_298f.SCENE_CHANGED,{scene:this._scene,widget:this});
this._fireVisualizationReadyEvent();
}
this.onSceneChange(_29a9);
},getChangeEffects:function(){
return this._interactivity.getChangeEffects();
},_renderModifiedScene:function(_29aa){
this._renderer.render(_29aa);
},addToNativeScene:function(_29ab,id,_29ac){
this._addedSceneTreeItems.add(_29ac);
return this._renderer.add(_29ab,id,_29ac);
},addToNativeSceneAfter:function(_29ad,_29ae,id,_29af){
this._addedSceneTreeItems.add(_29af);
return this._renderer.addAfter(_29ad,_29ae,id,_29af);
},updateNativeScene:function(_29b0,id){
return this._renderer.update(_29b0,id);
},getNativeSceneNode:function(id){
return this._renderer.nativeSceneMap[id].rawNode;
},clearNativeScene:function(){
this._renderer.clear();
},animatedEffectCompleted:function(){
this._renderer.removeList(this._addedSceneTreeItems);
this._addedSceneTreeItems=new List();
},_updateAriaLabel:function(){
var label=this._vis.getDescription()||this._ariaLabel;
_2986.set(this.visContainer,"aria-label",label);
},setSpecificationValidation:function(_29b1){
this._vis.setSpecificationValidation(_29b1);
},_getEventDispatcher:function(){
return this._eventDispatcher;
},addVisualizationEventListener:function(_29b2){
if(this._visualizationListeners&&!this._visualizationListeners.contains(_29b2)){
this._visualizationListeners.add(_29b2);
}
},removeVisualizationEventListener:function(_29b3){
if(this._visualizationListeners){
this._visualizationListeners.remove(_29b3);
}
},addVisControlLifecycleListener:function(_29b4){
if(this._visControlLifecycleListeners&&!this._visControlLifecycleListeners.contains(_29b4)){
this._visControlLifecycleListeners.add(_29b4);
}
},removeVisControlLifecycleListener:function(_29b5){
if(this._visControlLifecycleListeners){
this._visControlLifecycleListeners.remove(_29b5);
}
},_createEvent:function(_29b6){
var e=new _298d(_29b6.listeners);
e.notifyListener=_29b6.notifyListener;
return e;
},_fireSpecChangeEvent:function(){
var self=this;
var _29b7=this._createEvent({listeners:this._visualizationListeners,notifyListener:function(_29b8){
_29b8.onSpecChange(self);
}});
this._eventDispatcher.notify(_29b7);
},_fireVisualizationReadyEvent:function(){
var self=this;
var _29b9=this._createEvent({listeners:this._visualizationListeners,notifyListener:function(_29ba){
_29ba.onReady(self);
}});
this._eventDispatcher.notify(_29b9);
},_fireVisualizationRenderEvent:function(){
var self=this;
var _29bb=this._createEvent({listeners:this._visualizationListeners,notifyListener:function(_29bc){
_29bc.onRender(self);
}});
this._eventDispatcher.notify(_29bb);
},_fireVisControlStartupEvent:function(){
var self=this;
var _29bd=this._createEvent({listeners:this._visControlLifecycleListeners,notifyListener:function(_29be){
_29be.onStartup(self);
}});
this._eventDispatcher.notify(_29bd);
},_fireVisControlBeingDestroyedEvent:function(){
var self=this;
var _29bf=this._createEvent({listeners:this._visControlLifecycleListeners,notifyListener:function(_29c0){
_29c0.onBeingDestroyed(self);
}});
this._eventDispatcher.notify(_29bf);
},_fireVisControlDestroyEvent:function(){
var self=this;
var _29c1=this._createEvent({listeners:this._visControlLifecycleListeners,notifyListener:function(_29c2){
_29c2.onDestroy(self);
}});
this._eventDispatcher.notify(_29c1);
}});
_298f.SCENE_CHANGED="VisControl/SceneChange";
return _298f;
});
},"com/ibm/vis/interaction/internal/events/InteractivityEventImpl":function(){
define("com/ibm/vis/interaction/internal/events/InteractivityEventImpl",["./RaveEventImpl","../../InteractivityEvent","com/ibm/init/statics","dojo/_base/declare"],function(_29c3,_29c4,_29c5,_29c6){
var _29c7=_29c6("com.ibm.vis.interaction.internal.events.InteractivityEventImpl",[_29c3,_29c4],{constructor:function(_29c8){
},notifyListener:function(_29c9){
(_29c9).update(this);
}});
return _29c7;
});
},"com/ibm/vis/engine/internal/util/AxisToLegendConverter":function(){
define("com/ibm/vis/engine/internal/util/AxisToLegendConverter",["com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/fork!../data/Range","com/ibm/init/fork!../grammar/units/Unit","com/ibm/init/fork!../nativeImpl/HashcodeMap","com/ibm/init/fork!../nativeImpl/Map","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../nativeImpl/IntegerUtil","com/ibm/init/statics","dojo/_base/declare"],function(_29ca,_29cb,_29cc,_29cd,_29ce,_29cf,_29d0,_29d1,_29d2,_29d3){
var _29d4=_29d3("com.ibm.vis.engine.internal.util.AxisToLegendConverter",null,{axis:null,baseId:null,legendIndex:0,isTitleBeforeEntries:false,constructor:function(axis,_29d5,_29d6){
this.axis=axis;
this.baseId=_29d4.getLegendContentBaseId(_29d5,!_29d6);
this.isTitleBeforeEntries=_29d6;
this.legendIndex=_29d5;
},createLegendWithLineSwatch:function(_29d7,_29d8,_29d9,title,_29da,_29db,_29dc){
var _29dd=_29ca.m.createJSONArray();
var _29de=_29d4.createLegendContentForTitle(title,_29da,this.legendIndex,this.isTitleBeforeEntries,_29db);
if(this.isTitleBeforeEntries&&_29de!=null){
_29dd.push(_29de);
}
var _29df=this.createLegendContentForEntriesWithEntryForLine(_29d7,_29d8,_29d9);
if(_29df!=null){
_29dd.push(_29df);
}
if(!this.isTitleBeforeEntries&&_29de!=null){
_29dd.push(_29de);
}
var _29e0=_29ca.m.createJSONObject();
_29ca.m.put(_29e0,"children",_29dd);
_29ca.m.put(_29e0,"type","legend");
_29d4.addTransform(_29dc,_29e0);
return _29e0;
},createLegendContentForEntriesWithEntryForLine:function(_29e1,_29e2,_29e3){
if(this.axis==null||this.baseId==null){
return null;
}
var _29e4=this.makeLegendEntryForLine(_29e1,_29e2);
var _29e5=_29ca.m.createJSONArray();
_29e5.push(_29e4);
this.createLegendEntries(1,_29e5);
var _29e6=_29d4.makeLegendContent(_29e5,this.baseId);
_29d4.addTransform(_29e3,_29e6);
return _29e6;
},createLegendEntries:function(_29e7,_29e8){
if(_29e8==null){
return;
}
var marks=this.getChild("axis-mark");
var _29e9=this.getChild("axis-label");
if(marks==null&&_29e9==null){
return;
}
var map=new _29ce.m();
this.addToMap(map,marks);
this.addToMap(map,_29e9);
var _29ea=new _29cf.m();
var _29eb=new _29d0.m();
for(var _29ec=0,_29ed=map.keySet(),_29ee=_29ed.size();_29ec<_29ee;++_29ec){
var key=_29ed.get(_29ec);
var entry=this.makeLegendEntry(map.get(key),_29e7);
if(entry!=null){
var id=_29ca.m.getItem(entry,"id");
_29ea.put(id,entry);
_29eb.add(id);
}
}
var keys=_29eb.toArray(new Array(_29eb.size()));
_29ca.m.sortArray(keys);
for(var i=0;i<keys.length;++i){
var entry=_29ea.get(keys[i]);
_29e8.push(entry);
}
},makeLegendEntryForLine:function(_29ef,_29f0){
if(_29ef==null||_29f0==null||_29ef.length!=_29f0.length){
return null;
}
var line=this.getLineChild();
if(line==null){
return null;
}
var id=this.baseId+"LE"+0;
var _29f1=id+"SW0";
_29ca.m.put(line,"id",_29f1);
_29ca.m.put(line,"field",this.prepForJson(_29ef));
_29ca.m.put(line,"value",this.prepForJson(_29f0));
var entry=_29ca.m.createJSONObject();
_29ca.m.put(entry,"id",id);
var _29f2=_29ca.m.createJSONArray();
_29f2.push(line);
_29ca.m.put(entry,"children",_29f2);
return entry;
},prepForJson:function(_29f3){
if(_29f3.length==1){
return _29f3[0];
}
var array=_29ca.m.createSizedJSONArray(_29f3.length);
for(var i=0;i<_29f3.length;++i){
array.push(_29f3[i]);
}
return array;
},makeLegendEntry:function(_29f4,_29f5){
var first=_29f4.get(0);
var _29f6=_29ca.m.getItem(first,"id");
var id=this.makeLegendEntryId(_29f6,_29f5);
var entry=_29ca.m.createJSONObject();
_29ca.m.put(entry,"id",id);
_29ca.m.put(entry,"type",_29d4.LEGEND_ENTRY);
var _29f7=_29ca.m.createJSONArray();
_29ca.m.put(entry,"children",_29f7);
for(var _29f8=0,_29f9=_29f4.size();_29f8<_29f9;++_29f8){
var child=_29f4.get(_29f8);
var _29fa=_29ca.m.getItem(child,"id");
var _29fb=this.createLegendEntryChildId(_29fa,id);
_29ca.m.put(child,"id",_29fb);
_29f7.push(child);
}
return entry;
},createLegendEntryChildId:function(_29fc,id){
var _29fd=this.getPartSuffix(_29fc);
var part=this.isLabelId(_29fc)?"T":"SW";
return id+part+_29fd;
},getPartSuffix:function(_29fe){
var _29ff=_29fe.indexOf("_",1);
if(_29ff>0){
return _29fe.substring(_29ff);
}
return "";
},makeLegendEntryId:function(_2a00,_2a01){
var key=this.getMemberIndex(_2a00);
var id=null;
if(_2a01==0){
id=this.baseId+"LE"+key;
}else{
var _2a02=_29d1.m.parseInt(key,10);
var index=_2a02+_2a01;
id=this.baseId+"LE"+index;
}
return id;
},addToMap:function(map,_2a03){
var _2a04=_29ca.m.getItem(_2a03,"children");
if(_2a04==null){
return;
}
var size=_2a04.length;
for(var i=0;i<size;++i){
var child=_2a04[i];
var key=_29ca.m.getItem(child,"value");
var list=map.get(key);
if(list==null){
list=new _29d0.m();
map.put(key,list);
}
list.add(child);
}
},getChild:function(type){
var _2a05=_29ca.m.getItem(this.axis,"children");
if(_2a05==null){
return null;
}
var size=_29ca.m.getJSONArraySize(_2a05);
for(var i=0;i<size;++i){
var child=_2a05[i];
var _2a06=_29ca.m.getItem(child,"type");
if(type.CPVisEngineEquals(_2a06)){
return child;
}
}
return null;
},getLineChild:function(){
var _2a07=_29ca.m.getItem(this.axis,"children");
if(_2a07==null){
return null;
}
var size=_29ca.m.getJSONArraySize(_2a07);
for(var i=0;i<size;++i){
var child=_2a07[i];
var id=_29ca.m.getItem(child,"id");
if(id==null){
continue;
}
if(id.indexOf("L")>0){
return child;
}
}
return null;
},getMemberIndex:function(id){
var index=id.indexOf("M")+1;
if(index==0){
index=id.indexOf("T")+1;
}
var _2a08=id.indexOf("_",index);
if(_2a08>0){
return id.substring(index,_2a08);
}
return id.substring(index);
},isLabelId:function(id){
return id.indexOf("T")>0;
}});
_29d4.makeValueForContinuousField=function(range,unit){
if(range==null){
return null;
}
var value=_29ca.m.createJSONObject();
if(!_29cb.m.isNaN(range.min)){
_29ca.m.put(value,"min",range.min);
}
if(!_29cb.m.isNaN(range.max)){
_29ca.m.put(value,"max",range.max);
}
if(unit!=null){
_29ca.m.put(value,"unit",unit.name);
}
return value;
};
_29d4.makeValueForCategoricalField=function(_2a09){
if(_2a09==null){
return null;
}
var value=_29ca.m.createJSONObject();
var array=_29ca.m.createJSONArray();
for(var i=0;i<_2a09.length;++i){
array.push(_2a09[i]);
}
_29ca.m.put(value,"categories",array);
return value;
};
_29d4.createLegendContentForTitle=function(title,back,_2a0a,_2a0b,_2a0c){
if(title==null&&back==null){
return null;
}
var id=_29d4.getLegendContentBaseId(_2a0a,_2a0b);
var _2a0d=_29ca.m.createJSONArray();
if(back!=null){
var _2a0e=id+"-Back";
_29ca.m.put(back,"id",_2a0e);
_2a0d.push(back);
}
if(title!=null){
var _2a0f=id+"T";
_29ca.m.put(title,"id",_2a0f);
_2a0d.push(title);
}
var _2a10=_29d4.makeLegendContent(_2a0d,id);
_29d4.addTransform(_2a0c,_2a10);
return _2a10;
};
_29d4.makeLegendContent=function(_2a11,id){
var _2a12=_29ca.m.createJSONObject();
_29ca.m.put(_2a12,"type",_29d4.LEGEND_CONTENT);
_29ca.m.put(_2a12,"id",id);
_29ca.m.put(_2a12,"children",_2a11);
return _2a12;
};
_29d4.getLegendContentBaseId=function(_2a13,_2a14){
var _2a15=(_2a14)?"0":"1";
return "L"+_2a13+"LC"+_2a15;
};
_29d4.addTransform=function(_2a16,_2a17){
if(_2a16!=null&&(_2a16.x!=0||_2a16.y!=0)){
var t=_29ca.m.createJSONObject();
if(_2a16.x!=0){
_29ca.m.put(t,"dx",_2a16.x);
}
if(_2a16.y!=0){
_29ca.m.put(t,"dy",_2a16.y);
}
_29ca.m.put(_2a17,"transform",t);
}
};
_29d2.add("com/ibm/vis/engine/internal/util/AxisToLegendConverter",["com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/nativeImpl/Double"],function(){
_29d4.LE="LE";
_29d4.LEGEND_ENTRY="legendEntry";
_29d4.VALUE="value";
_29d4.FIELD="field";
_29d4.AXIS_LABEL="axis-label";
_29d4.AXIS_MARK="axis-mark";
_29d4.LEGEND="legend";
_29d4.LEGEND_CONTENT="legendContent";
_29d4.BACK="-Back";
_29d4.CATEGORIES="categories";
_29d4.UNIT="unit";
_29d4.MAX="max";
_29d4.MIN="min";
});
return _29d4;
});
},"com/ibm/vis/engine/internal/interaction/morph/ItemMatcher":function(){
define("com/ibm/vis/engine/internal/interaction/morph/ItemMatcher",["com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!./FeatureGroup","com/ibm/init/statics","dojo/_base/declare"],function(_2a18,_2a19,_2a1a,_2a1b,_2a1c,_2a1d){
var _2a1e=_2a1d("com.ibm.vis.engine.internal.interaction.morph.ItemMatcher",null,{sceneParts:null,featureGroups:null,pseudoIdCounter:0,constructor:function(_2a1f,_2a20){
this.sceneParts=new _2a18.m();
this.featureGroups=new _2a19.m();
this.pseudoIdCounter=0;
this.processScene(_2a1f,true);
this.processScene(_2a20,false);
this.match();
},processScene:function(array,_2a21){
var scene=_2a1a.m.createJSONObject();
_2a1a.m.put(scene,"type","scenetree");
_2a1a.m.put(scene,"children",array);
var fg=this.getFeatureGroup("root","root","id");
if(!_2a21){
fg.setTargetArray(array);
}
this.processSceneRecursive(fg,scene,_2a21);
},processSceneRecursive:function(fg,item,_2a22){
if(_2a1b.m.isTransitionShape(item)){
if(_2a22){
fg.addSource(item);
}else{
fg.addTarget(item);
}
return;
}
var _2a23=_2a1a.m.getItem(item,"children");
if(_2a23==null){
return;
}
if(!_2a22){
fg.setTargetArray(_2a23);
}
var size=_2a23.length;
for(var i=0;i<size;++i){
var child=_2a23[i];
if(_2a1b.m.isFeatureGroup(child)){
var newfg=this.getFeatureGroup(_2a1b.m.getBaseId(child),_2a1a.m.getItem(child,"type"),_2a1b.m.getKey(child));
this.setTransformAndClipInfo(newfg,child,_2a22);
this.processSceneRecursive(newfg,child,_2a22);
}else{
this.processSceneRecursive(fg,child,_2a22);
}
}
},setTransformAndClipInfo:function(fg,item,_2a24){
var _2a25=_2a1a.m.getItem(item,"transform");
var clip=_2a1a.m.getItem(item,"clip");
if(_2a24){
fg.sourceTransform=_2a25;
fg.sourceClip=clip;
}else{
fg.targetGroup=item;
fg.targetTransform=_2a25;
fg.targetClip=clip;
}
},getFeatureGroup:function(_2a26,type,key){
if(_2a26==null){
_2a26="PFG"+this.pseudoIdCounter;
this.pseudoIdCounter++;
}
var fg=this.sceneParts.get(_2a26);
if(fg!=null){
return fg;
}
fg=new _2a1b.m(_2a26,type,key);
this.sceneParts.put(_2a26,fg);
this.featureGroups.add(fg);
return fg;
},match:function(){
for(var _2a27=0,_2a28=this.sceneParts.keySet(),_2a29=_2a28.size();_2a27<_2a29;++_2a27){
var key=_2a28.get(_2a27);
var fg=this.sceneParts.get(key);
fg.match();
}
}});
_2a1c.add("com/ibm/vis/engine/internal/interaction/morph/ItemMatcher",[],function(){
_2a1e.SCENE_ROOT="root";
});
return _2a1e;
});
},"com/ibm/vis/interaction/internal/HighlightStateImpl":function(){
define("com/ibm/vis/interaction/internal/HighlightStateImpl",["../HighlightState","com/ibm/init/fork!../../engine/internal/nativeImpl/List","com/ibm/init/fork!../../engine/internal/nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_2a2a,_2a2b,_2a2c,_2a2d,_2a2e){
var _2a2f=_2a2e("com.ibm.vis.interaction.internal.HighlightStateImpl",[_2a2a],{highlightEffect:null,interactivity:null,constructor:function(_2a30,_2a31){
this.highlightEffect=_2a30;
this.interactivity=_2a31;
for(var _2a32=0,_2a33=this.highlightEffect.values(),_2a34=_2a33.size();_2a32<_2a34;++_2a32){
var e=_2a33.get(_2a32);
e.newTargetIds=new _2a2b.m();
}
},setSingle:function(_2a35,state){
if(_2a35==null){
return;
}
var _2a36=this.highlightEffect.get(state);
if(_2a36==null){
return;
}
var item=_2a35;
var id=_2a2c.m.getItem(item.sceneItem,"id");
_2a36.addTargetId(id);
},setMultiple:function(items,state){
for(var _2a37=0,_2a38=items.length;_2a37<_2a38;++_2a37){
var item=items[_2a37];
this.setSingle(item,state);
}
},apply:function(){
for(var _2a39=0,_2a3a=this.highlightEffect.values(),_2a3b=_2a3a.size();_2a39<_2a3b;++_2a39){
var _2a3c=_2a3a.get(_2a39);
if(_2a3c.hasChanged()){
_2a3c.clear();
_2a3c.apply();
}
}
if(this.interactivity!=null){
(this.interactivity).rendererShowHighlights();
}
}});
return _2a2f;
});
},"com/ibm/vis/engine/internal/globalization/NumericShapingInfo":function(){
define("com/ibm/vis/engine/internal/globalization/NumericShapingInfo",["com/ibm/init/fork!../nativeImpl/Map","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_2a3d,_2a3e,_2a3f,_2a40){
var _2a41=_2a40("com.ibm.vis.engine.internal.globalization.NumericShapingInfo",null,{type:1,nationalDigitCode:0,contextualDigitCodes:null,startingContextCode:0,constructor:function(type,_2a42,_2a43,_2a44){
this.type=type;
this.nationalDigitCode=_2a42;
this.contextualDigitCodes=_2a43;
this.startingContextCode=_2a44;
},isNational:function(){
return (this.type&2)!=0;
},isContextual:function(){
return (this.type&4)!=0;
},isNone:function(){
return (this.type&1)!=0;
},getNationalDigitCode:function(){
return this.nationalDigitCode;
},getContextualDigitCodes:function(){
return this.contextualDigitCodes;
},getStartingContextCode:function(){
return this.startingContextCode;
}});
_2a41.initDigitMap=function(){
_2a41.digitMap=new _2a3d.m();
_2a41.digitMap.put(_2a41.ARABIC,1);
_2a41.digitMap.put(_2a41.BENGALI,4);
_2a41.digitMap.put(_2a41.DEVANAGARI,3);
_2a41.digitMap.put(_2a41.EASTERN_ARABIC,2);
_2a41.digitMap.put(_2a41.ETHIOPIC,16);
_2a41.digitMap.put(_2a41.EUROPEAN,0);
_2a41.digitMap.put(_2a41.GUJARATI,6);
_2a41.digitMap.put(_2a41.GURMUKHI,5);
_2a41.digitMap.put(_2a41.KANNADA,10);
_2a41.digitMap.put(_2a41.KHMER,17);
_2a41.digitMap.put(_2a41.LAO,13);
_2a41.digitMap.put(_2a41.MALAYALAM,11);
_2a41.digitMap.put(_2a41.MONGOLIAN,18);
_2a41.digitMap.put(_2a41.MYANMAR,15);
_2a41.digitMap.put(_2a41.ORIYA,7);
_2a41.digitMap.put(_2a41.TAMIL,8);
_2a41.digitMap.put(_2a41.TELUGU,9);
_2a41.digitMap.put(_2a41.THAI,12);
_2a41.digitMap.put(_2a41.TIBETAN,14);
};
_2a41.getDigitCode=function(_2a45){
if(_2a41.digitMap==null){
_2a41.initDigitMap();
}
var digit=_2a41.digitMap.get(_2a45);
if(digit==null){
return _2a41.digitMap.get(_2a41.EUROPEAN);
}
return digit;
};
_2a41.getDigitCodes=function(_2a46){
var _2a47=new _2a3e.m();
for(var _2a48=0,_2a49=_2a46.length;_2a48<_2a49;++_2a48){
var _2a4a=_2a46[_2a48];
var x=_2a41.getDigitCode(_2a4a);
_2a47.add(x);
}
var a=Array.create([_2a47.size()],0);
for(var i=0;i<a.length;++i){
a[i]=_2a47.get(i);
}
return a;
};
_2a41.getShapingInfo=function(spec){
if(spec!=null){
if(spec.nationalShaping!=null){
var _2a4b=_2a41.getDigitCode(spec.nationalShaping.digits);
return new _2a41(2,_2a4b,null,0);
}
if(spec.contextualShaping!=null){
var _2a4c=_2a41.getDigitCodes(spec.contextualShaping.digits);
var _2a4d=_2a41.getDigitCode(spec.contextualShaping.defaultContext);
return new _2a41(4,0,_2a4c,_2a4d);
}
}
return new _2a41(1,0,null,0);
};
_2a3f.add("com/ibm/vis/engine/internal/globalization/NumericShapingInfo",["com/ibm/vis/engine/internal/nativeImpl/Map"],function(){
_2a41.ARABIC="ARABIC";
_2a41.BENGALI="BENGALI";
_2a41.DEVANAGARI="DEVANAGARI";
_2a41.EASTERN_ARABIC="EASTERN_ARABIC";
_2a41.ETHIOPIC="ETHIOPIC";
_2a41.EUROPEAN="EUROPEAN";
_2a41.GUJARATI="GUJARATI";
_2a41.GURMUKHI="GURMUKHI";
_2a41.KANNADA="KANNADA";
_2a41.KHMER="KHMER";
_2a41.LAO="LAO";
_2a41.MALAYALAM="MALAYALAM";
_2a41.MONGOLIAN="MONGOLIAN";
_2a41.MYANMAR="MYANMAR";
_2a41.ORIYA="ORIYA";
_2a41.TAMIL="TAMIL";
_2a41.TELUGU="TELUGU";
_2a41.THAI="THAI";
_2a41.TIBETAN="TIBETAN";
_2a41.digitMap=null;
_2a41.NONE=1;
_2a41.NATIONAL=2;
_2a41.CONTEXTUAL=4;
});
return _2a41;
});
},"com/ibm/vis/engine/internal/struct/RasterEdgeDataYComparator":function(){
define("com/ibm/vis/engine/internal/struct/RasterEdgeDataYComparator",["../nativeImpl/Comparator","com/ibm/init/statics","dojo/_base/declare"],function(_2a4e,_2a4f,_2a50){
var _2a51=_2a50("com.ibm.vis.engine.internal.struct.RasterEdgeDataYComparator",[_2a4e],{compare:function(o1,o2){
var i0=(o1).i0;
var i1=(o2).i0;
if(i1-i0<0){
return 1;
}else{
if(i1-i0>0){
return -1;
}
}
return 0;
}});
return _2a51;
});
},"com/ibm/vis/engine/internal/Vis":function(){
define("com/ibm/vis/engine/internal/Vis",["com/ibm/init/fork!./struct/Dim","com/ibm/init/fork!./DefaultVisContentFrame","com/ibm/init/fork!./nativeImpl/Map","com/ibm/init/fork!./VisContext","com/ibm/init/fork!../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!../../monitor/LogComponent","com/ibm/init/fork!./struct/Rect","com/ibm/init/fork!./nativeImpl/BasicFactory","com/ibm/init/fork!./nativeImpl/WebEngineException","com/ibm/init/fork!./nativeImpl/SpecUtil","com/ibm/init/fork!./nativeImpl/List","com/ibm/init/fork!../../internal/json/SchemaValidation","com/ibm/init/fork!./nativeImpl/ResourceUtil","com/ibm/init/fork!./scene/ItemBuilder","com/ibm/init/fork!./grammar/units/UnitConverter","com/ibm/init/fork!./MirrorScene","com/ibm/init/fork!./migration/spec/SpecMigration","com/ibm/init/fork!../../exceptions/SpecException","com/ibm/init/fork!../../exceptions/ErrorCode","com/ibm/init/fork!./Grammar","com/ibm/init/fork!./Data","com/ibm/init/fork!./legend/LegendFrameMaker","com/ibm/init/fork!./Bounds","com/ibm/init/fork!./grammar/aesthetic/Aesthetic","com/ibm/init/fork!./oldlegends/LegendPosition","com/ibm/init/statics","dojo/_base/declare"],function(_2a52,_2a53,_2a54,_2a55,_2a56,_2a57,_2a58,_2a59,_2a5a,_2a5b,_2a5c,_2a5d,_2a5e,_2a5f,_2a60,_2a61,_2a62,_2a63,_2a64,_2a65,_2a66,_2a67,_2a68,_2a69,_2a6a,_2a6b,_2a6c){
var Vis=_2a6c("com.ibm.vis.engine.internal.Vis",null,{size:null,data:null,grammar:null,legends:null,currentJSON:null,currentSpec:null,items:null,visContext:null,mirror:false,legendVis:false,defaultLocalizationSpec:null,specValidationEnabled:true,mainFrame:null,BACK_STYLE:null,constructor:function(){
this.mainFrame=new _2a53.m();
this.BACK_STYLE=new Object();
this.__constructor_com_ibm_vis_engine_internal_Vis.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_Vis:function(id){
this.items=new _2a54.m();
this.visContext=new _2a55.m(id);
this.mirror=false;
this.legendVis=false;
},copyVisContextSettings:function(_2a6d){
this.visContext.formatContext=_2a6d.formatContext;
this.visContext.logContext=_2a6d.logContext;
this.visContext.nativeStringMeasuring=_2a6d.nativeStringMeasuring;
this.visContext.usesFractionalMetrics=_2a6d.usesFractionalMetrics;
},getByID:function(s){
return this.items.get(s);
},getDescription:function(){
if(this.currentSpec==null){
return null;
}
return this.currentSpec.description;
},recreateSceneTree:function(){
return this.makeSceneTree(this.size);
},makeSceneTree:function(_2a6e){
if(this.visContext.logContext.hasListeners()){
this.visContext.logContext.info(_2a57.m.CommonGrammar,"Making Scene Tree");
}
var _2a6f=this.findVisSize(_2a6e);
this.size=_2a6f;
var _2a70=new _2a58.m(0,0,_2a6f.width,_2a6f.height);
this.mainFrame.layoutWithBounds(_2a70,_2a6f,_2a6f);
var _2a71=_2a59.m.createJSONArray();
_2a71.push(this.makeBack(_2a70));
this.mainFrame.createShapesInScene(_2a71);
var _2a72=this.makeLocalizationNode();
if(_2a72!=null){
_2a71.push(_2a72);
}
this.removeNonVisible(_2a71);
this.mirrorScene(_2a71,_2a6f);
return _2a71;
},replaceSharedScalesInGrammar:function(base,index){
this.grammar[index].replaceSharedScales(base);
},getSize:function(){
if(this.size!=null){
return this.size;
}
return Vis.DEFAULT_SIZE;
},put:function(id,item){
if(id==null||item==null){
throw new _2a5a.m();
}
if(this.items.containsKey(id)){
var _2a73="Duplicate ID "+id+" found.  All fields named \"id\" must be unique throughout a single VizJSON Specification";
if(this.visContext.logContext.hasListeners()){
this.visContext.logContext.grammarError(_2a57.m.CommonGrammar,_2a73);
}
throw new _2a5a.m(_2a73);
}
this.items.put(id,item);
},remove:function(id){
this.items.remove(id);
},read:function(_2a74){
var json=_2a59.m.parse(_2a74);
this.setSpec(json);
},setSpec:function(_2a75){
this.size=null;
this.setSpecification(_2a75);
},setSpecification:function(_2a76){
var _2a77=this.migrateJSON(_2a76);
if(this.specValidationEnabled){
this.validateSpec(_2a77);
}
this.setSpecInternal(_2a5b.m.fromJSONObject(_2a77),_2a77);
},getSpecification:function(){
return _2a59.m.deepClone(this.currentJSON);
},setVisJSONSpec:function(spec){
this.setSpecInternal(spec,_2a5b.m.toJSONObject(spec));
},setNumberFormatter:function(_2a78){
var fc=this.visContext.formatContext;
fc.integratorNumberFormatter=_2a78;
},setDateFormatter:function(_2a79){
var fc=this.visContext.formatContext;
fc.integratorDateFormatter=_2a79;
},setStringFormatter:function(_2a7a){
var fc=this.visContext.formatContext;
fc.integratorStringFormatter=_2a7a;
},setLogger:function(_2a7b){
this.visContext.logContext=_2a7b;
},getLogger:function(){
return this.visContext.logContext;
},removeNonVisible:function(scene){
for(var _2a7c=0,_2a7d=scene.length;_2a7c<_2a7d;++_2a7c){
var o=scene[_2a7c];
var type=_2a59.m.getItem(o,"type");
if(type!=null&&type.CPVisEngineEquals("element")){
var _2a7e=_2a59.m.getItem(o,"children");
var _2a7f=_2a59.m.createJSONArray();
for(var _2a80=0,_2a81=_2a7e.length;_2a80<_2a81;++_2a80){
var child=_2a7e[_2a80];
if(child!=null){
var _2a82=_2a59.m.getItem(child,"visible");
if(_2a82==null||(_2a59.m.isBoolean(_2a82)&&_2a82)){
_2a7f.push(child);
}
}
}
_2a59.m.remove(o,"children");
_2a59.m.put(o,"children",_2a7f);
}
}
},getMatchingRows:function(_2a83,_2a84,_2a85){
if(_2a84==null||_2a83==null){
return null;
}
var _2a86=new Array(_2a83.length);
for(var i=0;i<_2a86.length;++i){
var field=this.getByID(_2a83[i]);
if(field!=null){
_2a86[i]=field;
}
}
var _2a87=new _2a5c.m();
if(_2a86.length>0){
for(var _2a88=0;_2a88<_2a86.length;++_2a88){
var field=_2a86[_2a88];
if(field==null){
continue;
}
var rows=field.data.rows;
var _2a89=this.findRowsFromFieldWithValue(rows,field.index,_2a84[_2a88]);
if(_2a87.size()>0&&_2a89.size()>0&&!_2a85){
return null;
}
for(var i=0;i<_2a89.size();++i){
_2a87.add(_2a89.get(i));
}
}
}else{
var rows=this.data[0].rows;
for(var _2a8a=0,_2a8b=rows.length;_2a8a<_2a8b;++_2a8a){
var row=rows[_2a8a];
_2a87.add(row.index);
}
}
var r=Array.create([_2a87.size()],0);
for(var i=0;i<r.length;++i){
r[i]=_2a87.get(i);
}
return r;
},getMatchingData:function(_2a8c){
if(_2a8c==null){
return null;
}
for(var _2a8d=0,_2a8e=_2a8c.length;_2a8d<_2a8e;++_2a8d){
var id=_2a8c[_2a8d];
var field=this.getByID(id);
if(field!=null){
var _2a8f=field.data.id;
return this.getDataIndex(_2a8f);
}
}
return null;
},getDataIndex:function(_2a90){
if(_2a90!=null){
for(var i=0;i<this.data.length;++i){
if(_2a90.CPVisEngineEquals(this.data[i].id)){
return i;
}
}
}
return null;
},getDataByID:function(_2a91){
if(_2a91!=null){
for(var i=0;i<this.data.length;++i){
if(_2a91.CPVisEngineEquals(this.data[i].id)){
return this.data[i];
}
}
}
return null;
},findRowsFromFieldWithValue:function(rows,_2a92,value){
var _2a93=new _2a5c.m();
for(var _2a94=0;_2a94<rows.length;++_2a94){
var row=rows[_2a94];
var _2a95=row.data[_2a92];
if(_2a95!=null&&_2a95==value){
_2a93.add(_2a94);
}
}
return _2a93;
},setDefaultLocalization:function(spec){
this.defaultLocalizationSpec=spec;
this.visContext.setLocalization(this.getLocalizationSpec());
},getLocalizationSpec:function(){
if(this.currentSpec==null||this.currentSpec.localization==null){
return this.defaultLocalizationSpec;
}
var spec=this.currentSpec.localization;
if(this.defaultLocalizationSpec!=null){
if(spec.baseTextDirection==null){
spec.baseTextDirection=this.defaultLocalizationSpec.baseTextDirection;
}
if(spec.nationalShaping==null){
spec.nationalShaping=this.defaultLocalizationSpec.nationalShaping;
}
if(spec.contextualShaping==null){
spec.contextualShaping=this.defaultLocalizationSpec.contextualShaping;
}
if(spec.mirror==null){
spec.mirror=this.defaultLocalizationSpec.mirror;
}
}
return spec;
},setSpecificationValidation:function(_2a96){
this.specValidationEnabled=_2a96;
},getData:function(){
return this.data;
},setData:function(data){
this.data=data;
},getGrammar:function(){
return this.grammar;
},setGrammar:function(_2a97){
this.grammar=_2a97;
},getLegends:function(){
return this.legends;
},getCurrentJSON:function(){
return this.currentJSON;
},setCurrentJSON:function(_2a98){
this.currentJSON=_2a98;
},getCurrentSpec:function(){
return this.currentSpec;
},setCurrentSpec:function(_2a99){
this.currentSpec=_2a99;
},getVisContext:function(){
return this.visContext;
},setMirror:function(_2a9a){
this.mirror=_2a9a;
},isLegendVis:function(){
return this.legendVis;
},setLegendVis:function(_2a9b){
this.legendVis=_2a9b;
},makeBack:function(_2a9c){
var r=_2a5f.m.makeRectangle(0,0,_2a9c.width,_2a9c.height,this.BACK_STYLE);
r.fill=null;
r.setID("Back");
return r.toJSON();
},findVisSize:function(_2a9d){
var _2a9e;
var width;
var _2a9f=null;
if(this.currentSpec.size!=null){
_2a9e=_2a60.m.convertLength(this.currentSpec.size.height,null,null);
if(_2a9e==null){
_2a9f=this.mainFrame.getPreferredSize();
_2a9e=_2a60.m.convertLength(_2a9e,_2a9f.height,_2a9f.height);
}
if(_2a9e==null){
if(_2a9d!=null){
_2a9e=_2a9d.height;
}else{
_2a9e=_2a9f.height;
}
}
}else{
if(_2a9d!=null){
_2a9e=_2a9d.height;
}else{
_2a9f=this.mainFrame.getPreferredSize();
_2a9e=_2a9f.height;
}
}
if(this.currentSpec.size!=null){
width=_2a60.m.convertLength(this.currentSpec.size.width,null,null);
if(width==null){
if(_2a9f==null){
_2a9f=this.mainFrame.getPreferredSize();
}
width=_2a60.m.convertLength(width,_2a9f.width,_2a9f.width);
}
if(width==null){
if(_2a9d!=null){
width=_2a9d.width;
}else{
width=_2a9f.width;
}
}
}else{
if(_2a9d!=null){
width=_2a9d.width;
}else{
if(_2a9f==null){
_2a9f=this.mainFrame.getPreferredSize();
}
width=_2a9f.width;
}
}
return new _2a52.m((width),(_2a9e));
},makeLocalizationNode:function(){
var _2aa0=this.visContext.getLocalizationSpec();
if(_2aa0!=null){
var _2aa1=_2aa0.baseTextDirection;
if(_2aa1!=null){
var _2aa2=_2a59.m.createJSONObject();
_2a59.m.put(_2aa2,"id","localization");
_2a59.m.put(_2aa2,"baseTextDirection",_2aa1);
return _2aa2;
}
}
return null;
},mirrorScene:function(scene,_2aa3){
if(this.mirror){
var _2aa4=new _2a61.m(_2aa3.width);
_2aa4.process(scene);
}
},migrateJSON:function(_2aa5){
var clone=_2a59.m.deepClone(_2aa5);
if(this.visContext.logContext.hasListeners()){
this.visContext.logContext.info(_2a57.m.CommonGrammar,"Migrating Specification");
}
_2a62.m.getInstance().migrate(clone);
return clone;
},validateSpec:function(clone){
var _2aa6=Vis.validate(clone);
if(_2aa6.severity==1){
if(this.visContext.logContext.hasListeners()){
this.visContext.logContext.warning(_2a57.m.CommonGrammar,_2aa6.toString());
}
}else{
if(_2aa6.severity==2){
if(this.visContext.logContext.hasListeners()){
this.visContext.logContext.error(_2a57.m.CommonGrammar,_2aa6.toString());
}
throw new _2a63.m(_2aa6.path,_2a64.m.SPEC_INVALID_VALUE,_2aa6.toString(),null,null,null,null);
}
}
},setSpecInternal:function(spec,json){
if(this.visContext.logContext.hasListeners()){
this.visContext.logContext.info(_2a57.m.CommonGrammar,"Setting Specification");
}
this.currentSpec=spec;
this.currentJSON=json;
this.items.clear();
this.visContext.setLocalization(this.getLocalizationSpec());
this.processVersion();
if(this.size==null){
this.size=this.findVisSize(new _2a52.m(500,400));
}
this.setupFrames();
this.makeData();
this.makeGrammars();
this.makeLegends();
},processVersion:function(){
if(this.currentSpec.version!=null&&this.currentSpec.version.CPVisEngineLength()>0){
var _2aa7=new _2a5c.m();
_2aa7.add("2.0.1");
for(var _2aa8=0,_2aa9=Vis.OLD_VERSIONS,_2aaa=_2aa9.length;_2aa8<_2aaa;++_2aa8){
var _2aab=_2aa9[_2aa8];
_2aa7.add(_2aab);
}
if(!_2aa7.contains(this.currentSpec.version)){
throw new _2a5a.m("Invalid version number in VisJSON specification");
}
}else{
this.currentSpec.version="2.0.1";
_2a59.m.put(this.currentJSON,"version","2.0.1");
}
},setupFrames:function(){
this.mainFrame=new _2a53.m();
this.mainFrame.style=this.currentSpec.style;
},makeGrammars:function(){
var _2aac=_2a59.m.getItem(this.currentJSON,"grammar");
this.grammar=new Array(this.currentSpec.grammar!=null?this.currentSpec.grammar.length:0);
for(var i=0;i<this.grammar.length;++i){
var _2aad=_2aac[i];
var _2aae=this.currentSpec.grammar[i].bounds;
var style=this.currentSpec.grammar[i].style;
this.grammar[i]=new _2a65.m(_2aae,style,this,_2aad,this.currentSpec.grammar[i],i);
var _2aaf=this.grammar[i].getFacetTarget();
if(_2aaf!=null){
_2aaf.addFacetedGrammar(this.grammar[i]);
}else{
this.mainFrame.addGrammar(this.grammar[i]);
}
}
for(var _2ab0=0,_2ab1=this.grammar,_2ab2=_2ab1.length;_2ab0<_2ab2;++_2ab0){
var g=_2ab1[_2ab0];
g.modifyDataWithAreaUnderCurve();
}
},makeData:function(){
var _2ab3=this.currentSpec.data;
Vis.validateValuesInRows(_2ab3);
this.data=(this.currentSpec.data==null)?new Array(0):new Array(this.currentSpec.data.length);
for(var i=0;i<this.data.length;++i){
this.data[i]=new _2a66.m(this.currentSpec.data[i].id,this,this.currentSpec.data[i]);
}
},getExtent:function(){
return this.mainFrame.getExtent();
},makeLegends:function(){
if(this.currentSpec.legends==null){
return;
}
var specs=this.currentSpec.legends;
if(specs.length==0){
specs=[new Object()];
}
this.validateLegendSpecs(specs);
this.legends=new _2a5c.m();
var _2ab4=new _2a67.m();
for(var _2ab5=0,_2ab6=this.currentSpec.legends,_2ab7=_2ab6.length;_2ab5<_2ab7;++_2ab5){
var _2ab8=_2ab6[_2ab5];
var _2ab9=_2ab4.makeLegendFrames(_2ab8,this);
for(var _2aba=0,_2abb=_2ab9.size();_2aba<_2abb;++_2aba){
var _2abc=_2ab9.get(_2aba);
this.legends.add(_2abc);
var _2abd=_2ab8.location;
var _2abe=null;
if(_2abd!=null&&_2abd instanceof Object){
_2abe=new _2a68.m(_2abd,this.visContext.logContext);
}
if(_2abe!=null&&_2abe.isDefinedPositionalBounds()){
_2abc.specifiedBounds=_2abe;
this.mainFrame.addFloatingLegend(_2abc);
}else{
this.mainFrame.addLegend(_2abc,this.getLegendPosition(_2ab8));
}
}
}
},validateLegendSpecs:function(specs){
for(var _2abf=0,_2ac0=specs.length;_2abf<_2ac0;++_2abf){
var spec=specs[_2abf];
if(spec.aesthetics!=null&&spec.aesthetics.length>0){
for(var _2ac1=0,_2ac2=spec.aesthetics,_2ac3=_2ac2.length;_2ac1<_2ac3;++_2ac1){
var ars=_2ac2[_2ac1];
if(ars==null||ars.aesthetic==null||ars.aesthetic.$ref==null){
throw new _2a63.m(null,_2a64.m.SPEC_INVALID_LEGENDS,"All \"aesthetics\" must have \"aesthetic\" fields that refer to aesthetics by \"$ref\"",null,null,null,null);
}
var o=this.getByID(ars.aesthetic.$ref);
if(o==null||!(o instanceof _2a69.m)){
throw new _2a63.m(null,_2a64.m.SPEC_INVALID_LEGENDS,"Aesthetic \""+ars.aesthetic.$ref+"\" does not refer to an aesthetic",null,null,null,null);
}
}
}
}
},getLegendPosition:function(spec){
if(_2a59.m.isString(spec.location)){
return _2a6a.m.valueOf(spec.location);
}
return _2a6a.m.valueOf(this.currentSpec.legendPosition);
}});
Vis.createVisWithContext=function(_2ac4){
var vis=new Vis(null);
vis.copyVisContextSettings(_2ac4);
return vis;
};
Vis.getGlobalExtensionManager=function(){
return _2a56.m.INSTANCE;
};
Vis.validate=function(json){
if(Vis.schemaValidator==null){
if(Vis.schemaValidator==null){
Vis.schemaValidator=new _2a5d.m(_2a5e.m.getRaveSchema());
}
}
return Vis.schemaValidator.validate(json);
};
Vis.validateValuesInRows=function(_2ac5){
if(_2ac5!=null){
for(var i=0;i<_2ac5.length;++i){
Vis.validateDataRowsValues(_2ac5[i]);
}
}
};
Vis.validateDataRowsValues=function(_2ac6){
if(_2ac6!=null&&_2ac6.fields!=null&&_2ac6.rows!=null){
var _2ac7=_2ac6.fields.length;
var rows=_2ac6.rows;
if(rows!=null&&rows.length>0){
for(var _2ac8=0,_2ac9=rows.length;_2ac8<_2ac9;++_2ac8){
var row=rows[_2ac8];
if(_2ac7!=row.length){
throw new _2a63.m(null,_2a64.m.SPEC_INVALID_NUMBER_OF_VALUES_IN_ROW,"Invalid number of values specified in row.",null,null,null,null);
}
}
}
}
};
_2a6b.add("com/ibm/vis/engine/internal/Vis",["com/ibm/vis/engine/internal/struct/Dim","com/ibm/vis/extension/internal/RAVEExtensionManager","com/ibm/vis/internal/json/SchemaValidation","com/ibm/vis/engine/internal/nativeImpl/ResourceUtil","com/ibm/vis/exceptions/SpecException","com/ibm/vis/exceptions/ErrorCode"],function(){
Vis.schemaValidator=null;
Vis.DEFAULT_SIZE=new _2a52.m(500,400);
Vis.CURRENT_VERSION="2.0.1";
Vis.OLD_VERSIONS=["1.1","1.2","1.3","2.0"];
});
return Vis;
});
},"com/ibm/vis/engine/internal/data/transform/DerivedField":function(){
define("com/ibm/vis/engine/internal/data/transform/DerivedField",["com/ibm/init/statics","dojo/_base/declare"],function(_2aca,_2acb){
var _2acc=_2acb("com.ibm.vis.engine.internal.data.transform.DerivedField",null,{role:null,inputIndex:0,outputIndex:0,inputRange:null,parameters:null,derivedField:null,outputGranularity:null,outputRange:null,constructor:function(role,_2acd,_2ace,_2acf,_2ad0,_2ad1){
this.role=role;
this.inputIndex=_2acd;
this.outputIndex=_2ace;
this.inputRange=_2acf;
this.parameters=_2acc.copyParameters(_2ad0);
this.derivedField=_2acc.copyFieldSpec(_2ad1);
}});
_2acc.createInputField=function(role,index,_2ad2,_2ad3,_2ad4){
return new _2acc(role,index,-1,_2ad2,_2ad3,_2ad4);
};
_2acc.createOutputField=function(role,index,_2ad5,_2ad6){
return new _2acc(role,-1,index,null,_2ad5,_2ad6);
};
_2acc.createThroughputField=function(role,_2ad7,_2ad8,_2ad9,_2ada,_2adb){
return new _2acc(role,_2ad7,_2ad8,_2ad9,_2ada,_2adb);
};
_2acc.copyFieldSpec=function(spec){
var copy=new Object();
if(spec==null){
return copy;
}
copy.id=spec.id;
copy.categories=spec.categories;
copy.format=spec.format;
copy.granularity=spec.granularity;
copy.key=spec.key;
copy.label=spec.label;
copy.max=spec.max;
copy.min=spec.min;
copy.unit=spec.unit;
copy.order=spec.order;
return copy;
};
_2acc.copyParameters=function(spec){
var copy=new Object();
if(spec==null){
return copy;
}
copy.binStart=spec.binStart;
copy.summaryFunction=spec.summaryFunction;
copy.window=spec.window;
return copy;
};
_2aca.add("com/ibm/vis/engine/internal/data/transform/DerivedField",[],function(){
_2acc.ROLE_ACCURACY="accuracy";
_2acc.ROLE_WEIGHT="weight";
_2acc.ROLE_X="x";
_2acc.ROLE_Y="y";
});
return _2acc;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/Node":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/Node",["com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!./LiteRect","com/ibm/init/statics","dojo/_base/declare"],function(_2adc,_2add,_2ade,_2adf){
var Node=_2adf("com.ibm.vis.engine.internal.grammar.layout.graph.Node",null,{x:0,y:0,specifiedX:0,specifiedY:0,specPosition:false,lockPosition:false,info:null,row:0,id:null,outLink:null,inLink:null,layer:0,width:0,height:0,realWidth:0,realHeight:0,order:null,shape:null,weight:0,parent:null,nodePruned:false,neighbors:null,links:null,constructor:function(row){
this.row=row;
this.order=null;
this.specPosition=false;
this.lockPosition=false;
this.nodePruned=false;
},isNodePruned:function(){
return this.nodePruned;
},setNodePruned:function(_2ae0){
this.nodePruned=_2ae0;
},getId:function(){
return this.id;
},setId:function(id){
this.id=id;
},getRow:function(){
return this.row;
},getWeight:function(){
return this.weight;
},setWeight:function(_2ae1){
this.weight=_2ae1;
},degree:function(){
return this.inLink.length+this.outLink.length;
},toString:function(){
return "["+this.row+"]";
},distance:function(o){
return Math.sqrt((o.x-this.x)*(o.x-this.x)+(o.y-this.y)*(o.y-this.y));
},swapWith:function(o){
var tx=this.x;
var ty=this.y;
this.setX(o.x);
this.setY(o.y);
o.setX(tx);
o.setY(ty);
},isDummy:function(){
return this.row<0;
},isOrdered:function(){
return this.order!=null;
},replaceOutlink:function(_2ae2,_2ae3){
for(var i=0;i<this.outLink.length;++i){
if(this.outLink[i]==_2ae2){
this.outLink[i]=_2ae3;
return;
}
}
},removelink:function(link,out){
var _2ae4=new _2adc.m();
var _2ae5=(out)?this.outLink:this.inLink;
if(_2ae5!=null&&_2ae5.length>0){
for(var _2ae6=0,_2ae7=_2ae5.length;_2ae6<_2ae7;++_2ae6){
var aLink=_2ae5[_2ae6];
if(!aLink.equals(link)){
_2ae4.add(aLink);
}
}
if(out){
this.outLink=_2ae4.toArray(new Array(_2ae4.size()));
}else{
this.inLink=_2ae4.toArray(new Array(_2ae4.size()));
}
}
},replaceInlink:function(_2ae8,_2ae9){
for(var i=0;i<this.inLink.length;++i){
if(this.inLink[i]==_2ae8){
this.inLink[i]=_2ae9;
return;
}
}
},getShape:function(){
return this.shape;
},setShape:function(shape){
this.shape=shape;
var _2aea=shape.getBounds();
this.realWidth=_2aea.width;
this.realHeight=_2aea.height;
},getNodeWidth:function(full,_2aeb){
if(_2aeb){
return this.height*full;
}
return this.width*full;
},getNodeHeight:function(full,_2aec){
if(_2aec){
return this.width*full;
}
return this.height*full;
},getNeighbors:function(){
if(this.neighbors==null){
this.neighbors=new Array(this.degree());
for(var i=0;i<this.inLink.length;++i){
this.neighbors[i]=this.inLink[i].from;
}
for(var i=0;i<this.outLink.length;++i){
this.neighbors[i+this.inLink.length]=this.outLink[i].to;
}
}
return this.neighbors;
},getLinks:function(){
if(this.links==null){
this.links=new Array(this.degree());
for(var i=0;i<this.inLink.length;++i){
this.links[i]=this.inLink[i];
}
for(var i=0;i<this.outLink.length;++i){
this.links[i+this.inLink.length]=this.outLink[i];
}
}
return this.links;
},moveTo:function(x,y){
this.x=x;
this.y=y;
},specifyPosition:function(x,y){
this.specifiedX=x;
this.specifiedY=y;
this.specPosition=true;
this.lockPosition=false;
},positionSpecified:function(){
return this.specPosition;
},moveToSpecifiedPosition:function(){
this.lockPosition=false;
this.setX(this.specifiedX);
this.setY(this.specifiedY);
this.lockPosition=true;
},getWidth:function(){
return this.width;
},setWidth:function(width){
this.width=width;
},getHeight:function(){
return this.height;
},setHeight:function(_2aed){
this.height=_2aed;
},getX:function(){
return this.x;
},setX:function(x){
if(!this.lockPosition){
this.x=x;
}
},getY:function(){
return this.y;
},setY:function(y){
if(!this.lockPosition){
this.y=y;
}
},getCurrentBounds:function(){
return new _2add.m(this.x-this.realWidth/2,this.y-this.realHeight/2,this.realWidth,this.realHeight);
},moveBy:function(dx,dy){
this.x+=dx;
this.y+=dy;
},getOutLink:function(){
return this.outLink;
},setOutLink:function(_2aee){
this.outLink=_2aee;
},setInLink:function(_2aef){
this.inLink=_2aef;
},getInLink:function(){
return this.inLink;
},getInfo:function(){
return this.info;
},setInfo:function(info){
this.info=info;
},getParent:function(){
return this.parent;
},setParent:function(_2af0){
this.parent=_2af0;
},getOrder:function(){
return this.order;
},setOrder:function(order){
this.order=order;
},getLayer:function(){
return this.layer;
},setLayer:function(layer){
this.layer=layer;
}});
Node.makeFake=function(p){
var node=new Node(-1);
node.setX(p.x);
node.setY(p.y);
node.outLink=new Array(0);
node.inLink=node.outLink;
return node;
};
return Node;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/LinkComparator":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/LinkComparator",["../../../nativeImpl/Comparator","com/ibm/init/statics","dojo/_base/declare"],function(_2af1,_2af2,_2af3){
var _2af4=_2af3("com.ibm.vis.engine.internal.grammar.layout.graph.LinkComparator",[_2af1],{compare:function(arg0,arg1){
var _2af5=arg0;
var _2af6=arg1;
var d1=_2af5.length();
var d2=_2af6.length();
if(d2-d1<0){
return 1;
}else{
if(d2-d1>0){
return -1;
}
}
return 0;
}});
return _2af4;
});
},"com/ibm/vis/engine/internal/migration/Converter":function(){
define("com/ibm/vis/engine/internal/migration/Converter",["com/ibm/init/statics","dojo/_base/declare"],function(_2af7,_2af8){
var _2af9=_2af8("com.ibm.vis.engine.internal.migration.Converter",null,{convert:function(value){
}});
return _2af9;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/GeneralShapeInterpolator":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/GeneralShapeInterpolator",["./ShapeInterpolator","com/ibm/init/fork!../../struct/PolyGeom","com/ibm/init/fork!../../struct/Line","com/ibm/init/fork!../../struct/Rect","com/ibm/init/fork!../../struct/Circle","com/ibm/init/statics","dojo/_base/declare"],function(_2afa,_2afb,_2afc,_2afd,_2afe,_2aff,_2b00){
var _2b01=_2b00("com.ibm.vis.engine.internal.interaction.interpolation.GeneralShapeInterpolator",[_2afa],{constructor:function(_2b02,_2b03,_2b04,_2b05){
},interpolate:function(id,t){
t=this.getNormalizedTime(t,this.start_time,this.end_time);
if(this.start_data.type==0||this.end_data.type==0){
if(t<0.5){
return this.start_data.shape;
}
return this.end_data.shape;
}
if(t<=0){
return this.start_data.shape;
}
if(t>=1){
return this.end_data.shape;
}
var _2b06=this.start_data.type;
var _2b07=this.end_data.type;
if(_2b06!=_2b07||_2b06==4){
return _2afb.m.makeJSONPath(this.start_data.getPolyGeom().getMorphPath(this.end_data.getPolyGeom(),t,this.morphType));
}
if(_2b06==1){
return _2afc.m.makeLine(this.interpolateDouble(this.start_data.getLineX1(),this.end_data.getLineX1(),t),this.interpolateDouble(this.start_data.getLineY1(),this.end_data.getLineY1(),t),this.interpolateDouble(this.start_data.getLineX2(),this.end_data.getLineX2(),t),this.interpolateDouble(this.start_data.getLineY2(),this.end_data.getLineY2(),t));
}
if(_2b06==2){
return _2afd.m.makeRect(this.interpolateDouble(this.start_data.getRectX(),this.end_data.getRectX(),t),this.interpolateDouble(this.start_data.getRectY(),this.end_data.getRectY(),t),this.interpolateDouble(this.start_data.getRectW(),this.end_data.getRectW(),t),this.interpolateDouble(this.start_data.getRectH(),this.end_data.getRectH(),t));
}
if(_2b06==3){
return _2afe.m.makeCircle(this.interpolateDouble(this.start_data.getCircleX(),this.end_data.getCircleX(),t),this.interpolateDouble(this.start_data.getCircleY(),this.end_data.getCircleY(),t),this.interpolateDouble(this.start_data.getCircleR(),this.end_data.getCircleR(),t));
}
return null;
}});
return _2b01;
});
},"com/ibm/vis/engine/internal/struct/Rect":function(){
define("com/ibm/vis/engine/internal/struct/Rect",["./Shape","./GeomShape","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!./PolyGeom","com/ibm/init/fork!./Point","com/ibm/init/fork!./Dim","com/ibm/init/fork!../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_2b08,_2b09,_2b0a,_2b0b,_2b0c,_2b0d,_2b0e,_2b0f,_2b10){
var Rect=_2b10("com.ibm.vis.engine.internal.struct.Rect",[_2b08,_2b09],{x:0,y:0,width:0,height:0,constructor:function(px,py,w,h){
this.x=px;
this.y=py;
this.width=w;
this.height=h;
this.globalGradientGeometry=null;
},asBasic:function(){
return this;
},applyPointTransform:function(t){
if(t.preservesLines()||(this.width<30&&this.height<30)){
var p=t.transform(this.x,this.y);
var q=t.transform(this.x+this.width,this.y+this.height);
this.x=p.x;
this.y=p.y;
this.width=q.x-p.x;
this.height=q.y-p.y;
return null;
}
var cx=[this.x,this.x+this.width,this.x+this.width,this.x,0];
var cy=[this.y,this.y,this.y+this.height,this.y+this.height,0];
var types=["M","L","L","L","Z"];
var geom=_2b0b.m.makeSegmented(cx,cy,types);
geom.setSnap(this.snap);
geom.applyPointTransform(t);
return geom;
},insetForBorder:function(inset){
this.x+=inset;
this.y+=inset;
this.width-=2*inset;
this.height-=2*inset;
},getType:function(){
return "rect";
},CheckFlag:function(flag){
if((1&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("rect".CPVisEngineEquals(type)){
return true;
}
return false;
},affine:function(xx,dx,yy,dy,_2b11){
this.x=this.x*xx+dx;
if(_2b11||this.canScaleX()){
this.width*=xx;
}else{
this.x+=(xx-1)*this.width/2;
}
this.y=this.y*yy+dy;
if(_2b11||this.canScaleY()){
this.height*=yy;
}else{
this.y+=(yy-1)*this.height/2;
}
},makeGeometryClone:function(){
var rect=new Rect(this.x,this.y,this.width,this.height);
rect.snap=this.snap;
return rect;
},contains:function(px,py){
return px>=this.x&&py>=this.y&&px<=this.x+this.width&&py<=this.y+this.height;
},getBounds:function(){
return this;
},getCenter:function(){
return new _2b0c.m(this.x+this.width/2,this.y+this.height/2);
},getExtent:function(){
return new _2b0d.m(this.width,this.height);
},isFilled:function(){
return true;
},reflect:function(size,_2b12){
if(_2b12){
this.y=size.height-(this.y+this.height);
}else{
this.x=size.width-(this.x+this.width);
}
},setShapeParameters:function(o){
var _2b13=this.width;
var _2b14=this.height;
var newX=this.x;
var newY=this.y;
if(this.snap){
_2b13=Math.floor(newX+_2b13)-this.snapValue(newX);
_2b13=Math.max(_2b13,1);
_2b14=Math.floor(newY+_2b14)-this.snapValue(newY);
_2b14=Math.max(_2b14,1);
newX=this.snapValue(newX);
newY=this.snapValue(newY);
}
_2b0a.m.put(o,"x",_2b0e.m.r3(newX));
_2b0a.m.put(o,"y",_2b0e.m.r3(newY));
_2b0a.m.put(o,"width",_2b0e.m.r3(_2b13));
_2b0a.m.put(o,"height",_2b0e.m.r3(_2b14));
},transpose:function(b){
if(this.isGlyphLike()){
var p=this.getCenter();
p.transpose(b);
this.x=p.x-this.width/2;
this.y=p.y-this.height/2;
}else{
var ow=this.width;
var oh=this.height;
var t=b.width-b.width*(this.y+this.height)/b.height;
this.y=b.height*(1-this.x/b.width);
this.x=t;
t=b.width*this.height/b.height;
this.height=b.height*this.width/b.width;
this.width=t;
this.y-=this.height;
if(!this.canScaleY()){
this.x=this.x-(oh-this.width)/2;
this.width=oh;
this.scaleDimensions=2;
}else{
if(!this.canScaleX()){
this.y=this.y-(ow-this.height)/2;
this.height=ow;
this.scaleDimensions=1;
}
}
}
},getTopLeft:function(){
return new _2b0c.m(this.x,this.y);
},expand:function(pad){
return new Rect(this.x-pad,this.y-pad,this.width+2*pad,this.height+2*pad);
},isPointInRect:function(left,top){
return ((top>=this.y)&&(top<=(this.y+this.height))&&(left>=this.x)&&(left<=(this.x+this.width)));
},isRectIntersects:function(rect2){
return (this.y+this.height>=rect2.y&&this.y<=rect2.y+rect2.height&&this.x+this.width>=rect2.x&&this.x<=rect2.x+rect2.width);
},intersectRect:function(rect2){
if(!this.isRectIntersects(rect2)){
return null;
}
var newX=Math.max(this.x,rect2.x);
var newY=Math.max(this.y,rect2.y);
return new Rect(newX,newY,Math.min(this.x+this.width,rect2.x+rect2.width)-newX,Math.min(this.y+this.height,rect2.y+rect2.height)-newY);
},containsRect:function(rect){
return !(rect.y<this.y||rect.x<this.x||(rect.x+rect.width)>(this.x+this.width)||(rect.y+rect.height)>(this.y+this.height));
},hasExtent:function(){
return this.width*this.height!=0;
},toString:function(){
return "x:"+this.x+" y:"+this.y+" width:"+this.width+" height:"+this.height;
},isEquivalent:function(_2b15){
var diffX=Math.abs(this.x-_2b15.x);
var diffY=Math.abs(this.y-_2b15.y);
var _2b16=Math.abs(this.width-_2b15.width);
var _2b17=Math.abs(this.height-_2b15.height);
if(diffX<0.000001&&diffY<0.000001&&_2b16<0.000001&&_2b17<0.000001){
return true;
}
return false;
},makeIntegerRect:function(){
var nulx=Math.ceil(this.x);
var nuly=Math.ceil(this.y);
var nlrx=Math.floor(this.x+this.width);
var nlry=Math.floor(this.y+this.height);
return new Rect(nulx,nuly,nlrx-nulx,nlry-nuly);
},getX2:function(){
return this.x+this.width;
},getY2:function(){
return this.y+this.height;
},extendToPoint:function(px,py){
if(px<this.x){
var x2=this.getX2();
this.x=px;
this.width=x2-this.x;
}else{
if(px>this.getX2()){
this.width=px-this.x;
}
}
if(py<this.y){
var y2=this.getY2();
this.y=py;
this.height=y2-this.y;
}else{
if(py>this.getY2()){
this.height=py-this.y;
}
}
},extendToRect:function(r){
if(r.x<this.x){
var x2=this.getX2();
this.x=r.x;
this.width=x2-this.x;
}
if(r.getX2()>this.getX2()){
this.width=r.getX2()-this.x;
}
if(r.y<this.y){
var y2=this.getY2();
this.y=r.y;
this.height=y2-this.y;
}
if(r.getY2()>this.getY2()){
this.height=r.getY2()-this.y;
}
},toJSON:function(){
var _2b18=this.inherited(arguments,[]);
var _2b19=_2b0a.m.getItem(_2b18,"stroke");
if(_2b19!=null&&this.applyStrokeFix){
var _2b1a=_2b0a.m.getItem(_2b19,"width");
var _2b1b=1;
if(_2b1a!=null){
_2b1b=_2b1a;
}
_2b1b+=0.5;
_2b0a.m.put(_2b19,"width",_2b1b);
}
var shape=_2b0a.m.getItem(_2b18,"shape");
var _2b1c=_2b0a.m.getItem(shape,"height");
var _2b1d=_2b0a.m.getItem(shape,"width");
if(_2b1c!=null&&_2b1d!=null&&this.stroke!=null){
if(!this.insideStroke){
if(_2b1c==0){
_2b1c=Rect.MIN_DIMENSION;
_2b0a.m.put(shape,"height",_2b1c);
}
if(_2b1d==0){
_2b1d=Rect.MIN_DIMENSION;
_2b0a.m.put(shape,"width",_2b1d);
}
}else{
if(_2b1c==0||_2b1d==0){
_2b0a.m.remove(_2b18,"stroke");
}
}
}
return _2b18;
},equals:function(o){
if(this==o){
return true;
}
if(o==null){
return false;
}
if(!(o instanceof Rect)){
return false;
}
var rect=o;
return rect.height==this.height&&rect.width==this.width&&rect.x==this.x&&rect.y==this.y;
},hashCode:function(){
return 0;
}});
Rect.toRect=function(base){
if(base==null){
return null;
}
var nx=_2b0a.m.getItem(base,"x");
var ny=_2b0a.m.getItem(base,"y");
var nw=_2b0a.m.getItem(base,"width");
var nh=_2b0a.m.getItem(base,"height");
if(nx==null||ny==null||nw==null||nh==null){
return null;
}
return new Rect(nx,ny,nw,nh);
};
Rect.makeRect=function(x,y,width,_2b1e){
var r=new Rect(x,y,width,_2b1e);
var shape=_2b0a.m.createJSONObject();
_2b0a.m.put(shape,"type",r.getType());
r.setShapeParameters(shape);
return shape;
};
_2b0f.add("com/ibm/vis/engine/internal/struct/Rect",["com/ibm/vis/engine/internal/struct/Shape","com/ibm/vis/engine/internal/struct/GeomShape","com/ibm/vis/engine/internal/nativeImpl/BasicFactory"],function(){
Rect.MIN_DIMENSION=1/2147483647;
Rect.RECT_FLAGS=1;
Rect.RECT_NAME="rect";
Rect.STROKE_FUDGE_FACTOR=0.5;
});
return Rect;
});
},"com/ibm/vis/engine/internal/legend/ContinuousLineStripLegend":function(){
define("com/ibm/vis/engine/internal/legend/ContinuousLineStripLegend",["./NewLegend","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!./LegendUtil","com/ibm/init/fork!../scene/Font","com/ibm/init/fork!../struct/Insets","com/ibm/init/fork!./DataValueAndSizeMapping","com/ibm/init/fork!../Data","com/ibm/init/fork!../grammar/element/Element","com/ibm/init/fork!../struct/Circle","com/ibm/init/fork!../data/Row","com/ibm/init/fork!../util/SceneUtil","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../../../interaction/internal/util/TransformData","com/ibm/init/fork!../struct/Line","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../nativeImpl/Set","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/fork!../../../exceptions/SpecException","com/ibm/init/fork!../../../exceptions/ErrorCode","com/ibm/init/fork!./SizeMappingStop","com/ibm/init/fork!./SizeMappingStopComparator","com/ibm/init/fork!../data/Range","com/ibm/init/statics","dojo/_base/declare"],function(_2b1f,_2b20,_2b21,_2b22,_2b23,_2b24,_2b25,_2b26,_2b27,_2b28,_2b29,_2b2a,_2b2b,_2b2c,_2b2d,_2b2e,_2b2f,_2b30,_2b31,_2b32,_2b33,_2b34,_2b35,_2b36,_2b37){
var _2b38=_2b37("com.ibm.vis.engine.internal.legend.ContinuousLineStripLegend",[_2b1f],{elementMaxSize:0,minTick:0,maxTick:0,tickCountChanged:false,mainChartGrammar:null,mainChartElement:null,sizeScaleStops:null,dataValues:null,dataValueSize:null,zeroSizeDataValue:0,minTickScaleMapping:null,maxTickScaleMapping:null,maxValueMapping:null,longestTickLabelValue:null,constructor:function(){
this.longestTickLabelValue="";
this.__constructor_com_ibm_vis_engine_internal_legend_ContinuousLineStripLegend.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_legend_ContinuousLineStripLegend:function(_2b39,_2b3a,_2b3b,vis){
this.validateAesthetics();
this.setDataAndMappingValues();
this.calculateDataValueSize();
},getLongestTickLabelValue:function(){
if("".CPVisEngineEquals(this.longestTickLabelValue)){
this.longestTickLabelValue=String.CPVisEngineValueOf(this.maxTick);
}
return this.longestTickLabelValue;
},computePreferedSize:function(){
var _2b3c=this.getAvailableDim().height;
var _2b3d=this.getAvailableDim().width;
this.boundsPadding=this.createPadding(this.legendSpec.boundsStyle,5,this.legendSpec.boundsStyle,new _2b20.m(_2b3d,_2b3c));
this.initForSceneCreation();
if(this.elementMaxSize==0){
this.computeElementMaxSize();
}
var _2b3e=this.computeAxisSize(this.getDefaultPadding());
var _2b3f=0;
if((this.legendSpec.lineStyle!=null)&&(this.legendSpec.lineStyle.stroke!=null)){
_2b3f=_2b21.m.convertLength(this.legendSpec.lineStyle.stroke.width,null,null);
}else{
_2b3f=1;
}
var _2b40=new Object();
_2b40.height=_2b3e;
this.makeYDimension(null,_2b40);
var _2b41=_2b22.m.getMarkSize(_2b3e,this.legendSpec,this.verticalOrientation,this.getAvailableDim(),this.getDefaultPadding(),this.vis,this.getLongestTickLabelValue(),this.tickCount);
var width=0;
var _2b42=0;
var style=_2b22.m.getLabelStyle(this.legendSpec);
if(this.verticalOrientation){
var font=null;
if(style!=null){
font=style.font;
}
var _2b43=_2b23.m.makeFont(font,this.vis.visContext).getHeight();
width=_2b3f+_2b41+(_2b43+5);
_2b42=_2b3e+(5+_2b43);
}else{
var _2b44=_2b24.m.NONE;
if((style!=null)&&(style.padding!=null)){
_2b44=_2b24.m.makeForStylePadding(style.padding,this.getAvailableDim(),this.getAvailableDim());
}
var _2b45=_2b22.m.getTickLabelBounds(style,this.vis,this.getLongestTickLabelValue(),_2b44.getHorizontal());
width=_2b3e+(5+_2b45.width);
_2b42=_2b3f+_2b41+(_2b45.width+5);
}
return new _2b20.m(width,_2b42);
},processSceneItem:function(obj,_2b46,_2b47,_2b48){
this.inherited(arguments,[obj,_2b46,_2b47,_2b48]);
_2b22.m.processAxisItems(obj,_2b46,_2b47,_2b48,this.getLegendIndex());
},makeGrammarStyle:function(_2b49){
var _2b4a;
if(this.legendSpec.boundsStyle!=null){
_2b4a=this.legendSpec.boundsStyle;
}else{
_2b4a=new Object();
}
if(_2b4a.fill==null){
_2b4a.fill="transparent";
}
var _2b4b=new Object();
var style=_2b22.m.getLabelStyle(this.legendSpec);
var _2b4c=0;
if(this.verticalOrientation){
var font=null;
if(style!=null){
font=style.font;
}
_2b4c=(5+_2b23.m.makeFont(font,this.vis.visContext).getHeight())/2;
_2b4b.top=_2b4c;
_2b4b.bottom=_2b4c;
}else{
var _2b4d=_2b24.m.NONE;
if((style!=null)&&(style.padding!=null)){
_2b4d=_2b24.m.makeForStylePadding(style.padding,this.getAvailableDim(),this.getAvailableDim());
}
var _2b4e=_2b22.m.getTickLabelBounds(style,this.vis,this.getLongestTickLabelValue(),_2b4d.getHorizontal());
_2b4c=(5+_2b4e.width)/2;
_2b4b.right=_2b4c;
_2b4b.left=_2b4c;
}
_2b4a.padding=_2b4b;
return _2b4a;
},makeElementStyle:function(_2b4f,_2b50,_2b51){
return new Object();
},setElementAestheticSpec:function(_2b52){
},makeXDimension:function(){
return _2b22.m.buildSpacingLegendAxisSpec(this.mirroredLabels,this.verticalOrientation);
},reduceTickCount:function(){
if(this.tickCountChanged){
return true;
}
return false;
},buildSpansForContinuousYDimension:function(_2b53,_2b54,_2b55){
var spans;
var span1=new Object();
var span2=new Object();
this.tickCountChanged=false;
var _2b56=_2b54.height;
var ticks=this.getValidTickValues();
this.getMinAndMaxTicks(ticks);
if(this.isClamping()){
spans=this.buildSpanForClamping(_2b56,span1,span2,_2b55);
}else{
spans=this.buildSpanForNonClamping(_2b56,span1,span2,_2b55);
}
return spans;
},buildSpanForClamping:function(_2b57,span1,span2,_2b58){
if(!this.hasMappingValues()){
return null;
}
var _2b59=new Object();
var _2b5a=new Object();
this.tickCountChanged=false;
var _2b5b;
var _2b5c;
var range;
var _2b5d=this.getFirstMappingStop();
var _2b5e=this.getLastMappingStop();
range=_2b5d.value/_2b5e.value;
_2b5c=Math.floor(_2b5e.value-_2b5d.value)/(_2b58-1);
_2b57=_2b57-_2b5d.value;
_2b5b=_2b57/_2b58;
var _2b5f=0;
var ticks=this.getAesthetic().scale.getAllTicks();
if(ticks.size()>0){
var tick=ticks.get(0);
if(tick!=null){
_2b5f=this.getTickLabelHeight(tick.getName(),0);
}
}
if(_2b5b<_2b5f){
this.tickCountChanged=true;
}
_2b59.min=0;
_2b59.max=range;
span1.min=0;
span1.max=_2b5d.value;
span1.tickDelta=_2b5d.value;
span1.outRange=_2b59;
_2b5a.min=range;
_2b5a.max=1;
span2.min=_2b5d.value;
span2.max=_2b5e.value;
span2.tickDelta=_2b5c;
span2.outRange=_2b5a;
return [span1,span2];
},buildSpanForNonClamping:function(_2b60,span1,span2,_2b61){
var spans=null;
var _2b62=0;
var _2b63;
var _2b64;
if(_2b61==1){
_2b64=_2b60;
this.minTickScaleMapping=new _2b25.m(this.minTick,this.getAesthetic(),this.calculateMainElementDefaultShapeSize());
_2b63=(_2b62*this.minTickScaleMapping.zeroToOneClampedValue)/this.minTickScaleMapping.size;
}else{
_2b64=_2b60/_2b61;
this.minTickScaleMapping=new _2b25.m(this.minTick,this.getAesthetic(),this.calculateMainElementDefaultShapeSize());
this.maxTickScaleMapping=new _2b25.m(this.maxTick,this.getAesthetic(),this.calculateMainElementDefaultShapeSize());
this.maxValueMapping=new _2b25.m(Math.max(this.maxTick,this.dataValueSize.max),this.getAesthetic(),this.calculateMainElementDefaultShapeSize());
_2b63=((this.minTickScaleMapping.size*this.maxTickScaleMapping.zeroToOneClampedValue)-(this.minTickScaleMapping.zeroToOneClampedValue*this.maxTickScaleMapping.size))/(this.minTickScaleMapping.size-this.maxTickScaleMapping.size);
}
var span=this.getAestheticSpan();
if(span!=null){
this.zeroSizeDataValue=span.zeroOneToDataValue(_2b63);
}
var tick=this.getAesthetic().scale.getAllTicks();
var _2b65=this.getTickLabelHeight(tick.get(0).getName(),0);
if(_2b64<_2b65){
this.tickCountChanged=true;
}
if(_2b61==1){
span1.min=this.zeroSizeDataValue;
span1.max=this.minTickScaleMapping.dataValue;
span1.tickDelta=(this.minTickScaleMapping.dataValue-this.zeroSizeDataValue);
spans=[span1];
}else{
spans=this.createSpans(span1,span2,_2b61);
}
return spans;
},getAestheticSpan:function(){
var scale=this.getAesthetic().scale;
if(scale!=null){
var spans=scale.spans;
if(spans!=null&&spans.size()>0){
return spans.get(0);
}
}
return null;
},createSpans:function(span1,span2,_2b66){
var s=null;
var _2b67=new Object();
var _2b68=new Object();
if(this.isAllDataValuesPositive()){
s=this.makeSpanForAllPositiveValues(span1,span2,_2b66);
}else{
if(this.isAllPositiveButZeroDataValueNegative()){
s=this.makeSpanForAllPositiveButZeroDVNegative(span1,span2,_2b67,_2b68,_2b66);
}else{
if(this.isMaxDVPositiveOthersNegative()){
s=this.makeSpanForMaxDVPositiveOthersNegative(span1,span2,_2b67,_2b68,_2b66);
}else{
if(this.isAllNegativeButMaxDVPositive()){
s=this.makeSpanForAllNegativeButMaxDVPositive(span1,span2,_2b67,_2b68,_2b66);
}else{
if(this.isMaxZeroAndOthersNegative()){
s=this.makeSpanForMaxDVZeroOthersNegative(span1,span2,_2b67,_2b68,_2b66);
}else{
if(this.isMinAndZeroDVSame()){
s=this.makeSpanForMinAndZeroDVSame(span1,_2b66);
}
}
}
}
}
}
return s;
},isAllDataValuesPositive:function(){
return (this.maxValueMapping.dataValue>0&&this.minTickScaleMapping.dataValue>0&&(this.zeroSizeDataValue>0||this.zeroSizeDataValue==0));
},isAllPositiveButZeroDataValueNegative:function(){
return (this.maxValueMapping.dataValue>0&&this.minTickScaleMapping.dataValue>0&&this.zeroSizeDataValue<0);
},isMaxDVPositiveOthersNegative:function(){
return (this.maxValueMapping.dataValue>0&&this.minTickScaleMapping.dataValue<0&&this.zeroSizeDataValue<0);
},isAllNegativeButMaxDVPositive:function(){
return ((this.maxValueMapping.dataValue<0||this.maxValueMapping.dataValue>0)&&(this.minTickScaleMapping.dataValue<0||this.minTickScaleMapping.dataValue==0)&&this.zeroSizeDataValue<0);
},isMaxZeroAndOthersNegative:function(){
return (this.maxValueMapping.dataValue==0&&this.minTickScaleMapping.dataValue<0&&this.zeroSizeDataValue<0);
},isMinAndZeroDVSame:function(){
return ((this.maxValueMapping.dataValue>0||this.maxValueMapping.dataValue<0)&&(this.minTickScaleMapping.dataValue==this.zeroSizeDataValue));
},makeSpanForAllPositiveValues:function(span1,span2,_2b69){
span1.min=this.zeroSizeDataValue;
span1.max=this.zeroSizeDataValue+0.000001;
span1.tickDelta=this.zeroSizeDataValue;
span2.min=this.zeroSizeDataValue;
span2.max=this.maxValueMapping.dataValue;
span2.tickDelta=this.maxValueMapping.dataValue/(_2b69-1);
return [span1,span2];
},makeSpanForAllPositiveButZeroDVNegative:function(span1,span2,_2b6a,_2b6b,_2b6c){
span1.min=this.zeroSizeDataValue;
span1.max=0;
span1.tickDelta=0-this.zeroSizeDataValue;
_2b6a.min=0;
_2b6a.max=(0-this.zeroSizeDataValue)/(this.maxValueMapping.dataValue-this.zeroSizeDataValue);
span1.outRange=_2b6a;
span2.min=this.minTickScaleMapping.dataValue;
span2.max=this.maxValueMapping.dataValue;
span2.tickDelta=this.maxValueMapping.dataValue/(_2b6c-1);
_2b6b.min=(this.minTickScaleMapping.dataValue-this.zeroSizeDataValue)/(this.maxValueMapping.dataValue-this.zeroSizeDataValue);
_2b6b.max=1;
span2.outRange=_2b6b;
return [span1,span2];
},makeSpanForMaxDVPositiveOthersNegative:function(span1,span2,_2b6d,_2b6e,_2b6f){
span1.min=this.zeroSizeDataValue;
span1.max=0;
span1.tickDelta=0-this.zeroSizeDataValue;
_2b6d.min=0;
_2b6d.max=(0-this.zeroSizeDataValue)/(this.maxValueMapping.dataValue-this.zeroSizeDataValue);
span1.outRange=_2b6d;
span2.min=0;
span2.max=this.maxValueMapping.dataValue;
span2.tickDelta=this.maxValueMapping.dataValue/(_2b6f-1);
_2b6e.min=(0-this.zeroSizeDataValue)/(this.maxValueMapping.dataValue-this.zeroSizeDataValue);
_2b6e.max=1;
span2.outRange=_2b6e;
return [span1,span2];
},makeSpanForAllNegativeButMaxDVPositive:function(span1,span2,_2b70,_2b71,_2b72){
span1.min=this.zeroSizeDataValue;
span1.max=this.minTickScaleMapping.dataValue;
span1.tickDelta=0-this.zeroSizeDataValue;
_2b70.min=0;
_2b70.max=(this.minTickScaleMapping.dataValue-this.zeroSizeDataValue)/(this.maxValueMapping.dataValue-this.zeroSizeDataValue);
span1.outRange=_2b70;
span2.min=this.minTickScaleMapping.dataValue;
span2.max=this.maxValueMapping.dataValue;
span2.tickDelta=this.maxValueMapping.dataValue/(_2b72-1);
_2b71.min=(this.minTickScaleMapping.dataValue-this.zeroSizeDataValue)/(this.maxValueMapping.dataValue-this.zeroSizeDataValue);
_2b71.max=1;
span2.outRange=_2b71;
return [span1,span2];
},makeSpanForMaxDVZeroOthersNegative:function(span1,span2,_2b73,_2b74,_2b75){
span1.min=this.zeroSizeDataValue;
span1.max=this.minTickScaleMapping.dataValue;
span1.tickDelta=0-this.zeroSizeDataValue;
_2b73.min=0;
_2b73.max=(this.minTickScaleMapping.dataValue-this.zeroSizeDataValue)/(this.maxValueMapping.dataValue-this.zeroSizeDataValue);
span1.outRange=_2b73;
span2.min=this.minTickScaleMapping.dataValue;
span2.max=this.maxValueMapping.dataValue;
span2.tickDelta=(0-this.minTickScaleMapping.dataValue)/(_2b75-1);
_2b74.min=(this.minTickScaleMapping.dataValue-this.zeroSizeDataValue)/(this.maxValueMapping.dataValue-this.zeroSizeDataValue);
_2b74.max=1;
span2.outRange=_2b74;
return [span1,span2];
},makeSpanForMinAndZeroDVSame:function(span1,_2b76){
span1.min=this.minTickScaleMapping.dataValue;
span1.max=this.maxValueMapping.dataValue;
span1.tickDelta=(this.maxValueMapping.dataValue-this.minTickScaleMapping.dataValue)/(_2b76-1);
return [span1];
},useExactFit:function(_2b77){
if(_2b77!=null&&"exact".CPVisEngineEquals(_2b77.fit)){
return true;
}
return false;
},getAestheticSpanSpec:function(){
if(this.getAesthetic().spec.scale!=null&&this.getAesthetic().spec.scale.spans!=null&&this.getAesthetic().spec.scale.spans.length>0){
return this.getAesthetic().spec.scale.spans[0];
}
return null;
},isLegendSpecSpanPresent:function(){
return (this.legendSpec.scale!=null&&this.legendSpec.scale.spans!=null&&this.legendSpec.scale.spans.length>0);
},getTickLabelHeight:function(_2b78,_2b79){
var _2b7a=_2b22.m.getLabelStyle(this.legendSpec);
var _2b7b=_2b22.m.getTickLabelBounds(_2b7a,this.vis,_2b78,0);
var _2b7c=_2b24.m.makeForStylePadding(_2b7a.padding,this.getAvailableDim(),this.getSize()).getVertical();
return _2b7b.height+_2b7c+_2b7b.height/3;
},hasMappingValues:function(){
return this.sizeScaleStops!=null&&this.sizeScaleStops.size()>0;
},buildYAxisSpec:function(){
return _2b22.m.buildVisibleLegendAxisSpec(this.legendSpec,this.mirroredLabels,this.verticalOrientation);
},makePositions:function(_2b7d){
var yPos=new Object();
yPos.field=new Object();
yPos.field.$ref="yForLegend";
var xPos=new Object();
xPos.field=new Object();
xPos.field.$ref="xForLegend";
_2b7d.position=[yPos,xPos];
},makeData:function(_2b7e,_2b7f,_2b80,_2b81,_2b82){
var index=_2b7e.index;
var _2b83=new Object();
_2b83.id="xForLegend";
_2b83.min=0;
_2b83.max=Math.min(6,_2b81/_2b80.width)+1;
var _2b84=new Object();
_2b84.id="yForLegend";
_2b84.granularity=1;
_2b84.categories=_2b7e.categories;
_2b84.label=_2b7e.label;
var _2b85=null;
_2b85=new Array(index+2);
for(var i=0;i<index;++i){
_2b85[i]=new Object();
}
_2b85[index]=_2b84;
_2b85[index+1]=_2b83;
var _2b86=new Object();
_2b86.fields=_2b85;
var data=new _2b26.m("legendData",_2b7f,_2b86);
data.fields[index].categories=_2b7e.categories;
data.fields[index].unit=_2b7e.unit;
data.fields[index].label=_2b7e.label;
data.fields[index].setSpecifiedFormatter(_2b7e.getSpecifiedFormatter());
_2b7f.currentSpec.data=[_2b86];
return data;
},initForSceneCreation:function(){
this.mainChartElement=this.getAesthetic().element;
this.mainChartGrammar=this.mainChartElement.grammar;
if(this.mainChartElement.elementShapeSize!=null){
this.elementMaxSize=this.mainChartElement.elementShapeSize.max;
}
},makeTransforms:function(){
if(!this.verticalOrientation){
var _2b87=this.makeTransposeTransform();
var _2b88=new Array(1);
_2b88[0]=_2b87;
return _2b88;
}
return null;
},getSymbolSize:function(_2b89,max,_2b8a){
return new _2b20.m(0,0);
},setFacetSpec:function(_2b8b,_2b8c){
},shouldPadScale:function(){
return false;
},usesAesthetic:function(){
return false;
},usesElementLabel:function(){
return false;
},usesElementSpec:function(){
return false;
},updateBoundsForCreatingDimension:function(_2b8d,_2b8e,_2b8f,_2b90){
var _2b91;
_2b91=this.computeAxisSize(_2b8d);
_2b8f.height=Math.max(_2b90,_2b91);
if(!this.verticalOrientation){
_2b8f.width=this.computeAxisSize(_2b8d);
}
},getMinAndMaxTicks:function(ticks){
this.minTick=ticks.get(0);
this.maxTick=ticks.get(0);
for(var i=1;i<ticks.size();++i){
this.minTick=Math.min(this.minTick,ticks.get(i));
this.maxTick=Math.max(this.maxTick,ticks.get(i));
var _2b92=_2b22.m.getFormattedTextForTickLabel(this.getAesthetic(),ticks.get(i));
this.longestTickLabelValue=(_2b92.CPVisEngineLength()>this.longestTickLabelValue.CPVisEngineLength())?_2b92:this.longestTickLabelValue;
}
},getAesthetic:function(){
var _2b93=this.getAestheticsByType("size");
if(_2b93!=null&&_2b93.size()>0){
return _2b93.get(0);
}
return null;
},computeGrammarBounds:function(_2b94,_2b95,_2b96,_2b97,_2b98){
},calculateMainElementDefaultShapeSize:function(){
var size=null;
var _2b99=this.mainChartGrammar.getPreferredSize();
size=this.mainChartGrammar.coordinates.getDefaultSize(_2b99,this.mainChartElement.positions);
var style=this.mainChartElement.spec.style;
if(style!=null&&(style.size!=null||style.width!=null||style.height!=null)){
var _2b9a=_2b27.m.buildPreferredDimension(style,this.getSize());
size.width=_2b21.m.convertLength(_2b9a[0],size.width,_2b99.width);
size.height=_2b21.m.convertLength(_2b9a[1],size.height,_2b99.height);
}
return size;
},computeElementMaxSize:function(){
var _2b9b=this.calculateMainElementDefaultShapeSize();
var _2b9c=new _2b28.m(0,0,Math.min(_2b9b.width,_2b9b.height)/2);
var _2b9d=this.getRowWithMaxDataValue();
if(_2b9d!=null){
var _2b9e=this.getAesthetic().apply(_2b9c,_2b9d);
this.elementMaxSize=_2b9e.getBounds().width;
}else{
this.elementMaxSize=0;
}
},getRowWithMaxDataValue:function(){
var field=this.getAesthetic().valueProvider.getBaseField();
if(field==null){
return null;
}
var _2b9f=this.vis.getDataIndex(field.data.id);
var data=this.vis.currentSpec.data;
if(data!=null&&data.length>_2b9f){
var _2ba0=this.vis.currentSpec.data[_2b9f].rows;
return _2b38.getRowWithMaxDataValueForGivenField(field.index,_2ba0);
}
return null;
},getContentMaximumSize:function(){
if(this.verticalOrientation){
return new _2b20.m(Infinity,this.getPreferredSize().height);
}else{
return new _2b20.m(this.getPreferredSize().width,Infinity);
}
},getMappingValue:function(i){
if(!this.hasMappingValues()){
return null;
}
return this.sizeScaleStops.get(i);
},getFirstMappingStop:function(){
if(!this.hasMappingValues()){
return null;
}
return this.sizeScaleStops.get(0);
},getLastMappingStop:function(){
if(!this.hasMappingValues()){
return null;
}
return this.sizeScaleStops.get(this.sizeScaleStops.size()-1);
},computeAxisSize:function(_2ba1){
var _2ba2;
var ticks=this.getValidTickValues();
this.tickCount=ticks.size();
if(ticks.size()==1){
this.minTick=0;
this.maxTick=ticks.get(ticks.size()-1);
}else{
this.getMinAndMaxTicks(ticks);
}
if(this.isClamping()){
_2ba2=this.getFirstMappingStop().value;
for(var i=0;i<this.sizeScaleStops.size();++i){
_2ba2=Math.max(this.getMappingValue(i).value,_2ba2);
}
this.maxTick=_2ba2;
}else{
_2ba2=this.dataValueSize.max;
}
var _2ba3=new _2b25.m(Math.max(this.dataValueSize.max,this.maxTick),this.getAesthetic(),this.calculateMainElementDefaultShapeSize());
var _2ba4=_2b22.m.getTickLabelBounds(_2b22.m.getLabelStyle(this.legendSpec),this.vis,"0",0);
var _2ba5;
var _2ba6;
if(this.isLegendSpecSpanPresent()){
_2ba6=this.useExactFit(this.legendSpec.scale.spans[0]);
}else{
_2ba6=this.useExactFit(this.getAestheticSpanSpec());
}
if(_2ba6){
if(_2ba3.dataValue==this.maxTick){
_2ba5=_2ba3.size+_2ba4.height;
}else{
_2ba5=_2ba3.size+(_2ba4.height/2);
}
}else{
_2ba5=_2ba3.size+_2ba4.height;
}
return _2ba5;
},getContentMinimumSize:function(){
return this.getPreferredSize();
},postProcessScene:function(scene){
if(this.mirroredLabels){
return;
}
var dx=0;
var dy=0;
var _2ba7=_2b38.getAxisLine(scene);
if(_2ba7==null){
return;
}
if(this.verticalOrientation){
dx=_2ba7.x[0]-5;
}else{
dy=_2ba7.y[0]-5;
}
if(dx>0||dy>0){
_2b2a.m.panBy(scene,-dx,-dy);
}
},setDataAndMappingValues:function(){
var _2ba8=this.getAesthetic().mapping;
if(_2ba8!=null){
this.sizeScaleStops=new _2b2e.m();
var scale=this.getAesthetic().scale;
var field=this.getAesthetic().valueProvider.getBaseField();
var _2ba9=this.vis.getDataIndex(field.data.id);
var _2baa=this.vis.currentSpec.data[_2ba9].rows;
this.dataValues=new _2b2e.m();
if((_2baa!=null)&&(_2baa.length>0)){
for(var i=0;i<_2baa.length;++i){
if(_2baa[i][field.index]!=null){
this.dataValues.add(scale.toZeroOne(_2baa[i][field.index],this.getAesthetic().valueProvider.getUnit(),this.getAesthetic().valueProvider.span));
}
}
}
_2b2b.m.sortArray(this.dataValues.toArray());
var _2bab=new _2b2f.m();
var stops=new _2b2f.m();
for(var i=0;i<_2ba8.size();++i){
var stop=_2ba8.getStop(i);
var value;
if(_2b2b.m.isNumber(_2ba8.getValue(i))){
value=(_2ba8.getValue(i));
}else{
var val=_2ba8.getValue(i);
val=val.substring(0,val.CPVisEngineLength()-1);
value=_2b30.m.parseDouble(val);
}
if(_2bab.contains(value)){
throw new _2b31.m(null,_2b32.m.SPEC_INVALID_VALUE,"Legend.method axis does not support duplicate sizes (several data values mapped to the same size)",null,"\"size\": "+value,"1.3",null);
}
_2bab.add(value);
if(stops.contains(stop)){
throw new _2b31.m(null,_2b32.m.SPEC_INVALID_VALUE,"Legend.method axis does not support duplicate data values mapped to different sizes.",null,"\"size\": "+value,"1.3",null);
}
stops.add(stop);
this.sizeScaleStops.add(new _2b33.m(stop,value));
}
_2b2b.m.sortList(this.sizeScaleStops,new _2b34.m());
}
},calculateDataValueSize:function(){
var _2bac;
var _2bad;
var _2bae=this.vis.getDataIndex(this.getAesthetic().valueProvider.getBaseField().data.id);
var _2baf=this.vis.currentSpec.data[_2bae].rows;
_2bac=_2baf[0][this.getAesthetic().valueProvider.getBaseField().index];
_2bad=_2baf[0][this.getAesthetic().valueProvider.getBaseField().index];
if((_2baf!=null)&&(_2baf.length>0)){
for(var i=1;i<_2baf.length;++i){
var _2bb0=_2baf[i][this.getAesthetic().valueProvider.getBaseField().index];
if(_2bb0!=null){
_2bac=Math.max(_2bb0,_2bac);
_2bad=Math.min(_2bb0,_2bad);
}
}
}
this.dataValueSize=new _2b35.m(_2bad,_2bac);
},validateAesthetics:function(){
if(this.getAesthetic()==null){
throw new _2b31.m(null,_2b32.m.SPEC_INVALID_VALUE,"Size aesthetic must be specified when Legend method axis.",null,null,"1.3",null);
}
},isClamping:function(){
return (this.hasMappingValues()&&this.dataValues.size()>0&&(this.dataValues.get(0)<this.getFirstMappingStop().at||this.dataValues.get(this.dataValues.size()-1)>this.getLastMappingStop().at));
}});
_2b38.getRowWithMaxDataValueForGivenField=function(_2bb1,_2bb2){
if((_2bb2!=null)&&(_2bb2.length>0)){
var _2bb3=-Infinity;
var _2bb4=-1;
for(var i=0;i<_2bb2.length;++i){
if((_2bb2[i]!=null)&&(_2bb2[i].length>_2bb1)){
var _2bb5=_2bb2[i][_2bb1];
if(_2bb5!=null){
var _2bb6=_2bb5;
if(_2bb6>_2bb3){
_2bb3=_2bb6;
_2bb4=i;
}
}
}
}
if(_2bb4!=-1){
var _2bb7=_2b29.m.createRow(_2bb2[_2bb4],_2bb4);
return _2bb7;
}
}
return null;
};
_2b38.getAxisLine=function(scene){
if(scene==null){
return null;
}
var _2bb8=null;
var size=scene.length;
for(var i=0;i<size;++i){
var item=scene[i];
var type=_2b2b.m.getItem(item,"type");
if("axis".CPVisEngineEquals(type)){
_2bb8=item;
break;
}
}
if(_2bb8!=null){
var _2bb9=_2b2b.m.getItem(_2bb8,"transform");
var _2bba=_2b2c.m.make(_2bb9);
var _2bbb=_2b2b.m.getItem(_2bb8,"children");
if(_2bbb!=null&&_2bbb.length>0){
var _2bbc=_2bbb[0];
var _2bbd=_2b2b.m.getItem(_2bbc,"shape");
if(_2bbd!=null){
var x1=_2b2b.m.getNumberWithDefault(_2bbd,"x1",0);
var x2=_2b2b.m.getNumberWithDefault(_2bbd,"x2",0);
var y1=_2b2b.m.getNumberWithDefault(_2bbd,"y1",0);
var y2=_2b2b.m.getNumberWithDefault(_2bbd,"y2",0);
var line=_2b2d.m.make(x1,y1,x2,y2);
line.affine(_2bba.sx,_2bba.dx,_2bba.sy,_2bba.dy,true);
return line;
}
}
}
return null;
};
_2b36.add("com/ibm/vis/engine/internal/legend/ContinuousLineStripLegend",["com/ibm/vis/engine/internal/legend/NewLegend"],function(){
_2b38.METHOD="axis";
});
return _2b38;
});
},"com/ibm/vis/engine/internal/facet/FacetingHelper":function(){
define("com/ibm/vis/engine/internal/facet/FacetingHelper",["com/ibm/init/fork!../../../exceptions/RaveException","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../nativeImpl/LinkedHashcodeMap","com/ibm/init/fork!./CellElementContents","com/ibm/init/statics","dojo/_base/declare"],function(_2bbe,_2bbf,_2bc0,_2bc1,_2bc2,_2bc3,_2bc4){
var _2bc5=_2bc4("com.ibm.vis.engine.internal.facet.FacetingHelper",null,{});
_2bc5.makeKeys=function(_2bc6){
if(_2bc6.length>2){
throw new _2bbe.m(null,13);
}
var keys=new _2bbf.m();
var _2bc7=_2bc6[0].field.categories;
for(var i=0;i<_2bc7.length;++i){
if(_2bc6.length==2){
var cats=_2bc6[1].field.categories;
for(var j=0;j<cats.length;++j){
var _2bc8=i+"|"+j;
keys.add(_2bc8);
}
}else{
var index=i+"";
keys.add(index);
}
}
return keys;
};
_2bc5.makeGroupBasedOn=function(o){
var v=_2bc0.m.createJSONObject();
_2bc0.m.put(v,"children",_2bc0.m.createJSONArray());
_2bc0.m.put(v,"type",_2bc0.m.getItem(o,"type"));
_2bc0.m.put(v,"transform",_2bc0.m.getItem(o,"transform"));
_2bc0.m.put(v,"clip",_2bc0.m.getItem(o,"clip"));
var _2bc9=_2bc0.m.getItem(o,"baseline");
if(_2bc9!=null){
_2bc0.m.put(v,"baseline",_2bc9);
}
_2bc0.m.put(v,_2bc5.ELEMENT_TYPE_KEY,_2bc0.m.getItem(o,_2bc5.ELEMENT_TYPE_KEY));
return v;
};
_2bc5.getFacetKey=function(o){
var meta=_2bc0.m.getItem(o,"meta");
return _2bc0.m.getItem(meta,"facet");
};
_2bc5.isElementOrLabel=function(o){
var type=_2bc0.m.getItem(o,"type");
return "element".CPVisEngineEquals(type)||"label".CPVisEngineEquals(type);
};
_2bc5.isUnfaceted=function(o){
var meta=_2bc0.m.getItem(o,"meta");
var _2bca=_2bc0.m.getItem(meta,"unfaceted");
return (_2bca!=null&&_2bca);
};
_2bc5.divideScene=function(_2bcb,_2bcc){
var pre=new _2bbf.m();
var post=new _2bbf.m();
var elems=new _2bc1.m();
var inPre=true;
var _2bcd=_2bc5.makeKeys(_2bcc);
for(var _2bce=0,_2bcf=_2bcb.length;_2bce<_2bcf;++_2bce){
var o=_2bcb[_2bce];
if(_2bc5.isElementOrLabel(o)){
inPre=false;
if(_2bc5.isUnfaceted(o)){
for(var _2bd0=0,_2bd1=_2bcd.size();_2bd0<_2bd1;++_2bd0){
var key=_2bcd.get(_2bd0);
var _2bd2=elems.get(key);
if(_2bd2==null){
_2bd2=new _2bbf.m();
elems.put(key,_2bd2);
}
_2bd2.add(_2bc0.m.deepClone(o));
}
}else{
_2bc5.splitChildrenByFacetKey(elems,o);
}
}else{
if(inPre){
pre.add(o);
}else{
post.add(o);
}
}
}
var _2bd3=new _2bbf.m();
for(var _2bd4=0,_2bd5=_2bcd.size();_2bd4<_2bd5;++_2bd4){
var key=_2bcd.get(_2bd4);
_2bd3.add(_2bc2.m.createContentsFromParts(key,_2bd3.size(),pre,elems.get(key),post));
}
return _2bd3;
};
_2bc5.splitChildrenByFacetKey=function(elems,o){
var _2bd6=new _2bc1.m();
var _2bd7=_2bc0.m.getItem(o,"children");
for(var _2bd8=0,_2bd9=_2bd7.length;_2bd8<_2bd9;++_2bd8){
var child=_2bd7[_2bd8];
var key=_2bc5.getFacetKey(child);
var _2bda=_2bd6.get(key);
if(_2bda==null){
_2bda=_2bc5.makeGroupBasedOn(o);
_2bd6.put(key,_2bda);
}
var _2bdb=_2bc0.m.getItem(_2bda,"children");
_2bdb.push(child);
}
for(var _2bdc=0,_2bdd=_2bd6.keySet(),_2bde=_2bdd.size();_2bdc<_2bde;++_2bdc){
var key=_2bdd.get(_2bdc);
var _2bdf=elems.get(key);
if(_2bdf==null){
_2bdf=new _2bbf.m();
elems.put(key,_2bdf);
}
_2bdf.add(_2bd6.get(key));
}
};
_2bc3.add("com/ibm/vis/engine/internal/facet/FacetingHelper",["com/ibm/vis/exceptions/RaveException","com/ibm/vis/engine/internal/nativeImpl/List","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/facet/CellElementContents"],function(){
_2bc5.LABEL_KEY="label";
_2bc5.ELEMENT_KEY="element";
_2bc5.FACET_META="facet";
_2bc5.ELEMENT_TYPE_KEY="elementType";
_2bc5.META_KEY="meta";
_2bc5.BASELINE_KEY="baseline";
_2bc5.TYPE_KEY="type";
_2bc5.CLIP_KEY="clip";
_2bc5.TRANSFORM_KEY="transform";
_2bc5.KEY_SEPARATOR="|";
_2bc5.CHILDREN_KEY="children";
});
return _2bc5;
});
},"com/ibm/vis/engine/internal/FormatContext":function(){
define("com/ibm/vis/engine/internal/FormatContext",["com/ibm/init/fork!./nativeImpl/RAVEFormatter","com/ibm/init/statics","dojo/_base/declare"],function(_2be0,_2be1,_2be2){
var _2be3=_2be2("com.ibm.vis.engine.internal.FormatContext",null,{integratorNumberFormatter:null,integratorStringFormatter:null,integratorDateFormatter:null,defaultFormatter:null,visContext:null,constructor:function(_2be4){
this.integratorNumberFormatter=null;
this.integratorStringFormatter=null;
this.integratorDateFormatter=null;
this.defaultFormatter=_2be0.m.make(null,"","",false);
this.visContext=_2be4;
},formatNumber:function(value,_2be5,_2be6,_2be7,r,unit){
var _2be8=null;
if(this.integratorNumberFormatter!=null){
_2be8=this.integratorNumberFormatter.formatNumber(value,_2be6,_2be7,r.min,r.max,unit.name,this.visContext.visId);
}
if(_2be8!=null){
return _2be8;
}
if(_2be5!=null){
return _2be5.formatNumber(value,_2be6,_2be7,r.min,r.max,unit.name,this.visContext.visId);
}else{
return this.defaultFormatter.formatNumber(value,_2be6,_2be7,r.min,r.max,unit.name,this.visContext.visId);
}
},formatString:function(s,_2be9,_2bea,_2beb){
var _2bec=null;
if(this.integratorStringFormatter!=null){
_2bec=this.integratorStringFormatter.formatString(s,_2bea,_2beb,this.visContext.visId);
}
if(_2bec!=null){
return _2bec;
}
if(_2be9!=null){
return _2be9.formatString(s,_2bea,_2beb,this.visContext.visId);
}else{
return this.defaultFormatter.formatString(s,_2bea,_2beb,this.visContext.visId);
}
},formatDate:function(date,_2bed,_2bee,_2bef,unit){
var _2bf0=null;
if(this.integratorDateFormatter!=null){
_2bf0=this.integratorDateFormatter.formatDate(date,_2bee,_2bef,unit.name,this.visContext.visId);
}
if(_2bf0!=null){
return _2bf0;
}
if(_2bed!=null){
return _2bed.formatDate(date,_2bee,_2bef,unit.name,this.visContext.visId);
}else{
return this.defaultFormatter.formatDate(date,_2bee,_2bef,unit.name,this.visContext.visId);
}
}});
return _2be3;
});
},"com/ibm/vis/engine/internal/facet/Faceting":function(){
define("com/ibm/vis/engine/internal/facet/Faceting",["com/ibm/init/statics","dojo/_base/declare"],function(_2bf1,_2bf2){
var _2bf3=_2bf2("com.ibm.vis.engine.internal.facet.Faceting",null,{makeSharedCellsScene:function(_2bf4,_2bf5){
},makeUnsharedCellsScene:function(_2bf6,_2bf7,_2bf8,_2bf9,_2bfa){
},getPanelSize:function(scene,_2bfb){
},getSelectedPanelSize:function(scene,_2bfc,_2bfd,_2bfe,_2bff,_2c00,_2c01,_2c02){
},splitAesthetic:function(_2c03,_2c04){
},isChartInChart:function(){
},updateKey:function(key,row){
},addFacetInfoToShapes:function(_2c05,_2c06){
},applyFacetingToShape:function(shape,row,_2c07){
},isFacetedElement:function(_2c08){
},getFacetSpec:function(){
}});
return _2bf3;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/StyleByAestheticValueProducer":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/StyleByAestheticValueProducer",["./AestheticValueProducer","com/ibm/init/fork!../../scene/Font","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/fork!./SymbolAestheticValueProducer","com/ibm/init/fork!../../struct/Text","com/ibm/init/statics","dojo/_base/declare"],function(_2c09,_2c0a,_2c0b,_2c0c,_2c0d,_2c0e,_2c0f){
var _2c10=_2c0f("com.ibm.vis.engine.internal.grammar.aesthetic.StyleByAestheticValueProducer",[_2c09],{element:null,constructor:function(_2c11,_2c12){
this.visContext=_2c11;
this.element=_2c12;
},getDefaultForCategory:function(index,_2c13){
return null;
},interpolate:function(a,b,p){
return null;
},make:function(spec){
return spec.style;
},forPalette:function(o){
return o;
},updateTextShape:function(item,spec){
var text=item;
if(spec.align!=null){
text.align=spec.align;
}
if(spec.valign!=null){
text.valign=spec.valign;
}
if(spec.font!=null){
var _2c14=new Object();
_2c14.family=spec.font.family;
_2c14.size=spec.font.size;
_2c14.style=spec.font.style;
_2c14.weight=spec.font.weight;
if(_2c14.size==null){
_2c14.size=text.font.getSize();
}
text.font=_2c0a.m.makeFont(_2c14,this.visContext);
}
return item;
},modify:function(item,_2c15,_2c16){
var _2c17=_2c15;
var _2c18=_2c0b.m.modifyShapeStyle(item,_2c17);
_2c18=_2c0c.m.modifySymbol(_2c18,_2c17,this.element);
if(item instanceof _2c0d.m){
_2c18=this.updateTextShape(_2c18,_2c17);
}
return _2c18;
}});
return _2c10;
});
},"com/ibm/vis/engine/internal/grammar/layout/treemap/TreeBuilder":function(){
define("com/ibm/vis/engine/internal/grammar/layout/treemap/TreeBuilder",["com/ibm/init/fork!./TreeNode","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!../../../nativeImpl/Map","com/ibm/init/statics","dojo/_base/declare"],function(_2c19,_2c1a,_2c1b,_2c1c,_2c1d){
var _2c1e=_2c1d("com.ibm.vis.engine.internal.grammar.layout.treemap.TreeBuilder",null,{makeDummyRoot:function(){
var root=new _2c19.m(null,null,0,-1);
root.isDummyRoot=true;
return root;
},buildNonRecursiveTree:function(_2c1f,_2c20,_2c21,_2c22){
var root=this.makeDummyRoot();
var _2c23=false;
var _2c24=false;
for(var _2c25=0;_2c25<_2c1f;++_2c25){
var _2c26=new _2c1a.m();
var _2c27=_2c20.size();
for(var j=0;j<_2c27;++j){
var _2c28=_2c21.getFieldStringValue(_2c20.get(j),_2c25);
if(_2c28==null){
break;
}
_2c26.add(_2c28);
}
var _2c29=this.locateNearestExistingLevelNode(root,_2c26);
if(_2c29==null){
_2c29=root;
}
var size=0;
if(_2c26.size()==0){
var n=_2c21.getFieldNumericValue(_2c22,_2c25);
if(n!=null){
size=n;
}
_2c29.setSize(size);
_2c29.setIndex(_2c25);
}else{
for(var j=0;j<_2c26.size();++j){
var _2c2a=_2c26.get(j);
if(j==_2c26.size()-1){
if(_2c22!=null){
var n=_2c21.getFieldNumericValue(_2c22,_2c25);
if(n!=null){
size=n;
}
}else{
size=1;
}
}
var _2c2b=new _2c19.m(_2c2a,null,size,_2c25);
_2c29.addChild(_2c2b);
_2c29=_2c2b;
}
}
if(!_2c23&&size<0){
_2c23=true;
}
if(!_2c24&&size>0){
_2c24=true;
}
}
this.pruneTree(root,_2c24&&_2c23);
return this.getRealRoot(root);
},locateNearestExistingLevelNode:function(node,_2c2c){
if(_2c2c==null||_2c2c.size()==0){
return node;
}
for(var i=0;i<node.getChildCount();++i){
var child=node.getChild(i);
var _2c2d=_2c2c.get(0);
if(_2c2d.CPVisEngineEquals(child.id)){
_2c2c.remove(_2c2c.get(0));
var _2c2e=this.locateNearestExistingLevelNode(child,_2c2c);
return _2c2e;
}
}
return node;
},buildRecursiveTree:function(_2c2f,_2c30,_2c31,_2c32,_2c33){
var root=this.makeDummyRoot();
var _2c34=new _2c1a.m();
var _2c35=new _2c1b.m();
var _2c36=new _2c1b.m();
var _2c37=new _2c1a.m();
var _2c38=false;
var _2c39=false;
for(var _2c3a=0;_2c3a<_2c2f;++_2c3a){
var size=0;
var id=_2c32.getFieldStringValue(_2c31,_2c3a);
if(id==null){
continue;
}
if(_2c33!=null){
var n=_2c32.getFieldNumericValue(_2c33,_2c3a);
if(n==null){
continue;
}
size=n;
if(!_2c39&&size<0){
_2c39=true;
}
if(!_2c38&&size>0){
_2c38=true;
}
}else{
size=1;
}
var _2c3b=null;
if(_2c30!=null){
_2c3b=_2c32.getFieldStringValue(_2c30,_2c3a);
}
if(_2c3b==null){
_2c3b=null;
}
var node=new _2c19.m(id,_2c3b,size,_2c3a);
if(_2c3b!=null){
_2c34.add(node);
_2c35.put(id,_2c3a);
_2c36.put(_2c3b,_2c3a);
_2c37.add(_2c3b);
}else{
root.addChild(node);
}
}
this.addImplicitRoots(root,_2c35,_2c36,_2c37);
if(root.getChildCount()==0){
return root;
}
this.makeRecursiveTree(_2c34,root,_2c36);
root=this.getRealRoot(root);
this.pruneTree(root,_2c38&&_2c39);
return root;
},addImplicitRoots:function(root,_2c3c,_2c3d,_2c3e){
if(root.getChildCount()==0){
var _2c3f=new _2c1b.m();
for(var _2c40=0,_2c41=_2c3e.size();_2c40<_2c41;++_2c40){
var _2c42=_2c3e.get(_2c40);
if(_2c3f.containsKey(_2c42)){
continue;
}
if(!_2c3c.containsKey(_2c42)){
var n=_2c3d.get(_2c42);
var _2c43=n;
_2c3f.put(_2c42,_2c43);
var node=new _2c19.m(_2c42,null,0,_2c43);
root.addChild(node);
}
}
}
},makeRecursiveTree:function(_2c44,root,_2c45){
var i=0;
var _2c46=_2c44.size();
while(_2c44.size()>0){
if(i>_2c44.size()-1){
if(_2c46==_2c44.size()){
break;
}
_2c46=_2c44.size();
i=0;
}
var node=_2c44.get(i);
if(node.parentId!=null){
var _2c47=this.findParent(root,node.parentId,_2c45);
if(_2c47!=null){
_2c47.addChild(node);
_2c44.remove(node);
}else{
i++;
}
}else{
_2c44.remove(node);
}
}
},pruneTree:function(node,_2c48){
var _2c49=node.getSize();
if(_2c49<0&&!_2c48){
node.setSize(_2c49*-1);
}
for(var i=0;i<node.getChildCount();++i){
var child=node.getChild(i);
this.pruneTree(child,_2c48);
if(child.getChildCount()==0){
var size=child.getSize();
if(size==0){
node.removeChild(i);
i--;
}else{
if(size<0){
if(_2c48){
node.removeChild(i);
i--;
}
}
}
}
}
},getRealRoot:function(root){
if(root.getChildCount()==1){
root=root.getChild(0);
}
return root;
},findParent:function(node,_2c4a,_2c4b){
var _2c4c=node.getChildCount();
for(var i=0;i<_2c4c;++i){
var child=node.getChild(i);
if(_2c4a.CPVisEngineEquals(child.id)){
return child;
}
}
for(var i=0;i<_2c4c;++i){
var child=node.getChild(i);
if(_2c4b.containsKey(child.id)){
var _2c4d=this.findParent(child,_2c4a,_2c4b);
if(_2c4d!=null){
return _2c4d;
}
}
}
return null;
}});
_2c1c.add("com/ibm/vis/engine/internal/grammar/layout/treemap/TreeBuilder",[],function(){
_2c1e.DEFAULT_SIZE_VALUE=0;
_2c1e.CONSTANT_SIZE_VALUE=1;
});
return _2c1e;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/Farthest":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/Farthest",["./BFS","com/ibm/init/statics","dojo/_base/declare"],function(_2c4e,_2c4f,_2c50){
var _2c51=_2c50("com.ibm.vis.engine.internal.grammar.layout.graph.stress.util.Farthest",[_2c4e],{result:null,distance:0,getResult:function(){
return this.result;
},getDistance:function(){
return this.distance;
},constructor:function(g,_2c52){
},markNode:function(node){
this.inherited(arguments,[node]);
this.result=node;
this.distance=this.depth;
}});
return _2c51;
});
},"com/ibm/vis/engine/internal/struct/Path":function(){
define("com/ibm/vis/engine/internal/struct/Path",["./PolyShape","com/ibm/init/fork!./Poly","com/ibm/init/statics","dojo/_base/declare"],function(_2c53,_2c54,_2c55,_2c56){
var Path=_2c56("com.ibm.vis.engine.internal.struct.Path",[_2c53],{types:null,constructor:function(cx,cy,_2c57,types){
this.types=types;
if(this.types!=null){
}
},getType:function(){
return "path";
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("path".CPVisEngineEquals(type)){
return true;
}
return false;
},getTypes:function(){
return this.types;
},makeGeometryClone:function(){
var x1=Array.create([this.x.length],0);
var y1=Array.create([this.x.length],0);
var t1=Array.create([this.x.length],"\x00");
for(var i=0;i<t1.length;++i){
x1[i]=this.x[i];
y1[i]=this.y[i];
t1[i]=this.types[i];
}
var path=new Path(x1,y1,this.filled,t1);
path.snap=this.snap;
return path;
},contains:function(px,py){
var poly=new _2c54.m(this.x,this.y,true,null);
return this.filled&&poly.contains(px,py);
},getPathString:function(){
var _2c58=null;
for(var i=0;i<this.x.length;++i){
if(this.types[i]=="Z"){
break;
}
if(_2c58!=null){
_2c58=_2c58+this.types[i]+String.CPVisEngineValueOf(this.x[i])+","+String.CPVisEngineValueOf(this.y[i]);
}else{
_2c58=this.types[i]+String.CPVisEngineValueOf(this.x[i])+","+String.CPVisEngineValueOf(this.y[i]);
}
}
return _2c58;
}});
_2c55.add("com/ibm/vis/engine/internal/struct/Path",["com/ibm/vis/engine/internal/struct/PolyShape"],function(){
Path.PATH_FLAGS=0;
Path.PATH_NAME="path";
});
return Path;
});
},"com/ibm/vis/engine/internal/layout/OverlayLayout":function(){
define("com/ibm/vis/engine/internal/layout/OverlayLayout",["./ContentLayout","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!../struct/Dim","com/ibm/init/statics","dojo/_base/declare"],function(_2c59,_2c5a,_2c5b,_2c5c,_2c5d){
var _2c5e=_2c5d("com.ibm.vis.engine.internal.layout.OverlayLayout",[_2c59],{layout:function(_2c5f,_2c60,_2c61){
var _2c62=_2c5f.getExtent();
var _2c63=new _2c5a.m(0,0,_2c62.width,_2c62.height);
for(var _2c64=0,_2c65=_2c5f.getChildren(),_2c66=_2c65.size();_2c64<_2c66;++_2c64){
var child=_2c65.get(_2c64);
var _2c67=child.getSpecifiedBounds();
if(_2c67!=null){
var rect=_2c67.getRect(_2c62);
rect=_2c63.intersectRect(rect);
child.layoutWithBounds(rect,_2c60,_2c61);
}else{
child.layoutWithBounds(_2c63,_2c60,_2c61);
}
}
},getPreferredSize:function(_2c68){
var width=0;
var _2c69=0;
for(var _2c6a=0,_2c6b=_2c68.getChildren(),_2c6c=_2c6b.size();_2c6a<_2c6c;++_2c6a){
var child=_2c6b.get(_2c6a);
var _2c6d=child.getPreferredSize();
if(_2c6d!=null){
_2c69=Math.max(_2c69,_2c6d.height);
width=Math.max(width,_2c6d.width);
}
}
return new _2c5b.m(width,_2c69);
},getMinimumSize:function(_2c6e){
var width=0;
var _2c6f=0;
for(var _2c70=0,_2c71=_2c6e.getChildren(),_2c72=_2c71.size();_2c70<_2c72;++_2c70){
var child=_2c71.get(_2c70);
var _2c73=child.getMinimumSize();
if(_2c73!=null){
_2c6f=Math.max(_2c6f,_2c73.height);
width=Math.max(width,_2c73.width);
}
}
return new _2c5b.m(width,_2c6f);
},getMaximumSize:function(_2c74){
var width=0;
var _2c75=0;
for(var _2c76=0,_2c77=_2c74.getChildren(),_2c78=_2c77.size();_2c76<_2c78;++_2c76){
var child=_2c77.get(_2c76);
var _2c79=child.getMaximumSize();
if(_2c79!=null){
_2c75=Math.max(_2c75,_2c79.height);
width=Math.max(width,_2c79.width);
}
}
return new _2c5b.m(width,_2c75);
}});
return _2c5e;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/BFS":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/BFS",["com/ibm/init/fork!../../../../../nativeImpl/HashcodeMap","com/ibm/init/fork!../../../../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_2c7a,_2c7b,_2c7c,_2c7d){
var BFS=_2c7d("com.ibm.vis.engine.internal.grammar.layout.graph.stress.util.BFS",null,{graph:null,visitedItems:null,directed:false,depth:0,bound:2147483647,constructor:function(_2c7e,_2c7f){
this.graph=_2c7e;
this.directed=_2c7f;
this.visitedItems=new _2c7a.m();
},execute:function(_2c80){
this.visitedItems.clear();
this.bfsVisit(_2c80);
this.visitedItems.clear();
},bfsVisit:function(_2c81){
if(_2c81.isEmpty()){
return;
}
var _2c82=new _2c7a.m();
var _2c83=new _2c7a.m();
for(var _2c84=0,_2c85=_2c81.size();_2c84<_2c85;++_2c84){
var v=_2c81.get(_2c84);
_2c83.put(v,v);
this.markNode(v);
}
if(this.depth==this.bound){
return;
}
var _2c86=new _2c7b.m();
for(var _2c87=0,_2c88=_2c81.size();_2c87<_2c88;++_2c87){
var v=_2c81.get(_2c87);
var edges=this.directed?v.outLink:v.getLinks();
for(var _2c89=0,_2c8a=edges.length;_2c89<_2c8a;++_2c89){
var edge=edges[_2c89];
var w=edge.getOpposite(v);
if(!this.isMarkedNode(w)){
this.discoverLink(edge,v);
if(!_2c82.containsKey(w)){
_2c82.put(w,w);
_2c86.add(w);
}
}
}
}
this.processNextLevel(_2c86);
},isMarkedNode:function(w){
return this.visitedItems.containsKey(w);
},markNode:function(node){
this.visitedItems.put(node,node);
},discoverLink:function(link,_2c8b){
},processNextLevel:function(_2c8c){
this.depth++;
this.bfsVisit(_2c8c);
}});
return BFS;
});
},"com/ibm/vis/engine/internal/struct/T_Beam":function(){
define("com/ibm/vis/engine/internal/struct/T_Beam",["./Path","com/ibm/init/statics","dojo/_base/declare"],function(_2c8d,_2c8e,_2c8f){
var _2c90=_2c8f("com.ibm.vis.engine.internal.struct.T_Beam",[_2c8d],{constructor:function(cx,cy,_2c91,types){
},getType:function(){
return "t-beam";
},CheckFlag:function(flag){
if((1&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("path".CPVisEngineEquals(type)||"t-beam".CPVisEngineEquals(type)){
return true;
}
return false;
}});
_2c8e.add("com/ibm/vis/engine/internal/struct/T_Beam",["com/ibm/vis/engine/internal/struct/Path"],function(){
_2c90.TBEAM_FLAGS=1;
_2c90.TBEAM_NAME="t-beam";
});
return _2c90;
});
},"com/ibm/vis/engine/internal/struct/Bezier":function(){
define("com/ibm/vis/engine/internal/struct/Bezier",["com/ibm/init/fork!./Point","com/ibm/init/fork!../data/Range","com/ibm/init/fork!../nativeImpl/Double","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_2c92,_2c93,_2c94,_2c95,_2c96,_2c97){
var _2c98=_2c97("com.ibm.vis.engine.internal.struct.Bezier",null,{controlPts:null,constructor:function(_2c99){
this.controlPts=_2c99;
},intersectsPolygon:function(poly,_2c9a){
var _2c9b=poly.getPolygonLines();
for(var i=0;i<_2c9b.length;++i){
var _2c9c=this.intersectsLine(_2c9b[i],_2c9a);
if(_2c9c){
return true;
}
}
return false;
},intersectsLine:function(line,_2c9d){
var _2c9e=line.x[0];
var _2c9f=line.y[0];
var theta=line.transformToXAxis();
var min=1.7976931348623157e+308;
var max=-1.7976931348623157e+308;
var _2ca0=new Array(this.controlPts.length);
for(var j=0;j<this.controlPts.length;++j){
_2ca0[j]=new _2c92.m(this.controlPts[j].x,this.controlPts[j].y);
}
for(var i=0;i<this.controlPts.length;++i){
_2ca0[i].affine(1,-_2c9e,1,-_2c9f);
var _2ca1=Math.cos(theta)*_2ca0[i].x-Math.sin(theta)*_2ca0[i].y;
var _2ca2=Math.sin(theta)*_2ca0[i].x+Math.cos(theta)*_2ca0[i].y;
_2ca0[i].x=_2ca1;
_2ca0[i].y=_2ca2;
if(_2ca0[i].y<min){
min=_2ca0[i].y;
}
if(_2ca0[i].y>max){
max=_2ca0[i].y;
}
}
var range=new _2c93.m(min,max);
if(!range.containsTolerantly(0,_2c9d)){
return false;
}
if(_2ca0.length==3){
var a=_2ca0[0].y-2*_2ca0[1].y+_2ca0[2].y;
var b=-2*_2ca0[0].y+2*_2ca0[1].y;
var c=_2ca0[0].y;
var roots=_2c98.quadRoots(a,b,c);
for(var i=0;i<roots.length;++i){
var t=roots[i];
if(!_2c94.m.isInfinite(t)){
var ax=_2ca0[0].x-2*_2ca0[1].x+_2ca0[2].x;
var bx=-2*_2ca0[0].x+2*_2ca0[1].x;
var cx=_2ca0[0].x;
var x=ax*t*t+bx*t+cx;
if(!_2c94.m.isInfinite(x)&&x<=(line.x[1]+_2c9d)&&x>=-_2c9d){
return true;
}
}
}
}else{
var a=-_2ca0[0].y+3*_2ca0[1].y-3*_2ca0[2].y+_2ca0[3].y;
var b=3*_2ca0[0].y-6*_2ca0[1].y+3*_2ca0[2].y;
var c=-3*_2ca0[0].y+3*_2ca0[1].y;
var d=_2ca0[0].y;
var roots=_2c98.cubicRoots(a,b,c,d);
for(var i=0;i<roots.length;++i){
var t=roots[i];
if(!_2c94.m.isInfinite(t)&&t>=0&&t<=1){
var ax=-_2ca0[0].x+3*_2ca0[1].x-3*_2ca0[2].x+_2ca0[3].x;
var bx=3*_2ca0[0].x-6*_2ca0[1].x+3*_2ca0[2].x;
var cx=-3*_2ca0[0].x+3*_2ca0[1].x;
var dx=_2ca0[0].x;
var x=ax*t*t*t+bx*t*t+cx*t+dx;
if(!_2c94.m.isInfinite(x)&&x<=(line.x[1]+_2c9d)&&x>=-_2c9d){
return true;
}
}
}
}
return false;
}});
_2c98.quadRoots=function(a,b,c){
var _2ca3=Math.pow(b,2)-4*a*c;
var roots=Array.create([2],0);
if(_2ca3>0.000001&&Math.abs(b)>0.000001){
var sgn=b>0?1:-1;
var q=-0.5*(b+sgn*Math.sqrt(_2ca3));
roots[0]=q/a;
roots[1]=c/q;
}else{
if(Math.abs(_2ca3)<=0.000001){
roots[0]=-b/2*a;
roots[1]=Infinity;
}else{
if(Math.abs(b)<=0.000001){
if(-c/a>0){
roots[0]=Math.sqrt(-c/a);
roots[1]=-Math.sqrt(-c/a);
}
}
}
}
return roots;
};
_2c98.cubicRoots=function(a,b,c,d){
if(Math.abs(a)<=0.000001){
return _2c98.quadRoots(b,c,d);
}
var roots=Array.create([3],0);
var p=b/a;
var q=c/a;
var r=d/a;
if(Math.abs(p)>27*_2c95.m.cubeRoot(1.7976931348623157e+308)){
roots[0]=-27*_2c95.m.cubeRoot(1.7976931348623157e+308)-1;
roots[1]=Infinity;
roots[2]=Infinity;
return roots;
}
var u=q-(p*p)/3;
var v=r-(p*q)/3+(2*p*p*p)/27;
if(Math.abs(v)>Math.sqrt(1.7976931348623157e+308)){
roots[0]=_2c95.m.cubeRoot(v);
roots[1]=Infinity;
roots[2]=Infinity;
return roots;
}
if(Math.abs(u)>3*_2c95.m.cubeRoot(1.7976931348623157e+308)/4){
roots[0]=_2c95.m.cubeRoot(4)*u/3;
roots[1]=Infinity;
roots[2]=Infinity;
return roots;
}
var j=4*Math.pow(u/3,3)+v*v;
var _2ca4=Math.sqrt(j);
var pDiv3=p/3;
if(j>0){
if(v>0){
roots[0]=_2c95.m.cubeRoot((_2ca4-v)/2)-(u/3)*_2c95.m.cubeRoot(2/(_2ca4-v))-pDiv3;
}else{
roots[0]=(u/3)*_2c95.m.cubeRoot(2/(_2ca4+v))-_2c95.m.cubeRoot((_2ca4+v)/2)-pDiv3;
}
roots[1]=Infinity;
roots[2]=Infinity;
}else{
var s=Math.sqrt(-u/3);
var t=-v/(2*s*s*s);
var k=Math.acos(t)/3;
var cosK=Math.cos(k);
var sinK=Math.sin(k);
roots[0]=2*s*cosK-pDiv3;
roots[1]=s*(-cosK+Math.sqrt(3)*sinK)-pDiv3;
roots[2]=s*(-cosK-Math.sqrt(3)*sinK)-pDiv3;
}
return roots;
};
_2c96.add("com/ibm/vis/engine/internal/struct/Bezier",["com/ibm/vis/engine/internal/nativeImpl/BasicFactory"],function(){
_2c98.K_TOLERANCE=0.000001;
});
return _2c98;
});
},"com/ibm/vis/engine/internal/grammar/label/TextProducer":function(){
define("com/ibm/vis/engine/internal/grammar/label/TextProducer",["com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../../../exceptions/SpecException","com/ibm/init/fork!../../../../exceptions/ErrorCode","com/ibm/init/statics","dojo/_base/declare"],function(_2ca5,_2ca6,_2ca7,_2ca8,_2ca9){
var _2caa=_2ca9("com.ibm.vis.engine.internal.grammar.label.TextProducer",null,{});
_2caa.makeTextForContent=function(vis,data,_2cab,_2cac){
var label="";
for(var _2cad=0,_2cae=_2cab.length;_2cad<_2cae;++_2cad){
var o=_2cab[_2cad];
if(_2ca5.m.isNumber(o)||_2ca5.m.isString(o)){
label+=o;
}else{
var ref=_2caa.addFieldReference(vis,data,_2cac,o);
if(ref==null){
return null;
}
label+=ref;
}
}
return label;
};
_2caa.addFieldReference=function(vis,data,_2caf,ref){
var f=vis.getByID(ref.$ref);
if(f==null){
throw new _2ca6.m(null,_2ca7.m.SPEC_IS_NULL,"Unknown field "+ref.$ref,null,null,null,null);
}
if(_2caf!=-1){
var value=data.rows[_2caf].data[f.index];
if(value==null){
return null;
}
if(f.isCategorical()){
var _2cb0=Math.round(value);
var _2cb1=f.categories[_2cb0];
if(_2cb1==null){
return null;
}
}
return f.getFormattedStringValue(value,data.rows[_2caf].index);
}
if(f.label!=null){
return vis.visContext.formatContext.formatString(f.label,f.getSpecifiedFormatter(),-1,f.id);
}
return f.id;
};
_2caa.isCategorical=function(vis,_2cb2){
var _2cb3=_2cb2[_2cb2.length-1];
if(_2cb3 instanceof Object){
var ref=_2cb3;
if(ref!=null){
var f=vis.getByID(ref.$ref);
if(f!=null){
return f.isCategorical();
}
}
}
return true;
};
return _2caa;
});
},"com/ibm/vis/engine/internal/grammar/element/SchemaBuilder":function(){
define("com/ibm/vis/engine/internal/grammar/element/SchemaBuilder",["./Builder","com/ibm/init/fork!../../scene/ItemBuilder","com/ibm/init/fork!../../struct/Schema","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/fork!../../nativeImpl/WebEngineException","com/ibm/init/fork!../../scene/SymbolBuilder","com/ibm/init/fork!../../struct/Wedge","com/ibm/init/fork!../../struct/Poly","com/ibm/init/fork!../../ColorUtil","com/ibm/init/fork!../../Fill","com/ibm/init/fork!../../struct/Line","com/ibm/init/statics","dojo/_base/declare"],function(_2cb4,_2cb5,_2cb6,_2cb7,_2cb8,_2cb9,_2cba,_2cbb,_2cbc,_2cbd,_2cbe,_2cbf,_2cc0){
var _2cc1=_2cc0("com.ibm.vis.engine.internal.grammar.element.SchemaBuilder",[_2cb4],{type:null,size:null,componentValueProviders:null,rows:null,style:null,makeBoxplotSwatch:function(y,x,width){
var low1=0.89*this.extent.height;
var low2=0.9*this.extent.height;
var high1=0.1*this.extent.height;
var high2=0.09*this.extent.height;
var s=new Array(1);
s[0]=_2cb5.m.makeRectangle(x-width/2,high1,width,low1-high1,this.style);
var _2cc2=new _2cb6.m(x-width/2,high2,width,low2-high2,s,true);
_2cc2.snap=_2cb7.m.getSnap(this.style);
return _2cc2;
},makeBoxplot:function(y,x,width,_2cc3){
if(this.componentValueProviders.length!=4&&this.componentValueProviders.length!=2){
throw new _2cb8.m("Boxplots require 2 or 4 parts");
}
if(_2cc3==null){
return this.makeBoxplotSwatch(y,x,width);
}
var row=this.rows[_2cc3];
var low2=(this.componentValueProviders[0].getBaseField()==null)?this.componentValueProviders[0].getNumber(row):this.toScreenY(this.componentValueProviders[0].getBaseField(),row,this.componentValueProviders[0].span);
var low1=(this.componentValueProviders[1].getBaseField()==null)?this.componentValueProviders[1].getNumber(row):this.toScreenY(this.componentValueProviders[1].getBaseField(),row,this.componentValueProviders[1].span);
var _2cc4;
if(this.componentValueProviders.length==2){
var s=new Array(2);
s[0]=_2cb5.m.makeRectangle(x-width/2,low1,width,low2-low1,this.style);
s[1]=_2cb5.m.makeLine(x-width/2,y,x+width/2,y,null);
s[1].setMeta("part","median");
_2cc4=new _2cb6.m(x-width/2,low1,width,low2-low1,s,true);
}else{
var high1=(this.componentValueProviders[2].getBaseField()==null)?this.componentValueProviders[2].getNumber(row):this.toScreenY(this.componentValueProviders[2].getBaseField(),row,this.componentValueProviders[2].span);
var high2=(this.componentValueProviders[3].getBaseField()==null)?this.componentValueProviders[3].getNumber(row):this.toScreenY(this.componentValueProviders[3].getBaseField(),row,this.componentValueProviders[3].span);
var s=new Array(6);
s[0]=_2cc1.makeLineOutline(x-width/3,low2,x+width/3,low2);
s[1]=_2cc1.makeLineOutline(x,low2,x,low1);
s[0].setMeta("part","lowerWhisker");
s[1].setMeta("part","lowerWhisker");
s[2]=_2cc1.makeLineOutline(x-width/3,high2,x+width/3,high2);
s[3]=_2cc1.makeLineOutline(x,high2,x,high1);
s[2].setMeta("part","upperWhisker");
s[3].setMeta("part","upperWhisker");
s[4]=_2cb5.m.makeRectangle(x-width/2,high1,width,low1-high1,this.style);
s[5]=_2cc1.makeLineOutline(x-width/2,y,x+width/2,y);
s[5].setMeta("part","median");
_2cc4=new _2cb6.m(x-width/2,high2,width,low2-high2,s,true);
}
_2cc4.snap=_2cb7.m.getSnap(this.style);
return _2cc4;
},makeFromAugmentation:function(_2cc5,_2cc6,r){
if(this.type.CPVisEngineEquals("schema")){
return this.inherited(arguments,[_2cc5,_2cc6,r]);
}
var c=_2cc6.featureCenter(_2cc5);
var x=this.extent.width*(c.x-r[0])/(r[1]-r[0]);
var y=this.extent.height*(1-(c.y-r[2])/(r[3]-r[2]));
var s=_2cb5.m.makeRectangle(x-this.size.width/2,y-this.size.height/2,this.size.width,this.size.height,this.style);
return this.makeInside(s,_2cc5);
},makeAugmentedShape:function(_2cc7,_2cc8){
var polys=_2cc7.featurePolygons(_2cc8);
if(polys==null){
var c=_2cc7.featureCenter(_2cc8);
if(c==null){
return null;
}
return _2cb9.m.makeSymbol("circle",c.x,c.y,this.size.width,this.size.height,null);
}
if(polys==null||polys.length==1){
return polys[0];
}
var b=_2cc7.featureBounds(_2cc8);
var _2cc9=new _2cb6.m(b.x,b.y,b.width,b.height,polys,polys[0].filled);
_2cc9.snap=_2cb7.m.getSnap(this.style);
return _2cc9;
},constructor:function(_2cca,_2ccb,_2ccc,t,s,_2ccd,rows,style){
this.snap=_2cb7.m.getSnap(style);
this.type=t;
this.size=s;
this.componentValueProviders=_2ccd;
this.rows=rows;
this.style=style;
},makeShapeInside:function(_2cce,_2ccf){
return this.makeSchemaShape(_2cce.x+_2cce.width/2,_2cce.y+_2cce.height/2,_2cce.width,_2cce.height,_2ccf);
},makeShape:function(_2cd0,_2cd1){
if(_2cd0.XYUndefined()){
return null;
}
var cx,cy;
if(_2cd0.length()==0){
cx=this.extent.width/2;
cy=this.extent.height/2;
}else{
if(_2cd0.length()==1){
cx=this.extent.width/2;
cy=this.extent.height-_2cd0.Y()*this.extent.height;
}else{
cx=_2cd0.X()*this.extent.width;
cy=this.extent.height-_2cd0.Y()*this.extent.height;
}
}
var _2cd2;
if(this.type.CPVISEngineEndsWith("boxplot")){
_2cd2=this.makeBoxplot(cy,cx,this.size.width,_2cd1);
}else{
_2cd2=this.makeSchemaShape(cx,cy,this.size.width,this.size.height,_2cd1);
}
if(_2cd2!=null){
_2cd2.snap=_2cb7.m.getSnap(this.style);
}
return _2cd2;
},makeSchemaShape:function(x,y,width,_2cd3,_2cd4){
var n=0;
var _2cd5=Array.create([0],0);
if(_2cd4!=null){
_2cd5=Array.create([this.componentValueProviders.length],0);
for(var i=0;i<this.componentValueProviders.length;++i){
var field=this.componentValueProviders[i].getBaseField();
var _2cd6=this.componentValueProviders[i].getNumber(this.rows[_2cd4]);
if(_2cd6==null){
_2cd5[i]=NaN;
}else{
if(field==null){
_2cd5[i]=_2cd6;
}else{
_2cd5[i]=field.range.toZeroOne(_2cd6);
}
}
}
}
for(var _2cd7=0,_2cd8=_2cd5.length;_2cd7<_2cd8;++_2cd7){
var c=_2cd5[_2cd7];
if(c>=0){
n++;
}
}
if(n==0){
return null;
}
if(n!=_2cd5.length){
var _2cd9=Array.create([n],0);
var at=0;
for(var _2cda=0,_2cdb=_2cd5.length;_2cda<_2cdb;++_2cda){
var _2cdc=_2cd5[_2cda];
if(_2cdc>=0){
_2cd9[at++]=_2cdc;
}
}
_2cd5=_2cd9;
}
var _2cdd;
if(this.type.CPVISEngineEndsWith("pie")){
var parts=_2cc1.makePieParts(_2cd5,x,y,width/2,_2cd3/2);
_2cdd=new _2cb6.m(x-width/2,y-_2cd3/2,width,_2cd3,parts,true);
}else{
if(this.type.CPVISEngineEndsWith("profile")){
_2cdd=_2cc1.makeProfileShape(_2cd5,x,y,width/2,_2cd3/2,this.visContext);
}else{
if(this.type.CPVISEngineEndsWith("star")){
_2cdd=_2cc1.makeStarShape(_2cd5,x,y,width,_2cd3,this.visContext);
}else{
if(this.type.CPVISEngineEndsWith("rose")){
var parts=_2cc1.makeRose(_2cd5,x,y,width/2,_2cd3/2);
_2cdd=new _2cb6.m(x-width/2,y-_2cd3/2,width,_2cd3,parts,true);
}else{
throw new _2cb8.m("Unknown schema: "+this.type);
}
}
}
}
_2cdd.snap=_2cb7.m.getSnap(this.style);
return _2cdd;
}});
_2cc1.makePieParts=function(_2cde,cx,cy,width,_2cdf){
var n=0;
for(var _2ce0=0,_2ce1=_2cde.length;_2ce0<_2ce1;++_2ce0){
var _2ce2=_2cde[_2ce0];
n+=_2ce2;
}
if(n<=0){
return null;
}
var parts=new Array(_2cde.length);
var r=Math.max(width,_2cdf);
var t=0;
for(var i=0;i<parts.length;++i){
parts[i]=new _2cba.m(cx,cy,0,r,3.141592653589793*2*(t+_2cde[i])/n,3.141592653589793*2*t/n);
parts[i].fill=_2cc1.makeFill(i);
t+=_2cde[i];
}
return parts;
};
_2cc1.makeProfileShape=function(_2ce3,cx,cy,width,_2ce4,_2ce5){
var n=_2ce3.length;
var x=Array.create([n+2],0);
var y=Array.create([n+2],0);
for(var i=0;i<n;++i){
x[i]=cx-width+width*2*i/(n-1);
y[i]=cy+_2ce4-_2ce4*2*_2ce3[i];
}
x[n]=cx+width;
y[n]=cy+_2ce4;
x[n+1]=cx-width;
y[n+1]=cy+_2ce4;
return new _2cbb.m(x,y,true,null);
};
_2cc1.makeStarShape=function(_2ce6,cx,cy,width,_2ce7,_2ce8){
var n=_2ce6.length;
var x=Array.create([n],0);
var y=Array.create([n],0);
var r=Math.max(width,_2ce7)/2;
for(var i=0;i<n;++i){
var a=3.141592653589793*2*i/n;
x[i]=cx+r*_2ce6[i]*Math.cos(a);
y[i]=cy+r*_2ce6[i]*Math.sin(a);
}
return new _2cbb.m(x,y,true,null);
};
_2cc1.makeRose=function(_2ce9,cx,cy,width,_2cea){
var n=_2ce9.length;
var max=Math.max(width,_2cea);
var inner=Math.min(10,max/4);
var parts=new Array(n);
for(var i=0,j=0;i<n;++i){
var outer=inner+(max-inner)*_2ce9[i];
parts[j]=new _2cba.m(cx,cy,10,outer,3.141592653589793*2*j/n,3.141592653589793*2*(j+1)/n);
j++;
}
return parts;
};
_2cc1.makeFill=function(i){
var color=_2cbc.m.createColorFromString(_2cbc.m.getDefaultColors()[i]);
return _2cbd.m.makeSolid(color);
};
_2cc1.makeLineOutline=function(x1,y1,x2,y2){
return new _2cbe.m([x1,x2],[y1,y2],true);
};
return _2cc1;
});
},"com/ibm/vis/engine/internal/grammar/values/FieldValueProvider":function(){
define("com/ibm/vis/engine/internal/grammar/values/FieldValueProvider",["./ValueProvider","com/ibm/init/fork!../../../../exceptions/SpecException","com/ibm/init/fork!../../../../exceptions/ErrorCode","com/ibm/init/statics","dojo/_base/declare"],function(_2ceb,_2cec,_2ced,_2cee,_2cef){
var _2cf0=_2cef("com.ibm.vis.engine.internal.grammar.values.FieldValueProvider",[_2ceb],{field:null,includeInRange:false,allowOrdering:false,constructor:function(_2cf1,field,_2cf2){
this.field=field;
this.includeInRange=_2cf2;
this.allowOrdering=false;
},getNumber:function(row){
if(this.field!=null&&row.data!=null){
if(this.field.order!=null){
if(!this.allowOrdering){
throw new _2cec.m(null,_2ced.m.ENGINE_ILLEGAL_ARGUMENT,"Order given for categories other than stacked values.",null,null,null,null);
}
for(var i=0;i<this.field.order.length;++i){
if(this.field.order[i]==row.data[this.field.index]){
return new Number(i);
}
}
}
return row.data[this.field.index];
}
return null;
},getIncludeInRange:function(){
return this.includeInRange;
},isCategorical:function(){
return this.getUnit().measure.categorical;
},getCategories:function(){
return this.field.categories;
},getRange:function(){
return this.field.range;
},getLabel:function(){
return this.field.label;
},getBaseField:function(){
return this.field;
},getUnit:function(){
return this.field.unit;
},getGranularity:function(){
return this.field.granularity;
},getFormatter:function(){
return this.field.getSpecifiedFormatter();
},enableOrdering:function(_2cf3){
this.allowOrdering=_2cf3;
}});
return _2cf0;
});
},"com/ibm/vis/engine/internal/oldlegendlayout/OldLayoutable":function(){
define("com/ibm/vis/engine/internal/oldlegendlayout/OldLayoutable",["com/ibm/init/statics","dojo/_base/declare"],function(_2cf4,_2cf5){
var _2cf6=_2cf5("com.ibm.vis.engine.internal.oldlegendlayout.OldLayoutable",null,{layoutWithBounds:function(_2cf7){
},getMinimumSize:function(){
},getPreferredSize:function(){
},getBounds:function(){
},getParent:function(){
},getChildren:function(){
},resetLayout:function(){
},setContinuedArea:function(rect){
},hasContinuedArea:function(){
}});
return _2cf6;
});
},"com/ibm/vis/engine/internal/migration/Mapping":function(){
define("com/ibm/vis/engine/internal/migration/Mapping",["com/ibm/init/fork!./PathExpression","com/ibm/init/fork!../nativeImpl/Map","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!./EvaluationResult","com/ibm/init/fork!./EvaluationContext","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!./StrategyReference","com/ibm/init/fork!./ConverterReference","com/ibm/init/fork!./Guard","com/ibm/init/statics","dojo/_base/declare"],function(_2cf8,_2cf9,_2cfa,_2cfb,_2cfc,_2cfd,_2cfe,_2cff,_2d00,_2d01,_2d02){
var _2d03=_2d02("com.ibm.vis.engine.internal.migration.Mapping",null,{method:null,variables:null,contextExpression:null,sourceExpression:null,targetExpression:null,guards:null,mappings:null,elseMappings:null,hasValue:false,value:null,strategyRef:null,converterRef:null,constructor:function(_2d04,_2d05,_2d06,_2d07,_2d08,_2d09,_2d0a,_2d0b,_2d0c,_2d0d,_2d0e,value){
this.strategyRef=_2d05;
this.converterRef=_2d06;
this.contextExpression=_2d04!=null?new _2cf8.m(_2d04):null;
this.sourceExpression=_2d07!=null?new _2cf8.m(_2d07):null;
var _2d0f=_2d08!=null?new _2cf8.m(_2d08):null;
this.mappings=_2d0b;
this.elseMappings=_2d0c;
this.guards=_2d0d;
this.hasValue=_2d0e;
this.value=value;
if(_2d09!=null){
this.method=_2d09;
}else{
this.method="set";
}
if(this.sourceExpression!=null&&_2d0f==null&&!"delete".CPVisEngineEquals(this.method)){
_2d0f=new _2cf8.m(_2d07);
_2d0f.convertVariableDeclarationToReference();
}
this.targetExpression=_2d0f;
if(_2d0a!=null){
this.variables=new _2cf9.m();
for(var _2d10=0,_2d11=_2cfa.m.keySet(_2d0a),_2d12=_2d11.length;_2d10<_2d12;++_2d10){
var key=_2d11[_2d10];
this.variables.put(key,new _2cf8.m(_2cfa.m.getItem(_2d0a,key)));
}
}else{
this.variables=null;
}
},execute:function(_2d13){
var _2d14=false;
if(this.contextExpression!=null){
do{
var _2d15=this.contextExpression.evaluate(_2d13);
if(_2d15!=_2cfb.m.DOES_NOT_EXIST){
if(_2cfa.m.isObject(_2d15.value)||_2cfa.m.isArray(_2d15.value)){
if(this.doExecute(new _2cfc.m(_2d15.value,_2d13))){
_2d14=true;
}
}
}
}while(this.contextExpression.next(_2d13));
}else{
_2d14=this.doExecute(new _2cfc.m(_2d13.context,_2d13));
}
return _2d14;
},doExecute:function(_2d16){
var _2d17=false;
if(this.isGuardMet(_2d16)){
if(this.strategyRef!=null){
var _2d18=this.strategyRef.get(_2d16);
if(_2d18!=null){
_2d17=_2d18.migrate(_2d16.context);
}
}
if(this.sourceExpression!=null||this.targetExpression!=null){
if("move".CPVisEngineEquals(this.method)||"copy".CPVisEngineEquals(this.method)||"concat".CPVisEngineEquals(this.method)||"init".CPVisEngineEquals(this.method)||"set".CPVisEngineEquals(this.method)){
if(this.executeExpressions(_2d16)){
_2d17=true;
if("move".CPVisEngineEquals(this.method)){
_2d16.reset();
this.deleteFromSourceExpression(_2d16);
}
}
}else{
if("delete".CPVisEngineEquals(this.method)){
if(this.deleteFromSourceExpression(_2d16)){
_2d17=true;
}
}
}
}
if(this.executeChildMappings(_2d16,this.mappings)){
_2d17=true;
}
}else{
if(this.executeChildMappings(_2d16,this.elseMappings)){
_2d17=true;
}
}
return _2d17;
},executeExpressions:function(_2d19){
var _2d1a=false;
do{
var _2d1b=null;
if(this.sourceExpression!=null){
_2d1b=this.sourceExpression.evaluate(_2d19);
if(_2d1b==_2cfb.m.DOES_NOT_EXIST){
continue;
}
}
this.evaluateVariables(_2d19);
if("concat".CPVisEngineEquals(this.method)){
this.targetExpression.concat(_2d19,this.convert(_2cfa.m.deepClone(_2d1b.value)));
}else{
var obj;
if("init".CPVisEngineEquals(this.method)){
if((_2d1b!=null&&_2d1b.isArray())||(_2d1b==null&&_2cfa.m.isArray(_2d19.context))){
obj=_2cfa.m.createJSONArray();
}else{
if((_2d1b!=null&&_2d1b.isObject())||(_2d1b==null&&_2cfa.m.isObject(_2d19.context))){
obj=_2cfa.m.createJSONObject();
}else{
obj=null;
}
}
}else{
if("set".CPVisEngineEquals(this.method)){
obj=this.convert(this.hasValue?_2cfa.m.deepClone(this.value):_2d1b.value);
}else{
if("copy".CPVisEngineEquals(this.method)){
obj=this.convert(_2cfa.m.deepClone(_2d1b.value));
}else{
obj=this.convert(_2d1b.value);
}
}
}
do{
this.targetExpression.assign(_2d19,obj);
}while(this.targetExpression.next(_2d19));
}
_2d1a=true;
}while(this.sourceExpression!=null&&this.sourceExpression.next(_2d19));
return _2d1a;
},convert:function(_2d1c){
if(this.converterRef!=null){
var _2d1d=this.converterRef.get();
if(_2d1d!=null){
return _2d1d.convert(_2d1c);
}
}
return _2d1c;
},deleteFromSourceExpression:function(_2d1e){
var _2d1f=false;
do{
this.evaluateVariables(_2d1e);
if(this.sourceExpression.remove(_2d1e)){
_2d1f=true;
}
}while(this.sourceExpression.next(_2d1e));
return _2d1f;
},executeChildMappings:function(_2d20,_2d21){
var _2d22=false;
if(_2d21!=null){
this.evaluateVariables(_2d20);
for(var _2d23=0,_2d24=_2d21.size();_2d23<_2d24;++_2d23){
var _2d25=_2d21.get(_2d23);
if(_2d25.execute(_2d20)){
_2d22=true;
}
}
}
return _2d22;
},isGuardMet:function(_2d26){
if(this.guards!=null){
this.evaluateVariables(_2d26);
for(var _2d27=0,_2d28=this.guards,_2d29=_2d28.size();_2d27<_2d29;++_2d27){
var guard=_2d28.get(_2d27);
if(!guard.execute(_2d26)){
return false;
}
}
}
return true;
},evaluateVariables:function(_2d2a){
if(this.variables!=null){
for(var _2d2b=0,_2d2c=this.variables.keySet(),_2d2d=_2d2c.size();_2d2b<_2d2d;++_2d2b){
var key=_2d2c.get(_2d2b);
_2d2a.variables.put(key,this.variables.get(key).evaluate(_2d2a).value);
}
}
}});
_2d03.parse=function(arr){
var len=(arr==null?0:arr.length);
var _2d2e=new _2cfd.m(len);
for(var i=0;i<len;++i){
var item=arr[i];
_2d2e.add(new _2d03(_2cfa.m.getItem(item,"context"),_2cfe.m.parse(_2cfa.m.getItem(item,"strategy")),_2cff.m.parse(_2cfa.m.getItem(item,"converter")),_2cfa.m.getItem(item,"source"),_2cfa.m.getItem(item,"target"),_2cfa.m.getItem(item,"method"),_2cfa.m.getItem(item,"variables"),_2d03.parse(_2cfa.m.getItem(item,"mapping")),_2d03.parse(_2cfa.m.getItem(item,"elseMapping")),_2d00.m.parse(_2cfa.m.getItem(item,"guard")),_2cfa.m.containsKey(item,"value"),_2cfa.m.getItem(item,"value")));
}
return _2d2e;
};
_2d01.add("com/ibm/vis/engine/internal/migration/Mapping",["com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/migration/StrategyReference","com/ibm/vis/engine/internal/migration/ConverterReference","com/ibm/vis/engine/internal/migration/Guard"],function(){
_2d03.MOVE="move";
_2d03.COPY="copy";
_2d03.DELETE="delete";
_2d03.CONCAT="concat";
_2d03.INIT="init";
_2d03.SET="set";
});
return _2d03;
});
},"com/ibm/vis/interaction/internal/PanZoomImpl":function(){
define("com/ibm/vis/interaction/internal/PanZoomImpl",["../PanZoom","com/ibm/init/fork!../../engine/internal/struct/Dim","com/ibm/init/fork!../../engine/internal/nativeImpl/BasicFactory","com/ibm/init/fork!../../engine/internal/nativeImpl/Double","com/ibm/init/fork!../../engine/internal/util/SceneUtil","com/ibm/init/fork!./util/TransformData","com/ibm/init/fork!../../engine/internal/struct/Rect","com/ibm/init/statics","dojo/_base/declare"],function(_2d2f,_2d30,_2d31,_2d32,_2d33,_2d34,_2d35,_2d36,_2d37){
var _2d38=_2d37("com.ibm.vis.interaction.internal.PanZoomImpl",[_2d2f],{canvasDim:null,scene:null,interactivity:null,constructor:function(scene,_2d39,_2d3a){
this.scene=scene;
this.interactivity=_2d3a;
this.canvasDim=_2d3a.getCanvasDimensions();
},setCanvasDimensions:function(width,_2d3b){
this.canvasDim=new _2d30.m(width,_2d3b);
},updateScene:function(){
this.interactivity.setScene(this.scene);
},scaleBy:function(_2d3c){
this.scaleInternal(_2d3c,false);
this.updateScene();
},scaleInternal:function(scale,_2d3d){
var size=this.scene.length;
for(var i=0;i<size;++i){
var _2d3e=this.scene[i];
var _2d3f=_2d31.m.getItem(_2d3e,"transform");
if(_2d3f==null){
_2d3f=_2d31.m.createJSONObject();
_2d31.m.put(_2d3e,"transform",_2d3f);
}
if(_2d3f!=null){
var dx=0;
var dy=0;
var sx=1;
var sy=1;
var dxObj=_2d31.m.getItem(_2d3f,"dx");
if(_2d31.m.isString(dxObj)){
dx=_2d32.m.parseDouble(dxObj);
}else{
if(_2d31.m.isNumber(dxObj)){
var n=dxObj;
dx=n;
}
}
var dyObj=_2d31.m.getItem(_2d3f,"dy");
if(_2d31.m.isString(dyObj)){
dy=_2d32.m.parseDouble(dyObj);
}else{
if(_2d31.m.isNumber(dyObj)){
var n=dyObj;
dy=n;
}
}
var sxObj=_2d31.m.getItem(_2d3f,"xx");
if(_2d31.m.isString(sxObj)){
sx=_2d32.m.parseDouble(sxObj);
}else{
if(_2d31.m.isNumber(sxObj)){
var n=sxObj;
sx=n;
}
}
var syObj=_2d31.m.getItem(_2d3f,"yy");
if(_2d31.m.isString(syObj)){
sy=_2d32.m.parseDouble(syObj);
}else{
if(_2d31.m.isNumber(syObj)){
var n=syObj;
sy=n;
}
}
var xx=scale;
var yy=scale;
if(!_2d3d){
xx*=sx;
yy*=sy;
}
_2d31.m.put(_2d3f,"dx",dx*scale);
_2d31.m.put(_2d3f,"dy",dy*scale);
_2d31.m.put(_2d3f,"xx",xx);
_2d31.m.put(_2d3f,"yy",yy);
}
}
},setScale:function(_2d40){
var t=_2d33.m.getBackTransform(this.scene);
this.scaleInternal(_2d40/t.sx,false);
this.updateScene();
},scaleAroundAPoint:function(_2d41,x,y){
this.centerAroundPointInternal(x,y);
this.scaleAroundCenter(_2d41);
},scaleAroundCenter:function(_2d42){
var cx=this.canvasDim.width/2;
var cy=this.canvasDim.height/2;
this.scaleInternal(_2d42,false);
this.centerAroundPointInternal(cx*_2d42,cy*_2d42);
this.updateScene();
},centerAroundPoint:function(x,y){
this.centerAroundPointInternal(x,y);
this.updateScene();
},centerAroundPointInternal:function(x,y){
var cx=this.canvasDim.width/2;
var cy=this.canvasDim.height/2;
var _2d43=x-cx;
var _2d44=y-cy;
this.panInternal(-_2d43,-_2d44);
},getCurrentBounds:function(){
var _2d45=new _2d33.m(this.scene);
var d=_2d45.getSize();
var _2d46=this.scene[0];
var _2d47=_2d31.m.getItem(_2d46,"transform");
var txfm=_2d34.m.make(_2d47);
return new _2d35.m(txfm.dx,txfm.dy,d.width,d.height);
},reset:function(){
var t=_2d33.m.getBackTransform(this.scene);
if(t.dx==0&&t.dy==0){
this.scaleInternal(1/t.sx,false);
}else{
this.scene=this.interactivity.recreateSceneTree();
}
this.updateScene();
},panInternal:function(pdx,pdy){
var size=this.scene.length;
for(var i=0;i<size;++i){
var _2d48=this.scene[i];
var _2d49=_2d31.m.getItem(_2d48,"transform");
if(_2d49==null){
_2d49=_2d31.m.createJSONObject();
_2d31.m.put(_2d48,"transform",_2d49);
}
if(_2d49!=null){
var dx=0;
var dy=0;
var dxObj=_2d31.m.getItem(_2d49,"dx");
if(_2d31.m.isString(dxObj)){
dx=_2d32.m.parseDouble(dxObj);
}else{
if(_2d31.m.isNumber(dxObj)){
var n=dxObj;
dx=n;
}
}
var dyObj=_2d31.m.getItem(_2d49,"dy");
if(_2d31.m.isString(dyObj)){
dy=_2d32.m.parseDouble(dyObj);
}else{
if(_2d31.m.isNumber(dyObj)){
var n=dyObj;
dy=n;
}
}
_2d31.m.put(_2d49,"dx",dx+pdx);
_2d31.m.put(_2d49,"dy",dy+pdy);
}
}
},fitToCanvas:function(){
var r=this.getCurrentBounds();
this.panInternal(-r.x,-r.y);
var _2d4a=r.height<r.width?r.width:r.height;
var _2d4b=r.height<r.width?this.canvasDim.width:this.canvasDim.height;
var _2d4c=_2d4b/_2d4a;
var _2d4d=r.height>r.width?r.width:r.height;
var _2d4e=r.height>r.width?this.canvasDim.width:this.canvasDim.height;
if(_2d4d*_2d4c>_2d4e){
_2d4c=(_2d4e/_2d4d);
}
this.scaleBy(_2d4c);
},panBy:function(x,y){
this.panInternal(x,y);
this.updateScene();
},panByProportion:function(fx,fy){
var _2d4f=this.getCurrentBounds();
var dx=fx*_2d4f.width;
var dy=fy*_2d4f.height;
this.panBy(dx,dy);
}});
return _2d38;
});
},"com/ibm/vis/engine/internal/grammar/layout/cloud/flow/RowItem":function(){
define("com/ibm/vis/engine/internal/grammar/layout/cloud/flow/RowItem",["com/ibm/init/statics","dojo/_base/declare"],function(_2d50,_2d51){
var _2d52=_2d51("com.ibm.vis.engine.internal.grammar.layout.cloud.flow.RowItem",null,{bounds:null,shape:null,constructor:function(r,s){
this.bounds=r;
this.shape=s;
},getBounds:function(){
return this.bounds;
},getShape:function(){
return this.shape;
}});
return _2d52;
});
},"com/ibm/vis/widget/VisControl":function(){
require({cache:{"url:com/ibm/vis/widget/templates/VisControl.html":"<div data-dojo-attach-point=\"visContainer\" style=\"width:100%;height:100%;\" role=\"img\" alt=\"interactive chart\" tabindex=\"0\"></div>\r\n"}});
define("com/ibm/vis/widget/VisControl",["dojo/_base/declare","./_VisControlBase","dijit/_TemplatedMixin","dijit/layout/_LayoutWidget","dojo/text!./templates/VisControl.html"],function(_2d53,_2d54,_2d55,_2d56,_2d57){
var _2d58=_2d53("com.ibm.vis.widget.VisControl",[_2d56,_2d54,_2d55],{templateString:_2d57,startup:function(){
this.inherited(arguments);
return this.initRenderer();
},layout:function(){
this.inherited(arguments);
if(this.renderer){
this.renderer.setSize(this._contentBox.w,this._contentBox.h);
}
if(this.resizeToWindow){
this.width=this._contentBox.w;
this.height=this._contentBox.h;
}
}});
return _2d58;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/FillInterpolator":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/FillInterpolator",["com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!./FillInterpolatorUtil","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_2d59,_2d5a,_2d5b,_2d5c,_2d5d){
var _2d5e=_2d5d("com.ibm.vis.engine.internal.interaction.interpolation.FillInterpolator",null,{fill:null,type:0,solid:null,gradientOffsets:null,gradientColors:null,constructor:function(fill,type,solid,_2d5f,_2d60){
this.fill=fill;
this.type=type;
this.solid=solid;
this.gradientOffsets=_2d5f;
this.gradientColors=_2d60;
},isGradient:function(){
return this.type==2||this.type==3;
},getFill:function(){
return this.fill;
}});
_2d5e.makeFillInterpolator=function(f){
if(f==null){
return new _2d5e(null,0,null,null,null);
}
var fill=_2d59.m.deepClone(f);
_2d5a.m.ensureFillAlphas(fill);
var type=1;
var _2d61=_2d59.m.getItem(fill,"type");
if("linear".CPVisEngineEquals(_2d61)){
type=2;
}else{
if("radial".CPVisEngineEquals(_2d61)){
type=3;
}
}
if(type==1){
var solid=_2d5a.m.makeColorFromDojo(fill);
return new _2d5e(fill,1,solid,null,null);
}
var _2d62=_2d59.m.getItem(fill,"colors");
var len=_2d62.length;
var _2d63=Array.create([len],0);
var _2d64=new Array(len);
for(var i=0;i<len;++i){
var entry=_2d62[i];
_2d63[i]=_2d59.m.getNumberWithDefault(entry,"offset",(len==1)?0:i/(len-1));
_2d64[i]=_2d5a.m.makeColorFromDojo(_2d59.m.getItem(entry,"color"));
}
return new _2d5e(fill,type,null,_2d63,_2d64);
};
_2d5e.interpolate=function(start,end,w){
if(w<=0){
return start.fill;
}
if(w>=1){
return end.fill;
}
if(start.type==0&&end.type==0){
return null;
}
if(start.type==0){
return _2d5e.interpolate(end,start,1-w);
}
if(!start.isGradient()&&end.isGradient()){
return _2d5e.interpolate(end,start,1-w);
}
if(start.type==1){
return _2d5e.interpolateColor(start.solid,end.solid,w);
}
if(start.type==2&&(end.type==0||end.type==1||(end.type==2&&_2d5e.stopsCompatible(start,end)))){
var fill=_2d59.m.createJSONObject();
_2d59.m.put(fill,"type","linear");
if(end.type==0||end.type==1){
_2d59.m.put(fill,"x1",_2d59.m.getItem(start.fill,"x1"));
_2d59.m.put(fill,"y1",_2d59.m.getItem(start.fill,"y1"));
_2d59.m.put(fill,"x2",_2d59.m.getItem(start.fill,"x2"));
_2d59.m.put(fill,"y2",_2d59.m.getItem(start.fill,"y2"));
_2d59.m.put(fill,"colors",_2d5e.interpolateGradientToSolid(start,end,w));
}else{
_2d59.m.put(fill,"x1",_2d5e.interpolateValue((_2d59.m.getItem(start.fill,"x1")),(_2d59.m.getItem(end.fill,"x1")),w));
_2d59.m.put(fill,"y1",_2d5e.interpolateValue((_2d59.m.getItem(start.fill,"y1")),(_2d59.m.getItem(end.fill,"y1")),w));
_2d59.m.put(fill,"x2",_2d5e.interpolateValue((_2d59.m.getItem(start.fill,"x2")),(_2d59.m.getItem(end.fill,"x2")),w));
_2d59.m.put(fill,"y2",_2d5e.interpolateValue((_2d59.m.getItem(start.fill,"y2")),(_2d59.m.getItem(end.fill,"y2")),w));
_2d59.m.put(fill,"colors",_2d5e.interpolateGradientToGradient(start,end,w));
}
return fill;
}
if(start.type==3&&(end.type==0||end.type==1||(end.type==3&&_2d5e.stopsCompatible(start,end)))){
var fill=_2d59.m.createJSONObject();
_2d59.m.put(fill,"type","radial");
_2d59.m.put(fill,"cx",_2d59.m.getItem(start.fill,"cx"));
_2d59.m.put(fill,"cy",_2d59.m.getItem(start.fill,"cy"));
_2d59.m.put(fill,"r",_2d59.m.getItem(start.fill,"r"));
if(end.type==0||end.type==1){
_2d59.m.put(fill,"colors",_2d5e.interpolateGradientToSolid(start,end,w));
}else{
_2d59.m.put(fill,"colors",_2d5e.interpolateGradientToGradient(start,end,w));
}
return fill;
}
if(w<0.5){
return start.fill;
}
return end.fill;
};
_2d5e.stopsCompatible=function(start,end){
if(start.gradientOffsets.length!=end.gradientOffsets.length){
return false;
}
return true;
};
_2d5e.interpolateGradientToGradient=function(start,end,w){
var len=start.gradientOffsets.length;
var _2d65=_2d59.m.createSizedJSONArray(len);
for(var i=0;i<len;++i){
var entry=_2d59.m.createJSONObject();
_2d59.m.put(entry,"offset",_2d5e.interpolateValue(start.gradientOffsets[i],end.gradientOffsets[i],w));
_2d59.m.put(entry,"color",_2d5e.interpolateColor(start.gradientColors[i],end.gradientColors[i],w));
_2d65.push(entry);
}
return _2d65;
};
_2d5e.interpolateGradientToSolid=function(start,end,w){
var len=start.gradientOffsets.length;
var _2d66=_2d59.m.createSizedJSONArray(len);
for(var i=0;i<len;++i){
var entry=_2d59.m.createJSONObject();
_2d59.m.put(entry,"offset",start.gradientOffsets[i]);
_2d59.m.put(entry,"color",_2d5e.interpolateColor(start.gradientColors[i],end.solid,w));
_2d66.push(entry);
}
return _2d66;
};
_2d5e.interpolateColor=function(start,end,w){
if(end==null){
return _2d5a.m.makeDojoColor(start[0],start[1],start[2],_2d5e.interpolateValue(start[3],0,w));
}
var _2d67=_2d5b.m.isNaN(start[0])&&_2d5b.m.isNaN(start[1])&&_2d5b.m.isNaN(start[2]);
var _2d68=_2d5b.m.isNaN(end[0])&&_2d5b.m.isNaN(end[1])&&_2d5b.m.isNaN(end[2]);
if(_2d67&&_2d68){
return _2d5a.m.makeDojoColor(NaN,NaN,NaN,_2d5e.interpolateValue(start[3],end[3],w));
}
if(_2d68){
return _2d5a.m.makeDojoColor(start[0],start[1],start[2],_2d5e.interpolateValue(start[3],end[3],w));
}
if(_2d67){
return _2d5a.m.makeDojoColor(end[0],end[1],end[2],_2d5e.interpolateValue(start[3],end[3],w));
}
return _2d5a.m.makeDojoColor(_2d5e.interpolateValue(start[0],end[0],w),_2d5e.interpolateValue(start[1],end[1],w),_2d5e.interpolateValue(start[2],end[2],w),_2d5e.interpolateValue(start[3],end[3],w));
};
_2d5e.interpolateValue=function(start,end,w){
if(_2d5b.m.isNaN(start)){
return end;
}
if(_2d5b.m.isNaN(end)){
return start;
}
if(start==end){
return start;
}
return start*(1-w)+end*w;
};
_2d5c.add("com/ibm/vis/engine/internal/interaction/interpolation/FillInterpolator",["com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/interaction/interpolation/FillInterpolatorUtil","com/ibm/vis/engine/internal/nativeImpl/Double"],function(){
_2d5e.FILL_NULL=0;
_2d5e.FILL_SOLID=1;
_2d5e.FILL_LINEAR=2;
_2d5e.FILL_RADIAL=3;
});
return _2d5e;
});
},"com/ibm/vis/engine/internal/grammar/layout/treemap/TreeMapLayout":function(){
define("com/ibm/vis/engine/internal/grammar/layout/treemap/TreeMapLayout",["../Layout","./TreeMapBoundsSetter","com/ibm/init/fork!./DefaultTreeMapAlgorithms","com/ibm/init/fork!../../../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./TreeBuilder","com/ibm/init/fork!../../../nativeImpl/HashcodeMap","com/ibm/init/fork!../../../nativeImpl/Map","com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/fork!../../../scene/StyleBuilder","com/ibm/init/fork!../../../struct/Rect","com/ibm/init/fork!../../units/UnitConverter","com/ibm/init/fork!../../../struct/Insets","com/ibm/init/statics","dojo/_base/declare"],function(_2d69,_2d6a,_2d6b,_2d6c,_2d6d,_2d6e,_2d6f,_2d70,_2d71,_2d72,_2d73,_2d74,_2d75,_2d76){
var _2d77=_2d76("com.ibm.vis.engine.internal.grammar.layout.treemap.TreeMapLayout",[_2d69,_2d6a],{algorithm:null,tree:null,builder:null,leafOnly:false,shapeNodeMap:null,nodeLabelMap:null,hideOverlappingLabels:false,spec:null,constructor:function(_2d78){
this.spec=_2d78.getSpec();
if(this.spec.leafOnly!=null){
this.leafOnly=this.spec.leafOnly;
}
var _2d79=this.spec.layout;
if(_2d79==null){
_2d79=_2d77.PIVOT_BY_SIZE;
}
_2d6b.m.registerExtensions();
this.algorithm=_2d6c.m.INSTANCE.newInstance(_2d79,null);
this.builder=new _2d6d.m();
this.shapeNodeMap=new _2d6e.m();
this.nodeLabelMap=new _2d6f.m();
this.hideOverlappingLabels=false;
if(this.spec.levelLabelStyles!=null){
if("hide".CPVisEngineEquals(this.spec.levelLabelStyles.labelCollisionHandling)){
this.hideOverlappingLabels=true;
}
}
},makeShapes:function(_2d7a,_2d7b){
var _2d7c=this.spec.recursive;
var _2d7d=this.spec.size;
var _2d7e=null;
if(_2d7d!=null){
_2d7e=_2d7d.$ref;
}
if(_2d7c!=null){
var _2d7f=null;
if(_2d7c.parent!=null){
_2d7f=_2d7c.parent.$ref;
}
var child=null;
if(_2d7c.child!=null){
child=_2d7c.child.$ref;
}
this.tree=this.builder.buildRecursiveTree(_2d7a,_2d7f,child,this.adapter,_2d7e);
}else{
var _2d80=this.spec.levels;
var _2d81=new _2d70.m();
if(_2d80!=null){
for(var _2d82=0,_2d83=_2d80.length;_2d82<_2d83;++_2d82){
var ref=_2d80[_2d82];
_2d81.add(ref.$ref);
}
this.tree=this.builder.buildNonRecursiveTree(_2d7a,_2d81,this.adapter,_2d7e);
}
}
this.algorithm.createBounds(this.tree,this.getPaddedBounds(_2d7b),this);
var _2d84=new _2d70.m();
this.addShapes(this.tree,_2d84);
return _2d84;
},addShapes:function(node,_2d85){
if(node.bounds!=null){
if((this.leafOnly&&node.getChildCount()==0)||!this.leafOnly){
var s=this.adapter.makeItemInRect(node.bounds,node.rowIndex);
if(s!=null){
this.shapeNodeMap.put(s,node);
_2d85.add(s);
}
}
}
for(var _2d86=0,_2d87=node.getChildren(),_2d88=_2d87.size();_2d86<_2d88;++_2d86){
var child=_2d87.get(_2d86);
this.addShapes(child,_2d85);
}
},getStyleSpec:function(level,_2d89){
if(level<0){
return null;
}
var _2d8a=this.spec.levelStyles;
if(_2d8a==null){
return null;
}
if(_2d89){
return _2d8a.leaf;
}
var _2d8b=_2d8a.internal;
if(_2d8b!=null&&_2d8b.length>0){
if(level<_2d8b.length){
return _2d8b[level];
}
return _2d8b[_2d8b.length-1];
}
return null;
},getLabelSpec:function(level,_2d8c){
if(level<0){
return null;
}
var _2d8d=this.spec.levelLabelStyles;
if(_2d8d==null){
return null;
}
if(_2d8c){
return _2d8d.leaf;
}
var _2d8e=_2d8d.internal;
if(_2d8e!=null&&_2d8e.length>0){
if(level<_2d8e.length){
return _2d8e[level];
}
return _2d8e[_2d8e.length-1];
}
return null;
},applyStyles:function(s){
var node=this.lookupTreeNodeForShape(s);
if(node==null){
return false;
}
var style=this.getStyleSpec(node.getLevel(),node.getChildCount()==0);
if(style!=null){
_2d71.m.setFilled(s,style);
var _2d8f=this.adapter.getStyle();
if(_2d8f!=null&&_2d8f.fill!=null){
_2d71.m.modifyPaletteFill(s,_2d8f);
}
return true;
}
return false;
},lookupTreeNodeForShape:function(s){
return this.shapeNodeMap.get(s);
},applyLabels:function(s,_2d90){
var node=this.lookupTreeNodeForShape(s);
if(node==null){
return false;
}
var _2d91=this.getLabelSpec(node.getLevel(),node.getChildCount()==0);
if(_2d91!=null){
if(_2d91.content!=null){
var label=this.adapter.makeLabelShape(_2d91,s);
if(label!=null){
var _2d92=s.visible?label.visible:false;
label.visible=_2d92;
if(!this.hideOverlappingLabels||!_2d77.overlapsAncestorLabel(label,node,this.nodeLabelMap)){
var id=s.id;
var _2d93=id.indexOf("S");
var _2d94=id.substring(0,_2d93);
var _2d95=id.substring(_2d93+1);
var _2d96=this.adapter.makeLabelBackgroundShape(_2d91,label,s);
if(_2d96!=null){
_2d96.visible=_2d92;
_2d96.setID(_2d94+"LB"+_2d95);
_2d90.add(_2d96);
}
label.setID(_2d94+"L"+_2d95);
_2d90.add(label);
this.nodeLabelMap.put(node.id,label);
}
}
}
return true;
}
return false;
},setBounds:function(node,_2d97){
if(node.rowIndex>-1){
this.shrinkForParent(_2d97,node);
node.bounds=_2d77.makeNewCopy(_2d97);
}
},shrinkForParent:function(_2d98,node){
if(this.leafOnly){
return;
}
var _2d99=node.getParent();
if(_2d99!=null&&_2d99.rowIndex>-1){
var _2d9a=this.getStrokeWidth(_2d99);
if(_2d9a>0){
var _2d9b=this.getStrokeWidth(node);
var width=_2d9a+_2d9b;
if(width>0){
var _2d9c=_2d77.getInsetsForParent(_2d98,_2d99.bounds,Math.round(width/2));
_2d77.updateNodeBoundsWithInsets(_2d98,_2d9c);
}
}
}
},getStrokeWidth:function(node){
var style=this.getStyleSpec(node.getLevel(),node.getChildCount()==0);
if(style!=null&&style.stroke!=null){
var width=_2d73.m.convertLength(style.stroke.width,1,1);
if(width!=null){
return width;
}
}
return 0;
}});
_2d77.overlapsAncestorLabel=function(label,node,_2d9d){
var _2d9e=node.getParent();
while(_2d9e!=null){
var _2d9f=_2d9d.get(_2d9e.id);
if(_2d9f!=null){
var _2da0=_2d9f.getBounds();
var _2da1=label.getBounds();
if(_2da1.isRectIntersects(_2da0)){
return true;
}
}
_2d9e=_2d9e.getParent();
}
return false;
};
_2d77.makeNewCopy=function(_2da2){
return new _2d72.m(_2da2.x,_2da2.y,_2da2.width,_2da2.height);
};
_2d77.updateNodeBoundsWithInsets=function(_2da3,_2da4){
_2da3.x+=_2da4.left;
_2da3.y+=_2da4.top;
_2da3.width=_2da3.width-_2da4.left-_2da4.right;
_2da3.height=_2da3.height-_2da4.top-_2da4.bottom;
if(_2da3.width<0){
_2da3.width=0;
}
if(_2da3.height<0){
_2da3.height=0;
}
};
_2d77.getInsetsForParent=function(_2da5,_2da6,inset){
var dY=Math.round(_2da5.y-_2da6.y);
var dX=Math.round(_2da5.x-_2da6.x);
var top=0,_2da7=0,right=0,left=0;
if(dY==0){
top=inset;
}
if(Math.round(_2da5.y+_2da5.height)==Math.round(_2da6.y+_2da6.height)){
_2da7=inset;
}
if(dX==0){
left=inset;
}
if(Math.round(_2da5.x+_2da5.width)==Math.round(_2da6.x+_2da6.width)){
right=inset;
}
return new _2d74.m(top,left,_2da7,right);
};
_2d75.add("com/ibm/vis/engine/internal/grammar/layout/treemap/TreeMapLayout",["com/ibm/vis/engine/internal/grammar/layout/Layout","com/ibm/vis/engine/internal/grammar/layout/treemap/TreeMapBoundsSetter","com/ibm/vis/engine/internal/struct/Rect","com/ibm/vis/engine/internal/struct/Insets"],function(){
_2d77.HIDE="hide";
_2d77.PIVOT_BY_SIZE="pivotBySize";
_2d77.DEFAULT_STROKE_WIDTH=1;
});
return _2d77;
});
},"com/ibm/vis/engine/internal/grammar/label/PrecomputedFontMetric":function(){
define("com/ibm/vis/engine/internal/grammar/label/PrecomputedFontMetric",["./FontMetric","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../nativeImpl/ResourceUtil","com/ibm/init/fork!../../../../monitor/LogComponent","com/ibm/init/fork!../../../../exceptions/EngineException","com/ibm/init/fork!../../../../exceptions/ErrorCode","com/ibm/init/statics","dojo/_base/declare"],function(_2da8,_2da9,_2daa,_2dab,_2dac,_2dad,_2dae,_2daf,_2db0){
var _2db1=_2db0("com.ibm.vis.engine.internal.grammar.label.PrecomputedFontMetric",[_2da8],{width:0,height:0,ascent:0,boldFactor:0,pages:null,actualFamily:null,initialized:false,ctx:null,expandRuns:function(pages){
for(var p=0;p<pages.length;++p){
var _2db2=pages[p];
if(_2da9.m.isArray(_2db2)){
var page=_2db2;
for(var c=page.length-1;c>0;--c){
var width=page[c];
if(_2da9.m.isArray(width)){
var r=(width[0])+3;
var w=1;
if(width.length==2){
w=(width[1]);
}
while(r-->1){
_2da9.m.addAt(page,w,c+1);
}
_2da9.m.setAt(page,w,c);
}else{
var w=(width);
if(w<0){
while(w++<0){
_2da9.m.addAt(page,0,c+1);
}
_2da9.m.setAt(page,0,c);
}
}
}
}
}
},constructor:function(ctx,width,_2db3,_2db4,_2db5,pages,_2db6){
this.ctx=ctx;
this.initialized=false;
this.pages=pages;
this.width=width/100;
this.height=_2db3/100;
this.ascent=_2db4/100;
this.boldFactor=_2db5/100;
this.actualFamily=_2db6;
},initialize:function(){
if(!this.initialized){
this.expandRuns(this.pages);
this.initialized=true;
}
},getActualFamily:function(){
return this.actualFamily;
},getAmountThatFits:function(text,size,bold,_2db7){
_2db7/=size;
if(bold){
_2db7/=this.boldFactor;
}
var w=0;
for(var i=0;i<text.CPVisEngineLength();++i){
w+=this.getCharWidth(_2da9.m.charCodeAt(text,i));
if(w>_2db7){
return i;
}
}
return text.CPVisEngineLength();
},getAscent:function(size){
return this.ascent*size;
},getHeight:function(size){
return this.height*size;
},getWidth:function(text,size,bold){
var w=0;
for(var i=0;i<text.CPVisEngineLength();++i){
w+=this.getCharWidth(_2da9.m.charCodeAt(text,i));
}
return bold?w*this.boldFactor*size:w*size;
},charWidthFallback:function(_2db8){
if(this!=_2db1.arial){
_2db1.arial.initialize();
if(this.ctx.logContext.hasListeners()){
this.ctx.logContext.warning(_2dac.m.CommonGrammar,"metrics for charcode "+_2db8+" not found on font \""+this.actualFamily+"\", using fallback font \""+_2db1.arial.actualFamily+"\"");
}
return _2db1.arial.getCharWidth(_2db8);
}else{
if(this.ctx.logContext.hasListeners()){
this.ctx.logContext.warning(_2dac.m.CommonGrammar,"metrics for charcode "+_2db8+" not found on fallback font \""+_2db1.arial.actualFamily+"\", using \""+_2db1.arial.actualFamily+"\"'s default width "+this.width+".");
}
return this.width;
}
},getUnicodePageFor:function(c){
return c>>8;
},getUnicodeIndexInPageFor:function(c){
return c%256;
},hasCode:function(code){
var p=this.getUnicodePageFor(code);
if(this.pages.length<=p){
return false;
}
var _2db9=this.pages[p];
if(!_2da9.m.isArray(_2db9)){
var w=(_2db9);
if(w==0){
return false;
}
return true;
}
var c=this.getUnicodeIndexInPageFor(code);
var page=_2db9;
var w=0;
if(c<page.length-1){
w=(page[c+1]);
}
if(w==1){
w=(page[0]);
if(w==1){
return true;
}
}
if(w==0){
return false;
}
return true;
},getCharWidth:function(_2dba){
if(_2dba>32&&!this.hasCode(_2dba)){
var _2dbb="font "+this.getActualFamily()+" does not support the char "+_2dba;
throw new _2dad.m(null,_2dae.m.ENGINE_ILLEGAL_ARGUMENT,_2dbb,null);
}
var p=this.getUnicodePageFor(_2dba);
if(this.pages.length<=p){
return this.charWidthFallback(_2dba);
}
var _2dbc=this.pages[p];
if(!_2da9.m.isArray(_2dbc)){
var w=(_2dbc);
if(w==0){
return this.charWidthFallback(_2dba);
}else{
if(w==1){
return this.width;
}else{
return (w-2)/100;
}
}
}
var c=this.getUnicodeIndexInPageFor(_2dba);
var page=_2dbc;
var w=0;
if(c<page.length-1){
w=(page[c+1]);
}
if(w==1){
w=(page[0]);
if(w==1){
return this.width;
}
}
if(w==0){
return this.charWidthFallback(_2dba);
}
return (w-2)/100;
}});
_2db1.get=function(ctx,name){
if(_2db1.metrics==null){
_2db1.metrics=_2db1.makeMetrics(ctx);
_2db1.arial=_2db1.metrics.get("arial");
}
if(name==null){
name="serif";
}else{
name=name.toLowerCase();
}
var names=name.split(",");
var r=null;
var i=0;
while(r==null&&i<names.length){
var _2dbd=names[i].CPVISEngineTrim();
_2dbd=_2dbd.CPVisEngineReplace("'","");
_2dbd=_2dbd.CPVisEngineReplace("\"","");
r=_2db1.metrics.get(_2dbd);
i++;
}
if(r!=null){
r.initialize();
}
return r;
};
_2db1.makeMetrics=function(ctx){
var m=new _2daa.m();
var base=_2dab.m.getFontMetricsArray();
for(var _2dbe=0,_2dbf=base.length;_2dbe<_2dbf;++_2dbe){
var o=base[_2dbe];
var w=Math.round((_2da9.m.getItem(o,"w")));
var h=Math.round((_2da9.m.getItem(o,"h")));
var a=Math.round((_2da9.m.getItem(o,"a")));
var b=Math.round((_2da9.m.getItem(o,"b")));
var c=_2da9.m.getItem(o,"c");
var name=_2da9.m.getItem(o,"n");
for(var _2dc0=0,_2dc1=name.split(","),_2dc2=_2dc1.length;_2dc0<_2dc2;++_2dc0){
var s=_2dc1[_2dc0];
var fm=new _2db1(ctx,w,h,a,b,c,s);
m.put(s,fm);
}
}
return m;
};
_2daf.add("com/ibm/vis/engine/internal/grammar/label/PrecomputedFontMetric",["com/ibm/vis/engine/internal/grammar/label/FontMetric"],function(){
_2db1.metrics=null;
_2db1.arial=null;
_2db1.PAGE_NOT_AVAILABLE=0;
_2db1.PAGE_DEFAULT_WIDTH=1;
_2db1.NOT_AVAILABLE=0;
_2db1.DEFAULT_WIDTH=1;
_2db1.WIDTH_ZERO=2;
});
return _2db1;
});
},"com/ibm/vis/engine/internal/nativeImpl/render/SilverlightAsynchAlwaysPatch":function(){
define("com/ibm/vis/engine/internal/nativeImpl/render/SilverlightAsynchAlwaysPatch",["dojo","dojox/gfx","dojo/_base/config"],function(d,g,_2dc3){
if(g.renderer=="silverlight"){
var gs=g.shape,sl=g.silverlight;
var _2dc4={},_2dc5=new Function;
sl.Surface.extend({destroy:function(){
window[this._onLoadName]=_2dc5;
delete _2dc4[this._nodeName];
gs.Surface.prototype.destroy.apply(this,arguments);
}});
g.createSurface=sl.createSurface=function(_2dc6,width,_2dc7){
try{
if(!width&&!_2dc7){
var pos=d.position(_2dc6);
width=width||pos.w;
_2dc7=_2dc7||pos.h;
}
if(typeof width=="number"){
width=width+"px";
}
if(typeof _2dc7=="number"){
_2dc7=_2dc7+"px";
}
var s=new sl.Surface();
_2dc6=d.byId(_2dc6);
s._parent=_2dc6;
s._nodeName=g._base._getUniqueId();
var t=_2dc6.ownerDocument.createElement("script");
t.type="text/xaml";
t.id=g._base._getUniqueId();
t.text="<?xml version='1.0'?><Canvas xmlns='http://schemas.microsoft.com/client/2007' Name='"+s._nodeName+"'/>";
_2dc6.parentNode.insertBefore(t,_2dc6);
s._nodes.push(t);
var obj,_2dc8=g._base._getUniqueId(),_2dc9="__"+g._base._getUniqueId()+"_onLoad";
s._onLoadName=_2dc9;
window[_2dc9]=function(_2dca){
if(!s.rawNode){
s.rawNode=d.byId(_2dc8).content.root;
_2dc4[s._nodeName]=_2dc6;
s.onLoad(s);
}
};
if(d.isSafari){
obj="<embed type='application/x-silverlight' id='"+_2dc8+"' width='"+width+"' height='"+_2dc7+" background='transparent'"+" source='#"+t.id+"'"+" windowless='true'"+" maxFramerate='60'"+" onLoad='"+_2dc9+"'"+" onError='__dojoSilverlightError'"+" /><iframe style='visibility:hidden;height:0;width:0'/>";
}else{
obj="<object type='application/x-silverlight' data='data:application/x-silverlight,' id='"+_2dc8+"' width='"+width+"' height='"+_2dc7+"'>"+"<param name='background' value='transparent' />"+"<param name='source' value='#"+t.id+"' />"+"<param name='windowless' value='true' />"+"<param name='maxFramerate' value='60' />"+"<param name='onLoad' value='"+_2dc9+"' />"+"<param name='onError' value='__dojoSilverlightError' />"+"</object>";
}
_2dc6.innerHTML=obj;
var _2dcb=d.byId(_2dc8);
s.rawNode=null;
s.isLoaded=false;
if(_2dc3.isDebug&&console){
console.log("PATCHED createSurf - plugin is created asynchly!");
}
s._nodes.push(_2dcb);
s.width=g.normalizedLength(width);
s.height=g.normalizedLength(_2dc7);
return s;
}
catch(err){
if(_2dc3.isDebug&&console){
console.log("PATCHED createSurface error: "+err);
if(console.error){
console.error(err);
}
}
throw err;
}
};
__dojoSilverlightError=function(_2dcc,err){
var t="Silverlight Error:\n"+"Code: "+err.ErrorCode+"\n"+"Type: "+err.ErrorType+"\n"+"Message: "+err.ErrorMessage+"\n";
switch(err.ErrorType){
case "ParserError":
t+="XamlFile: "+err.xamlFile+"\n"+"Line: "+err.lineNumber+"\n"+"Position: "+err.charPosition+"\n";
break;
case "RuntimeError":
t+="MethodName: "+err.methodName+"\n";
if(err.lineNumber!=0){
t+="Line: "+err.lineNumber+"\n"+"Position: "+err.charPosition+"\n";
}
break;
}
};
function _2dcd(s,a){
var ev={target:s,currentTarget:s,preventDefault:function(){
},stopPropagation:function(){
}};
try{
if(a.source){
ev.target=a.source;
}
}
catch(e){
}
if(a){
try{
ev.ctrlKey=a.ctrl;
ev.shiftKey=a.shift;
var p=a.getPosition(null);
ev.x=ev.offsetX=ev.layerX=p.x;
ev.y=ev.offsetY=ev.layerY=p.y;
var _2dce=_2dc4[s.getHost().content.root.name];
var t=d.position(_2dce);
ev.clientX=t.x+p.x;
ev.clientY=t.y+p.y;
}
catch(e){
}
}
return ev;
};
function _2dcf(s,a){
var ev={keyCode:a.platformKeyCode,ctrlKey:a.ctrl,shiftKey:a.shift};
try{
if(a.source){
ev.target=a.source;
}
}
catch(e){
}
return ev;
};
var _2dd0={onclick:{name:"MouseLeftButtonUp",fix:_2dcd},onmouseenter:{name:"MouseEnter",fix:_2dcd},onmouseleave:{name:"MouseLeave",fix:_2dcd},onmouseover:{name:"MouseEnter",fix:_2dcd},onmouseout:{name:"MouseLeave",fix:_2dcd},onmousedown:{name:"MouseLeftButtonDown",fix:_2dcd},onmouseup:{name:"MouseLeftButtonUp",fix:_2dcd},onmousemove:{name:"MouseMove",fix:_2dcd},onkeydown:{name:"KeyDown",fix:_2dcf},onkeyup:{name:"KeyUp",fix:_2dcf}};
var _2dd1={connect:function(name,_2dd2,_2dd3){
var token,n=name in _2dd0?_2dd0[name]:{name:name,fix:function(){
return {};
}};
if(arguments.length>2){
token=this.getEventSource().addEventListener(n.name,function(s,a){
d.hitch(_2dd2,_2dd3)(n.fix(s,a));
});
}else{
token=this.getEventSource().addEventListener(n.name,function(s,a){
_2dd2(n.fix(s,a));
});
}
return {name:n.name,token:token};
},disconnect:function(token){
try{
this.getEventSource().removeEventListener(token.name,token.token);
}
catch(e){
}
}};
d.extend(sl.Shape,_2dd1);
d.extend(sl.Surface,_2dd1);
}
});
},"com/ibm/vis/interaction/HighlightRepresentation":function(){
define("com/ibm/vis/interaction/HighlightRepresentation",["com/ibm/init/fork!../exceptions/RaveException","com/ibm/init/fork!../engine/internal/ColorUtil","com/ibm/init/fork!../engine/internal/grammar/units/UnitConverter","com/ibm/init/statics","dojo/_base/declare"],function(_2dd4,_2dd5,_2dd6,_2dd7,_2dd8){
var _2dd9=_2dd8("com.ibm.vis.interaction.HighlightRepresentation",null,{spec:null,constructor:function(style){
if(style==null){
throw new _2dd4.m("Specify a StyleSpec for highlight",_2dd4.m.SPEC_INVALID_VALUE);
}
this.spec=style;
},getOutline:function(){
return _2dd5.m.toCanonicalColor(this.spec.outline);
},getStroke:function(){
if(this.spec.stroke!=null){
var width=this.spec.stroke.width;
return _2dd6.m.convertLength(width,2,2);
}
return null;
},getStyle:function(){
return this.spec;
}});
_2dd7.add("com/ibm/vis/interaction/HighlightRepresentation",[],function(){
_2dd9.DEFAULT_STROKE_WIDTH=2;
});
return _2dd9;
});
},"com/ibm/vis/engine/internal/grammar/element/PointBuilder":function(){
define("com/ibm/vis/engine/internal/grammar/element/PointBuilder",["./Builder","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../nativeImpl/SpecUtil","com/ibm/init/fork!../../../../actions/internal/ScrollUnitControllerAction","com/ibm/init/fork!../../scene/CustomGlyphBuilder","com/ibm/init/fork!../../scene/SymbolBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_2dda,_2ddb,_2ddc,_2ddd,_2dde,_2ddf,_2de0,_2de1,_2de2){
var _2de3=_2de2("com.ibm.vis.engine.internal.grammar.element.PointBuilder",[_2dda],{size:null,symbolName:null,symbolDef:null,scaleDimensions:0,style:null,constructor:function(_2de4,_2de5,_2de6,size,style){
this.snap=_2ddb.m.getSnap(style);
this.augmentedShapesNeedScaling=false;
this.style=style;
this.size=size;
var _2de7=(style==null)?null:style.symbol;
if(_2de7==null){
this.symbolName="circle";
}else{
if(_2ddc.m.isString(_2de7)){
this.symbolName=_2de7;
}else{
this.symbolName=null;
if(style!=null){
var _2de8=style.symbol;
var _2de9=_2ddd.m.toJSONObject(_2de8);
var _2dea=new _2dde.m();
var _2deb=_2dea.modify(_2de9,_2de6);
this.symbolDef=new _2ddf.m(_2deb,size,_2de6);
}
}
}
this.scaleDimensions=this.getScaleDimensions(style);
},getScaleDimensions:function(style){
if(style==null){
return 0;
}
var _2dec=style.width!=null?this.isPercent(style.width):this.isPercent(style.size);
var _2ded=style.height!=null?this.isPercent(style.height):this.isPercent(style.size);
var _2dee=(_2dec?1:0)+(_2ded?2:0);
return _2dee;
},isPercent:function(_2def){
if(_2def==null){
return false;
}
if(!_2ddc.m.isString(_2def)){
return false;
}
return (_2def).CPVISEngineEndsWith("%")&&!(_2def).CPVISEngineEndsWith("%%");
},makeShapeInside:function(b,_2df0){
var shape=this.build(b.x+b.width/2,b.y+b.height/2,b.width,b.height);
return shape;
},makeAugmentedShape:function(_2df1,_2df2){
var c=_2df1.featureCenter(_2df2);
return this.build(c.x,c.y,this.size.width,this.size.height);
},makeShape:function(_2df3,_2df4){
var cx,cy;
if(_2df3.length()==0){
cx=this.extent.width/2;
cy=this.extent.height/2;
}else{
if(_2df3.XYUndefined()){
return null;
}else{
if(_2df3.length()==1){
cx=this.extent.width/2;
cy=this.extent.height-_2df3.Y()*this.extent.height;
}else{
cx=_2df3.X()*this.extent.width;
cy=this.extent.height-_2df3.Y()*this.extent.height;
}
}
}
var shape=this.build(cx,cy,this.size.width,this.size.height);
if(_2df4!=null){
shape.setRow(_2df4);
}
return shape;
},build:function(cx,cy,_2df5,_2df6){
var shape;
if(this.symbolDef!=null){
shape=this.symbolDef.makeCustomShape(cx,cy,_2df5,_2df6);
}else{
shape=_2de0.m.makeSymbol(this.symbolName,cx,cy,_2df5,_2df6,this.style);
}
if("rect".CPVisEngineEquals(shape.getType())||"i-beam".CPVisEngineEquals(this.symbolName)||"t-beam".CPVisEngineEquals(this.symbolName)){
shape.scaleDimensions=this.scaleDimensions;
}
return shape;
}});
return _2de3;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/DAGNodeWrappingAlgorithm":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/DAGNodeWrappingAlgorithm",["com/ibm/init/statics","dojo/_base/declare"],function(_2df7,_2df8){
var _2df9=_2df8("com.ibm.vis.engine.internal.grammar.layout.graph.DAGNodeWrappingAlgorithm",null,{assignRows:function(graph){
}});
return _2df9;
});
},"com/ibm/vis/engine/internal/migration/ExtensionParameter":function(){
define("com/ibm/vis/engine/internal/migration/ExtensionParameter",["com/ibm/init/statics","dojo/_base/declare"],function(_2dfa,_2dfb){
var _2dfc=_2dfb("com.ibm.vis.engine.internal.migration.ExtensionParameter",null,{version:null,parameters:null,constructor:function(_2dfd,_2dfe){
this.version=_2dfd;
this.parameters=_2dfe;
},getVersion:function(){
return this.version;
},getParameters:function(){
return this.parameters;
}});
return _2dfc;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/Graph":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/Graph",["com/ibm/init/fork!../../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_2dff,_2e00,_2e01){
var Graph=_2e01("com.ibm.vis.engine.internal.grammar.layout.graph.Graph",null,{nodes:null,links:null,constructor:function(nodes,links){
this.nodes=nodes;
this.links=links;
},reverseLinksIfNeeded:function(){
for(var _2e02=0,_2e03=this.links,_2e04=_2e03.length;_2e02<_2e04;++_2e02){
var link=_2e03[_2e02];
if(link.to.layer>link.from.layer){
link.reverse();
}
}
},removeUnwantedLinks:function(){
var _2e05=new _2dff.m();
for(var i=0;i<this.links.length;++i){
var _2e06=this.links[i].from;
var _2e07=this.links[i].to;
if(this.isNodeAvailable(_2e06)&&this.isNodeAvailable(_2e07)){
_2e05.add(this.links[i]);
}
}
this.links=_2e05.toArray(new Array(_2e05.size()));
},isNodeAvailable:function(node){
for(var _2e08=0,_2e09=this.nodes,_2e0a=_2e09.length;_2e08<_2e0a;++_2e08){
var node1=_2e09[_2e08];
if(node1==node){
return true;
}
}
return false;
}});
return Graph;
});
},"com/ibm/vis/engine/internal/oldlegends/Legend":function(){
define("com/ibm/vis/engine/internal/oldlegends/Legend",["./LegendContent","com/ibm/init/fork!../grammar/scale/ContentLayoutSpec","com/ibm/init/fork!./LegendEntry","com/ibm/init/fork!../struct/Insets","com/ibm/init/fork!../Alignment","com/ibm/init/fork!../grammar/label/LabelProducer","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!../nativeImpl/List","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../scene/StyleBuilder","com/ibm/init/fork!./StaggerLegendEntry","com/ibm/init/fork!../oldlegendlayout/OldAutoGridLayout","com/ibm/init/fork!../oldlegendlayout/OldFlow","com/ibm/init/fork!../oldlegendlayout/OldFlowLayout","com/ibm/init/statics","dojo/_base/declare"],function(_2e0b,_2e0c,_2e0d,_2e0e,_2e0f,_2e10,_2e11,_2e12,_2e13,_2e14,_2e15,_2e16,_2e17,_2e18,_2e19,_2e1a){
var _2e1b=_2e1a("com.ibm.vis.engine.internal.oldlegends.Legend",[_2e0b],{legendEntries:null,aesthetics:null,swatchSize:null,local:false,swatchStyle:null,textStyle:null,isHorizontalFlow:false,categories:null,swatchBoxStyle:null,constructor:function(_2e1c,style,vis,_2e1d,spec,_2e1e){
this.aesthetics=_2e1d;
this.isHorizontalFlow=_2e1e;
if(spec==null){
this.local=true;
}else{
var _2e1f=new _2e0c.m();
_2e1f.flow=spec.orientation;
if(_2e1e){
_2e1f.columns=spec.stripes;
}else{
_2e1f.rows=spec.stripes;
}
_2e1f.method=spec.method;
_2e1f.reverse=(spec.scale==null||spec.scale.reverse==null)?false:spec.scale.reverse;
this.layoutSpec=_2e1f;
this.swatchBoxStyle=spec.itemBoxStyle;
this.categories=spec.scale!=null&&spec.scale.spans!=null&&spec.scale.spans[0]!=null?spec.scale.spans[0].categories:null;
this.swatchStyle=spec.itemStyle;
this.textStyle=spec.labelStyle!=null?spec.labelStyle:spec.tickStyle;
this.local=spec.scale==null||spec.scale.local==null||spec.scale.local;
}
this.swatchSize=_2e0d.m.getSwatchSize(spec,_2e1d);
var _2e20=_2e0e.m.NONE;
if(this.swatchStyle==null||this.swatchStyle.padding==null){
if(this.textStyle==null||this.textStyle.padding==null){
if(!this.isStaggered(this.layoutSpec)){
if(this.isHorizontalFlow){
_2e20=new _2e0e.m(0,5,0,15);
}else{
_2e20=new _2e0e.m(0,5,0,0);
}
}
}else{
_2e20=_2e0e.m.makeForStyle(this.textStyle,this.swatchSize);
}
}else{
if(this.isHorizontalFlow&&!this.isStaggered(this.layoutSpec)){
_2e20=new _2e0e.m(_2e20.top,_2e20.left,_2e20.bottom,_2e20.right+15);
}
}
var _2e21=(this.textStyle!=null&&_2e0f.m.isValidAlign(this.textStyle.align))?this.textStyle.align:this.isStaggered(this.layoutSpec)&&_2e1e?"end":"start";
if(this.textStyle==null){
this.textStyle=new Object();
}
if(!_2e0f.m.isValidVAlign(this.textStyle.valign)){
this.textStyle.valign=_2e0f.m.VALIGN_MIDDLE_1ST_LINE;
}
this.textLabeler=_2e10.m.makeSimpleInside(vis,this.textStyle,null,_2e21,this.textStyle.valign);
this.textLabeler.padding=_2e20;
this.makeLegendEntries(this.swatchStyle);
},isStaggered:function(_2e22){
if(_2e22==null||_2e22.method==null){
return false;
}
var _2e23=_2e22.method;
return _2e23.CPVisEngineEquals("stagger");
},getShapes:function(_2e24,id,_2e25){
var _2e26=new _2e11.m(0,0,_2e24.width,_2e24.height);
return this.layoutShapes(_2e26,this.legendEntries,"legendEntry",id+_2e25.value+"LE");
},makeLegendEntries:function(_2e27){
if(this.aesthetics==null||this.aesthetics[0]==null){
return;
}
var _2e28=this.aesthetics[0].element;
var scale=this.aesthetics[0].scale;
var ticks=this.getModifiedScaleTicks(scale);
var src=this.aesthetics[0].valueProvider;
this.textLabeler.isCategorical=(this.categories!=null||src.isCategorical());
this.legendEntries=new _2e12.m();
var _2e29=_2e28.makeBuilder(null,_2e28.type,this.swatchSize,this.swatchSize,_2e28.spec.style);
var _2e2a;
if(_2e28.isLineWithPoints){
var _2e2b=new _2e13.m(this.swatchSize.width/2,this.swatchSize.height/2);
_2e2a=_2e28.makeBuilder(null,"point",_2e2b,_2e2b,_2e28.spec.symbolStyle);
}else{
var _2e2c="line".CPVisEngineEquals(_2e28.type);
var _2e2d=!_2e28.isLineWithPoints;
var _2e2e=this.swatchStyle!=null&&this.swatchStyle.symbol!=null;
var _2e2f=_2e2c&&_2e2d&&_2e2e;
if(_2e2f){
var _2e2b=new _2e13.m(this.swatchSize.width/2,this.swatchSize.height/2);
_2e2a=_2e28.makeBuilder(null,"point",_2e2b,_2e2b,this.swatchStyle);
}else{
_2e2a=null;
}
}
if(this.isStaggered(this.layoutSpec)){
this.makeStaggeredLegendEntries(ticks,_2e29,_2e2a,_2e28);
return;
}
var _2e30=this.isForwardTickOrder();
if(_2e27==null){
_2e27=new Object();
}
if(_2e27.padding==null){
_2e27.padding=2;
}
if(_2e30){
for(var _2e31=0,_2e32=ticks.size();_2e31<_2e32;++_2e31){
var tick=ticks.get(_2e31);
var entry=new _2e0d.m(null,_2e27,this.vis,tick,_2e29,this.aesthetics,this.textLabeler,_2e28.spec.symbolStyle,_2e2a,this.swatchBoxStyle);
this.legendEntries.add(entry);
}
}else{
for(var i=ticks.size()-1;i>=0;--i){
var entry=new _2e0d.m(null,_2e27,this.vis,ticks.get(i),_2e29,this.aesthetics,this.textLabeler,_2e28.spec.symbolStyle,_2e2a,this.swatchBoxStyle);
this.legendEntries.add(entry);
}
}
},makeStaggeredLegendEntries:function(ticks,_2e33,_2e34,_2e35){
var _2e36=this.isForwardTickOrder();
this.swatchStyle=_2e14.m.addStaggeredLegendDefaults(this.swatchStyle,this.isHorizontalFlow);
var max=ticks.size()-1;
if(ticks.size()==1){
var entry=new _2e0d.m(null,this.swatchStyle,this.vis,ticks.get(0),_2e33,this.aesthetics,this.textLabeler,_2e35.spec.symbolStyle,_2e34,this.swatchBoxStyle);
this.legendEntries.add(entry);
return;
}
if(_2e36){
for(var i=0;i<max;++i){
var entry=new _2e15.m(null,this.swatchStyle,this.vis,ticks.get(i),_2e33,this.aesthetics,this.textLabeler,_2e35.spec.symbolStyle,_2e34,this.swatchBoxStyle,ticks.get(i+1),this.isHorizontalFlow);
this.legendEntries.add(entry);
}
var entry=new _2e15.m(null,this.swatchStyle,this.vis,ticks.get(max),_2e33,this.aesthetics,this.textLabeler,_2e35.spec.symbolStyle,_2e34,this.swatchBoxStyle,null,this.isHorizontalFlow);
this.legendEntries.add(entry);
}else{
for(var i=max;i>0;--i){
var entry=new _2e15.m(null,this.swatchStyle,this.vis,ticks.get(i),_2e33,this.aesthetics,this.textLabeler,_2e35.spec.symbolStyle,_2e34,this.swatchBoxStyle,ticks.get(i-1),this.isHorizontalFlow);
this.legendEntries.add(entry);
}
var entry=new _2e15.m(null,this.swatchStyle,this.vis,ticks.get(0),_2e33,this.aesthetics,this.textLabeler,_2e35.spec.symbolStyle,_2e34,this.swatchBoxStyle,null,this.isHorizontalFlow);
this.legendEntries.add(entry);
}
},getModifiedScaleTicks:function(scale){
var ticks=this.local?scale.getTicksForData():scale.getTicks();
if(this.categories!=null){
var _2e37=new _2e12.m();
for(var _2e38=0,_2e39=this.categories,_2e3a=_2e39.length;_2e38<_2e3a;++_2e38){
var n=_2e39[_2e38];
for(var _2e3b=0,_2e3c=ticks.size();_2e3b<_2e3c;++_2e3b){
var tick=ticks.get(_2e3b);
if(tick.value==n){
_2e37.add(tick);
break;
}
}
}
return _2e37;
}else{
return ticks;
}
},isForwardTickOrder:function(){
var _2e3d=this.aesthetics[0].valueProvider.isCategorical();
if(_2e3d){
var _2e3e=this.aesthetics[0].element.grammar.coordinates;
var _2e3f=_2e3e.containsStacking();
var _2e40=!this.isHorizontalFlow;
var _2e41=!((_2e3e.containsPolar()||_2e3e.containsTranspose())&&_2e3e.scales.length==1);
if(_2e3f&&_2e40&&_2e41){
_2e3d=!_2e3d;
}
}
if(this.layoutSpec==null){
return _2e3d;
}
var _2e42=this.isHorizontalFlow||_2e3d;
var _2e43=this.layoutSpec.reverse!=null&&this.layoutSpec.reverse;
return (_2e43)?!_2e42:_2e42;
},createLayout:function(_2e44,_2e45){
if(this.layoutSpec.columns==null&&this.layoutSpec.rows==null){
if(this.isHorizontalFlow){
_2e45=new _2e16.m(_2e17.m.horizontal,1,1);
if(this.isStaggered(this.layoutSpec)){
_2e45.setAdjustHeight(true);
_2e45.setAdjustWidth(this.textStyle!=null&&this.textStyle.valign!=null);
}
}else{
_2e45=new _2e18.m(_2e17.m.vertical);
_2e45.setAdjustWidth(true);
if(this.textStyle!=null&&this.textStyle.valign!=null){
_2e45.setAdjustHeight(false);
}
}
}
this.inherited(arguments,[_2e44,_2e45]);
return this;
},layoutChildren:function(){
this.minimumSize=new _2e13.m(0,0);
this.resizeToFit=true;
var _2e46=this.preferredSize;
var _2e47=new _2e11.m(0,0,_2e46.width,_2e46.height);
var maxW=0,maxH=0;
var _2e48=_2e47.width*_2e47.height;
var _2e49=0;
var _2e4a=new _2e13.m(0,0);
for(var _2e4b=0,_2e4c=this.legendEntries,_2e4d=_2e4c.size();_2e4b<_2e4d;++_2e4b){
var entry=_2e4c.get(_2e4b);
var _2e4e=entry.createLayout(_2e47.getExtent(),null);
maxW=Math.max(_2e4e.preferredSize.width,maxW);
maxH=Math.max(_2e4e.preferredSize.height,maxH);
this.add(_2e4e);
if(_2e49>0){
entry.setSwatchOffset(_2e4a);
}else{
_2e4a=entry.swatchOffset;
}
_2e49+=_2e4e.preferredSize.width*_2e4e.preferredSize.height;
if(_2e49>_2e48*2){
break;
}
}
var _2e4f=new _2e13.m(maxW,maxH);
for(var _2e50=0,_2e51=this.legendEntries,_2e52=_2e51.size();_2e50<_2e52;++_2e50){
var entry=_2e51.get(_2e50);
entry.setAlignBounds(_2e4f);
}
},createShapesInScene:function(scene,id,_2e53){
},layoutShape:function(_2e54,array,type,id,_2e55){
var _2e56=this.inherited(arguments,[_2e54,array,type,id,_2e55]);
var _2e57=this.bounds;
if(_2e56!=null&&_2e57!=null){
var _2e58=_2e0e.m.NONE;
if(this.swatchStyle!=null){
_2e58=_2e0e.m.makeForStylePadding(this.swatchStyle.padding,_2e57.getExtent(),_2e57.getExtent());
}
var _2e59=_2e58.expandRect(new _2e11.m(0,0,this.swatchSize.width,this.swatchSize.height));
var size=_2e56.length;
var _2e5a=id+_2e55.value+"LE"+size;
this.createEllipsis(this,_2e56,"legendEntry",_2e5a,_2e59);
}
return _2e56;
},getEntries:function(){
return this.legendEntries;
}});
return _2e1b;
});
},"com/ibm/vis/engine/internal/nativeImpl/BasicLogListener":function(){
define("com/ibm/vis/engine/internal/nativeImpl/BasicLogListener",["dojo/_base/declare","../../../monitor/LogListener","../../../monitor/LogLevel","dojo/date/locale","dojo/json"],function(_2e5b,_2e5c,_2e5d,_2e5e,dJson){
var _2e5f={Info:"info",Warning:"warn",Error:"error",Trace:"trace",GrammarError:"error",GrammarWarning:"warn",GrammarInfo:"info"};
var _2e60=_2e5b("com.ibm.vis.engine.nativeImpl.BasicLogListener",[_2e5c],{tracing:null,constructor:function(){
this.tracing=false;
},accept:function(entry){
if(!console||(!this.tracing&&entry.getLevel()==_2e5d.Trace)){
return;
}
var _2e61=entry.getParameters();
var t=_2e61.get("timestamp");
var date=new Date(t);
var sDate=_2e5e.format(date,{timePattern:"hh:mm:ss.SSS"});
_2e61.remove("timestamp");
var _2e62=_2e5f[entry.getLevel().name];
if(!_2e62||typeof console[_2e62]!="function"){
_2e62="log";
}
if(_2e61.isEmpty()){
console[_2e62](sDate+" "+entry.getLevel()+":  \t"+entry.getMessage());
}else{
console[_2e62](sDate+" "+entry.getLevel()+":  \t"+entry.getMessage()+"  \t"+dJson.stringify(_2e61.data));
}
_2e61.put("timestamp",t);
},isTracing:function(){
return this.tracing;
}});
return _2e60;
});
},"com/ibm/vis/engine/internal/grammar/element/Builder":function(){
define("com/ibm/vis/engine/internal/grammar/element/Builder",["../layout/ShapeMaker","../values/DerivedValueProducer","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../coordinate/Position","com/ibm/init/statics","dojo/_base/declare"],function(_2e63,_2e64,_2e65,_2e66,_2e67,_2e68){
var _2e69=_2e68("com.ibm.vis.engine.internal.grammar.element.Builder",[_2e63,_2e64],{coords:null,extent:null,visContext:null,augmentedShapesNeedScaling:false,snap:false,constructor:function(_2e6a,_2e6b,_2e6c){
this.coords=_2e6b;
this.extent=_2e6c;
this.visContext=_2e6a;
this.augmentedShapesNeedScaling=true;
},makeShape:function(_2e6d,_2e6e){
},makeShapeInside:function(_2e6f,_2e70){
},makeAugmentedShape:function(_2e71,_2e72){
},toScreenY:function(field,row,_2e73){
var value=row.data[field.index];
var v=this.coords.scales[0].toZeroOne(value,field.unit,_2e73);
if(v==null){
return null;
}else{
return this.extent.height*(1-v);
}
},make:function(_2e74,_2e75){
var s=this.makeShape(_2e74,_2e75);
if(s!=null){
s.setRow(_2e75);
}
return s;
},getBase:function(_2e76){
return null;
},makeInside:function(_2e77,_2e78){
var s=this.makeShapeInside(_2e77,_2e78);
if(s!=null){
s.setRow(_2e78);
}
return s;
},makeFromAugmentation:function(_2e79,_2e7a,r){
var s=this.makeAugmentedShape(_2e7a,_2e79);
if(s==null){
return null;
}
var xx=this.extent.width/(r[1]-r[0]);
var yy=this.extent.height/(r[2]-r[3]);
var dx=-r[0]*xx;
var dy=-r[3]*yy;
if(this.augmentedShapesNeedScaling){
s.affine(xx,dx,yy,dy,false);
}else{
var c=s.getCenter();
var _2e7b=c.x*xx+dx-c.x;
var _2e7c=c.y*yy+dy-c.y;
s.affine(1,_2e7b,1,_2e7c,false);
}
if(s!=null){
s.setRow(_2e79);
}
return s;
},makeContinuousShapes:function(_2e7d,_2e7e,rows){
return null;
},makesContinuousShapes:function(){
return false;
},makeSwatch:function(_2e7f){
var _2e80=new _2e65.m();
_2e80.add(this.makeShape(_2e66.m.NO_COORDS,null));
return _2e80;
},getSnap:function(){
return this.snap;
},setSnap:function(_2e81){
this.snap=_2e81;
},getDerivedValue:function(_2e82,_2e83,_2e84){
return null;
}});
return _2e69;
});
},"com/ibm/vis/engine/internal/grammar/layout/cloud/flow/FlowRow":function(){
define("com/ibm/vis/engine/internal/grammar/layout/cloud/flow/FlowRow",["com/ibm/init/fork!../../../../nativeImpl/List","com/ibm/init/fork!../../../../struct/Rect","com/ibm/init/fork!./RowItem","com/ibm/init/fork!../../../../struct/Text","com/ibm/init/statics","dojo/_base/declare"],function(_2e85,_2e86,_2e87,_2e88,_2e89,_2e8a){
var _2e8b=_2e8a("com.ibm.vis.engine.internal.grammar.layout.cloud.flow.FlowRow",null,{x:0,y:0,allowableWidth:0,allowableHeight:0,currentX:0,rowHeight:0,rowItems:null,maxDescent:0,padding:null,rowWidth:0,currentAlign:null,constructor:function(x,y,_2e8c,_2e8d,_2e8e){
this.x=x;
this.y=y;
this.currentX=x;
this.allowableWidth=_2e8c;
this.allowableHeight=_2e8d;
this.padding=_2e8e;
this.rowItems=new _2e85.m();
},addShape:function(shape){
var _2e8f=shape.getBounds().width+this.padding.left+this.padding.right;
var _2e90=shape.getBounds().height+this.padding.top+this.padding.bottom;
if(this.x+this.allowableWidth>=(this.currentX+_2e8f)&&this.allowableHeight>=(_2e90)){
var b=new _2e86.m(this.currentX+this.padding.left,this.y+this.padding.top,shape.getBounds().width,shape.getBounds().height);
if(this.rowHeight<_2e90){
this.rowHeight=_2e90;
}
this.currentX+=_2e8f;
this.rowWidth+=_2e8f;
this.rowItems.add(new _2e87.m(b,shape));
if(shape instanceof _2e88.m){
var t=shape;
var _2e91=t.font.getDescent();
if(_2e91>this.maxDescent){
this.maxDescent=_2e91;
}
}
return true;
}
return false;
},getMaxDescent:function(){
return this.maxDescent;
},getRowHeight:function(){
return this.rowHeight;
},getY:function(){
return this.y;
},getRowItems:function(){
return this.rowItems;
},alignAllRowBounds:function(align,_2e92){
for(var _2e93=0,_2e94=this.rowItems,_2e95=_2e94.size();_2e93<_2e95;++_2e93){
var item=_2e94.get(_2e93);
var b=item.getBounds();
b.y=this.y;
if("middle".CPVisEngineEquals(this.currentAlign)){
b.x-=(this.allowableWidth-this.rowWidth)/2;
}else{
if("end".CPVisEngineEquals(this.currentAlign)){
b.x-=(this.allowableWidth-this.rowWidth);
}
}
var dy=(this.rowHeight-b.height);
var dx=(this.allowableWidth-this.rowWidth);
if("middle".CPVisEngineEquals(align)){
dx/=2;
}
if("middle".CPVisEngineEquals(_2e92)){
dy/=2;
}
if(!"start".CPVisEngineEquals(align)){
b.x+=dx;
}
if(!"start".CPVisEngineEquals(_2e92)){
b.y+=dy;
}
}
this.currentAlign=align;
},adjustForDescent:function(_2e96){
for(var _2e97=0,_2e98=this.rowItems,_2e99=_2e98.size();_2e97<_2e99;++_2e97){
var item=_2e98.get(_2e97);
var b=item.getBounds();
var s=item.getShape();
if(!(s instanceof _2e88.m)){
return;
}
var t=s;
var dy=(this.rowHeight-b.height);
if("middle".CPVisEngineEquals(_2e96)){
dy/=2;
}
if(!"end".CPVisEngineEquals(_2e96)){
b.y+=dy;
}
b.y-=(this.maxDescent-t.font.getDescent());
}
},getX:function(){
return this.x;
},getRowWidth:function(){
return this.rowWidth;
}});
return _2e8b;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/PieGrowInterpolator":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/PieGrowInterpolator",["./Interpolator","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../struct/Wedge","com/ibm/init/statics","dojo/_base/declare"],function(_2e9a,_2e9b,_2e9c,_2e9d,_2e9e,_2e9f,_2ea0){
var _2ea1=_2ea0("com.ibm.vis.engine.internal.interaction.interpolation.PieGrowInterpolator",[_2e9a],{idToIndex:null,wedgeIDs:null,inputWedges:null,insets:null,offsets:null,wedgeExtents:null,startAngle:0,angleGrowRate:0,lastTime:0,outputWedges:null,constructor:function(pie){
this.inputWedges=pie.wedges;
this.insets=pie.wedgeInsets;
this.offsets=pie.wedgeOffsets;
this.startAngle=pie.startAngle;
this.idToIndex=new _2e9b.m();
this.wedgeIDs=new _2e9c.m();
var N=this.inputWedges.length;
this.wedgeExtents=Array.create([N],0);
this.outputWedges=new Array(N);
var maxA=0;
var items=pie.wedgeItems;
for(var i=0;i<N;++i){
var id=_2e9d.m.getItem(items[i],"id");
this.idToIndex.put(id,i);
this.wedgeIDs.add(id);
this.wedgeExtents[i]=this.inputWedges[i].a1-this.inputWedges[i].a2;
maxA=Math.max(maxA,Math.abs(this.wedgeExtents[i]));
}
this.angleGrowRate=maxA/0.95;
if(pie.CCW){
this.angleGrowRate=-this.angleGrowRate;
}
this.lastTime=NaN;
},getWedgeIDs:function(){
return this.wedgeIDs;
},interpolate:function(id,t){
if(t!=this.lastTime){
this.lastTime=t;
var _2ea2=this.angleGrowRate*t;
var _2ea3=this.startAngle;
for(var i=0;i<this.inputWedges.length;++i){
var wSize;
if(this.angleGrowRate<0){
wSize=Math.max(this.wedgeExtents[i],_2ea2);
}else{
wSize=Math.min(this.wedgeExtents[i],_2ea2);
}
var w=this.inputWedges[i];
var x=w.x;
var y=w.y;
if(this.offsets[i]>0){
var _2ea4=_2ea3+wSize/2;
x+=this.offsets[i]*Math.cos(_2ea4);
y+=this.offsets[i]*Math.sin(_2ea4);
}
this.outputWedges[i]=new _2e9e.m(x,y,w.r1,w.r2,_2ea3,_2ea3+wSize);
_2ea3+=wSize;
}
}
var _2ea5=_2e9d.m.createJSONObject();
var index=this.idToIndex.get(id);
if(index!=null){
this.outputWedges[index].setShapeParametersWithInset(_2ea5,this.insets[index]);
}
return _2ea5;
}});
_2ea1.makePieGrowInterpolator=function(pie){
var _2ea6=new _2ea1(pie);
return _2ea6;
};
_2e9f.add("com/ibm/vis/engine/internal/interaction/interpolation/PieGrowInterpolator",["com/ibm/vis/engine/internal/interaction/interpolation/Interpolator"],function(){
_2ea1.PIEGROW_FINISHED=0.95;
});
return _2ea1;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/DashingAestheticValueProducer":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/DashingAestheticValueProducer",["./AestheticValueProducer","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_2ea7,_2ea8,_2ea9,_2eaa){
var _2eab=_2eaa("com.ibm.vis.engine.internal.grammar.aesthetic.DashingAestheticValueProducer",[_2ea7],{make:function(spec){
var _2eac=spec.pattern;
return this.lookupPattern(_2eac);
},forPalette:function(o){
return this.lookupPattern(o);
},lookupPattern:function(_2ead){
var i=0;
var _2eae;
var _2eaf=0;
if(_2ead!=null){
for(i=0;i<_2eab.DASH_ORDER.length;++i){
_2eae=_2eab.DASH_ORDER[i];
if(_2eae.CPVisEngineEquals(_2ead)){
_2eaf=i;
break;
}else{
_2eaf=0;
}
}
}else{
for(i=0;i<_2eab.DASH_ORDER.length;++i){
_2eae=_2eab.DASH_ORDER[i];
if(_2eae.CPVisEngineEquals(_2ead)){
_2eaf=i;
break;
}else{
_2eaf=0;
}
}
}
return _2eaf;
},modify:function(item,o,_2eb0){
var v=Math.round((o));
_2ea8.m.modifyStrokeStyle(item,_2eab.DASH_ORDER[v]);
return item;
},getDefaultForCategory:function(index,_2eb1){
return Math.abs(index)%_2eab.DASH_ORDER.length;
},interpolate:function(a,b,p){
var low=a==null?0:(a);
var high=b==null?_2eab.DASH_ORDER.length:(b);
var _2eb2=Math.round(low+p*(high-low));
if(_2eb2>=_2eab.DASH_ORDER.length){
_2eb2-=1;
}
return _2eb2;
}});
_2ea9.add("com/ibm/vis/engine/internal/grammar/aesthetic/DashingAestheticValueProducer",["com/ibm/vis/engine/internal/grammar/aesthetic/AestheticValueProducer"],function(){
_2eab.DASH_ORDER=["Solid","LongDashDotDot","LongDashDot","LongDash","ShortDashDotDot","ShortDashDot","ShortDash","DashDot","Dash","ShortDot","Dot"];
});
return _2eab;
});
},"com/ibm/vis/engine/internal/migration/EvaluationResult":function(){
define("com/ibm/vis/engine/internal/migration/EvaluationResult",["com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_2eb3,_2eb4,_2eb5){
var _2eb6=_2eb5("com.ibm.vis.engine.internal.migration.EvaluationResult",null,{value:null,constructor:function(value){
this.value=value;
},getValue:function(){
return this.value;
},isArray:function(){
return _2eb3.m.isArray(this.value);
},isObject:function(){
return _2eb3.m.isObject(this.value);
},isString:function(){
return _2eb3.m.isString(this.value);
},isNumber:function(){
return _2eb3.m.isNumber(this.value);
},isBoolean:function(){
return _2eb3.m.isBoolean(this.value);
}});
_2eb4.add("com/ibm/vis/engine/internal/migration/EvaluationResult",[],function(){
_2eb6.DOES_NOT_EXIST=new _2eb6(null);
});
return _2eb6;
});
},"com/ibm/vis/interaction/InteractivityListener":function(){
define("com/ibm/vis/interaction/InteractivityListener",["com/ibm/init/statics","dojo/_base/declare"],function(_2eb7,_2eb8){
var _2eb9=_2eb8("com.ibm.vis.interaction.InteractivityListener",null,{update:function(event){
}});
return _2eb9;
});
},"com/ibm/vis/interaction/internal/SceneItemImpl":function(){
define("com/ibm/vis/interaction/internal/SceneItemImpl",["../SceneItem","com/ibm/init/fork!../../engine/internal/nativeImpl/BasicFactory","com/ibm/init/fork!../../engine/internal/nativeImpl/Double","com/ibm/init/fork!../../engine/internal/util/SceneIdUtil","com/ibm/init/statics","dojo/_base/declare"],function(_2eba,_2ebb,_2ebc,_2ebd,_2ebe,_2ebf){
var _2ec0=_2ebf("com.ibm.vis.interaction.internal.SceneItemImpl",[_2eba],{id:null,sceneItem:null,type:null,rows:null,originalRows:null,coords:null,coordFields:null,aesValues:null,aesFieldIDs:null,rowsCalculated:false,originalRowsCalculated:false,vis:null,dataIndex:null,hitChildren:null,constructor:function(base){
this.id=_2ebb.m.getItem(base,"id");
this.type=_2ec0.getSceneType(this.id);
this.sceneItem=base;
this.rowsCalculated=false;
this.dataIndex=null;
},getID:function(){
if(this.id!=null){
return this.id;
}
return "none";
},getType:function(){
return this.type;
},subType:function(){
if(this.type.CPVisEngineEquals("element")){
var meta=_2ebb.m.getItem(this.sceneItem,"meta");
if(meta!=null){
var part=_2ebb.m.getItem(meta,"part");
if(part!=null){
return part;
}
}
if(this.id.indexOf("S")>=0){
return "main";
}
if(this.id.indexOf("L")>=0){
return "label";
}
}else{
if(this.type.CPVisEngineEquals("axis")){
return this.getAxisSubType(this.id);
}else{
if(this.type.CPVisEngineEquals("legend")){
if(this.id.indexOf("G")>=0){
var newId=this.id.substring(this.id.indexOf("LC")+2);
if(newId.indexOf("S")>=0){
return "swatch";
}
if(newId.indexOf("A")>=0){
return this.getAxisSubType(newId);
}else{
if(newId.indexOf("L")>=0){
return "label";
}else{
if(newId.indexOf("T")>=0){
return "title";
}
}
}
}else{
if(this.id.indexOf("SW")>=0){
return "swatch";
}
if(this.id.indexOf("E")>=0){
return "label";
}
if(this.id.indexOf("T")>=0){
return "title";
}
}
return "content";
}else{
if(this.type.CPVisEngineEquals("frame")){
if(this.id.indexOf("Back")>=0){
return "vis";
}
if(this.id.indexOf("Out")>=0){
return "grammar";
}
if(this.id.indexOf("L")>=0){
return "legend";
}
return "none";
}
}
}
}
return "none";
},getAxisSubType:function(id){
if(id.indexOf("Title")>=0){
return "title";
}
if(id.indexOf("T")>=0){
return "label";
}
if(id.indexOf("M")>=0){
return "mark";
}
if(id.indexOf("N")>=0){
return "minorMark";
}
if(id.indexOf("L")>=0){
return "line";
}
return "gridLine";
},getRows:function(){
if(!this.rowsCalculated){
this.rows=this.getRowsFromSceneItem(false);
if(this.rows==null&&this.vis!=null){
var _2ec1=this.aestheticFields();
var _2ec2=this.coordinateFields();
if(_2ec1!=null){
this.rows=this.vis.getMatchingRows(_2ec1,this.aestheticValues(),false);
}else{
if(_2ec2!=null){
this.rows=this.vis.getMatchingRows(_2ec2,this.coordinates(),false);
}
}
}
}
this.rowsCalculated=true;
return this.rows;
},getDataIndex:function(){
return this.dataIndex;
},setDataIndex:function(index){
this.dataIndex=index;
},getOriginalRows:function(){
if(!this.originalRowsCalculated){
this.originalRows=this.getRowsFromSceneItem(true);
this.originalRowsCalculated=true;
}
return this.originalRows;
},getRowsFromSceneItem:function(_2ec3){
var _2ec4=null;
var a=_2ec3?_2ebb.m.getItem(this.sceneItem,"orows"):null;
if(a==null){
a=_2ebb.m.getItem(this.sceneItem,"rows");
}
if(a!=null){
_2ec4=Array.create([a.length],0);
for(var i=0;i<_2ec4.length;++i){
_2ec4[i]=(a[i]);
}
}
return _2ec4;
},coordinates:function(){
return this.coords;
},coordinateFields:function(){
return this.coordFields;
},aestheticValues:function(){
return this.aesValues;
},aestheticFields:function(){
return this.aesFieldIDs;
},tooltipText:function(){
return _2ebb.m.getItem(this.sceneItem,"tooltip");
},meta:function(){
var _2ec5=_2ebb.m.getItem(this.sceneItem,"meta");
if(_2ec5==null){
return null;
}
var keys=_2ebb.m.keySet(_2ec5);
_2ebb.m.sortArray(keys);
var _2ec6="";
for(var i=0;i<keys.length;++i){
if(i>0){
_2ec6+=", ";
}
_2ec6+=keys[i]+": "+_2ebb.m.getItem(_2ec5,keys[i]);
}
return _2ec6;
},nativeObject:function(){
return null;
},elementIndex:function(){
return this.getIndexFromID("E");
},facetIndex:function(){
return this.getIndexFromID("F");
},dimensionIndex:function(){
return this.getIndexFromID("A");
},grammarIndex:function(){
return this.getIndexFromID("G");
},getHitChildren:function(){
return this.hitChildren;
},setHitChildren:function(_2ec7){
this.hitChildren=_2ec7;
},getIndexFromID:function(idKey){
var p=this.id.indexOf(idKey)+1;
if(p>0){
var a=_2ebb.m.parseDouble(this.id.substring(p,p+1));
if(_2ebc.m.isNaN(a)){
return null;
}
var b=_2ebb.m.parseDouble(this.id.substring(p,p+2));
if(_2ebc.m.isNaN(b)){
return Math.round(a);
}
var c=_2ebb.m.parseDouble(this.id.substring(p,p+3));
return Math.round(_2ebc.m.isNaN(c)?b:c);
}
return null;
}});
_2ec0.getSceneType=function(_2ec8){
if(_2ec8==null){
return "other";
}
if(_2ec8.indexOf("LC")>=0){
return "legend";
}
if(_2ec8.indexOf("E")>=0){
if(_2ec8.indexOf("S")>=0||_2ec8.indexOf("L")>=0){
return "element";
}else{
return "coordinates";
}
}
if(_2ebd.m.isCoordsId(_2ec8)){
return "coordinates";
}
if(_2ec8.indexOf("A")>=0){
return "axis";
}
return "frame";
};
_2ec0.rowsMatch=function(_2ec9,item){
if(_2ec9==null){
return true;
}
var a=_2ebb.m.getItem(item,"rows");
if(a==null){
return false;
}
var n=a.length;
for(var _2eca=0,_2ecb=_2ec9.length;_2eca<_2ecb;++_2eca){
var row=_2ec9[_2eca];
var found=false;
for(var i=0;i<n&&!found;++i){
if((a[i])==row){
found=true;
}
}
if(!found){
return false;
}
}
return true;
};
return _2ec0;
});
},"com/ibm/vis/engine/internal/nativeImpl/Set":function(){
define("com/ibm/vis/engine/internal/nativeImpl/Set",["./List","dojo/_base/declare","dojo/_base/array"],function(List,_2ecc,array){
return _2ecc("com.ibm.vis.engine.internal.nativeImpl.Set",null,{data:null,constructor:function(){
this.data=[];
},add:function(item){
if(!this.contains(item)){
this.data.push(item);
}
},addAll:function(items){
for(var i=0,len=items.size();i<len;++i){
this.add(items.get(i));
}
},remove:function(item){
var index=array.indexOf(this.data,item);
if(index>=0){
this.data.splice(index,1);
return true;
}
return false;
},removeAll:function(items){
var _2ecd=false;
for(var i=0,len=items.length;i<len;++i){
_2ecd=this.remove(items.get(i))||_2ecd;
}
return _2ecd;
},clear:function(){
this.data=[];
},size:function(){
return this.data.length;
},contains:function(item){
return array.indexOf(this.data,item)>-1;
},toArray:function(){
return this.data.slice();
},isEmpty:function(){
return this.data.length==0;
},get:function(idx){
return this.data[idx];
}});
});
},"com/ibm/vis/engine/internal/grammar/coordinate/functions/MaxOperation":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/functions/MaxOperation",["./CompositeOperation","com/ibm/init/statics","dojo/_base/declare"],function(_2ece,_2ecf,_2ed0){
var _2ed1=_2ed0("com.ibm.vis.engine.internal.grammar.coordinate.functions.MaxOperation",[_2ece],{combineValues:function(y1,y2){
return Math.max(y1,y2);
}});
return _2ed1;
});
},"com/ibm/vis/interaction/SceneState":function(){
define("com/ibm/vis/interaction/SceneState",["com/ibm/init/fork!../engine/internal/nativeImpl/Map","com/ibm/init/fork!../engine/internal/nativeImpl/List","com/ibm/init/fork!./internal/SceneItemImpl","com/ibm/init/fork!../engine/internal/nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_2ed2,_2ed3,_2ed4,_2ed5,_2ed6,_2ed7){
var _2ed8=_2ed7("com.ibm.vis.interaction.SceneState",null,{scene:null,sceneTreeMap:null,effectsItemMap:null,selectedMap:null,constructor:function(){
this.selectedMap=new _2ed2.m();
},setScene:function(scene){
this.scene=scene;
this.sceneTreeMap=null;
this.effectsItemMap=null;
this.selectedMap=new _2ed2.m();
},getSelected:function(key){
var _2ed9=this.selectedMap.get(key);
if(_2ed9==null||_2ed9.size()<1){
return new Array(0);
}
var map=this.getSceneTreeMap();
var _2eda=new _2ed3.m();
for(var _2edb=0,_2edc=_2ed9.size();_2edb<_2edc;++_2edb){
var _2edd=_2ed9.get(_2edb);
var item=map.get(_2edd);
if(item!=null){
_2eda.add(new _2ed4.m(item));
}
}
var _2ede=_2eda.toArray(new Array(_2eda.size()));
return _2ede;
},getById:function(id){
var base=this.getSceneJSONById(id);
if(base==null){
return null;
}
return new _2ed4.m(base);
},getSceneJSONById:function(id){
return this.getSceneTreeMap().get(id);
},setSelectedIds:function(ids,key){
if(ids==null||ids.size()<1){
this.selectedMap.remove(key);
return;
}
this.selectedMap.put(key,ids);
},getSelectedIds:function(key){
return this.selectedMap.get(key);
},setSelected:function(_2edf,key){
if(_2edf==null||_2edf.length<1){
this.selectedMap.remove(key);
return;
}
var ids=new _2ed3.m();
for(var _2ee0=0,_2ee1=_2edf.length;_2ee0<_2ee1;++_2ee0){
var item=_2edf[_2ee0];
if(item!=null){
var id=(item).id;
if(id!=null){
ids.add(id);
}
}
}
this.selectedMap.put(key,ids);
},getSceneTreeMap:function(){
if(this.sceneTreeMap==null){
this.makeSceneTreeMap();
}
return this.sceneTreeMap;
},makeSceneTreeMap:function(){
this.sceneTreeMap=new _2ed2.m();
this.effectsItemMap=new _2ed2.m();
if(this.scene==null){
return;
}
var size=this.scene.length;
for(var i=0;i<size;++i){
var child=this.scene[i];
this.addItemToMap(child);
}
},addItemToMap:function(item){
var id=_2ed5.m.getItem(item,"id");
if(id!=null){
if(id.charAt(0)=="_"){
this.effectsItemMap.put(id,item);
}else{
this.sceneTreeMap.put(id,item);
}
}
var _2ee2=_2ed5.m.getItem(item,"children");
if(_2ee2==null){
return;
}
var size=_2ee2.length;
for(var i=0;i<size;++i){
var child=_2ee2[i];
this.addItemToMap(child);
}
},getScene:function(){
return this.scene;
}});
return _2ed8;
});
},"com/ibm/vis/engine/internal/data/transform/Summary":function(){
define("com/ibm/vis/engine/internal/data/transform/Summary",["./Transform","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../nativeImpl/WebEngineException","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../grammar/units/Unit","com/ibm/init/statics","dojo/_base/declare"],function(_2ee3,_2ee4,_2ee5,_2ee6,_2ee7,_2ee8,_2ee9){
var _2eea=_2ee9("com.ibm.vis.engine.internal.data.transform.Summary",[_2ee3],{base:null,nameField:null,strings:null,constructor:function(_2eeb,_2eec,_2eed,base){
this.base=base;
this.strings=new _2ee4.m();
},getRowsCreated:function(){
return 1;
},setValues:function(input,_2eee,_2eef,start,_2ef0){
for(var _2ef1=0,_2ef2=this.outputs,_2ef3=_2ef2.size();_2ef1<_2ef3;++_2ef1){
var def=_2ef2.get(_2ef1);
var value=this.makeValue(def,_2eee,input);
for(var i=start;i<start+_2ef0;++i){
_2eef[i].data[def.outputIndex]=value;
}
}
},makeValue:function(def,list,rows){
var func=def.parameters.summaryFunction;
if(func==null||func.CPVisEngineEquals("count")){
var n=0;
for(var index=0;index<list.size();++index){
var i=list.get(index);
var _2ef4=this.getWeight(rows[i]);
if(def.inputIndex>=0&&def.inputIndex<rows[i].data.length){
var _2ef5=rows[i].data[def.inputIndex];
if(_2ef5!=null){
n+=_2ef4;
}
}else{
n+=_2ef4;
}
}
return n;
}else{
if("uniques".CPVisEngineEquals(func)){
this.nameField=this.base.fields[def.inputIndex];
return this.makeIndexedString(list,rows);
}
}
var s=null;
var n=0;
for(var index=0;index<list.size();++index){
var i=list.get(index);
var w=this.getWeight(rows[i]);
var v=rows[i].data[def.inputIndex];
if(w<=0||v==null){
continue;
}
n+=w;
if("sum".CPVisEngineEquals(func)||"mean".CPVisEngineEquals(func)){
if(s==null){
s=0;
}
s+=w*v;
}else{
if("min".CPVisEngineEquals(func)){
if(s==null){
s=v;
}else{
s=Math.min(s,v);
}
}else{
if("max".CPVisEngineEquals(func)){
if(s==null){
s=v;
}else{
s=Math.max(s,v);
}
}else{
if("percent".CPVisEngineEquals(func)){
s=1;
}else{
throw new _2ee5.m("Unsupported summary: "+func);
}
}
}
}
}
if("mean".CPVisEngineEquals(func)){
return ((n==0)||(s==null))?null:s/n;
}
return s;
},makeIndexedString:function(list,rows){
var items=new _2ee4.m();
for(var index=0;index<list.size();++index){
var i=list.get(index);
var v=rows[i].data[this.nameField.index];
if(v!=null){
items.put(v,v);
}
}
var array=new Array(items.size());
var n=0;
for(var _2ef6=0,_2ef7=items.keySet(),_2ef8=_2ef7.size();_2ef6<_2ef8;++_2ef6){
var _2ef9=_2ef7.get(_2ef6);
array[n++]=Math.round(_2ef9);
}
_2ee6.m.sortArray(array);
var _2efa=null;
var added=0;
for(var _2efb=0,_2efc=array.length;_2efb<_2efc;++_2efb){
var i=array[_2efb];
var v=this.nameField.getFormattedStringValue(i,i);
if(_2efa==null){
_2efa=v;
}else{
if(v!=null){
_2efa=_2efa+(added++%4==0?"\n":", ")+v;
}
}
}
if(_2efa==null){
return null;
}
var r=this.strings.get(_2efa);
if(r==null){
r=this.strings.size();
this.strings.put(_2efa,r);
}
return r;
},getUnit:function(){
return _2ee7.m.COUNT;
},finishFieldDefinitions:function(_2efd){
for(var _2efe=0,_2eff=this.outputs,_2f00=_2eff.size();_2efe<_2f00;++_2efe){
var _2f01=_2eff.get(_2efe);
if("uniques".CPVisEngineEquals(_2f01.parameters.summaryFunction)){
var f=_2efd[_2f01.outputIndex];
f.categories=new Array(this.strings.size());
for(var _2f02=0,_2f03=this.strings.keySet(),_2f04=_2f03.size();_2f02<_2f04;++_2f02){
var s=_2f03.get(_2f02);
var n=this.strings.get(s);
f.categories[n]=s;
}
}
}
}});
_2ee8.add("com/ibm/vis/engine/internal/data/transform/Summary",["com/ibm/vis/engine/internal/data/transform/Transform"],function(){
_2eea.NEWLINE="\n";
_2eea.COMMA=", ";
_2eea.PERCENT="percent";
_2eea.MAX="max";
_2eea.MIN="min";
_2eea.MEAN="mean";
_2eea.SUM="sum";
_2eea.UNIQUES="uniques";
_2eea.COUNT="count";
});
return _2eea;
});
},"com/ibm/vis/engine/internal/struct/ShapeFactory":function(){
define("com/ibm/vis/engine/internal/struct/ShapeFactory",["com/ibm/init/fork!../nativeImpl/StringBuilder","com/ibm/init/fork!./Point","com/ibm/init/fork!./PolyGeom","com/ibm/init/fork!../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_2f05,_2f06,_2f07,_2f08,_2f09,_2f0a){
var _2f0b=_2f0a("com.ibm.vis.engine.internal.struct.ShapeFactory",null,{});
_2f0b.areEqualAngles=function(a0,a1,tol){
var dA=Math.abs(a0-a1)%(2*3.141592653589793);
return dA<=tol||dA>=2*3.141592653589793-tol;
};
_2f0b.makeArcPath=function(cx,cy,r,a1,a2){
var b=new _2f05.m();
_2f0b.addCoord(b,"M",cx+r*Math.cos(a1),cy+r*Math.sin(a1));
_2f0b.addArc(b,cx,cy,r,a1,a2);
return b.toString();
};
_2f0b.isArcPath=function(x0,y0,x1,y1,x2,y2,x3,y3){
var xp=0.125*x0+0.375*x1+0.375*x2+0.125*x3;
var yp=0.125*y0+0.375*y1+0.375*y2+0.125*y3;
var num=0.5*((x3-xp)*(x0-xp)-(y3-yp)*(yp-y0));
var den=(x0-x3)*(yp-y0)-(y3-y0)*(x0-xp);
if(den==0){
return null;
}
var T=num/den;
var cx=0.5*(x0+x3)+T*(y3-y0);
var cy=0.5*(y0+y3)+T*(x0-x3);
var _2f0c=new _2f06.m(cx,cy);
var p0=new _2f06.m(x0,y0);
var p3=new _2f06.m(x3,y3);
var _2f0d=_2f0c.dist(p0);
var tol=0.001*_2f0d;
if(Math.abs(_2f0c.dist(p3)-_2f0d)>tol){
return null;
}
if(Math.abs(_2f0c.dist(new _2f06.m(xp,yp))-_2f0d)>tol){
return null;
}
xp=(27/64)*x0+(27/64)*x1+(9/64)*x2+(1/64)*x3;
yp=(27/64)*y0+(27/64)*y1+(9/64)*y2+(1/64)*y3;
if(Math.abs(_2f0c.dist(new _2f06.m(xp,yp))-_2f0d)>tol){
return null;
}
xp=(1/64)*x0+(9/64)*x1+(27/64)*x2+(27/64)*x3;
yp=(1/64)*y0+(9/64)*y1+(27/64)*y2+(27/64)*y3;
if(Math.abs(_2f0c.dist(new _2f06.m(xp,yp))-_2f0d)>tol){
return null;
}
var a1=_2f0c.angle(p0);
var a2=_2f0c.angle(p3);
if(Math.abs(a2-a1)>3.141592653589793/2+0.05){
if(a1<a2){
a2-=2*3.141592653589793;
}else{
a2+=2*3.141592653589793;
}
}
return [cx,cy,_2f0d,a1,a2];
};
_2f0b.makePolyPath=function(x,y,_2f0e){
var b=new _2f05.m();
var next="M";
for(var i=0;i<x.length;++i){
if(Math.abs(x[i])<100000000000000000000&&Math.abs(y[i])<100000000000000000000){
_2f0b.addCoord(b,next,x[i],y[i]);
next="L";
}else{
if(_2f0e&&(next=="L")){
b.append("Z");
}
next="M";
}
}
if(_2f0e&&(next=="L")){
b.append("Z");
}
return b.toString();
};
_2f0b.makeToroidSectionPath=function(cx,cy,r1,r2,a1,a2){
var b=new _2f05.m();
var _2f0f=Math.abs(a2-a1)>(2*3.141592653589793-0.001);
if(_2f0f){
if(a2>a1){
a2=a1+2*3.141592653589793;
}else{
a2=a1-2*3.141592653589793;
}
}
_2f0b.addCoord(b,"M",cx+r1*Math.cos(a1),cy+r1*Math.sin(a1));
_2f0b.addArc(b,cx,cy,r1,a1,a2);
if(_2f0f){
_2f0b.addCoord(b,"M",cx+r2*Math.cos(a2),cy+r2*Math.sin(a2));
}else{
_2f0b.addCoord(b,"L",cx+r2*Math.cos(a2),cy+r2*Math.sin(a2));
}
_2f0b.addArc(b,cx,cy,r2,a2,a1);
if(!_2f0f){
b.append("Z");
}
return b.toString();
};
_2f0b.makeInsetToroidSectionPath=function(cx,cy,r1,r2,a1,a2,d){
if(d<=0){
return _2f0b.makeToroidSectionPath(cx,cy,r1,r2,a1,a2);
}
r1+=d;
r2-=d;
var _2f10=Math.abs(a2-a1)>(2*3.141592653589793-0.001);
if(_2f10){
return _2f0b.makeToroidSectionPath(cx,cy,r1,r2,a1,a2);
}
var b=new _2f05.m();
var _2f11=Math.abs(a2-a1)/2;
var _2f12=Math.min(Math.asin(d/r1),_2f11);
var _2f13=Math.min(Math.asin(d/r2),_2f11);
if(a2<a1){
_2f12=-_2f12;
_2f13=-_2f13;
}
_2f0b.addCoord(b,"M",cx+r1*Math.cos(a1+_2f12),cy+r1*Math.sin(a1+_2f12));
_2f0b.addArc(b,cx,cy,r1,a1+_2f12,a2-_2f12);
_2f0b.addCoord(b,"L",cx+r2*Math.cos(a2-_2f13),cy+r2*Math.sin(a2-_2f13));
_2f0b.addArc(b,cx,cy,r2,a2-_2f13,a1+_2f13);
b.append("Z");
return b.toString();
};
_2f0b.isWedgePath=function(path){
var pg=_2f07.m.makePolyGeom(path);
var len=pg.types.length;
if(len<3||pg.types[0]!="M"){
return null;
}
if(len==3){
if(pg.types[1]=="L"&&pg.types[2]=="Z"){
var p0=new _2f06.m(pg.x[0],pg.y[0]);
var p1=new _2f06.m(pg.x[1],pg.y[1]);
var r2=p0.dist(p1);
var a1=p0.angle(p1);
return [p0.x,p0.y,0,r2,a1,a1];
}
return null;
}
var _2f14=pg.types[len-1]=="Z";
if(_2f14){
len--;
}
if(pg.types[1]!="M"&&pg.types[1]!="L"&&pg.types[1]!="C"){
return null;
}
var _2f15=1;
while(_2f15<len&&pg.types[_2f15]=="C"){
_2f15+=3;
}
if(_2f15>=len||(pg.types[_2f15]!="M"&&pg.types[_2f15]!="L")){
return null;
}
if(_2f14!=(pg.types[_2f15]=="L")){
return null;
}
if(len-_2f15!=4&&len-_2f15!=7&&len-_2f15!=10&&len-_2f15!=13){
return null;
}
var _2f16=(len-_2f15-1)/3;
var arcs=new Array(_2f16);
for(var i=0;i<_2f16;++i){
var _2f17=_2f15+1+3*i;
if(pg.types[_2f17]!="C"){
return null;
}
arcs[i]=_2f0b.isArcPath(pg.x[_2f17-1],pg.y[_2f17-1],pg.x[_2f17],pg.y[_2f17],pg.x[_2f17+1],pg.y[_2f17+1],pg.x[_2f17+2],pg.y[_2f17+2]);
if(arcs[i]==null){
return null;
}
}
var _2f18=_2f0b.areWedgeArcs(arcs);
if(_2f18==null){
return null;
}
var r1=(new _2f06.m(_2f18[0],_2f18[1])).dist(new _2f06.m(pg.x[0],pg.y[0]));
var a1=_2f18[4];
var a2=_2f18[3];
var _2f19=arcs[_2f16-1][4]-arcs[_2f16-1][3]<0;
if(!_2f14){
if(!_2f0b.areEqualAngles(a1,a2,0.01)){
return null;
}
if(_2f19){
a2=a1+2*3.141592653589793;
}else{
a2=a1-2*3.141592653589793;
}
}else{
if(_2f19){
if(a2<a1){
a2+=2*3.141592653589793;
}
}else{
if(a2>a1){
a2-=2*3.141592653589793;
}
}
}
return [_2f18[0],_2f18[1],r1,_2f18[2],a1,a2];
};
_2f0b.areWedgeArcs=function(arcs){
var len=arcs.length;
if(len==1){
return arcs[0];
}
var cx=0;
var cy=0;
var r=0;
for(var i=0;i<len;++i){
if(arcs[i]==null){
return null;
}
cx+=arcs[i][0];
cy+=arcs[i][1];
r+=arcs[i][2];
}
cx/=len;
cy/=len;
r/=len;
var _2f1a=new _2f06.m(cx,cy);
for(var i=0;i<len;++i){
if(_2f1a.dist(new _2f06.m(arcs[i][0],arcs[i][1]))>1||Math.abs(r-arcs[i][2])>1){
return null;
}
}
return [cx,cy,r,arcs[0][3],arcs[len-1][4]];
};
_2f0b.makeRoundedRectanglePath=function(x,y,width,_2f1b,r){
var b=new _2f05.m();
if(r<0){
r=0;
}else{
if(r>Math.min(width,_2f1b)/2){
r=Math.min(width,_2f1b)/2;
}
}
var x2=x+width;
var y2=y+_2f1b;
_2f0b.addCoord(b,"M",x,y+r);
_2f0b.addArc(b,x+r,y+r,r,3.141592653589793,1.5*3.141592653589793);
_2f0b.addCoord(b,"L",x2-r,y);
_2f0b.addArc(b,x2-r,y+r,r,1.5*3.141592653589793,2*3.141592653589793);
_2f0b.addCoord(b,"L",x2,y2-r);
_2f0b.addArc(b,x2-r,y2-r,r,0,0.5*3.141592653589793);
_2f0b.addCoord(b,"L",x+r,y2);
_2f0b.addArc(b,x+r,y2-r,r,0.5*3.141592653589793,3.141592653589793);
b.append("Z");
return b.toString();
};
_2f0b.isRoundedRectanglePath=function(path){
var p=_2f07.m.makePolyGeom(path);
var _2f1c,_2f1d,_2f1e,_2f1f;
var types;
if(p.types.length==5){
if(p.x.length!=5||p.y.length!=5){
return null;
}
types=["M","L","L","L","Z"];
_2f1c=0;
_2f1d=1;
_2f1e=2;
_2f1f=3;
}else{
if(p.types.length==17){
if(p.x.length!=17||p.y.length!=17){
return null;
}
types=["M","C",",",",","L","C",",",",","L","C",",",",","L","C",",",",","Z"];
_2f1c=0;
_2f1d=4;
_2f1e=8;
_2f1f=12;
}else{
return null;
}
}
for(var i=0;i<types.length;++i){
if(types[i]!=p.types[i]){
return null;
}
}
var x=p.x[_2f1c];
var y=p.y[_2f1d];
var w=p.x[_2f1e]-x;
var h=p.y[_2f1f]-y;
var r=p.y[_2f1c]-y;
var testR=x+w-p.x[_2f1d];
if(Math.abs(r-testR)>0.002){
return null;
}
testR=y+h-p.y[_2f1e];
if(Math.abs(r-testR)>0.002){
return null;
}
testR=p.x[_2f1f]-x;
if(Math.abs(r-testR)>0.002){
return null;
}
return [x,y,w,h,r];
};
_2f0b.addArc=function(b,cx,cy,r,a1,a2){
var dA=Math.abs(a1-a2);
if(r<0.001||dA<0.001){
return;
}
var nseg=Math.ceil((dA-0.01)/(3.141592653589793/2));
if(nseg<1){
nseg=1;
}
if(nseg>4){
nseg=4;
}
var phi=(a1-a2)/(2*nseg);
var _2f20=Math.cos(phi);
var _2f21=Math.sin(phi);
var _2f22=[[(4-_2f20)/3,(1-_2f20)*(3-_2f20)/(3*_2f21)],[(4-_2f20)/3,-(1-_2f20)*(3-_2f20)/(3*_2f21)],[_2f20,-_2f21]];
var _2f23=a1;
for(var i=0;i<nseg;++i){
var cos=Math.cos(phi-_2f23);
var sin=Math.sin(phi-_2f23);
for(var p=0;p<3;++p){
var x,y;
if(i==nseg-1&&p==2){
x=cx+r*Math.cos(a2);
y=cy+r*Math.sin(a2);
}else{
x=cx+r*(cos*_2f22[p][0]+sin*_2f22[p][1]);
y=cy+r*(-sin*_2f22[p][0]+cos*_2f22[p][1]);
}
_2f0b.addCoord(b,(p==0)?"C":",",x,y);
}
_2f23-=2*phi;
}
};
_2f0b.addCoord=function(b,type,x,y){
b.append(type);
b.append(_2f08.m.r3(x));
b.append(",");
b.append(_2f08.m.r3(y));
};
return _2f0b;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/AestheticPalette":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/AestheticPalette",["com/ibm/init/statics","dojo/_base/declare"],function(_2f24,_2f25){
var _2f26=_2f25("com.ibm.vis.engine.internal.grammar.aesthetic.AestheticPalette",null,{paletteItems:null,constructor:function(_2f27,spec){
var _2f28=spec.palette;
this.paletteItems=new Array(_2f28.length);
for(var i=0;i<this.paletteItems.length;++i){
this.paletteItems[i]=_2f27.forPalette(_2f28[i]);
}
},getPaletteItem:function(i){
return this.paletteItems[i];
},getPaletteSize:function(){
return this.paletteItems.length;
}});
_2f26.makePalette=function(_2f29,spec){
if(spec.palette==null){
return null;
}else{
return new _2f26(_2f29,spec);
}
};
return _2f26;
});
},"com/ibm/vis/engine/internal/legend/DefaultLegendFactory":function(){
define("com/ibm/vis/engine/internal/legend/DefaultLegendFactory",["../../../extension/ExtensionFactory","com/ibm/init/fork!../../../extension/internal/RAVEExtensionManager","com/ibm/init/fork!./ColorGradientStripLegend","com/ibm/init/fork!./ContinuousLineStripLegend","com/ibm/init/fork!./StaggerSwatchLegend","com/ibm/init/fork!./HorizontalSwatchLegend","com/ibm/init/fork!./VerticalSwatchLegend","com/ibm/init/statics","dojo/_base/declare"],function(_2f2a,_2f2b,_2f2c,_2f2d,_2f2e,_2f2f,_2f30,_2f31,_2f32){
var _2f33=_2f32("com.ibm.vis.engine.internal.legend.DefaultLegendFactory",[_2f2a],{newInstance:function(name,_2f34){
if(!"defaultLegend".CPVisEngineEquals(name)){
return null;
}
var _2f35=_2f34;
var _2f36=_2f35[0];
var vis=_2f35[1];
var _2f37=_2f35[2];
var _2f38=_2f35[3];
if(_2f36==null){
return null;
}
if("continuous".CPVisEngineEquals(_2f36.method)){
return new _2f2c.m(_2f36,_2f38,_2f37,vis);
}else{
if("axis".CPVisEngineEquals(_2f36.method)){
return new _2f2d.m(_2f36,_2f38,_2f37,vis);
}else{
if("stagger".CPVisEngineEquals(_2f36.method)){
return new _2f2e.m(_2f36,_2f38,_2f37,vis);
}else{
if("horizontal".CPVisEngineEquals(_2f36.orientation)){
return new _2f2f.m(_2f36,_2f38,_2f37,vis);
}else{
return new _2f30.m(_2f36,_2f38,_2f37,vis);
}
}
}
}
}});
_2f33.registerExtensions=function(){
if(!_2f33.initialized){
_2f33.initialized=true;
_2f2b.m.INSTANCE.registerDefaultFactory(new _2f33());
}
};
_2f31.add("com/ibm/vis/engine/internal/legend/DefaultLegendFactory",["com/ibm/vis/extension/ExtensionFactory","com/ibm/vis/extension/internal/RAVEExtensionManager"],function(){
_2f33.initialized=false;
});
return _2f33;
});
},"com/ibm/vis/engine/internal/MirrorScene":function(){
define("com/ibm/vis/engine/internal/MirrorScene",["com/ibm/init/fork!./nativeImpl/BasicFactory","com/ibm/init/fork!./util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_2f39,_2f3a,_2f3b,_2f3c){
var _2f3d=_2f3c("com.ibm.vis.engine.internal.MirrorScene",null,{width:0,constructor:function(width){
this.width=width;
},process:function(scene){
for(var _2f3e=0,_2f3f=scene.length;_2f3e<_2f3f;++_2f3e){
var o=scene[_2f3e];
this.applyTopLevelMirrorTransform(o);
this.reverseChildTextItems(o);
}
},applyTopLevelMirrorTransform:function(o){
var t=this.getShapeTransform(o);
var dx=_2f39.m.getItem(t,"dx");
if(dx==null){
_2f39.m.put(t,"dx",_2f3a.m.r3(this.width));
}else{
_2f39.m.put(t,"dx",_2f3a.m.r3(this.width-dx));
}
var _2f40=_2f39.m.getItem(t,"xx");
var _2f41=1;
if(_2f40!=null&&_2f39.m.isNumber(_2f40)){
_2f41=_2f40;
}
_2f39.m.put(t,"xx",-1*_2f41);
},reverseChildTextItems:function(o){
var _2f42=_2f39.m.getItem(o,"children");
if(_2f42!=null){
var n=_2f42.length;
for(var i=0;i<n;++i){
this.reverseChildTextItems(_2f42[i]);
}
}
var shape=_2f39.m.getItem(o,"shape");
var type=_2f39.m.getItem(shape,"type");
if("text".CPVisEngineEquals(type)){
var align=_2f39.m.getItem(shape,"align");
if("end".CPVisEngineEquals(align)){
_2f39.m.put(shape,"align","start");
}else{
if(!"middle".CPVisEngineEquals(align)){
_2f39.m.put(shape,"align","end");
}
}
this.applyTextMirrorTransform(o);
var x=_2f39.m.getItem(shape,"x");
_2f39.m.put(shape,"x",-x);
}
},applyTextMirrorTransform:function(o){
var t=this.getShapeTransform(o);
var xx=_2f39.m.getItem(t,"xx");
if(xx==null){
xx=1;
}
_2f39.m.put(t,"xx",-xx);
var yx=_2f39.m.getItem(t,"yx");
if(yx!=null){
_2f39.m.put(t,"yx",-yx);
}
},getShapeTransform:function(o){
var t=_2f39.m.getItem(o,"transform");
if(t==null){
t=_2f39.m.createJSONObject();
_2f39.m.put(o,"transform",t);
}
return t;
}});
return _2f3d;
});
},"com/ibm/vis/engine/internal/data/Row":function(){
define("com/ibm/vis/engine/internal/data/Row",["com/ibm/init/statics","dojo/_base/declare"],function(_2f43,_2f44){
var Row=_2f44("com.ibm.vis.engine.internal.data.Row",null,{data:null,originalRows:null,index:0,constructor:function(base,_2f45){
this.data=base;
this.index=_2f45;
}});
Row.createRow=function(base,_2f46){
return new Row(base,_2f46);
};
Row.createEmptyRow=function(_2f47,_2f48){
return Row.createRow(new Array(_2f47),_2f48);
};
return Row;
});
},"com/ibm/vis/engine/internal/grammar/scale/MultiplierInfo":function(){
define("com/ibm/vis/engine/internal/grammar/scale/MultiplierInfo",["com/ibm/init/statics","dojo/_base/declare"],function(_2f49,_2f4a){
var _2f4b=_2f4a("com.ibm.vis.engine.internal.grammar.scale.MultiplierInfo",null,{multiplier:0,coverage:0,gapCount:0,constructor:function(range,base,_2f4c,_2f4d){
this.multiplier=_2f4c;
var delta=_2f4c*base;
var n1=Math.floor(range.min/delta);
if(!_2f4d&&delta*n1<range.min){
n1++;
}
var n2=Math.floor(range.max/delta);
if(_2f4d&&range.max>delta*n2){
n2++;
}
if(n2<=n1){
this.gapCount=0;
this.coverage=999;
}else{
this.gapCount=n2-n1;
var c=range.range/((n2-n1)*delta);
if(c>1){
this.coverage=c-1;
}else{
this.coverage=1/c-1;
}
}
},isBetterThan:function(other,_2f4e,_2f4f){
if(this.gapCount!=other.gapCount){
if(this.gapCount>_2f4f){
return this.gapCount<other.gapCount;
}else{
if(other.gapCount>_2f4f){
return true;
}
}
}
if(Math.abs(this.coverage-other.coverage)>0.3){
return this.coverage<other.coverage;
}
var gapA=this.gapCount-_2f4e;
var gapB=other.gapCount-_2f4e;
if(gapA<0){
gapA=-2.1*gapA;
}
if(gapB<0){
gapB=-2.1*gapB;
}
if(gapA!=gapB){
return gapA<gapB;
}
return this.coverage<other.coverage;
}});
return _2f4b;
});
},"com/ibm/vis/engine/internal/VisContext":function(){
define("com/ibm/vis/engine/internal/VisContext",["com/ibm/init/fork!./nativeImpl/PlatformDefaults","com/ibm/init/fork!../../monitor/Logger","com/ibm/init/fork!./FormatContext","com/ibm/init/fork!./scene/ObjectMap","com/ibm/init/fork!./globalization/NumericShapingInfo","com/ibm/init/fork!./nativeImpl/WebEngineException","com/ibm/init/statics","dojo/_base/declare"],function(_2f50,_2f51,_2f52,_2f53,_2f54,_2f55,_2f56,_2f57){
var _2f58=_2f57("com.ibm.vis.engine.internal.VisContext",null,{logContext:null,formatContext:null,visId:null,objectMap:null,usesFractionalMetrics:false,localizationSpec:null,shapingInfo:null,nativeStringMeasuring:null,constructor:function(id){
this.nativeStringMeasuring="NATIVE";
this.usesFractionalMetrics=_2f50.m.usesFractionalMetrics;
this.logContext=new _2f51.m();
this.visId=id;
this.formatContext=new _2f52.m(this);
this.objectMap=new _2f53.m();
},setLocalization:function(spec){
if(this.localizationSpec==spec){
return;
}
this.localizationSpec=spec;
this.updateNumericalShapingInfo();
},getLocalizationSpec:function(){
return this.localizationSpec;
},updateNumericalShapingInfo:function(){
this.shapingInfo=_2f54.m.getShapingInfo(this.localizationSpec);
},getNumericShapingInfo:function(){
if(this.shapingInfo==null){
this.shapingInfo=_2f54.m.getShapingInfo(this.localizationSpec);
}
return this.shapingInfo;
},setNativeStringMeasuring:function(flag){
if(!flag.CPVisEngineEquals("NATIVE")&&!flag.CPVisEngineEquals("PRECOMPUTED")){
throw new _2f55.m("setNativeStringMeasuring: Accepted values are \"NATIVE\" or \"PRECOMPUTED\"");
}
this.nativeStringMeasuring=flag;
}});
_2f56.add("com/ibm/vis/engine/internal/VisContext",[],function(){
_2f58.PRECOMPUTED="PRECOMPUTED";
_2f58.NATIVE="NATIVE";
});
return _2f58;
});
},"com/ibm/vis/engine/internal/grammar/layout/SwimlaneLayout":function(){
define("com/ibm/vis/engine/internal/grammar/layout/SwimlaneLayout",["./Layout","com/ibm/init/fork!../../../../exceptions/EngineException","com/ibm/init/fork!../../../../exceptions/ErrorCode","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../struct/Rect","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_2f59,_2f5a,_2f5b,_2f5c,_2f5d,_2f5e,_2f5f,_2f60){
var _2f61=_2f60("com.ibm.vis.engine.internal.grammar.layout.SwimlaneLayout",[_2f59],{layerField:null,sizeField:null,constructor:function(_2f62){
var spec=_2f62.getSpec();
this.layerField=spec.layer.$ref;
this.sizeField=spec.size==null?null:(spec.size).$ref;
},makeShapes:function(_2f63,_2f64){
var order=this.getItemsOrder(_2f63);
var _2f65=this.adapter.getSharedLayoutInfo().getGraphLayerRanges();
if(_2f65==null){
throw new _2f5a.m("SwimlaneLayout",_2f5b.m.SWIM_LANE_ELEMENT_ORDER,"Swim lane element must be defined AFTER a graph layout which it will be based on",null);
}
var items=new _2f5c.m();
var _2f66=0;
for(var _2f67=0,_2f68=order.length;_2f67<_2f68;++_2f67){
var _2f69=order[_2f67];
if(this.adapter.getFieldNumericValue(this.layerField,_2f69)==null){
continue;
}
var _2f6a=1;
if(this.sizeField!=null){
var val=this.adapter.getFieldNumericValue(this.sizeField,_2f69);
if(val!=null){
_2f6a=Math.round(val);
}
}
if(_2f6a<1||_2f66+_2f6a>_2f65.length){
throw new _2f5a.m("SwimlaneLayout",_2f5b.m.SWIM_LANE_DATA,"Swim lane count and sizes must not exceed layers defined in the graph layout",null);
}
var _2f6b=this.makeSwimlaneBounds(_2f64,_2f65,_2f66,_2f6a);
items.add(this.adapter.makeItemInRect(_2f6b,_2f69));
_2f66+=_2f6a;
}
return items;
},makeSwimlaneBounds:function(_2f6c,_2f6d,_2f6e,_2f6f){
var _2f70=_2f6d[_2f6e];
for(var j=1;j<_2f6f;++j){
var range=_2f6d[_2f6e+j];
_2f70=_2f70.unionValue(range.min).unionValue(range.max);
}
var _2f71;
if(this.adapter.isSwapXY()){
_2f71=new _2f5d.m(_2f70.min*_2f6c.width,0,_2f70.range*_2f6c.width,_2f6c.height);
}else{
_2f71=new _2f5d.m(0,_2f6c.height*(1-_2f70.max),_2f6c.width,_2f70.range*_2f6c.height);
}
return _2f71;
},getItemsOrder:function(_2f72){
var _2f73=Array.create([_2f72],0);
for(var i=0;i<_2f72;++i){
var _2f74=this.adapter.getFieldNumericValue(this.layerField,i);
_2f73[i]=_2f74==null?5e-324:_2f74;
}
return _2f5e.m.makeSortOrder(_2f73);
}});
return _2f61;
});
},"com/ibm/vis/actions/internal/ZoomAction":function(){
define("com/ibm/vis/actions/internal/ZoomAction",["com/ibm/init/fork!../../engine/internal/nativeImpl/List","com/ibm/init/fork!../../engine/internal/nativeImpl/Map","com/ibm/init/fork!../../engine/internal/nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_2f75,_2f76,_2f77,_2f78,_2f79){
var _2f7a=_2f79("com.ibm.vis.actions.internal.ZoomAction",null,{grammar:null,vc:null,constructor:function(_2f7b){
this.grammar=_2f7b;
this.vc=_2f7b.vis.visContext;
},zoomToCoordinatesWithDataFilter:function(p1,p2,_2f7c,unit){
if(p1==null||p2==null){
return;
}
var _2f7d=this.grammar.gSpec.coordinates.dimensions;
var _2f7e=this.grammar.elements;
var _2f7f=this.cacheElementDataRows(_2f7e);
for(var i=0;i<_2f7d.length;++i){
var span=new Object();
if(p1[i]!=null&&p2[i]!=null){
if(_2f7c){
var _2f80=new _2f75.m();
for(var j=0;j<_2f7e.length;++j){
var _2f81=_2f7a.getSortColumnIndex(_2f7e[j],i);
if(_2f81!=-1){
this.filterElementDataRows(p1[i],p2[i],_2f81,_2f7e[j].data.id,_2f80,_2f7f);
}
}
_2f80.clear();
}
span.min=p1[i];
span.max=p2[i];
span.unit=unit;
var scale=new Object();
scale.spans=[span];
_2f7d[i].scale=scale;
}
}
_2f7f.clear();
},filterElementDataRows:function(p1,p2,_2f82,_2f83,_2f84,_2f85){
var _2f86,_2f87;
if(!_2f84.contains(_2f83)){
var rows=this.vc.objectMap.retrieveObject(_2f83);
if(rows!=null&&rows.length>0){
var _2f88=this.getNumberArrayFromRow(rows);
_2f86=this.getStartIndexOfDataForZoomStartPoint(_2f88,_2f82,p1);
_2f87=this.getEndIndexOfDataForZoomEndPoint(_2f88,_2f82,p2);
var _2f89=new _2f75.m();
for(var j=_2f86;j<=_2f87;++j){
_2f89.add(_2f88[j]);
}
var _2f8a=_2f85.get(_2f83);
var size=_2f89.size();
this.grammar.vis.currentSpec.data[_2f8a].rows=_2f89.toArray(new Array(size));
_2f84.add(_2f83);
}
}
},getNumberArrayFromRow:function(rows){
var _2f8b=new Array(rows.length);
for(var i=0;i<rows.length;++i){
_2f8b[i]=rows[i].data;
}
return _2f8b;
},getStartIndexOfDataForZoomStartPoint:function(_2f8c,_2f8d,_2f8e){
var _2f8f;
var temp=_2f8c[0][_2f8d];
if(_2f8e<temp){
_2f8e=temp;
}
_2f8f=this.getZoomBounds(_2f8c,_2f8e,_2f8d);
temp=_2f8c[_2f8f][_2f8d];
if(_2f8f>0&&temp>_2f8e){
_2f8f--;
}
return _2f8f;
},getEndIndexOfDataForZoomEndPoint:function(_2f90,_2f91,_2f92){
var _2f93;
var temp=_2f90[_2f90.length-1][_2f91];
if(_2f92>temp){
_2f92=temp;
}
_2f93=this.getZoomBounds(_2f90,_2f92,_2f91);
temp=_2f90[_2f93][_2f91];
if(_2f93<_2f90.length-1&&temp<_2f92){
_2f93++;
}
return _2f93;
},getZoomBounds:function(_2f94,_2f95,_2f96){
var low=0;
var high=_2f94.length-1;
var mid=0;
while(low<=high){
mid=Math.round((low+high)/2);
var temp=_2f94[mid][_2f96];
if(temp<_2f95){
low=mid+1;
}else{
if(temp>_2f95){
high=mid-1;
}else{
return mid;
}
}
}
return mid;
},cacheElementDataRows:function(_2f97){
var _2f98=new _2f76.m();
for(var j=0;j<_2f97.length;++j){
var _2f99=_2f97[j].data.id;
var _2f9a=this.grammar.vis.data;
for(var i=0;i<_2f9a.length;++i){
if(_2f9a[i]!=null&&_2f77.m.compareTo(_2f9a[i].id,_2f99)==0){
var rows=_2f9a[i].rows;
_2f98.put(_2f99,i);
if(this.vc.objectMap.retrieveObject(_2f99)==null){
this.vc.objectMap.cacheObject(_2f99,rows);
}
}
}
}
return _2f98;
}});
_2f7a.getSortColumnIndex=function(_2f9b,_2f9c){
var _2f9d=_2f9b.positions[_2f9c];
if(_2f9d!=null&&_2f9d.getBaseField()!=null){
return _2f9d.getBaseField().index;
}
return -1;
};
return _2f7a;
});
},"com/ibm/vis/engine/internal/grammar/aesthetic/SizeAestheticValueProducer":function(){
define("com/ibm/vis/engine/internal/grammar/aesthetic/SizeAestheticValueProducer",["./AestheticValueProducer","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!./SizeAestheticScaleValue","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_2f9e,_2f9f,_2fa0,_2fa1,_2fa2,_2fa3,_2fa4){
var _2fa5=_2fa4("com.ibm.vis.engine.internal.grammar.aesthetic.SizeAestheticValueProducer",[_2f9e],{constructor:function(_2fa6){
this.visContext=_2fa6;
},make:function(spec){
if(spec==null){
return null;
}
return spec.size;
},forPalette:function(o){
return o;
},isSizeAestheticValueProducer:function(){
return true;
},calculateNumericMapping:function(shape,v,_2fa7,iLow,iHigh,plow,phigh,_2fa8){
var low=plow;
var high=phigh;
var _2fa9=false;
var _2faa=false;
if(low==null){
_2fa9=true;
}else{
if(_2f9f.m.isString(low)){
_2fa9=(low).CPVISEngineEndsWith("%");
low=_2fa0.m.convertLength(low,100,100);
}else{
if(_2f9f.m.isNumber(low)){
_2fa9=(low)==0;
}
}
}
if(high==null){
_2faa=true;
}else{
if(_2f9f.m.isString(high)){
_2faa=(high).CPVISEngineEndsWith("%");
high=_2fa0.m.convertLength(high,100,100);
}else{
if(_2f9f.m.isNumber(high)){
_2faa=(high)==0;
}
}
}
var _2fab;
if(iLow==iHigh){
_2fab=low;
}else{
var p=(v-_2fa7.getStop(iLow))/(_2fa7.getStop(iHigh)-_2fa7.getStop(iLow));
if(_2fa9!=_2faa){
var _2fac=shape.getBounds();
if("height".CPVisEngineEquals(_2fa8)||_2fac.width==_2fac.height){
if(!_2fa9){
low=(low)/_2fac.height*100;
}else{
high=(high)/_2fac.height*100;
}
_2fab=this.interpolate(low,high,p);
}else{
if("width".CPVisEngineEquals(_2fa8)){
if(!_2fa9){
low=(low)/_2fac.width*100;
}else{
high=(high)/_2fac.width*100;
}
_2fab=this.interpolate(low,high,p);
}else{
var _2fad,_2fae,_2faf,_2fb0;
_2fad=_2fae=low;
_2faf=_2fb0=high;
if(!_2fa9){
_2fad=(low)/_2fac.width*100;
_2fae=(low)/_2fac.height*100;
}else{
_2faf=(high)/_2fac.width*100;
_2fb0=(high)/_2fac.height*100;
}
_2fab=new _2fa1.m((this.interpolate(_2fad,_2faf,p))/100,(this.interpolate(_2fae,_2fb0,p))/100);
}
}
}else{
_2fab=this.interpolate(low,high,p);
}
}
if(_2fab!=null&&_2f9f.m.isNumber(_2fab)&&_2fa9){
return (_2fab)+"%";
}
return _2fab;
},modify:function(item,o,_2fb1){
if(o instanceof _2fa1.m){
return _2fa5.modifyByPercent(item,(o).widthScale,(o).heightScale,_2fb1);
}
var value;
if(_2f9f.m.isString(o)){
value=_2fa0.m.convertLength(o,100,100);
if((o).CPVISEngineEndsWith("%")){
value=value/100;
return _2fa5.modifyByPercent(item,value,value,_2fb1);
}
}else{
value=(o);
}
return _2fa5.modifyByPixels(item,value,_2fb1);
},getDefaultForCategory:function(index,_2fb2){
return _2fb2*100+"%";
},interpolate:function(a,b,p){
var low=a==null?0:(a);
var high=b==null?100:(b);
return low+p*(high-low);
},getDefaultForNumeric:function(v){
return this.interpolate(20,100,v)+"%";
}});
_2fa5.modifyByPixels=function(item,v,_2fb3){
var _2fb4=item.getBounds().makeGeometryClone().getBounds();
if(item.isFilled()){
if("outline".CPVisEngineEquals(_2fb3)){
_2fa2.m.setStrokeSize(item,v);
return item;
}
if(_2fb4!=null){
if("height".CPVisEngineEquals(_2fb3)){
item.scale(1,v/_2fb4.height);
}else{
if("width".CPVisEngineEquals(_2fb3)){
item.scale(v/_2fb4.width,1);
}else{
item.scale(v/_2fb4.width,v/_2fb4.height);
}
}
}
}else{
if(!item.isFilled()&&("i-beam".CPVisEngineEquals(item.getType())||"t-beam".CPVisEngineEquals(item.getType()))){
if(_2fb4!=null){
item.scale(v/_2fb4.width,v/_2fb4.height);
}
}else{
if(!"outline".CPVisEngineEquals(_2fb3)&&!"height".CPVisEngineEquals(_2fb3)){
_2fa2.m.setStrokeSize(item,v);
return item;
}
}
}
if(item!=null&&item.fill!=null){
var _2fb5=item.fill.gradient;
if(_2fb5!=null&&_2fb4!=null){
if("height".CPVisEngineEquals(_2fb3)){
_2fb5.scale(1,v/_2fb4.height);
}else{
if("width".CPVisEngineEquals(_2fb3)){
_2fb5.scale(v/_2fb4.width,1);
}else{
_2fb5.scale(v/_2fb4.width,v/_2fb4.height);
}
}
}
}
return item;
};
_2fa5.modifyByPercent=function(item,_2fb6,_2fb7,_2fb8){
if(item.isFilled()){
if("outline".CPVisEngineEquals(_2fb8)){
_2fa2.m.scaleStrokeSize(item,_2fb6);
return item;
}else{
if("height".CPVisEngineEquals(_2fb8)){
item.scale(1,_2fb7);
}else{
if("width".CPVisEngineEquals(_2fb8)){
item.scale(_2fb6,1);
}else{
item.scale(_2fb6,_2fb7);
}
}
}
}else{
if(!item.isFilled()&&("i-beam".CPVisEngineEquals(item.getType())||"t-beam".CPVisEngineEquals(item.getType()))){
item.scale(_2fb6,_2fb7);
}else{
if(!"outline".CPVisEngineEquals(_2fb8)&&!"height".CPVisEngineEquals(_2fb8)){
_2fa2.m.scaleStrokeSize(item,_2fb7);
return item;
}
}
}
if(item!=null&&item.fill!=null){
var _2fb9=item.fill.gradient;
if(_2fb9!=null){
if("height".CPVisEngineEquals(_2fb8)){
_2fb9.scale(1,_2fb7);
}else{
if("width".CPVisEngineEquals(_2fb8)){
_2fb9.scale(_2fb6,1);
}else{
_2fb9.scale(_2fb6,_2fb7);
}
}
}
}
return item;
};
_2fa3.add("com/ibm/vis/engine/internal/grammar/aesthetic/SizeAestheticValueProducer",["com/ibm/vis/engine/internal/grammar/aesthetic/AestheticValueProducer","com/ibm/vis/engine/internal/scene/StyleBuilder"],function(){
_2fa5.OUTLINE="outline";
_2fa5.WIDTH="width";
_2fa5.HEIGHT="height";
_2fa5.DEFAULT_MIN_INTERPOLATE=20;
_2fa5.DEFAULT_MAX_INTERPOLATE=100;
});
return _2fa5;
});
},"com/ibm/vis/engine/internal/grammar/label/FontStats":function(){
define("com/ibm/vis/engine/internal/grammar/label/FontStats",["com/ibm/init/statics","dojo/_base/declare"],function(_2fba,_2fbb){
var _2fbc=_2fbb("com.ibm.vis.engine.internal.grammar.label.FontStats",null,{boldFactor:0,avg:0,avgCnt:0,constructor:function(avg,_2fbd){
this.avg=avg;
this.avgCnt=1;
this.boldFactor=_2fbd;
},getBoldFactor:function(){
return this.boldFactor;
},setBoldFactor:function(_2fbe){
this.boldFactor=_2fbe;
},getAvg:function(size){
return this.avg*size/12;
},setAvg:function(avg){
this.avg=avg;
},getAvgCnt:function(){
return this.avgCnt;
},setAvgCnt:function(_2fbf){
this.avgCnt=_2fbf;
},incAvgCnt:function(){
this.avgCnt++;
},updAvg:function(_2fc0){
this.avg=(((this.avg*this.avgCnt)+_2fc0)/(this.avgCnt+1));
this.avgCnt++;
},toString:function(){
return "FontStats [boldFactor="+this.boldFactor+", avg="+this.avg+", avgCnt="+this.avgCnt+"]";
}});
_2fba.add("com/ibm/vis/engine/internal/grammar/label/FontStats",[],function(){
_2fbc.DEFAULT_FONT_SIZE=12;
});
return _2fbc;
});
},"com/ibm/vis/engine/internal/grammar/layout/cloud/Alignable":function(){
define("com/ibm/vis/engine/internal/grammar/layout/cloud/Alignable",["com/ibm/init/statics","dojo/_base/declare"],function(_2fc1,_2fc2){
var _2fc3=_2fc2("com.ibm.vis.engine.internal.grammar.layout.cloud.Alignable",null,{setHorizontalAlignment:function(align){
},setVerticalAlignment:function(_2fc4){
},alignBaseLine:function(value){
}});
return _2fc3;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/AxisInterpolator":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/AxisInterpolator",["com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/fork!../../Affine","com/ibm/init/fork!../../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_2fc5,_2fc6,_2fc7,_2fc8,_2fc9,_2fca,_2fcb){
var _2fcc=_2fcb("com.ibm.vis.engine.internal.interaction.interpolation.AxisInterpolator",null,{valid:false,sourceM:0,sourceB:0,targetM:0,targetB:0,sourceMinLoc:0,sourceMaxLoc:0,targetMinLoc:0,targetMaxLoc:0,horizontal:false,constructor:function(){
this.valid=false;
},isValid:function(){
return this.valid;
},setInterpolator:function(fg){
var _2fcd=new _2fc5.m();
for(var _2fce=0,_2fcf=fg.matches,_2fd0=_2fcf.size();_2fce<_2fd0;++_2fce){
var pair=_2fcf.get(_2fce);
_2fcd.add(pair.source);
}
_2fcd.addAll(fg.unmatchedSources);
var _2fd1=new _2fc5.m();
for(var _2fd2=0,_2fd3=fg.matches,_2fd4=_2fd3.size();_2fd2<_2fd4;++_2fd2){
var pair=_2fd3.get(_2fd2);
_2fd1.add(pair.target);
}
_2fd1.addAll(fg.unmatchedTargets);
if(!this.valid){
if(!this.processShapes(_2fcd,true)||!this.processShapes(_2fd1,false)){
return false;
}
this.valid=true;
return true;
}
return this.checkShapes(_2fcd,true)&&this.checkShapes(_2fd1,false);
},processShapes:function(items,_2fd5){
var size=items.size();
if(size<2){
return false;
}
var _2fd6=Array.create([size],0);
var _2fd7=Array.create([size],0);
var N=0;
if(_2fd5){
var item=items.get(0);
var info=this.getItemInfo(item);
if(info==null){
return false;
}
this.horizontal=(info[2]==1);
}
for(var _2fd8=0,_2fd9=items.size();_2fd8<_2fd9;++_2fd8){
var item=items.get(_2fd8);
var info=this.getItemInfo(item);
if(info==null){
return false;
}
var isH=(info[2]==1);
if(isH!=this.horizontal){
return false;
}
_2fd6[N]=info[0];
_2fd7[N]=info[1];
N++;
}
var _2fda=this.computeInterpolation(_2fd6,_2fd7,N);
if(_2fda==null){
return false;
}
if(_2fd5){
this.sourceM=_2fda[0];
this.sourceB=_2fda[1];
this.sourceMinLoc=_2fda[2];
this.sourceMaxLoc=_2fda[3];
}else{
this.targetM=_2fda[0];
this.targetB=_2fda[1];
this.targetMinLoc=_2fda[2];
this.targetMaxLoc=_2fda[3];
}
return true;
},checkShapes:function(items,_2fdb){
if(items.size()==0){
return true;
}
var M=_2fdb?this.sourceM:this.targetM;
var B=_2fdb?this.sourceB:this.targetB;
var info=this.getItemInfo(items.get(0));
var _2fdc=info[1];
var _2fdd=info[1];
for(var _2fde=0,_2fdf=items.size();_2fde<_2fdf;++_2fde){
var item=items.get(_2fde);
info=this.getItemInfo(item);
if(info==null){
return false;
}
var isH=(info[2]==1);
if(isH!=this.horizontal){
return false;
}
if(info[1]<_2fdc){
_2fdc=info[1];
}
if(info[1]>_2fdd){
_2fdd=info[1];
}
var _2fe0=M*info[0]+B;
if(Math.abs(_2fe0-info[1])>2){
return false;
}
}
if(_2fdb){
if(_2fdc<this.sourceMinLoc){
this.sourceMinLoc=_2fdc;
}
if(_2fdd>this.sourceMaxLoc){
this.sourceMaxLoc=_2fdd;
}
}else{
if(_2fdc<this.targetMinLoc){
this.targetMinLoc=_2fdc;
}
if(_2fdd>this.targetMaxLoc){
this.targetMaxLoc=_2fdd;
}
}
return true;
},getItemInfo:function(item){
var value=_2fc6.m.getItem(item,"value");
if(!_2fc6.m.isNumber(value)){
return null;
}
var shape=_2fc6.m.getItem(item,"shape");
var type=_2fc6.m.getItem(shape,"type");
if(!"line".CPVisEngineEquals(type)){
return null;
}
var x1=(_2fc6.m.getItem(shape,"x1"));
var y1=(_2fc6.m.getItem(shape,"y1"));
var x2=(_2fc6.m.getItem(shape,"x2"));
var y2=(_2fc6.m.getItem(shape,"y2"));
var isH=Math.abs(x2-x1)<=0.01;
var isV=Math.abs(y2-y1)<=0.01;
if(isH&&isV){
return null;
}
if(!isH&&!isV){
return null;
}
return [(value),isH?x1:y1,isH?1:0];
},computeInterpolation:function(_2fe1,_2fe2,N){
if(N<2){
return null;
}
if(N==2){
if(_2fe1[0]==_2fe1[1]){
return null;
}
var M=(_2fe2[0]-_2fe2[1])/(_2fe1[0]-_2fe1[1]);
var B=_2fe2[0]-M*_2fe1[0];
return [M,B,Math.min(_2fe2[0],_2fe2[1]),Math.max(_2fe2[0],_2fe2[1])];
}
var _2fe3=0;
var _2fe4=0;
for(var i=1;i<N;++i){
if(_2fe2[i]<_2fe2[_2fe3]){
_2fe3=i;
}
if(_2fe2[i]>_2fe2[_2fe4]){
_2fe4=i;
}
}
if(_2fe3==_2fe4||_2fe1[_2fe3]==_2fe1[_2fe4]){
return null;
}
var M=(_2fe2[_2fe3]-_2fe2[_2fe4])/(_2fe1[_2fe3]-_2fe1[_2fe4]);
var B=_2fe2[_2fe3]-M*_2fe1[_2fe3];
for(var i=0;i<N;++i){
var _2fe5=M*_2fe1[i]+B;
if(Math.abs(_2fe5-_2fe2[i])>2){
return null;
}
}
return [M,B,_2fe2[_2fe3],_2fe2[_2fe4]];
},getItemValue:function(item){
var v=_2fc6.m.getItem(item,"value");
if(!_2fc6.m.isNumber(v)){
return NaN;
}
return (v);
},getSourceLocation:function(v){
return this.sourceM*v+this.sourceB;
},getTargetLocation:function(v){
return this.targetM*v+this.targetB;
},makeSourceItem:function(item){
return this.makeItem(item,true);
},makeTargetItem:function(item){
return this.makeItem(item,false);
},makeItem:function(item,_2fe6){
var copy=_2fc6.m.deepClone(item);
if(!this.valid){
return copy;
}
var shape=_2fc6.m.getItem(copy,"shape");
if(shape==null){
return copy;
}
var type=_2fc6.m.getItem(shape,"type");
if(!"line".CPVisEngineEquals(type)&&!"text".CPVisEngineEquals(type)){
return copy;
}
var value=this.getItemValue(item);
if(_2fc7.m.isNaN(value)){
return copy;
}
var delta;
if(_2fe6){
delta=this.getSourceLocation(value)-this.getTargetLocation(value);
}else{
delta=this.getTargetLocation(value)-this.getSourceLocation(value);
}
if("line".CPVisEngineEquals(type)){
if(this.horizontal){
_2fc6.m.put(shape,"x1",_2fc6.m.getNumberWithDefault(shape,"x1",0)+delta);
_2fc6.m.put(shape,"x2",_2fc6.m.getNumberWithDefault(shape,"x2",0)+delta);
}else{
_2fc6.m.put(shape,"y1",_2fc6.m.getNumberWithDefault(shape,"y1",0)+delta);
_2fc6.m.put(shape,"y2",_2fc6.m.getNumberWithDefault(shape,"y2",0)+delta);
}
return copy;
}
if("text".CPVisEngineEquals(type)){
var dx,dy;
if(this.horizontal){
dx=delta;
dy=0;
}else{
dx=0;
dy=delta;
}
var _2fe7=_2fc8.m.fromJSON(_2fc6.m.getItem(copy,"transform"));
if(_2fe7!=null){
var ndx=_2fe7.m00*dx+_2fe7.m10*dy;
var ndy=_2fe7.m01*dx+_2fe7.m11*dy;
dx=ndx;
dy=ndy;
}
_2fc6.m.put(shape,"x",_2fc9.m.r3(_2fc6.m.getNumberWithDefault(shape,"x",0)+dx));
_2fc6.m.put(shape,"y",_2fc9.m.r3(_2fc6.m.getNumberWithDefault(shape,"y",0)+dy));
return copy;
}
return copy;
},getTransitionTimesForItems:function(_2fe8,_2fe9){
var _2fea=this.getItemValue(_2fe8);
var _2feb=this.getItemValue(_2fe9);
if(_2fc7.m.isNaN(_2fea)||_2fc7.m.isNaN(_2feb)){
return [0,1];
}
return this.getTransitionTimes(this.getSourceLocation(_2fea),this.getTargetLocation(_2feb));
},getTransitionTimes:function(_2fec,_2fed){
var _2fee=[0,1];
if(!this.valid){
return _2fee;
}
var _2fef=this.sourceMinLoc-0.05<=_2fec&&_2fec<=this.sourceMaxLoc+0.05;
var _2ff0=this.targetMinLoc-0.05<=_2fed&&_2fed<=this.targetMaxLoc+0.05;
if(!_2fef&&!_2ff0){
return _2fee;
}
if(_2fef&&_2ff0){
return _2fee;
}
var _2ff1,_2ff2;
if(_2fec<this.sourceMinLoc||_2fed<this.targetMinLoc){
_2ff1=this.sourceMinLoc;
_2ff2=this.targetMinLoc;
}else{
_2ff1=this.sourceMaxLoc;
_2ff2=this.targetMaxLoc;
}
var T;
if(_2ff1==_2fec){
T=0;
}else{
T=(_2ff1-_2fec)/((_2fed-_2fec)-(_2ff2-_2ff1));
}
if(_2fef){
_2fee[1]=Math.max(T,0.001);
}else{
_2fee[0]=Math.min(T,0.999);
}
return _2fee;
}});
_2fcc.isAxisMarkGroup=function(fg){
return "axis-mark".CPVisEngineEquals(fg.type);
};
_2fcc.isAxisTickGroup=function(fg){
return "axis-mark".CPVisEngineEquals(fg.type)||"axis-back".CPVisEngineEquals(fg.type)||"axis-minor".CPVisEngineEquals(fg.type);
};
_2fcc.isAxisGroup=function(fg){
return _2fcc.isAxisTickGroup(fg)||"axis-label".CPVisEngineEquals(fg.type);
};
_2fcc.getAxisGroupID=function(fg){
if(!_2fcc.isAxisGroup(fg)){
return null;
}
return fg.baseId.substring(0,fg.baseId.CPVisEngineLength()-1);
};
return _2fcc;
});
},"com/ibm/vis/engine/internal/oldlegendlayout/OldContentLayout":function(){
define("com/ibm/vis/engine/internal/oldlegendlayout/OldContentLayout",["com/ibm/init/fork!../struct/Dim","com/ibm/init/statics","dojo/_base/declare"],function(_2ff3,_2ff4,_2ff5){
var _2ff6=_2ff5("com.ibm.vis.engine.internal.oldlegendlayout.OldContentLayout",null,{usedWidth:0,usedHeight:0,adjustWidth:false,adjustHeight:false,layout:function(_2ff7){
},determineOccupiedExtent:function(){
return new _2ff3.m(this.usedWidth,this.usedHeight);
},resetLayout:function(){
},setAdjustWidth:function(b){
this.adjustWidth=b;
},setAdjustHeight:function(b){
this.adjustHeight=b;
}});
return _2ff6;
});
},"com/ibm/vis/engine/internal/nativeImpl/Enum":function(){
define("com/ibm/vis/engine/internal/nativeImpl/Enum",["dojo/_base/lang","dojo/_base/declare"],function(lang,_2ff8){
var _2ff9=function(_2ffa,_2ffb){
var _2ffc=lang.getObject(_2ffa);
if(!_2ffc.__enumConstants){
_2ffc.__enumConstants={};
_2ffc.__enumConstantSize=0;
}
_2ffc.__enumConstants[_2ffb.name()]=_2ffb;
return _2ffc.__enumConstantSize++;
};
var _2ffd=_2ff8("com.ibm.vis.engine.internal.nativeImpl.Enum",null,{_name:null,_ordinal:null,constructor:function(name){
this._name=name;
this._ordinal=_2ff9(this.declaredClass,this);
},name:function(){
return this._name;
},ordinal:function(){
return this._ordinal;
},getDeclaringClass:function(){
return lang.getObject(this.declaredClass);
},compareTo:function(other){
if(this.declaredClass!=other.declaredClass){
throw new Error("ClassCastException: "+this.declaredClass+" is not the same as "+other.declaredClass);
}
return this._ordinal-other._ordinal;
}});
_2ffd.valueOf=function(_2ffe,name){
if(_2ffe.__enumConstants){
return _2ffe.__enumConstants[name];
}
return null;
};
return _2ffd;
});
},"com/ibm/vis/engine/internal/grammar/values/NumberValueProvider":function(){
define("com/ibm/vis/engine/internal/grammar/values/NumberValueProvider",["./ValueProvider","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_2fff,_3000,_3001,_3002,_3003){
var _3004=_3003("com.ibm.vis.engine.internal.grammar.values.NumberValueProvider",[_2fff],{number:null,includeInRange:false,unit:null,constructor:function(_3005,_3006,_3007,unit){
this.number=_3006;
this.includeInRange=_3007;
this.unit=unit;
},getNumber:function(row){
return this.number;
},getIncludeInRange:function(){
return this.includeInRange;
},isCategorical:function(){
return this.unit!=null?this.unit.measure.categorical:false;
},getUnit:function(){
return this.unit;
},getCategories:function(){
if(this.isCategorical()){
return ["0"];
}else{
return null;
}
},getRange:function(){
return new _3000.m(this.number,this.number);
},getLabel:function(){
return _3001.m.unformattedNumber(this.number);
},getBaseField:function(){
return null;
},getGranularity:function(){
return null;
},enableOrdering:function(_3008){
}});
return _3004;
});
},"com/ibm/vis/engine/internal/interaction/effect/ScrollUnitEffect":function(){
define("com/ibm/vis/engine/internal/interaction/effect/ScrollUnitEffect",["./Effect","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_3009,_300a,_300b,_300c){
var _300d=_300c("com.ibm.vis.engine.internal.interaction.effect.ScrollUnitEffect",[_3009],{builder:null,constructor:function(time){
},setScrollUnitShape:function(_300e){
if(_300e!=null){
this.updateShapesInVis(_300e);
}
},updateShapesInVis:function(_300f){
var parts=_300f.getParts();
for(var i=0;i<parts.length;++i){
var _3010=parts[i].toJSON();
this.builder.updateVisMap(_300a.m.getItem(_3010,"id"),_3010);
}
},install:function(_3011){
this.builder=_3011;
this.inherited(arguments,[_3011]);
},uninstall:function(_3012){
}});
return _300d;
});
},"com/ibm/vis/engine/internal/grammar/scale/transform/LogScaleTransform":function(){
define("com/ibm/vis/engine/internal/grammar/scale/transform/LogScaleTransform",["./ScaleTransform","com/ibm/init/fork!../../../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_3013,_3014,_3015,_3016){
var _3017=_3016("com.ibm.vis.engine.internal.grammar.scale.transform.LogScaleTransform",[_3013],{base:0,oneOverLoggedBase:0,constructor:function(){
this.base=10;
this.oneOverLoggedBase=1/Math.log(this.base);
},transform:function(value){
if(value<=0||_3014.m.isNaN(value)){
return NaN;
}
return Math.log(value)*this.oneOverLoggedBase;
},inverse:function(value){
return Math.pow(this.base,value);
}});
_3015.add("com/ibm/vis/engine/internal/grammar/scale/transform/LogScaleTransform",["com/ibm/vis/engine/internal/grammar/scale/transform/ScaleTransform"],function(){
_3017.BASE_10=10;
});
return _3017;
});
},"url:resources/migration.json":"[\r\n\t{\r\n\t\t\"targetVersion\": \"2.0\",\r\n\t\t\"mapping\": [\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"//size\",\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"context\": \"size.palette\",\r\n\t\t\t\t\t\t\"source\": \"[*]\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\", \"parameters\": {\"multiplier\": 1}}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"context\": \"size.mapping[*]\",\r\n\t\t\t\t\t\t\"source\": \"size\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\", \"parameters\": {\"multiplier\": 1}}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"//size[*]\",\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"context\": \"palette\",\r\n\t\t\t\t\t\t\"source\": \"[*]\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\", \"parameters\": {\"multiplier\": 1}}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"context\": \"mapping[*]\",\r\n\t\t\t\t\t\t\"source\": \"size\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\", \"parameters\": {\"multiplier\": 1}}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"targetVersion\": \"1.3\",\r\n\t\t\"mapping\": [\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"//mapping\",\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"field.\\\\$ref\"}],\r\n\t\t\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"variables\": {\r\n\t\t\t\t\t\t\t\t\t\"idRef\": \"field.\\\\$ref\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"guard\": [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"logic\": \"or\",\r\n\t\t\t\t\t\t\t\t\t\t\"expression\": \"/data[*].fields[*].id\", \"value\": \"$idRef\",\r\n\t\t\t\t\t\t\t\t\t\t\"guard\": [\r\n\t\t\t\t\t\t\t\t\t\t\t{\"expression\": \"/data[$0].fields[$1].categories\"}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"context\": \"mapping[*]\",\r\n\t\t\t\t\t\t\t\t\t\t\"source\": \"offset\",\r\n\t\t\t\t\t\t\t\t\t\t\"target\": \"at\",\r\n\t\t\t\t\t\t\t\t\t\t\"method\": \"move\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\"elseMapping\": [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"context\": \"mapping[*]\",\r\n\t\t\t\t\t\t\t\t\t\t\"source\": \"offset\",\r\n\t\t\t\t\t\t\t\t\t\t\"target\": \"at\",\r\n\t\t\t\t\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"},\r\n\t\t\t\t\t\t\t\t\t\t\"method\": \"move\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\"elseMapping\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"context\": \"mapping[*]\",\r\n\t\t\t\t\t\t\t\t\"source\": \"offset\",\r\n\t\t\t\t\t\t\t\t\"target\": \"at\",\r\n\t\t\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"},\r\n\t\t\t\t\t\t\t\t\"method\": \"move\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"context\": \"mapping[*]\",\r\n\t\t\t\t\t\t\"source\": \"offsetByValue\",\r\n\t\t\t\t\t\t\"target\": \"at\",\r\n\t\t\t\t\t\t\"method\": \"move\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"//shape[*]\",\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"x\", \"type\": \"number\"}],\r\n\t\t\t\t\t\t\"source\": \"x\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"y\", \"type\": \"number\"}],\r\n\t\t\t\t\t\t\"source\": \"y\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"r\", \"type\": \"number\"}],\r\n\t\t\t\t\t\t\"source\": \"r\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"width\", \"type\": \"number\"}],\r\n\t\t\t\t\t\t\"source\": \"width\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"height\", \"type\": \"number\"}],\r\n\t\t\t\t\t\t\"source\": \"height\",\r\n\t\t\t\t\t\t\"converter\": {\"id\": \"migration.converter.doubleToPercent\"}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"grammar[*].facet.fields[*]\",\r\n\t\t\t\t\"target\": \"axis\",\r\n\t\t\t\t\"value\": {}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"//arrow\",\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"arrow\", \"value\": \"end\"}],\r\n\t\t\t\t\t\t\"target\": \"endArrow\",\r\n\t\t\t\t\t\t\"value\": \"arrow\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"arrow\", \"value\": \"start\"}],\r\n\t\t\t\t\t\t\"target\": \"startArrow\",\r\n\t\t\t\t\t\t\"value\": \"arrow\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"guard\": [{\"expression\": \"arrow\", \"value\": \"both\"}],\r\n\t\t\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"target\": \"startArrow\",\r\n\t\t\t\t\t\t\t\t\"value\": \"arrow\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"target\": \"endArrow\",\r\n\t\t\t\t\t\t\t\t\"value\": \"arrow\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t] \r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"arrow\",\r\n\t\t\t\t\t\t\"method\": \"delete\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"guard\": [{\"expression\": \"legends\"}],\r\n\t\t\t\t\"strategy\": {\"id\": \"migration.legends\"},\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*]\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0]\",\r\n\t\t\t\t\t\t\"method\": \"init\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*]\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1]\",\r\n\t\t\t\t\t\t\"method\": \"init\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].titleStyle\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].titleStyle\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].location\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].location\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.flow\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].orientation\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.method\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].method\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.columns\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].orientation\",\r\n\t\t\t\t\t\t\"value\": \"horizontal\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.columns\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].stripes\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.rows\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].orientation\",\r\n\t\t\t\t\t\t\"value\": \"vertical\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.rows\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].stripes\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].layout.reverse\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].scale.reverse\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].aesthetics\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].aesthetics\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].swatchStyle\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].itemStyle\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].text\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].title\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].swatchBoxStyle\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].itemBoxStyle\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].textStyle\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].labelStyle\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].local\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].scale.local\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].categories\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].scale.spans[0].categories\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.flow\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].orientation\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.method\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].method\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.columns\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].stripes\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.columns\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].orientation\",\r\n\t\t\t\t\t\t\"value\": \"horizontal\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.rows\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].stripes\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.rows\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].orientation\",\r\n\t\t\t\t\t\t\"value\": \"vertical\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].content[*].layout.reverse\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[$1].scale.reverse\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].bounds\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].location\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends[*].style\",\r\n\t\t\t\t\t\t\"target\": \"__legends[$0].legends[0:$(legends[$0].content.length)-1].boundsStyle\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"legends\",\r\n\t\t\t\t\t\t\"method\": \"delete\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"__legends[*].legends[*]\",\r\n\t\t\t\t\t\t\"target\": \"legends[]\",\r\n\t\t\t\t\t\t\"method\": \"concat\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"__legends\",\r\n\t\t\t\t\t\t\"method\": \"delete\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"context\": \"grammar[*].coordinates\",\r\n\t\t\t\t\"mapping\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"transforms[*].clusterParameters.categoryWidth\",\r\n\t\t\t\t\t\t\"target\": \"dimensions[$(dimensions.length)-1].scale.categoryStructure.width\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"transforms[*].clusterParameters.align\",\r\n\t\t\t\t\t\t\"target\": \"dimensions[1].scale.categoryStructure.align\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"transforms[*].clusterParameters.gaps[*]\",\r\n\t\t\t\t\t\t\"target\": \"dimensions[$1+1].scale.categoryStructure.gap\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"transforms[*].clusterParameters.nest[*]\",\r\n\t\t\t\t\t\t\"target\": \"dimensions[$1+2].scale.categoryStructure.nest\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"source\": \"transforms[*].clusterParameters\",\r\n\t\t\t\t\t\t\"method\": \"delete\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n]\r\n","com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/OverlapRemoval":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/OverlapRemoval",["com/ibm/init/fork!../../../../../nativeImpl/List","com/ibm/init/fork!../../../../../nativeImpl/BasicFactory","com/ibm/init/fork!./CoordComparator","com/ibm/init/statics","dojo/_base/declare"],function(_3018,_3019,_301a,_301b,_301c){
var _301d=_301c("com.ibm.vis.engine.internal.grammar.layout.graph.stress.util.OverlapRemoval",null,{gap:0,sortedNodes:null,aspect:0,nodes:null,constructor:function(nodes,_301e,gap){
this.nodes=nodes;
this.gap=gap;
this.aspect=_301e;
this.sortedNodes=new _3018.m();
},layout:function(){
this.sortedNodes.clear();
for(var _301f=0,_3020=this.nodes,_3021=_3020.length;_301f<_3021;++_301f){
var node=_3020[_301f];
this.sortedNodes.add(node);
}
_3019.m.sortList(this.sortedNodes,new _301a.m(true));
for(var i=0;i<this.sortedNodes.size();++i){
this.bumpNode(i,0,true);
}
_3019.m.sortList(this.sortedNodes,new _301a.m(false));
for(var i=0;i<this.sortedNodes.size();++i){
this.bumpNode(i,0,false);
}
},bumpNode:function(index,_3022,_3023){
var vnode=this.sortedNodes.get(index);
for(var i=index+1;i<this.sortedNodes.size();++i){
var other=this.sortedNodes.get(i);
var _3024=vnode.getCurrentBounds();
var _3025=other.getCurrentBounds();
var _3026=vnode.getCurrentBounds();
_3026.expand(this.gap);
if(_3026.intersects(_3025)){
if(_3023){
var dx=_3024.getMaxX()-_3025.getMinX();
var dy=Math.min(_3024.getMaxY()-_3025.getMinY(),_3025.getMaxY()-_3024.getMinY());
if(((dx*this.aspect<=dy&&_3023)||this.aligned(vnode,other,true))&&!this.aligned(vnode,other,false)){
this.bumpNode(i,_3022+dx+this.gap,_3023);
}else{
this.bumpNode(i,_3022,_3023);
}
}else{
var dy=_3024.getMaxY()-_3025.getMinY()+this.gap;
this.bumpNode(i,_3022+dy+this.gap,_3023);
}
}
}
if(_3023){
vnode.moveBy(_3022,0);
}else{
vnode.moveBy(0,_3022);
}
},aligned:function(a,b,_3027){
if(_3027){
return Math.abs(a.y-b.y)<=0.01;
}else{
return Math.abs(a.x-b.x)<=0.01;
}
}});
_301b.add("com/ibm/vis/engine/internal/grammar/layout/graph/stress/util/OverlapRemoval",[],function(){
_301d.ORTHO_PRECISION=0.01;
});
return _301d;
});
},"com/ibm/vis/engine/internal/struct/Cross":function(){
define("com/ibm/vis/engine/internal/struct/Cross",["./Poly","com/ibm/init/statics","dojo/_base/declare"],function(_3028,_3029,_302a){
var Cross=_302a("com.ibm.vis.engine.internal.struct.Cross",[_3028],{constructor:function(cx,cy,_302b,_302c){
},getType:function(){
return "cross";
},CheckFlag:function(flag){
if((0&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("cross".CPVisEngineEquals(type)||"poly".CPVisEngineEquals(type)){
return true;
}
return false;
}});
_3029.add("com/ibm/vis/engine/internal/struct/Cross",["com/ibm/vis/engine/internal/struct/Poly"],function(){
Cross.CROSS_FLAGS=0;
Cross.CROSS_NAME="cross";
});
return Cross;
});
},"com/ibm/vis/engine/internal/grammar/scale/ScaleSpanBuilder":function(){
define("com/ibm/vis/engine/internal/grammar/scale/ScaleSpanBuilder",["com/ibm/init/fork!./CategoricalScaleSpan","com/ibm/init/fork!../units/Measure","com/ibm/init/fork!./TimeScaleSpan","com/ibm/init/fork!./EmptyScaleSpan","com/ibm/init/fork!./ScaleFitInfo","com/ibm/init/fork!./NumericScaleSpan","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!../units/Unit","com/ibm/init/fork!./SpanOutRangeBuilder","com/ibm/init/fork!./CategoricalDomain","com/ibm/init/statics","dojo/_base/declare"],function(_302d,_302e,_302f,_3030,_3031,_3032,_3033,_3034,_3035,_3036,_3037,_3038){
var _3039=_3038("com.ibm.vis.engine.internal.grammar.scale.ScaleSpanBuilder",null,{});
_3039.createForCategories=function(_303a,_303b,unit,_303c,_303d,_303e){
return new _302d.m(unit,null,_303c,_303d,_303e,null,null,_303b,_303a);
};
_3039.createForRange=function(range,unit,_303f,_3040,_3041,_3042,_3043){
if(_3041!=null){
range=range.expand(_3041/2);
}
if(unit.measure==_302e.m.DATETIME){
var span=new _302f.m(unit,_3040,_303f,_3042,_3043,null,null,null,null,range);
span.appliedGranularity=_3041;
return span;
}else{
if(range.isEmpty()){
return new _3030.m(unit,0,new _3031.m(true,false),_3042,_3043,null,null);
}else{
var span=new _3032.m(unit,_3040,_303f,_3042,_3043,_3033.m.ZERO_ONE,null,null,null,range);
span.appliedGranularity=_3041;
return span;
}
}
};
_3039.createFromSpec=function(spec,_3044,_3045,_3046,_3047){
var _3048=spec.unit;
if(_3047==null){
_3047=spec.categories==null?_3034.m.RATIO:_3034.m.CATEGORICAL;
}
var _3049=_3035.m.createFromSpec(spec.outRange);
var _304a=_3049;
var unit=_3034.m.get(_3048,_3047);
if(unit.measure.categorical){
var _304b=new _3036.m(-1,_3044);
_304b.setDefinedValues(spec.categories);
_304b.restrictToExisting=_3046!=null&&_3046;
var _304c=true;
if("exact".CPVisEngineEquals(spec.fit)){
_304c=false;
}
var _304d=new _3031.m(_304c,false);
return new _302d.m(unit,null,_304d,null,_3045,_304a,spec.method,null,_304b);
}
var min=spec.min;
var max=spec.max;
var min1=min==null?NaN:min;
var max1=max==null?NaN:max;
var num=new _3033.m(min1,max1);
var _304c=false;
if("exact".CPVisEngineEquals(spec.fit)){
_304c=false;
}else{
if("nice".CPVisEngineEquals(spec.fit)){
_304c=true;
}else{
_304c=spec.min==null||spec.max==null;
}
}
var info=new _3031.m(_304c,false);
if(unit.measure==_302e.m.DATETIME){
return new _302f.m(unit,null,info,null,_3045,_304a,spec.method,spec.tickDelta,spec.minorDivisions,num);
}
return new _3032.m(unit,null,info,null,_3045,_304a,spec.method,spec.tickDelta,spec.minorDivisions,num);
};
_3039.updateMinMaxToZeroOne=function(spec,_304e){
var min=0,max=0;
if(spec!=null){
min=spec.min;
max=spec.max;
}
if(_304e!=null&&_304e.max>1){
var _304f=max-min;
var _3050=_304e.max-_304e.min;
var _3051=(_304f/_3050)*(1-_304e.min);
spec.max=_3051+spec.min;
return new _3033.m(_304e.min,1);
}
return _3033.m.ZERO_ONE;
};
return _3039;
});
},"com/ibm/vis/widget/_AnimationControlBase":function(){
define("com/ibm/vis/widget/_AnimationControlBase",["dojo/_base/declare","../engine/internal/interaction/effect/Transition","../engine/internal/nativeImpl/FacetSplit","../engine/internal/util/VisUtil","dijit/_WidgetBase","../interaction/ChangeEffects"],function(_3052,_3053,_3054,_3055,_3056,_3057){
var _3058=_3052("com.ibm.vis.widget._AnimationControlBase",[_3056],{interactivity:null,isDragging:null,isAnimating:null,isDisabled:null,currentSceneIndex:null,faceting:null,vis:null,speed:null,postCreate:function(){
this.inherited(arguments);
this.speed=1000;
this.currentSceneIndex=-1;
this.isDisabled=false;
},setInteractivity:function(_3059){
this.interactivity=_3059;
},setSpeed:function(speed){
this.speed=speed;
this._installTransition();
},initializeAnimation:function(){
if(!this.isDisabled){
this.currentSceneIndex=-1;
this.faceting=null;
this.vis=this.interactivity.visControl._vis;
var ids=_3055.getPossibleAnimationFields(this.vis).toArray();
this.initializeDropDown(ids);
this._setState(true,false);
if(ids.length>0){
this._setFacetVariable(ids[0]);
}
}
},initializeDropDown:function(ids){
},setDisabled:function(_305a){
this.isDisabled=_305a;
},playOrStop:function(){
this._setState(false,!this.isAnimating);
this.setRunButtonLabel(this.isAnimating?"Stop":"Run");
this.advance();
},advance:function(){
if(this.isAnimating){
this._showScene((this.getSliderValue()+1)%(this.getSliderMax()+1));
}
},getSliderValue:function(){
},getSliderMax:function(){
},setRunButtonLabel:function(label){
},_installTransition:function(){
var _305b=new _3053(this.speed);
this.interactivity.getChangeEffects().setChangeEffect(_305b,_3057.DEFAULT);
},_setFacetVariable:function(key){
this.faceting=new _3054(this.vis.visContext,this.vis.getJSON(),[key]);
this.initializeForKey(key);
this.currentSceneIndex=-1;
this._showScene(0);
},initializeForKey:function(key){
},_setState:function(_305c,_305d){
if(_305c!=this.isDragging){
if(_305c){
this.interactivity.getChangeEffects().setChangeEffect(null,_3057.DEFAULT);
}else{
this._installTransition();
}
}
this.isDragging=_305c;
this.isAnimating=_305d;
},_showScene:function(index){
if(this.faceting==null||this.currentSceneIndex==index){
return;
}
this.currentSceneIndex=index;
if(this.slider.get("value")!=index){
this.slider.set("value",index);
}
this.variableValue.innerHTML=this.faceting.getFacetTitle(index);
var scene=this.faceting.getFacetScene(index);
this.interactivity.visControl._scene=scene;
if(this.isDragging){
this.interactivity.visControl._renderer.render(scene);
}else{
this.interactivity.setScene(scene);
}
},_onSliderFocus:function(event){
if(this.isAnimating){
this.playOrStop();
}
this._setState(true,this.isAnimating);
},_onSliderBlur:function(event){
this._setState(false,this.isAnimating);
}});
return _3058;
});
},"com/ibm/vis/engine/internal/struct/I_Beam":function(){
define("com/ibm/vis/engine/internal/struct/I_Beam",["./Path","com/ibm/init/statics","dojo/_base/declare"],function(_305e,_305f,_3060){
var _3061=_3060("com.ibm.vis.engine.internal.struct.I_Beam",[_305e],{constructor:function(cx,cy,_3062,types){
},getType:function(){
return "i-beam";
},CheckFlag:function(flag){
if((1&flag)!=0){
return true;
}
return false;
},isTypeOf:function(type){
if("path".CPVisEngineEquals(type)||"i-beam".CPVisEngineEquals(type)){
return true;
}
return false;
}});
_305f.add("com/ibm/vis/engine/internal/struct/I_Beam",["com/ibm/vis/engine/internal/struct/Path"],function(){
_3061.IBEAM_FLAGS=1;
_3061.IBEAM_NAME="i-beam";
});
return _3061;
});
},"com/ibm/vis/engine/internal/scene/Font":function(){
define("com/ibm/vis/engine/internal/scene/Font",["com/ibm/init/fork!../nativeImpl/RAVEFormatter","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!../util/MathUtil","com/ibm/init/fork!../VisContext","com/ibm/init/fork!../grammar/label/PrecomputedFontMetric","com/ibm/init/fork!../nativeImpl/WebEngineException","com/ibm/init/fork!../grammar/label/NativeFontMetric","com/ibm/init/statics","dojo/_base/declare"],function(_3063,_3064,_3065,_3066,_3067,_3068,_3069,_306a,_306b,_306c){
var Font=_306c("com.ibm.vis.engine.internal.scene.Font",null,{base:null,family:null,bold:false,style:null,size:0,metricsSize:0,modified:false,nativeStringMeasuring:null,metrics:null,ctx:null,constructor:function(base,_306d,_306e,bold,style,mod,ctx){
this.ctx=ctx;
this.base=base;
this.family=_306d;
this.size=Font.roundInternal(_306e);
this.metricsSize=ctx.usesFractionalMetrics?this.size:Math.floor(this.size+0.5);
this.bold=bold;
this.modified=mod;
this.style=style;
this.nativeStringMeasuring=ctx.nativeStringMeasuring;
},getSize:function(){
return this.size;
},getFamily:function(){
return this.family;
},getBold:function(){
return this.bold;
},getStyle:function(){
return this.style;
},getAmountThatFits:function(text,width){
var m=this.getMetric();
return m.getAmountThatFits(text,this.metricsSize,this.bold,width);
},getAscent:function(){
var m=this.getMetric();
return m.getAscent(this.metricsSize);
},getDescent:function(){
return this.getHeight()-this.getAscent();
},getHeight:function(){
var m=this.getMetric();
return m.getHeight(this.metricsSize);
},getWidth:function(text){
var m=this.getMetric();
return m.getWidth(text.text,this.metricsSize,this.bold);
},modifySize:function(_306f){
var nSize=this.ctx.usesFractionalMetrics?_306f:Math.floor(_306f);
return new Font(this.base,this.family,nSize,this.bold,this.style,true,this.ctx);
},toJSON:function(){
if(!this.modified){
return this.base;
}
var _3070=_3064.m.createJSONObject();
_3064.m.put(_3070,"family",this.family);
var _3071=Font.fmt.formatNumber(this.size,-1,null,0,1,"numeric",null);
var _3072=_3071+"px";
_3064.m.put(_3070,"size",_3072);
_3064.m.put(_3070,"ascent",_3066.m.r3(this.getAscent()));
if(this.base==null){
if(this.bold){
_3064.m.put(_3070,"weight","bold");
}
if(this.style!=null){
_3064.m.put(_3070,"style",this.style);
}
}else{
var _3073=_3064.m.getItem(this.base,"weight");
var style=_3064.m.getItem(this.base,"style");
if(_3073!=null){
_3064.m.put(_3070,"weight",_3073);
}
if(style!=null){
_3064.m.put(_3070,"style",style);
}
}
return _3070;
},getMetric:function(){
if(this.metrics==null){
var _3074=this.nativeStringMeasuring;
if(_3074.CPVisEngineEquals(_3067.m.PRECOMPUTED)){
var _3075=this.family.toLowerCase();
var fonts=_3075.split(",");
for(var _3076=0,_3077=fonts.length;_3076<_3077;++_3076){
var _3078=fonts[_3076];
_3078=_3078.CPVISEngineTrim();
this.metrics=_3068.m.get(this.ctx,_3078);
if(this.metrics!=null){
break;
}
}
if(this.metrics==null){
throw new _3069.m("requested font "+this.family+" not supported by PRECOMPUTED metrics.");
}
}else{
if(_3074.CPVisEngineEquals("NATIVE")){
this.metrics=_306a.m.get(this);
}
}
}
return this.metrics;
},getNativeStringMeasuring:function(){
return this.nativeStringMeasuring;
},getMetricsId:function(){
return this.family+"/"+this.metricsSize+"/"+(this.bold?"b":"n");
},usesFractionalMetrics:function(){
return this.ctx.usesFractionalMetrics;
},getEllipsisSize:function(){
return this.getMetric().getWidth(Font.ELLIPSIS,this.metricsSize,this.bold);
},getHashSize:function(){
return this.getMetric().getWidth(Font.HASH,this.metricsSize,this.bold);
}});
Font.make=function(base,size,ctx){
var _3079=size==null?12:size;
if(base==null){
return new Font(null,"Arial,SanSerif",_3079,false,null,true,ctx);
}
var _307a=_3064.m.getItem(base,"font");
if(_307a==null){
return new Font(null,"Arial,SanSerif",_3079,false,null,true,ctx);
}else{
var spec=Font.jsonToSpec(_307a);
return Font.makeFontFromSpec(spec,ctx);
}
};
Font.makeFontForSize=function(base,size,ctx){
var _307b=size==null?12:size;
if(base==null){
return new Font(null,"Arial,SanSerif",_307b,false,null,true,ctx);
}
var _307c=_3064.m.getItem(base,"font");
if(_307c==null){
return new Font(null,"Arial,SanSerif",_307b,false,null,true,ctx);
}else{
var spec=Font.jsonToSpec(_307c);
return Font.makeFontFromSpec(spec,ctx);
}
};
Font.jsonToSpec=function(json){
var spec=new Object();
spec.family=_3064.m.getItem(json,"family");
spec.style=_3064.m.getItem(json,"style");
spec.weight=_3064.m.getItem(json,"weight");
spec.size=_3064.m.getItem(json,"size");
return spec;
};
Font.makeFont=function(spec,ctx){
if(spec==null){
return new Font(null,"Arial,SanSerif",12,false,null,true,ctx);
}
return Font.makeFontFromSpec(spec,ctx);
};
Font.roundInternal=function(size){
return Math.round(size*1000)/1000;
};
Font.makeFontFromSpec=function(spec,ctx){
var _307d=(spec.family==null)?"Arial,SanSerif":spec.family;
var _307e="bold".CPVisEngineEquals(spec.weight);
var _307f=null;
if(spec.size!=null){
_307f=_3065.m.convertLength(spec.size,12,12);
}
if(_307f==null){
_307f=12;
}
var font=new Font(null,_307d,_307f,_307e,spec.style,true,ctx);
return Font.getFontWithMetrics(null,_307d,_307e,_307f,spec.style,font);
};
Font.getFontWithMetrics=function(base,_3080,_3081,_3082,style,font){
var fm=font.getMetric();
var _3083=fm.getActualFamily();
if(!_3083.CPVisEngineEquals(_3080.toLowerCase())){
font=new Font(base,fm.getActualFamily(),_3082,_3081,style,true,font.ctx);
}
return font;
};
_306b.add("com/ibm/vis/engine/internal/scene/Font",["com/ibm/vis/engine/internal/nativeImpl/RAVEFormatter","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/grammar/units/UnitConverter"],function(){
Font.ROUNDING_PRECISION=1000;
Font.fmtString="#.###";
Font.fmt=_3063.m.make("#.###","","",true);
Font.DEFAULT_FONT_SIZE=12;
Font.PIXEL_UNIT_IDENTIFIER="px";
Font.ELLIPSIS="\u2026";
Font.HASH="#";
});
return Font;
});
},"com/ibm/vis/engine/internal/nativeImpl/EffectBuilder":function(){
define("com/ibm/vis/engine/internal/nativeImpl/EffectBuilder",["dojo/_base/declare","dojox/gfx/fx","dojo/fx","dojo/_base/lang","dojo/_base/connect","../util/SceneUtil","./EffectBuilder","./BasicFactory","./Map","./HighlightHelper","../../../interaction/internal/HighlightMaker","../interaction/interpolation/ShapeInterpolator","../struct/Rect","../interaction/interpolation/FillInterpolator","../interaction/interpolation/TextInterpolator","./List"],function(_3084,g_fx,fx,lang,_3085,_3086,_3087,BF,Map,_3088,_3089,_308a,Rect,_308b,_308c,List){
var _3087=_3084("com.ibm.vis.engine.internal.nativeImpl.EffectBuilder",null,{nativeSceneMap:null,visSceneMap:null,sceneOwner:null,animated:null,_extras:null,_cleanupEffects:null,_effects:null,_allHighlights:null,_forRemoval:null,_renderer:null,duration:null,repeat:null,visScene:null,easing:null,nativeSceneMap:null,visSceneMap:null,sceneOwner:null,_targetDurationMap:null,_modifiedShapes:null,_modifiedGroups:null,_animations:null,_animation:null,_repeatCount:null,_repeatCtx:null,_connectionHandles:null,_individualAnimations:null,constructor:function(_308d,_308e,_308f,_3090,_3091,_3092,_3093,_3094){
this.sceneOwner=_308e;
this.visScene=_308d;
this.nativeSceneMap=_308f;
this.animated=_3090;
this._cleanupEffects=[];
this._effects=[];
this._allHighlights=new List();
this._forRemoval=new List();
this._renderer=_3091;
this.duration=_3092!=null?_3092:2000;
this.repeat=_3094;
this.easing=_3093;
this._animations=new Map();
this._modifiedShapes={};
this._modifiedGroups={};
this._targetDurationMap=new Map();
this.repeatCount=0;
this._individualAnimations=[];
this._connectionHandles=[];
},getSceneTree:function(){
return this.visScene;
},setVisSceneMap:function(_3095){
this.visSceneMap=_3095;
},makeSceneItemMap:function(){
var map=new Map();
this.buildItemMap(this.visScene,map);
return map;
},buildItemMap:function(array,map){
for(var _3096=0;_3096<array.length;_3096++){
var o=BF.getArrayOrListItem(array,_3096);
var _3097=BF.getItem(o,"children");
var id=BF.getItem(o,"id");
if(id!=null){
map.put(id,o);
}
if(_3097==null){
}else{
this.buildItemMap(_3097,map);
}
}
},getVisSceneMap:function(){
if(this.visSceneMap==null){
this.visSceneMap=this.makeSceneItemMap();
}
return this.visSceneMap;
},markAsEffectShape:function(_3098){
this._extras=_3098;
this.sceneOwner.addToNativeScene(null,"com.ibm.vis.engine.internal.nativeImpl.EffectBuilder.EFFECT_SHAPE_KEY",_3098);
},renderModifiedScene:function(){
this.sceneOwner._renderModifiedScene(this.visScene);
},addEffectToUninstall:function(_3099){
this._cleanupEffects.push(_3099);
},addEffect:function(_309a){
this._effects.push(_309a);
},clearNativeScene:function(){
this.sceneOwner.clearNativeScene();
},addToNativeScene:function(o){
this.sceneOwner.addToNativeScene(null,null,o);
},addTargetDurationMap:function(id,time){
this._targetDurationMap.put(id,time);
},_getValue:function(_309b,_309c,def){
if(_309b==null){
return def;
}
if(_309b[_309c]==null){
return def;
}
return _309b[_309c];
},ensureAlphaIsNotMissing:function(color){
if(color==null){
return;
}
if(color.a==null){
color.a=1;
}
},updateVisMap:function(id,_309d){
var _309e=this.visSceneMap.get(id);
if(_309e!=null){
BF.put(_309e,"shape",BF.getItem(_309d,"shape"));
}
},createStyle:function(_309f,_30a0,_30a1,id){
if(_30a0==null||_309f==null){
return null;
}
var _30a2=new _3088(this.nativeSceneMap,this.visSceneMap);
var _30a3=new _3089(_309f,this.visSceneMap,_30a2);
var added=new List();
var size=_30a0.size();
for(var i=0;i<size;i++){
var _30a4=_30a0.get(i);
var item=_30a1.get(_30a4);
var _30a5=_30a3.makeHighlight(item);
if(_30a5!=null){
var hiId="_"+_30a4+id+_3087.STYLE_EXT;
_30a5["id"]=hiId;
added.add(_30a5);
}
}
this._allHighlights.addAll(added);
this._showHighlights(added);
return added;
},restore:function(added){
if(added==null){
return;
}
this._forRemoval.addAll(added);
this._allHighlights.removeAll(added);
this._removeFromScene();
},_showHighlights:function(added){
var size=added.size();
for(var i=0;i<size;i++){
var item=added.get(i);
var id=item["id"];
var _30a6=this.nativeSceneMap[id];
if(_30a6!=null){
this._renderer.remove(_30a6,id);
}
this._renderer.add(null,id,item);
}
},_removeFromScene:function(){
var size=this._forRemoval.size();
for(var i=0;i<size;i++){
var item=this._forRemoval.get(i);
BF.removeFromArray(this.visScene,item);
}
this._renderer.removeList(this._forRemoval);
this._forRemoval=new List();
},requestRepaint:function(){
this.sceneOwner.updateNativeScene(this._extras,"com.ibm.vis.engine.internal.nativeImpl.EffectBuilder.EFFECT_SHAPE_KEY");
},combineAnimations:function(id,_30a7){
var _30a8=this._animations.get(id);
if(_30a8!=null){
var _30a9=[];
_30a9[0]=_30a8;
_30a9[1]=_30a7;
this._animations.put(id,fx.combine(_30a9));
}else{
this._animations.put(id,_30a7);
}
},_getDuration:function(id){
var _30aa=this._targetDurationMap.get(id);
if(!_30aa){
_30aa=this.duration;
}
return _30aa;
},_uninstallEffects:function(){
if(this._cleanupEffects.length==0){
return;
}
for(var i=0;i<this._cleanupEffects.length;i++){
this._cleanupEffects[i].uninstall(this);
}
},_fireEndEffectsEvent:function(){
for(var i=0;i<this._effects.length;i++){
this._effects[i].fireOnEffectEndEvent();
}
},_fireStartEffectsEvent:function(){
for(var i=0;i<this._effects.length;i++){
this._effects[i].fireOnEffectStartEvent();
}
},_storeOldShape:function(id,shape){
if(this._modifiedShapes[id]==null){
var _30ab={transform:lang.clone(shape.getTransform()),fill:lang.clone(shape.getFill()),stroke:lang.clone(shape.getStroke()),clip:lang.clone(shape["clip"])};
this._modifiedShapes[id]=_30ab;
}
},_storeOldGroup:function(id,group){
if(this._modifiedGroups[id]==null){
var _30ac={transform:lang.clone(group.getTransform()),clip:lang.clone(group["clip"])};
this._modifiedGroups[id]=_30ac;
}
},_restoreShapes:function(){
for(var id in this._modifiedShapes){
var _30ad=this.nativeSceneMap[id];
var _30ae=this._modifiedShapes[id];
_30ad.setTransform(_30ae.transform);
_30ad.setFill(_30ae.fill);
_30ad.setStroke(_30ae.stroke);
_30ad.setClip(_30ae.clip);
}
this._modifiedShapes=[];
for(var id in this._modifiedGroups){
var shape=this.nativeSceneMap[id];
var group=shape.getParent();
var _30ae=this._modifiedGroups[id];
group.setTransform(_30ae.transform);
group.setClip(_30ae.clip);
}
this._modifiedGroups=[];
},addAnimatedTransform:function(id,_30af){
if(!this.animated||id==null||_30af==null){
return;
}
var shape=this.nativeSceneMap[id];
if(shape==null){
return;
}
var _30b0=shape.getTransform();
this._storeOldShape(id,shape);
var _30b1=new dojo.Animation({curve:[0,1],duration:this._getDuration(id)});
var ctx=dojo.connect(_30b1,"onAnimate",shape,function(value){
var _30b2=[];
_30b2.push(_30af.interpolate(id,value));
_30b2.push(_30b0);
shape.setTransform(_30b2);
});
this._connectionHandles.push(ctx);
_30b1.easing=this.easing;
this.combineAnimations(id,_30b1);
},addAnimatedStyle:function(id,_30b3){
if(!this.animated||id==null){
return;
}
var shape=this.nativeSceneMap[id];
if(shape==null){
return;
}
this._storeOldShape(id,shape);
var _30b4=0;
var _30b5=[];
if(_30b3.length==1){
var frame=_30b3[0];
_30b3[1]=frame;
}
for(var i=1;i<_30b3.length;i++){
var _30b6=[];
var stop=_30b3[i].stop;
if(stop==null){
stop=i/(_30b3.length-1);
}
if(stop==0){
stop=1;
}
var _30b7=(stop-_30b4)*this._getDuration(id);
if(shape.getFill()!=null&&(_30b3[i-1].fill!=null||_30b3[i].fill!=null)){
var _30b8=this._makeFillAnimation(shape,_30b3[i-1],_30b3[i],_30b7);
_30b6.push(_30b8);
}
var _30b9=null,_30ba=null;
if(shape.getStroke()!=null){
if(shape.getStroke().color!=null){
this.ensureAlphaIsNotMissing(_30b3[i-1].outline);
this.ensureAlphaIsNotMissing(_30b3[i].outline);
_30b9={start:this._makeColor(shape.getStroke().color,_30b3[i-1].outline),end:this._makeColor(shape.getStroke().color,_30b3[i].outline)};
}
if(_30b3[i-1].stroke!=null||_30b3[i].stroke!=null){
_30ba={start:_30b3[i-1].stroke.width,end:_30b3[i].stroke.width};
}
}
if(_30b9!=null||_30ba!=null){
var _30b8=g_fx.animateStroke({shape:shape,duration:_30b7,color:_30b9,width:_30ba});
_30b6.push(_30b8);
}
if(_30b6.length==1){
_30b5.push(_30b6[0]);
}else{
var _30bb=fx.combine(_30b6);
this._individualAnimations.push(_30bb);
_30b5.push(_30bb);
}
_30b4=stop;
}
if(_30b5.length==1){
_30b5[0].easing=this.easing;
this.combineAnimations(id,_30b5[0]);
}else{
var chain=fx.chain(_30b5);
this._individualAnimations.push(chain);
this.combineAnimations(id,chain);
}
},_makeFillAnimation:function(shape,_30bc,_30bd,_30be){
var _30bf=new dojo.Animation({curve:[0,1],duration:_30be});
var _30c0=_308b.makeFillInterpolator(_30bc.fill);
var _30c1=_308b.makeFillInterpolator(_30bd.fill);
var ctx=dojo.connect(_30bf,"onAnimate",shape,function(value){
var f=_308b.interpolate(_30c0,_30c1,value);
shape.setFill(f);
});
this._connectionHandles.push(ctx);
return _30bf;
},removeAnimatedStyle:function(id){
if(!this.animated){
return;
}
this._animations.remove(id);
},_keyframeRequiresOutline:function(kf){
return kf.outline&&kf.outline.a!==0;
},_makeColor:function(_30c2,color){
var alpha=this._getValue(_30c2,"a",1)*this._getValue(color,"a",1);
return {r:this._getValue(color,"r",_30c2.r),g:this._getValue(color,"g",_30c2.g),b:this._getValue(color,"b",_30c2.b),a:alpha};
},canAnimateChangeOfShapeType:function(){
return false;
},addAnimatedMorph:function(id,_30c3){
if(!this.animated||id==null||_30c3==null){
return;
}
var shape=this.nativeSceneMap[id];
if(shape==null){
return;
}
this._storeOldShape(id,shape);
var _30c4=new dojo.Animation({curve:[0,1],duration:this._getDuration(id)});
var ctx=dojo.connect(_30c4,"onAnimate",shape,function(value){
shape.setShape(_30c3.interpolate(id,value));
});
this._connectionHandles.push(ctx);
_30c4.easing=this.easing;
this.combineAnimations(id,_30c4);
},addAnimatedClip:function(id,group,_30c5){
if(!this.animated||id==null||_30c5==null){
return;
}
var shape=this.nativeSceneMap[id];
if(shape==null){
return;
}
group=shape.getParent();
if(group==null){
return;
}
this._storeOldGroup(id,group);
var _30c6=group["clip"];
var _30c7=new dojo.Animation({curve:[0,1],duration:this._getDuration(id)});
var ctx=dojo.connect(_30c7,"onAnimate",group,function(value){
var _30c8=_30c5.interpolate(id,value);
if(_30c6!=null){
var x1=Math.max(_30c6.x,_30c8.x);
var x2=Math.min(_30c6.x+_30c6.width,_30c8.x+_30c8.width);
var width=x2-x1;
var y1=Math.max(_30c6.y,_30c8.y);
var y2=Math.min(_30c6.y+_30c6.height,_30c8.y+_30c8.height);
var _30c9=y2-y1;
if(width>0&&_30c9>0){
_30c8=Rect.makeRect(x1,y1,width,_30c9);
}else{
_30c8=Rect.makeRect(0,0,0,0);
}
}
group.setClip(_30c8);
});
this._connectionHandles.push(ctx);
_30c7.easing=this.easing;
this.combineAnimations(id,_30c7);
},addAnimatedText:function(id,_30ca){
if(!this.animated||id==null||_30ca==null){
return;
}
var shape=this.nativeSceneMap[id];
if(shape==null){
return;
}
this._storeOldShape(id,shape);
var _30cb=new dojo.Animation({curve:[0,1],duration:this._getDuration(id)});
var ctx=dojo.connect(_30cb,"onAnimate",shape,function(value){
var _30cc=_30ca.interpolate(id,value);
shape.setShape({x:_30cc.shape.x,y:_30cc.shape.y,text:_30cc.shape.text,align:_30cc.shape.align});
shape.setTransform(_30cc.transform);
shape.setFont(_30cc.font);
if(_30cc.effect&&shape.setEffect){
shape.setEffect(_30cc.effect,_30cc.shape);
}
shape.setFill({r:(_30cc.fill.r!=null)?_30cc.fill.r:255,g:(_30cc.fill.g!=null)?_30cc.fill.g:255,b:(_30cc.fill.b!=null)?_30cc.fill.b:255,a:(_30cc.fill.a!=null)?_30cc.fill.a:1});
});
this._connectionHandles.push(ctx);
_30cb.easing=this.easing;
this.combineAnimations(id,_30cb);
},addAnimatedCoordinateTransformToItem:function(id,_30cd){
if(!this.animated||id==null||_30cd==null){
return;
}
var shape=this.nativeSceneMap[id];
if(shape==null){
return;
}
this._storeOldShape(id,shape);
this._addAnimatedCoordinateTransform(id,shape,_30cd);
},addAnimatedCoordinateTransformToGroup:function(id,group,_30ce){
if(!this.animated||id==null||_30ce==null){
return;
}
var shape=this.nativeSceneMap[id];
if(shape==null){
return;
}
group=shape.getParent();
if(group==null){
return;
}
this._storeOldGroup(id,group);
this._addAnimatedCoordinateTransform(id,group,_30ce);
},_addAnimatedCoordinateTransform:function(id,item,_30cf){
var _30d0=new dojo.Animation({curve:[0,1],duration:this._getDuration(id)});
var ctx=dojo.connect(_30d0,"onAnimate",item,function(value){
var tc=_30cf.interpolate(id,value);
item.setTransform(tc.transform);
var clip=tc.clip;
if(clip.x==null){
item.setClip(null);
}else{
item.setClip(clip);
}
});
this._connectionHandles.push(ctx);
_30d0.easing=this.easing;
this.combineAnimations(id,_30d0);
},start:function(){
if(!this.animated){
this._showHighlights(this._allHighlights);
}else{
if(this._animations==null||this._animations.size()==0){
return;
}
this._buildAnimation();
this._fireStartEffectsEvent();
this._animation.play(0,true);
this.repeatCount++;
}
},pause:function(){
if(this.animated){
this._animation.pause();
}
},stop:function(){
if(!this.animated){
this._removeFromScene();
this._renderer.removeList(this._forRemoval);
this._forRemoval=new List();
}else{
if(this._animation!=null){
this._animation.stop();
this._restoreShapes();
this._destroyConnections();
this._animation=null;
this._animations=new Map();
}
}
},_buildAnimation:function(){
_3085.disconnect(this._repeatCtx);
this._animation=fx.combine(BF.toArray(this._animations.values()));
this.resetAnimations();
this._repeatCtx=_3085.connect(this._animation,"onEnd",this,function(){
this._uninstallEffects();
if(this.repeat<0||this.repeatCount<this.repeat){
this.start();
}else{
this.sceneOwner.animatedEffectCompleted();
this._fireEndEffectsEvent();
}
});
this._connectionHandles.push(this._repeatCtx);
},_destroyConnections:function(){
for(var i=0;i<this._connectionHandles.length;i++){
_3085.disconnect(this._connectionHandles[i]);
}
this._connectionHandles=[];
},resetAnimations:function(){
if(!this.animated){
return;
}
for(var i=0;i<this._individualAnimations.length;i++){
this._individualAnimations[i].gotoPercent(0);
}
},newSceneItemAdded:function(_30d1,_30d2){
var _30d3=null;
var _30d4=this.sceneOwner._renderer.nativeSceneMap[_30d2];
if(_30d4!=null){
_30d3=_30d4.getParent();
}else{
_30d2=null;
}
if(_30d3!=null){
_30d2=_30d3.children[_30d3.children.length-1].id;
}
this.sceneOwner.addToNativeSceneAfter(_30d3,_30d2,_30d1.id,_30d1);
}});
_3087.EFFECT_SHAPE_KEY="effectShape";
_3087.STYLE_EXT=".XH";
return _3087;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/cluster/ClusterShapeNode":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/cluster/ClusterShapeNode",["../ShapeNode","com/ibm/init/fork!../../../nativeImpl/Double","com/ibm/init/fork!../../../../../exceptions/RaveException","com/ibm/init/statics","dojo/_base/declare"],function(_30d5,_30d6,_30d7,_30d8,_30d9){
var _30da=_30d9("com.ibm.vis.engine.internal.grammar.coordinate.cluster.ClusterShapeNode",[_30d5],{fullVizWidth:0,constructor:function(_30db){
this.fullVizWidth=_30db;
},calculateSizing:function(_30dc,_30dd){
var _30de=this.getRootNode();
if(!_30d6.m.isNaN(_30de.leafSize)){
this.setPreferredWidth(_30de.leafSize);
return _30de.leafSize;
}
var group=this.getRootNode();
var _30df=group.getWidthSpecHelper();
var _30e0=_30df.getPreferred(_30dc,this.fullVizWidth);
var _30e1=_30e0;
var root=this.getRootNode();
var _30e2=root.getNodesAtLevel(this.getLevel()-1,0);
if(_30d6.m.isNaN(_30e0)){
_30e1=_30dc/_30e2;
}
var _30e3=_30dd/_30e2;
_30e1=Math.min(_30e1,_30e3);
if(_30e1<1){
_30e1=Math.min(1,_30e3);
}
if(_30e1<_30df.getMin(_30dc,this.fullVizWidth)){
throw new _30d7.m("minimum cluster sizes will not fit in bounds",_30d7.m.LAYOUT_CANNOT_FIT);
}
_30de.leafSize=_30e1;
this.setPreferredWidth(_30e1);
return _30e1;
},positionBelongsToNode:function(_30e4){
var _30e5=this;
for(var _30e6=_30e4.index.length-1;_30e6>0;--_30e6){
if(_30e5.id!=_30e4.index[_30e6]){
return false;
}
_30e5=_30e5.parent;
if(_30e5==null){
return false;
}
}
return true;
}});
return _30da;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/Coordinates":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/Coordinates",["com/ibm/init/fork!./CoordinateTransformFactory","com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../scale/ScaleBuilder","com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../scale/Axis","com/ibm/init/fork!../../../../exceptions/SpecException","com/ibm/init/fork!../../../../exceptions/ErrorCode","com/ibm/init/fork!../../struct/Dim","com/ibm/init/fork!../values/ValueProvider","com/ibm/init/fork!./Position","com/ibm/init/fork!../scale/Scale","com/ibm/init/fork!../units/Unit","com/ibm/init/fork!../../data/Range","com/ibm/init/fork!../scale/ScaleFitInfo","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!../../nativeImpl/Map","com/ibm/init/fork!../../data/Row","com/ibm/init/fork!../../nativeImpl/WebEngineException","com/ibm/init/fork!../../util/MathUtil","com/ibm/init/fork!../../struct/Point","com/ibm/init/fork!../../struct/Circle","com/ibm/init/statics","dojo/_base/declare"],function(_30e7,_30e8,_30e9,_30ea,_30eb,_30ec,_30ed,_30ee,_30ef,_30f0,_30f1,_30f2,_30f3,_30f4,_30f5,_30f6,_30f7,_30f8,_30f9,_30fa,_30fb,_30fc,_30fd){
var _30fe=_30fd("com.ibm.vis.engine.internal.grammar.coordinate.Coordinates",null,{scales:null,axes:null,transforms:null,insideAxes:false,vis:null,visContext:null,spec:null,coordinateFieldIDs:null,scalesFromSpecsWithoutUnits:null,constructor:function(vis,_30ff,_3100,_3101,_3102,_3103){
this.vis=vis;
this.visContext=vis.visContext;
if(_3100!=null){
this.scales=_3100;
this.transforms=_3101;
this.insideAxes=_3102;
this.spec=_30ff;
this.coordinateFieldIDs=_3103;
}else{
if(_30ff==null){
this.spec=new Object();
}else{
this.spec=_30ff;
}
var dims=this.spec.dimensions==null?0:this.spec.dimensions.length;
this.scales=new Array(dims);
this.coordinateFieldIDs=new Array(dims);
if(this.spec.transforms==null){
this.transforms=new Array(0);
this.insideAxes=false;
}else{
var _3104=false;
this.transforms=new Array(this.spec.transforms.length);
for(var i=0;i<this.transforms.length;++i){
this.transforms[i]=_30e7.m.make(this.spec.transforms[i],this.spec.dimensions,this.scales.length,vis);
if(this.transforms[i].needsInsideAxes()){
_3104=true;
}
}
this.insideAxes=_3104;
}
this.prepareScaleAndAxes();
}
},removeStackTransform:function(){
if(!this.containsStacking()){
return this;
}
var _3105=new Array(this.transforms.length-1);
var n=0;
for(var _3106=0,_3107=this.transforms,_3108=_3107.length;_3106<_3108;++_3106){
var t=_3107[_3106];
if(!t.isStacking()){
_3105[n++]=t;
}
}
var _3109=new _30fe(this.vis,this.spec,this.scales,_3105,this.insideAxes,this.coordinateFieldIDs);
_3109.axes=this.axes;
_3109.scalesFromSpecsWithoutUnits=this.scalesFromSpecsWithoutUnits;
return _3109;
},prepareScaleAndAxes:function(){
var _310a=new _30e8.m();
for(var i=0;i<this.scales.length;++i){
var _310b=this.spec.dimensions[i];
var _310c=_310b.scale;
if(_310c==null){
this.scales[i]=null;
}else{
this.setScaleSpanWithoutUnits(_310c,i);
this.scales[i]=_30e9.m.createFromSpec(_310c,this.isScreenYAxis(i),_310c.local,null,this.vis);
}
if(this.spec.dimensions[i].axis!=null){
var _310d=this.spec.dimensions[i].axis;
if(_30ea.m.isObject(_310d)&&!_30ea.m.isArray(_310d)){
_310a.add(new _30eb.m(i,this,_310d,null,false));
}else{
var _310e=this.spec.dimensions[i].axis.length;
if(_310e>2){
throw new _30ec.m(null,_30ed.m.SPEC_INVALID_VALUE,"No more than two axis can be defined for a dimension",null,null,null,null);
}
if(_310e>0){
_310a.add(new _30eb.m(i,this,this.spec.dimensions[i].axis[0],null,false));
if(_310e==2){
_310a.add(new _30eb.m(i,this,this.spec.dimensions[i].axis[1],null,true));
}
}
}
}
}
this.axes=new Array(_310a.size());
for(var i=0;i<this.axes.length;++i){
this.axes[i]=_310a.get(i);
}
},setScaleSpanWithoutUnits:function(_310f,i){
var spans=_310f.spans;
if(spans!=null){
for(var _3110=0,_3111=spans.length;_3110<_3111;++_3110){
var span=spans[_3110];
if(span.unit==null){
if(this.scalesFromSpecsWithoutUnits==null){
this.scalesFromSpecsWithoutUnits=Array.create([this.scales.length],false);
}
this.scalesFromSpecsWithoutUnits[i]=true;
return;
}
}
}
},isOverlappingTick:function(){
var _3112;
if(this.axes.length>2){
_3112=(this.axes[1].axisSpec.boxStyle!=null)&&!(this.axes[0].getScale().isCategorical()||this.axes[1].getScale().isCategorical());
for(var i=0;i<this.axes.length;++i){
_3112=(this.axes[1].axisSpec.boxStyle!=null)&&!(this.axes[i].getScale().isCategorical()||_3112);
this.axes[i].setisOverlappingTick(_3112);
}
}
if(this.axes.length<=2&&this.axes.length>1){
_3112=(this.axes[1].axisSpec.boxStyle!=null)&&!(this.axes[0].getScale().isCategorical()||this.axes[1].getScale().isCategorical());
this.axes[0].setisOverlappingTick(_3112);
this.axes[1].setisOverlappingTick(_3112);
}else{
_3112=false;
}
},getDefaultSize:function(_3113,_3114){
var d=new _30ee.m(_3113.width,_3113.height);
if(this.scales.length>1){
var extra=_3114.length>1?_3114.length-this.scales.length:0;
d.width=this.scales[1].getDefaultElementSize(_3113.width,_3114.length>1+extra?_3114[1+extra]:_30ef.m.DEFAULT);
}
if(this.scales.length>0){
d.height=this.scales[0].getDefaultElementSize(_3113.height,_3114.length>0?_3114[0]:_30ef.m.DEFAULT);
if(this.transposesAxes()){
d.height=this.scales[0].getDefaultElementSize(_3113.width,_3114.length>0?_3114[0]:_30ef.m.DEFAULT);
}
}
this.isOverlappingTick();
return d;
},getCoordinatePositions:function(v,_3115){
return this.scales[_3115].toZeroOne(v,null,null);
},getPosition:function(row,_3116){
var _3117=_3116.length-this.scales.length;
if(_3117<0){
return _30f0.m.NO_COORDS;
}
var _3118=new _30f0.m(this.scales.length,_3117,0);
var index=0;
for(var i=0;i<this.scales.length;++i){
var _3119=_3116[index].getNumber(row);
_3118.base[i]=_3116[index].toZeroOne(_3119,this.scales[i]);
if(_3119!=null){
_3118.index[i]=_3119;
if(_3116[i]!=null&&_3116[i].getBaseField()!=null){
_3118.fields[i]=_3116[i].getBaseField();
}else{
_3118.fields[i]=null;
}
_3118.setSpan(i,_3116[i].span);
}
index++;
if(i<_3117){
var b=_3116[index].getNumber(row);
_3118.extra[i]=_3116[index].toZeroOne(b,this.scales[i]);
index++;
}
}
return _3118;
},isScreenYAxis:function(dim){
return (this.transposesAxes())?dim!=0:dim==0;
},prepareForElements:function(_311a){
for(var i=0;i<this.scales.length;++i){
var _311b=this.getFields(_311a,i);
var units=this.getFieldUnits(_311b);
var _311c=this.spec.dimensions[i];
var _311d=_311c.scale;
if(this.scalesFromSpecsWithoutUnits!=null&&this.scalesFromSpecsWithoutUnits[i]){
var _311e=this.getSpanUnits(_311b);
this.scales[i]=_30e9.m.createFromSpec(_311d,this.isScreenYAxis(i),_311d.local,_311e,this.vis);
}
var _311f=(i==0&&this.containsStacking())?this.makeStackRange(_311a):null;
var _3120;
if(this.scales[i]!=null){
if(this.scales[i].isLocalUndefined()){
_3120=this.allCategorical(units);
this.scales[i].localScale=_3120;
}else{
_3120=this.scales[i].localScale;
}
}else{
_3120=this.allCategorical(units);
}
if(_311f!=null){
_3120=false;
}
var info=this.makeFitInformation(_311a,i,this.allCategorical(units));
var _3121=new _30f1.m(null,this.vis);
var _3122=_30e9.m.makeForMany(_3121,_311b,_3120,this.visContext);
_3122.reverseCategoricalScales=this.isScreenYAxis(i);
for(var _3123=0,_3124=units.size();_3123<_3124;++_3123){
var unit=units.get(_3123);
var _3125=this.getFieldsForUnit(_311b,unit);
var first=_3125.get(0);
var _3126=first.getSpecifiedFormatter();
var _3127=first.granularity;
if(unit.measure.categorical){
var cats=this.getCategories(_3125);
_3122.addCategoricalSpan(unit,cats,_3126,info);
}else{
var _3128=this.scales[i]!=null&&this.scales[i].localScale;
var r=this.getRange(unit,_3125,_311f,_3128);
_3122.addNumericSpan(unit,r,_3126,info,_3127);
}
}
_3121.defineSpanOutputRanges();
if(this.scales[i]!=null){
this.scales[i].useValuesFrom(_3121);
}else{
this.scales[i]=_3121;
}
this.coordinateFieldIDs[i]=this.getUnique(_311b);
if(this.scales[i].localScale==null){
this.scales[i].localScale=_3120;
}
var _3129=this.getFixedValuesIncludedInRange(_311a,i);
var scale=this.scales[i];
for(var _312a=0,_312b=_3129.size();_312a<_312b;++_312a){
var value=_3129.get(_312a);
var v=value;
if(scale.spans.isEmpty()){
_3122.addNumericSpan(_30f2.m.RATIO,new _30f3.m(v,v),null,info,null);
}else{
scale.includeValue(v);
}
}
if(this.scales[i].spans.size()>1){
this.setSpansToAxis(i);
}
}
for(var _312c=0,_312d=this.axes,_312e=_312d.length;_312c<_312e;++_312c){
var axis=_312d[_312c];
axis.giveSizeInfoToScale();
}
},setSpansToAxis:function(_312f){
var _3130=new _30e8.m();
for(var i=0;i<this.axes.length;++i){
_3130.add(this.axes[i]);
}
var _3131=this.scales[_312f].makeSpanGroups();
if(this.spec.dimensions[_312f].axis!=null){
var _3132=this.getAxisForScale(_312f);
if(_3132.length==1){
_3132[0].spans=_3131.get(0);
if(_3131.get(1).size()>0){
var _3133=new _30eb.m(_312f,this,_3132[0].axisSpec,_3131.get(1),true);
_3130.add(_3133);
}
}else{
if(_3132.length==2){
if(this.isAxesOnSameLocation(_3132[0],_3132[1])){
throw new _30ec.m(null,_30ed.m.SPEC_INVALID_VALUE,"Given spec results in two axes drawn at same side",null,null,null,null);
}
_3132[0].spans=_3131.get(0);
if(_3131.get(1).size()>0){
_3132[1].spans=_3131.get(1);
}else{
_3132[1].spans=_3131.get(0);
}
}
}
}
this.axes=new Array(_3130.size());
for(var j=0;j<this.axes.length;++j){
this.axes[j]=_3130.get(j);
}
},isAxesOnSameLocation:function(_3134,_3135){
var _3136=_3134.drawOppositeSide;
var _3137=!_3135.drawOppositeSide;
if((_3136&&!_3137)||(!_3136&&_3137)){
return true;
}
return false;
},getAxisForScale:function(_3138){
var _3139=new _30e8.m();
for(var _313a=0,_313b=this.axes,_313c=_313b.length;_313a<_313c;++_313a){
var axis=_313b[_313a];
if(axis.whichScale==_3138){
_3139.add(axis);
}
}
return _3139.toArray(new Array(_3139.size()));
},postProcessTransforms:function(_313d){
for(var _313e=0,_313f=this.transforms,_3140=_313f.length;_313e<_3140;++_313e){
var _3141=_313f[_313e];
_3141.postProcess(_313d);
}
},getSpanUnits:function(_3142){
var units=new _30e8.m();
for(var _3143=0,_3144=_3142.size();_3143<_3144;++_3143){
var field=_3142.get(_3143);
units.add(field.unit);
}
return units;
},getFixedValuesIncludedInRange:function(_3145,_3146){
var _3147=new _30e8.m();
for(var _3148=0,_3149=_3145.length;_3148<_3149;++_3148){
var _314a=_3145[_3148];
var _314b=_314a.positions;
for(var i=0;i<_314b.length;++i){
var _314c=_314b[i];
var p=this.getScaleIndex(i,_314b.length,this.scales.length);
if(p==_3146&&_314c.getIncludeInRange()){
_3147.add(_314c.getNumber(null));
}
}
if(_314a.usesAugmentation()){
var r=_314a.data.augmentation.getGlobalBounds();
if(_3146==0){
_3147.add(r.y);
_3147.add(r.y+r.height);
}else{
if(_3146==1){
_3147.add(r.x);
_3147.add(r.x+r.width);
}
}
}
}
return _3147;
},makeFitInformation:function(_314d,dim,_314e){
var _314f=!_314e&&dim==this.scales.length-1&&this.containsPolar();
var _3150=dim==0&&this.containsElementDesiringZero(_314d);
var info=new _30f4.m(!_314f,_3150);
var _3151=this.isScreenYAxis(dim);
for(var _3152=0,_3153=_314d.length;_3152<_3153;++_3152){
var _3154=_314d[_3152];
_3154.addSpaceRequirements(info,_3151);
}
return info;
},allCategorical:function(units){
for(var _3155=0,_3156=units.size();_3155<_3156;++_3155){
var unit=units.get(_3155);
if(!unit.measure.categorical){
return false;
}
}
return true;
},getRange:function(unit,_3157,_3158,_3159){
if(_3158!=null&&(this.containsPolar()||_3159)){
return _3158;
}
var _315a=_3158;
if(_315a==null){
_315a=_30f3.m.EMPTY;
}
for(var _315b=0,_315c=_3157.size();_315b<_315c;++_315b){
var field=_3157.get(_315b);
if(field.range.isComplete()){
var range=_30f5.m.convertRange(field.range,field.unit,unit);
if(_315a==null){
_315a=range;
}else{
_315a=_315a.unionValue(range.min);
_315a=_315a.unionValue(range.max);
}
}
}
return _315a;
},getCategories:function(_315d){
var _315e=null;
for(var _315f=0,_3160=_315d.size();_315f<_3160;++_315f){
var field=_315d.get(_315f);
_315e=this.merge(_315e,field.categories);
}
return _315e;
},getFieldsForUnit:function(_3161,unit){
var _3162=new _30e8.m();
for(var _3163=0,_3164=_3161.size();_3163<_3164;++_3163){
var field=_3161.get(_3163);
if(this.findMatchingUnit(field.unit,_3161)==unit){
_3162.add(field);
}
}
return _3162;
},getFieldUnits:function(_3165){
var units=new _30e8.m();
for(var _3166=0,_3167=_3165.size();_3166<_3167;++_3166){
var field=_3165.get(_3166);
var unit=this.findMatchingUnit(field.unit,_3165);
if(!units.contains(unit)){
units.add(unit);
}
}
return units;
},getUnique:function(_3168){
var u=null;
for(var _3169=0,_316a=_3168.size();_3169<_316a;++_3169){
var f=_3168.get(_3169);
if(u==null){
u=f.id;
}else{
if(!u.CPVisEngineEquals(f.id)){
return null;
}
}
}
return u;
},containsElementDesiringZero:function(_316b){
for(var _316c=0,_316d=_316b.length;_316c<_316d;++_316c){
var _316e=_316b[_316c];
if(_316e.desiresZero(this)){
return true;
}
}
return false;
},makeFieldIDToUnitMap:function(_316f){
var _3170=new _30f6.m();
for(var _3171=0,_3172=_316f.size();_3171<_3172;++_3171){
var field=_316f.get(_3171);
var unit=this.findMatchingUnit(field.unit,_316f);
_3170.put(field.id,unit);
}
return _3170;
},makeStackRange:function(_3173){
var _3174=_30f3.m.ZERO;
for(var _3175=0,_3176=_3173.length;_3175<_3176;++_3175){
var _3177=_3173[_3175];
if(_3177.positions.length<1||!_3177.usesStacking()){
continue;
}
var _3178=new _30f6.m();
var rows=this.getRows(_3177);
for(var _3179=0,_317a=rows.length;_3179<_317a;++_3179){
var row=rows[_3179];
var _317b=_3177.positions[0];
var v=_317b.getNumber(row);
if(v==null){
continue;
}
var y=v;
var key=_3177.grammar.faceting.updateKey(this.makeKey(row,_3177.positions),row);
var _317c=_3178.get(key);
if(_317c==null){
_317c=_30f3.m.ZERO;
}
if(y<0){
_317c=new _30f3.m(_317c.min+y,_317c.max);
_3174=_3174.unionValue(_317c.min);
}else{
_317c=new _30f3.m(_317c.min,_317c.max+y);
_3174=_3174.unionValue(_317c.max);
}
_3178.put(key,_317c);
}
}
return _3174;
},getRows:function(_317d){
if(_317d.positions==null||_317d.positions.length<2||_317d.positions[1].getBaseField()==null){
return _317d.data.rows;
}
if(!_317d.positions[1].getBaseField().isCategorical()&&(_317d.type.CPVisEngineEquals("line")||_317d.type.CPVisEngineEquals("area"))){
var _317e=_317d.makeAestheticSplits();
var _317f=new _30e8.m();
for(var _3180=0,_3181=_317e.size();_3180<_3181;++_3180){
var list=_317e.get(_3180);
_317f.add(this.getGroupRange(list,_317d));
}
var _3182=new _30e8.m();
for(var i=0;i<_317f.size();++i){
_3182.add(this.getInterpolatePositions(_317f.get(i),_317e.get(i),_317d));
}
var _3183=new _30e8.m();
_3183.addAll(_30ea.m.asList(_317d.data.rows));
for(var i=0;i<_3182.size();++i){
var row=this.interpolateRows(_3182.get(i),_317e.get(i),_317d);
if(row!=null){
_3183.addAll(_30ea.m.asList(row));
}
}
return _3183.toArray(new Array(_3183.size()));
}else{
return _317d.data.rows;
}
},interpolateRows:function(xList,_3184,_3185){
if(xList.size()==0||_3184.size()==0){
return null;
}
var _3186=new Array(xList.size());
var _3187=_3185.data.rows[_3184.get(0)].data;
for(var i=0;i<xList.size();++i){
var _3188=new Array(_3187.length);
for(var j=0;j<_3188.length;++j){
_3188[j]=_3187[j];
}
_3188[_3185.positions[1].getBaseField().index]=xList.get(i);
_3188[_3185.positions[0].getBaseField().index]=this.interpolateY(xList.get(i),_3184,_3185);
_3186[i]=_30f7.m.createRow(_3188,-1);
}
return _3186;
},interpolateY:function(x,_3189,_318a){
var left=5e-324;
var right=1.7976931348623157e+308;
var y1=null,y2=null;
for(var i=0;i<_3189.size();++i){
var row=_318a.data.rows[_3189.get(i)];
var v=_318a.positions[1].getNumber(row);
if(v==null){
continue;
}
if(v<x&&v>left){
left=v;
y1=_318a.positions[0].getNumber(row);
}else{
if(v>x&&v<right){
right=v;
y2=_318a.positions[0].getNumber(row);
}
}
}
if(y1==null&&y2==null){
return null;
}else{
if(y1==null){
return y2/2;
}else{
if(y2==null){
return y1/2;
}else{
return (y1+y2)/2;
}
}
}
},getInterpolatePositions:function(_318b,_318c,_318d){
var _318e=_318d.positions[1];
var _318f=new _30e8.m();
for(var i=0;i<_318d.data.rows.length;++i){
if(_318c.contains(i)){
continue;
}
var row=_318d.data.rows[i];
var v=_318e.getNumber(row);
if(v==null){
continue;
}
var x=v;
if(!_318f.contains(x)&&_318b.contains(x)&&!this.isContained(x,_318c,_318d)){
_318f.add(x);
}
if(!_318f.contains(x)&&_318b.contains(x)&&!this.isContained(x,_318c,_318d)){
_318f.add(x);
}
}
return _318f;
},isContained:function(x,_3190,_3191){
var _3192=_3191.positions[1];
for(var i=0;i<_3190.size();++i){
var row=_3191.data.rows[_3190.get(i)];
var v=_3192.getNumber(row);
if(v==null){
continue;
}
if(x==v){
return true;
}
}
return false;
},getGroupRange:function(_3193,_3194){
var min=1.7976931348623157e+308;
var max=5e-324;
var _3195=_3194.positions[1];
for(var i=0;i<_3193.size();++i){
var row=_3194.data.rows[_3193.get(i)];
var v=_3195.getNumber(row);
if(v==null){
continue;
}
var y=v;
min=Math.min(y,min);
max=Math.max(y,max);
}
return new _30f3.m(min,max);
},makeKey:function(row,p){
if(p.length<2){
return "";
}
var _3196=""+p[1].getNumber(row);
for(var i=2;i<p.length;++i){
_3196+="|";
_3196+=p[i].getNumber(row);
}
return _3196;
},modifyShape:function(shape,size){
for(var _3197=0,_3198=this.transforms,_3199=_3198.length;_3197<_3199;++_3197){
var _319a=_3198[_3197];
shape=_319a.transformShape(shape,size,this.scales);
}
return shape;
},modifyAxisTickOrLabel:function(shape,size){
var _319b=new _30e8.m(1);
var _319c=shape;
for(var _319d=0,_319e=this.transforms,_319f=_319e.length;_319d<_319f;++_319d){
var _31a0=_319e[_319d];
if(_31a0.isCluster()||_31a0.isTranspose()){
_319b.add(shape);
_319b=_31a0.preProcess(_319b,size);
_31a0.transformShape(shape,size,this.scales);
_31a0.postProcess(size);
if(_319b.size()==0){
_319c=null;
}
}
}
return _319c;
},modifyShapes:function(_31a1,size){
for(var _31a2=0,_31a3=this.transforms,_31a4=_31a3.length;_31a2<_31a4;++_31a2){
var _31a5=_31a3[_31a2];
_31a5.initialize(this.scales);
_31a1=_31a5.preProcess(_31a1,size);
_31a1=_31a5.transformShapes(_31a1,size,this.scales);
_31a5.postProcess(size);
}
return _31a1;
},getAvailableWidth:function(width,_31a6){
var _31a7=0;
for(var _31a8=0,_31a9=this.transforms,_31aa=_31a9.length;_31a8<_31aa;++_31a8){
var _31ab=_31a9[_31a8];
_31a7=_31ab.calculateGapSize(width,_31a6-1);
}
return width-_31a7;
},initializeGeometryForBounds:function(_31ac,_31ad){
if(this.insideAxes){
var _31ae=Math.min(_31ad.height,_31ad.width)/2;
_31ac.setBounds(2*3.141592653589793*_31ae,_31ae);
}else{
_31ac.setBounds(_31ad.width,_31ad.height);
}
},transposesAxes:function(){
var _31af=false;
for(var _31b0=0,_31b1=this.transforms,_31b2=_31b1.length;_31b0<_31b2;++_31b0){
var _31b3=_31b1[_31b0];
if(_31b3.isTranspose()){
_31af=!_31af;
}
}
return _31af;
},containsPolar:function(){
for(var _31b4=0,_31b5=this.transforms,_31b6=_31b5.length;_31b4<_31b6;++_31b4){
var _31b7=_31b5[_31b4];
if(_31b7.isPolar()){
return true;
}
}
return false;
},getFields:function(_31b8,_31b9){
var _31ba=new _30e8.m();
for(var _31bb=0,_31bc=_31b8.length;_31bb<_31bc;++_31bb){
var _31bd=_31b8[_31bb];
var _31be=_31bd.positions;
for(var i=0;i<_31be.length;++i){
var _31bf=_31be[i];
var p=this.getScaleIndex(i,_31be.length,this.scales.length);
if(p==_31b9&&_31bf.getBaseField()!=null){
_31ba.add(_31bf.getBaseField());
}
}
}
return _31ba;
},getScaleIndex:function(i,_31c0,_31c1){
if(_31c0==_31c1){
return i;
}
if(_31c0==2*_31c1){
return Math.floor(i/2);
}
if(_31c0==_31c1+1){
return i<2?0:i-1;
}
throw new _30f8.m("Mismatch between scales and fields lengths");
},makeUnitMappings:function(_31c2,_31c3,_31c4,_31c5){
var parts=new _30f6.m();
for(var _31c6=0,_31c7=_31c2.size();_31c6<_31c7;++_31c6){
var field=_31c2.get(_31c6);
var unit=_31c4.get(field.id);
var o=parts.get(unit.name);
if(field.isCategorical()){
var _31c8=this.merge(o,field.categories);
parts.put(unit.name,_31c8);
}else{
if(field.range.isComplete()){
var range;
if(_31c3!=null&&(this.containsPolar()||_31c5)){
range=_31c3;
}else{
range=_30f5.m.convertRange(field.range,field.unit,unit);
if(o!=null){
range=range.unionValue((o).min);
range=range.unionValue((o).max);
}
if(_31c3!=null){
range=range.unionValue(_31c3.min);
range=range.unionValue(_31c3.max);
}
}
parts.put(unit.name,range);
}
}
}
return parts;
},findMatchingUnit:function(unit,_31c9){
if(!unit.measure.isGeneric()){
return unit;
}
for(var _31ca=0,_31cb=_31c9.size();_31ca<_31cb;++_31ca){
var f=_31c9.get(_31ca);
if(f.unit==unit){
continue;
}
if(unit.measure.categorical){
var name=f.unit.name;
if(name.CPVisEngineEquals(unit.name)&&f.unit.measure.categorical){
return f.unit;
}
}else{
if(f.unit.measure.matches(unit.measure)){
return f.unit;
}
}
}
return unit;
},merge:function(a,b){
if(a==null){
return b;
}
if(b==null){
return a;
}
var set=new _30f6.m();
for(var _31cc=0,_31cd=a.length;_31cc<_31cd;++_31cc){
var s=a[_31cc];
set.put(s,s);
}
var add=0;
for(var _31ce=0,_31cf=b.length;_31ce<_31cf;++_31ce){
var s=b[_31ce];
if(set.get(s)==null){
add++;
}
}
var _31d0=new Array(a.length+add);
var n=0;
for(var _31d1=0,_31d2=a.length;_31d1<_31d2;++_31d1){
var s=a[_31d1];
_31d0[n++]=s;
}
for(var _31d3=0,_31d4=b.length;_31d3<_31d4;++_31d3){
var s=b[_31d3];
if(set.get(s)==null){
_31d0[n++]=s;
}
}
return _31d0;
},getDrawnPosition:function(_31d5){
if(_31d5>1){
_31d5=1;
}
if(this.transposesAxes()&&_31d5<2){
return 1-_31d5;
}else{
return _31d5;
}
},getDataValuesFor:function(x,y,_31d6){
var _31d7=[y,x];
for(var i=this.transforms.length-1;i>-1;--i){
if(this.transforms[i].isInversible()){
_31d7=this.transforms[i].inverseTransform(_31d7,_31d6,this.scales);
}
}
_31d7[0]=_31d6.height-_31d7[0];
var _31d8=Array.create([this.scales.length],0);
for(var i=0;i<this.scales.length&&i<2;++i){
var dim=i>1?1:(i==0?_31d6.height:_31d6.width);
var v=this.scales[i].dimensionValueToDataValue(_31d7[i],dim);
if(v==null){
return null;
}
_31d8[i]=v;
}
return _31d8;
},getAxisForDimension:function(dim){
for(var _31d9=0,_31da=this.axes,_31db=_31da.length;_31d9<_31db;++_31d9){
var a=_31da[_31d9];
if(a.whichScale==dim){
return a;
}
}
return null;
},containsCluster:function(){
for(var _31dc=0,_31dd=this.transforms,_31de=_31dd.length;_31dc<_31de;++_31dc){
var _31df=_31dd[_31dc];
if(_31df.isCluster()){
return true;
}
}
return false;
},containsTranspose:function(){
for(var _31e0=0,_31e1=this.transforms,_31e2=_31e1.length;_31e0<_31e2;++_31e0){
var _31e3=_31e1[_31e0];
if(_31e3.isTranspose()){
return true;
}
}
return false;
},containsStacking:function(){
for(var _31e4=0,_31e5=this.transforms,_31e6=_31e5.length;_31e4<_31e6;++_31e4){
var _31e7=_31e5[_31e4];
if(_31e7.isStacking()){
return true;
}
}
return false;
},get2DScaleRanges:function(){
var ymin=this.scales.length<1?0:this.scales[0].dimensionValueToDataValue(0,1);
var ymax=this.scales.length<1?1:this.scales[0].dimensionValueToDataValue(1,1);
var xmin=this.scales.length<2?0:this.scales[1].dimensionValueToDataValue(0,1);
var xmax=this.scales.length<2?1:this.scales[1].dimensionValueToDataValue(1,1);
return [xmin,xmax,ymin,ymax];
},getOffsetInFreeDirection:function(item,_31e8,_31e9){
var _31ea=this.getCoordinateCenter(_31e9);
var _31eb=item.getCenter();
var X=_31eb.x-_31ea.x;
var Y=_31eb.y-_31ea.y;
var _31ec=_30f9.m.r3(Math.sqrt((X*X)+(Y*Y)));
X=_30f9.m.r3(X/_31ec);
Y=_30f9.m.r3(Y/_31ec);
var dx=_31e8*X;
var dy=_31e8*Y;
return new _30fa.m(dx,dy);
},getCoordinateCenter:function(_31ed){
var dummy=new _30fb.m(0,0,0);
var _31ee;
this.modifyShape(dummy,_31ed);
_31ee=new _30fa.m(dummy.x,dummy.y);
_31ee.y=_31ed.height-_31ee.y;
return _31ee;
},isStraightPolarGridLine:function(){
return this.isValidRadar()&&this.scales[1].isCategorical()&&this.isDefinedStraightInSpec();
},isValidRadar:function(){
return this.containsPolar()&&this.scales.length==2&&this.axes.length==2;
},isDefinedStraightInSpec:function(){
var _31ef=this.axes[0].axisSpec;
var _31f0=_31ef.gridStyle;
if(_31f0!=null){
var _31f1=_31f0.symbol;
if(_31f1==null){
return true;
}
if("curved".CPVisEngineEquals(_31f1)){
return false;
}
}
return true;
},isPoylgonal:function(id){
return (id!=null&&id.CPVISEngineEndsWith("Coords"))&&this.isStraightPolarGridLine();
}});
_30fe.createCoordinates=function(vis,_31f2){
return new _30fe(vis,_31f2,null,null,false,null);
};
return _30fe;
});
},"com/ibm/vis/engine/internal/ColorUtil":function(){
define("com/ibm/vis/engine/internal/ColorUtil",["com/ibm/init/fork!./ColorNew","com/ibm/init/fork!./nativeImpl/BasicFactory","com/ibm/init/fork!./nativeImpl/IntegerUtil","com/ibm/init/fork!./nativeImpl/Map","com/ibm/init/statics","dojo/_base/declare"],function(_31f3,_31f4,_31f5,_31f6,_31f7,_31f8){
var _31f9=_31f8("com.ibm.vis.engine.internal.ColorUtil",null,{});
_31f9.createColorFromColorSpec=function(_31fa){
if(_31fa!=null){
var color=new _31f3.m(_31f9.checkForNull(_31fa.r),_31f9.checkForNull(_31fa.g),_31f9.checkForNull(_31fa.b),_31f9.checkForNull(_31fa.a));
if(_31fa.h!=null){
var h=_31fa.h;
color.setHue(h);
}
if(_31fa.s!=null){
var s=_31fa.s;
color.setSaturation(s);
}
if(_31fa.l!=null){
var l=_31fa.l;
color.setLightness(l);
}
if(_31fa.v!=null){
var v=_31fa.v;
color.setValue(v);
}
if(_31fa.dAlpha!=null){
var _31fb=_31fa.dAlpha;
color.setdAlpha(_31fb);
}
if(_31fa.dSaturation!=null){
var _31fc=_31fa.dSaturation;
color.setdSaturation(_31fc);
}
if(_31fa.dValue!=null){
var _31fd=_31fa.dValue;
color.setdValue(_31fd);
}
if(_31fa.dLightness!=null){
var _31fe=_31fa.dLightness;
color.setdLightness(_31fe);
}
return color;
}
return null;
};
_31f9.createColorFromString=function(_31ff){
var color=null;
if(_31ff==null){
return null;
}
if(_31ff.CPVISEngineStartsWith("#")){
color=_31f9.createColorFromHexCode(_31ff);
}else{
if(_31ff.toLowerCase().CPVISEngineStartsWith("rgb(")||_31ff.toLowerCase().CPVISEngineStartsWith("rgba(")){
color=_31f9.createColorFromRGBString(_31ff);
}else{
color=_31f9.getCSSColors().get(_31ff.toLowerCase());
}
}
if(color==null){
color=_31f9.createDefaultColor();
}
return color;
};
_31f9.createDefaultColor=function(){
return new _31f3.m(0,0,0,1);
};
_31f9.getDefaultStrokeColor=function(){
return _31f9.DEFAULT_STROKE_FILL_COLOR;
};
_31f9.getDefaultFillColor=function(){
return _31f9.DEFAULT_FILL_COLOR;
};
_31f9.getDefaultGlowColor=function(){
return _31f9.DEFAULT_GLOW_COLOR;
};
_31f9.getDefaultShadowColor=function(){
return _31f9.DEFAULT_SHADOW_COLOR;
};
_31f9.createColor=function(){
return new _31f3.m(NaN,NaN,NaN,NaN);
};
_31f9.createColorFromRGBA=function(r,g,b,a){
return new _31f3.m(r,g,b,a);
};
_31f9.createColorFromRGB=function(r,g,b){
return _31f9.createColorFromRGBA(r,g,b,NaN);
};
_31f9.makeCombinedColor=function(_3200,base){
if(base==null){
return _3200.cloneColor();
}
var _3201=base.cloneColor();
_3201.combineWithColor(_3200);
return _3201;
};
_31f9.createColorFromJSON=function(json){
var color=null;
if(_31f4.m.getItem(json,"type")==null){
var a=_31f9.checkForNull(_31f4.m.getItem(json,"a"));
var r=_31f9.checkForNull(_31f4.m.getItem(json,"r"));
var g=_31f9.checkForNull(_31f4.m.getItem(json,"g"));
var b=_31f9.checkForNull(_31f4.m.getItem(json,"b"));
var h=_31f9.checkForNull(_31f4.m.getItem(json,"h"));
var s=_31f9.checkForNull(_31f4.m.getItem(json,"s"));
var l=_31f9.checkForNull(_31f4.m.getItem(json,"l"));
var v=_31f9.checkForNull(_31f4.m.getItem(json,"v"));
var _3202=_31f9.checkForNull(_31f4.m.getItem(json,"dAlpha"));
var _3203=_31f9.checkForNull(_31f4.m.getItem(json,_31f3.m.D_SATURATION));
var _3204=_31f9.checkForNull(_31f4.m.getItem(json,"dLightness"));
var _3205=_31f9.checkForNull(_31f4.m.getItem(json,"dValue"));
color=new _31f3.m(r,g,b,a);
color.setHue(h);
color.setSaturation(s);
color.setLightness(l);
color.setValue(v);
color.setdAlpha(_3202);
color.setdSaturation(_3203);
color.setdValue(_3205);
color.setdLightness(_3204);
}
return color;
};
_31f9.checkForNull=function(value){
if(value==null){
return NaN;
}
return value;
};
_31f9.parseHex=function(s,_3206,_3207){
var _3208=_31f5.m.parseInt(s.substring(_3206,_3206+(_3207?1:2)),16);
if(_3208==null){
return -1;
}
var v=_3208;
if(_3207){
return v*17;
}
return v;
};
_31f9.createColorFromHexCode=function(s){
var _3209=s.CPVisEngineLength();
var R=0;
var G=0;
var B=0;
var A=NaN;
if(_3209==4){
R=_31f9.parseHex(s,1,true);
G=_31f9.parseHex(s,2,true);
B=_31f9.parseHex(s,3,true);
}else{
if(_3209==5){
R=_31f9.parseHex(s,1,true);
G=_31f9.parseHex(s,2,true);
B=_31f9.parseHex(s,3,true);
A=_31f9.parseHex(s,4,true)/255;
}else{
if(_3209==7){
R=_31f9.parseHex(s,1,false);
G=_31f9.parseHex(s,3,false);
B=_31f9.parseHex(s,5,false);
}else{
if(_3209==9){
R=_31f9.parseHex(s,1,false);
G=_31f9.parseHex(s,3,false);
B=_31f9.parseHex(s,5,false);
A=_31f9.parseHex(s,7,false)/255;
}else{
return null;
}
}
}
}
if(R<0||G<0||B<0||A<0){
return null;
}
return _31f9.createColorFromRGBA(R,G,B,A);
};
_31f9.createColorFromRGBString=function(_320a){
var _320b=_320a.substring(_320a.indexOf("(")+1,_320a.indexOf(")"));
var rgb=_320b.split(",");
if(rgb.length<3||rgb.length>4){
return null;
}
var red=_31f4.m.parseDouble(rgb[0]);
var green=_31f4.m.parseDouble(rgb[1]);
var blue=_31f4.m.parseDouble(rgb[2]);
var _320c=1;
if(rgb.length==4){
_320c=_31f4.m.parseDouble(rgb[3]);
}
return _31f9.createColorFromRGBA(red,green,blue,_320c);
};
_31f9.toCanonicalColor=function(_320d){
var _320e=null;
if(_320d!=null){
if(_31f4.m.isString(_320d)){
_320e=_31f9.createColorFromString(_320d);
}else{
_320e=_31f9.createColorFromColorSpec(_320d);
if(_320e.isEmpty()){
_320e=_31f9.createDefaultColor();
}
}
}
return _320e;
};
_31f9.getCSSColors=function(){
if(_31f9.cssColorsNeedsInit){
_31f9.CSS_COLORS=new _31f6.m();
_31f9.CSS_COLORS.put("aliceblue",_31f9.createColorFromRGB(240,248,255));
_31f9.CSS_COLORS.put("antiquewhite",_31f9.createColorFromRGB(250,235,215));
_31f9.CSS_COLORS.put("aqua",_31f9.createColorFromRGB(0,255,255));
_31f9.CSS_COLORS.put("aquamarine",_31f9.createColorFromRGB(127,255,212));
_31f9.CSS_COLORS.put("azure",_31f9.createColorFromRGB(240,255,255));
_31f9.CSS_COLORS.put("beige",_31f9.createColorFromRGB(245,245,220));
_31f9.CSS_COLORS.put("bisque",_31f9.createColorFromRGB(255,228,196));
_31f9.CSS_COLORS.put("black",_31f9.createColorFromRGB(0,0,0));
_31f9.CSS_COLORS.put("blanchedalmond",_31f9.createColorFromRGB(255,235,205));
_31f9.CSS_COLORS.put("blue",_31f9.createColorFromRGB(0,0,255));
_31f9.CSS_COLORS.put("blueviolet",_31f9.createColorFromRGB(138,43,226));
_31f9.CSS_COLORS.put("brown",_31f9.createColorFromRGB(165,42,42));
_31f9.CSS_COLORS.put("burlywood",_31f9.createColorFromRGB(222,184,135));
_31f9.CSS_COLORS.put("cadetblue",_31f9.createColorFromRGB(95,158,160));
_31f9.CSS_COLORS.put("chartreuse",_31f9.createColorFromRGB(127,255,0));
_31f9.CSS_COLORS.put("chocolate",_31f9.createColorFromRGB(210,105,30));
_31f9.CSS_COLORS.put("coral",_31f9.createColorFromRGB(255,127,80));
_31f9.CSS_COLORS.put("cornflowerblue",_31f9.createColorFromRGB(100,149,237));
_31f9.CSS_COLORS.put("cornsilk",_31f9.createColorFromRGB(255,248,220));
_31f9.CSS_COLORS.put("crimson",_31f9.createColorFromRGB(220,20,60));
_31f9.CSS_COLORS.put("cyan",_31f9.createColorFromRGB(0,255,255));
_31f9.CSS_COLORS.put("darkblue",_31f9.createColorFromRGB(0,0,139));
_31f9.CSS_COLORS.put("darkcyan",_31f9.createColorFromRGB(0,139,139));
_31f9.CSS_COLORS.put("darkgoldenrod",_31f9.createColorFromRGB(184,134,11));
_31f9.CSS_COLORS.put("darkgray",_31f9.createColorFromRGB(169,169,169));
_31f9.CSS_COLORS.put("darkgreen",_31f9.createColorFromRGB(0,100,0));
_31f9.CSS_COLORS.put("darkgrey",_31f9.createColorFromRGB(169,169,169));
_31f9.CSS_COLORS.put("darkkhaki",_31f9.createColorFromRGB(189,183,107));
_31f9.CSS_COLORS.put("darkmagenta",_31f9.createColorFromRGB(139,0,139));
_31f9.CSS_COLORS.put("darkolivegreen",_31f9.createColorFromRGB(85,107,47));
_31f9.CSS_COLORS.put("darkorange",_31f9.createColorFromRGB(255,140,0));
_31f9.CSS_COLORS.put("darkorchid",_31f9.createColorFromRGB(153,50,204));
_31f9.CSS_COLORS.put("darkred",_31f9.createColorFromRGB(139,0,0));
_31f9.CSS_COLORS.put("darksalmon",_31f9.createColorFromRGB(233,150,122));
_31f9.CSS_COLORS.put("darkseagreen",_31f9.createColorFromRGB(143,188,143));
_31f9.CSS_COLORS.put("darkslateblue",_31f9.createColorFromRGB(72,61,139));
_31f9.CSS_COLORS.put("darkslategray",_31f9.createColorFromRGB(47,79,79));
_31f9.CSS_COLORS.put("darkslategrey",_31f9.createColorFromRGB(47,79,79));
_31f9.CSS_COLORS.put("darkturquoise",_31f9.createColorFromRGB(0,206,209));
_31f9.CSS_COLORS.put("darkviolet",_31f9.createColorFromRGB(148,0,211));
_31f9.CSS_COLORS.put("deeppink",_31f9.createColorFromRGB(255,20,147));
_31f9.CSS_COLORS.put("deepskyblue",_31f9.createColorFromRGB(0,191,255));
_31f9.CSS_COLORS.put("dimgray",_31f9.createColorFromRGB(105,105,105));
_31f9.CSS_COLORS.put("dimgrey",_31f9.createColorFromRGB(105,105,105));
_31f9.CSS_COLORS.put("dodgerblue",_31f9.createColorFromRGB(30,144,255));
_31f9.CSS_COLORS.put("firebrick",_31f9.createColorFromRGB(178,34,34));
_31f9.CSS_COLORS.put("floralwhite",_31f9.createColorFromRGB(255,250,240));
_31f9.CSS_COLORS.put("forestgreen",_31f9.createColorFromRGB(34,139,34));
_31f9.CSS_COLORS.put("fuchsia",_31f9.createColorFromRGB(255,0,255));
_31f9.CSS_COLORS.put("gainsboro",_31f9.createColorFromRGB(220,220,220));
_31f9.CSS_COLORS.put("ghostwhite",_31f9.createColorFromRGB(248,248,255));
_31f9.CSS_COLORS.put("gold",_31f9.createColorFromRGB(255,215,0));
_31f9.CSS_COLORS.put("goldenrod",_31f9.createColorFromRGB(218,165,32));
_31f9.CSS_COLORS.put("gray",_31f9.createColorFromRGB(128,128,128));
_31f9.CSS_COLORS.put("grey",_31f9.createColorFromRGB(128,128,128));
_31f9.CSS_COLORS.put("green",_31f9.createColorFromRGB(0,128,0));
_31f9.CSS_COLORS.put("greenyellow",_31f9.createColorFromRGB(173,255,47));
_31f9.CSS_COLORS.put("honeydew",_31f9.createColorFromRGB(240,255,240));
_31f9.CSS_COLORS.put("hotpink",_31f9.createColorFromRGB(255,105,180));
_31f9.CSS_COLORS.put("indianred",_31f9.createColorFromRGB(205,92,92));
_31f9.CSS_COLORS.put("indigo",_31f9.createColorFromRGB(75,0,130));
_31f9.CSS_COLORS.put("ivory",_31f9.createColorFromRGB(255,255,240));
_31f9.CSS_COLORS.put("khaki",_31f9.createColorFromRGB(240,230,140));
_31f9.CSS_COLORS.put("lavender",_31f9.createColorFromRGB(230,230,250));
_31f9.CSS_COLORS.put("lavenderblush",_31f9.createColorFromRGB(255,240,245));
_31f9.CSS_COLORS.put("lawngreen",_31f9.createColorFromRGB(124,252,0));
_31f9.CSS_COLORS.put("lemonchiffon",_31f9.createColorFromRGB(255,250,205));
_31f9.CSS_COLORS.put("lightblue",_31f9.createColorFromRGB(173,216,230));
_31f9.CSS_COLORS.put("lightcoral",_31f9.createColorFromRGB(240,128,128));
_31f9.CSS_COLORS.put("lightcyan",_31f9.createColorFromRGB(224,255,255));
_31f9.CSS_COLORS.put("lightgoldenrodyellow",_31f9.createColorFromRGB(250,250,210));
_31f9.CSS_COLORS.put("lightgray",_31f9.createColorFromRGB(211,211,211));
_31f9.CSS_COLORS.put("lightgreen",_31f9.createColorFromRGB(144,238,144));
_31f9.CSS_COLORS.put("lightgrey",_31f9.createColorFromRGB(211,211,211));
_31f9.CSS_COLORS.put("lightpink",_31f9.createColorFromRGB(255,182,193));
_31f9.CSS_COLORS.put("lightsalmon",_31f9.createColorFromRGB(255,160,122));
_31f9.CSS_COLORS.put("lightseagreen",_31f9.createColorFromRGB(32,178,170));
_31f9.CSS_COLORS.put("lightskyblue",_31f9.createColorFromRGB(135,206,250));
_31f9.CSS_COLORS.put("lightslategray",_31f9.createColorFromRGB(119,136,153));
_31f9.CSS_COLORS.put("lightslategrey",_31f9.createColorFromRGB(119,136,153));
_31f9.CSS_COLORS.put("lightsteelblue",_31f9.createColorFromRGB(176,196,222));
_31f9.CSS_COLORS.put("lightyellow",_31f9.createColorFromRGB(255,255,224));
_31f9.CSS_COLORS.put("lime",_31f9.createColorFromRGB(0,255,0));
_31f9.CSS_COLORS.put("limegreen",_31f9.createColorFromRGB(50,205,50));
_31f9.CSS_COLORS.put("linen",_31f9.createColorFromRGB(250,240,230));
_31f9.CSS_COLORS.put("magenta",_31f9.createColorFromRGB(255,0,255));
_31f9.CSS_COLORS.put("maroon",_31f9.createColorFromRGB(128,0,0));
_31f9.CSS_COLORS.put("mediumaquamarine",_31f9.createColorFromRGB(102,205,170));
_31f9.CSS_COLORS.put("mediumblue",_31f9.createColorFromRGB(0,0,205));
_31f9.CSS_COLORS.put("mediumorchid",_31f9.createColorFromRGB(186,85,211));
_31f9.CSS_COLORS.put("mediumpurple",_31f9.createColorFromRGB(147,112,219));
_31f9.CSS_COLORS.put("mediumseagreen",_31f9.createColorFromRGB(60,179,113));
_31f9.CSS_COLORS.put("mediumslateblue",_31f9.createColorFromRGB(123,104,238));
_31f9.CSS_COLORS.put("mediumspringgreen",_31f9.createColorFromRGB(0,250,154));
_31f9.CSS_COLORS.put("mediumturquoise",_31f9.createColorFromRGB(72,209,204));
_31f9.CSS_COLORS.put("mediumvioletred",_31f9.createColorFromRGB(199,21,133));
_31f9.CSS_COLORS.put("midnightblue",_31f9.createColorFromRGB(25,25,112));
_31f9.CSS_COLORS.put("mintcream",_31f9.createColorFromRGB(245,255,250));
_31f9.CSS_COLORS.put("mistyrose",_31f9.createColorFromRGB(255,228,225));
_31f9.CSS_COLORS.put("moccasin",_31f9.createColorFromRGB(255,228,181));
_31f9.CSS_COLORS.put("navajowhite",_31f9.createColorFromRGB(255,222,173));
_31f9.CSS_COLORS.put("navy",_31f9.createColorFromRGB(0,0,128));
_31f9.CSS_COLORS.put("oldlace",_31f9.createColorFromRGB(253,245,230));
_31f9.CSS_COLORS.put("olive",_31f9.createColorFromRGB(128,128,0));
_31f9.CSS_COLORS.put("olivedrab",_31f9.createColorFromRGB(107,142,35));
_31f9.CSS_COLORS.put("orange",_31f9.createColorFromRGB(255,165,0));
_31f9.CSS_COLORS.put("orangered",_31f9.createColorFromRGB(255,69,0));
_31f9.CSS_COLORS.put("orchid",_31f9.createColorFromRGB(218,112,214));
_31f9.CSS_COLORS.put("palegoldenrod",_31f9.createColorFromRGB(238,232,170));
_31f9.CSS_COLORS.put("palegreen",_31f9.createColorFromRGB(152,251,152));
_31f9.CSS_COLORS.put("paleturquoise",_31f9.createColorFromRGB(175,238,238));
_31f9.CSS_COLORS.put("palevioletred",_31f9.createColorFromRGB(219,112,147));
_31f9.CSS_COLORS.put("papayawhip",_31f9.createColorFromRGB(255,239,213));
_31f9.CSS_COLORS.put("peachpuff",_31f9.createColorFromRGB(255,218,185));
_31f9.CSS_COLORS.put("peru",_31f9.createColorFromRGB(205,133,63));
_31f9.CSS_COLORS.put("pink",_31f9.createColorFromRGB(255,192,203));
_31f9.CSS_COLORS.put("plum",_31f9.createColorFromRGB(221,160,221));
_31f9.CSS_COLORS.put("powderblue",_31f9.createColorFromRGB(176,224,230));
_31f9.CSS_COLORS.put("purple",_31f9.createColorFromRGB(128,0,128));
_31f9.CSS_COLORS.put("red",_31f9.createColorFromRGB(255,0,0));
_31f9.CSS_COLORS.put("rosybrown",_31f9.createColorFromRGB(188,143,143));
_31f9.CSS_COLORS.put("royalblue",_31f9.createColorFromRGB(65,105,225));
_31f9.CSS_COLORS.put("saddlebrown",_31f9.createColorFromRGB(139,69,19));
_31f9.CSS_COLORS.put("salmon",_31f9.createColorFromRGB(250,128,114));
_31f9.CSS_COLORS.put("sandybrown",_31f9.createColorFromRGB(244,164,96));
_31f9.CSS_COLORS.put("seagreen",_31f9.createColorFromRGB(46,139,87));
_31f9.CSS_COLORS.put("seashell",_31f9.createColorFromRGB(255,245,238));
_31f9.CSS_COLORS.put("sienna",_31f9.createColorFromRGB(160,82,45));
_31f9.CSS_COLORS.put("silver",_31f9.createColorFromRGB(192,192,192));
_31f9.CSS_COLORS.put("skyblue",_31f9.createColorFromRGB(135,206,235));
_31f9.CSS_COLORS.put("slateblue",_31f9.createColorFromRGB(106,90,205));
_31f9.CSS_COLORS.put("slategray",_31f9.createColorFromRGB(112,128,144));
_31f9.CSS_COLORS.put("slategrey",_31f9.createColorFromRGB(112,128,144));
_31f9.CSS_COLORS.put("snow",_31f9.createColorFromRGB(255,250,250));
_31f9.CSS_COLORS.put("springgreen",_31f9.createColorFromRGB(0,255,127));
_31f9.CSS_COLORS.put("steelblue",_31f9.createColorFromRGB(70,130,180));
_31f9.CSS_COLORS.put("tan",_31f9.createColorFromRGB(210,180,140));
_31f9.CSS_COLORS.put("teal",_31f9.createColorFromRGB(0,128,128));
_31f9.CSS_COLORS.put("thistle",_31f9.createColorFromRGB(216,191,216));
_31f9.CSS_COLORS.put("tomato",_31f9.createColorFromRGB(255,99,71));
_31f9.CSS_COLORS.put("turquoise",_31f9.createColorFromRGB(64,224,208));
_31f9.CSS_COLORS.put("violet",_31f9.createColorFromRGB(238,130,238));
_31f9.CSS_COLORS.put("wheat",_31f9.createColorFromRGB(245,222,179));
_31f9.CSS_COLORS.put("white",_31f9.createColorFromRGB(255,255,255));
_31f9.CSS_COLORS.put("whitesmoke",_31f9.createColorFromRGB(245,245,245));
_31f9.CSS_COLORS.put("yellow",_31f9.createColorFromRGB(255,255,0));
_31f9.CSS_COLORS.put("yellowgreen",_31f9.createColorFromRGB(154,205,50));
_31f9.CSS_COLORS.put("transparent",_31f9.createColorFromRGBA(0,0,0,0));
_31f9.cssColorsNeedsInit=false;
}
return _31f9.CSS_COLORS;
};
_31f9.getDefaultColors=function(){
return _31f9.DEFAULT_COLORS;
};
_31f7.add("com/ibm/vis/engine/internal/ColorUtil",["com/ibm/vis/engine/internal/ColorNew","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/nativeImpl/Map"],function(){
_31f9.CSS_COLORS=null;
_31f9.DEFAULT_COLORS=["#0089CE","#7CBC4A","#D8C625","#F79428","#D6332F","#A83293","#2A58A8","#33A0DA","#97C66D","#E2DE59","#FAA753","#E46243","#B45DA4","#5C72B7","#69AFE0","#AFD78F","#EBEC86","#FCBC7B","#EA8768","#C282B8","#2A58A8"];
_31f9.DEFAULT_GLOW_COLOR=new _31f3.m(255,255,0,1);
_31f9.DEFAULT_FILL_COLOR=new _31f3.m(170,170,170,1);
_31f9.DEFAULT_STROKE_FILL_COLOR=new _31f3.m(0,0,0,1);
_31f9.DEFAULT_SHADOW_COLOR=new _31f3.m(0,0,0,1);
_31f9.cssColorsNeedsInit=true;
});
return _31f9;
});
},"com/ibm/vis/engine/internal/interaction/interpolation/FillInterpolatorUtil":function(){
define("com/ibm/vis/engine/internal/interaction/interpolation/FillInterpolatorUtil",["com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/fork!../../nativeImpl/Double","com/ibm/init/statics","dojo/_base/declare"],function(_320f,_3210,_3211,_3212){
var _3213=_3212("com.ibm.vis.engine.internal.interaction.interpolation.FillInterpolatorUtil",null,{});
_3213.makeDojoColor=function(r,g,b,a){
var c=_320f.m.createJSONObject();
if(!_3210.m.isNaN(r)){
_320f.m.put(c,"r",(Math.round(r)));
}
if(!_3210.m.isNaN(g)){
_320f.m.put(c,"g",(Math.round(g)));
}
if(!_3210.m.isNaN(b)){
_320f.m.put(c,"b",(Math.round(b)));
}
if(!_3210.m.isNaN(a)){
_320f.m.put(c,"a",a);
}
return c;
};
_3213.makeColorFromDojo=function(c){
return [_320f.m.getNumberWithDefault(c,"r",NaN),_320f.m.getNumberWithDefault(c,"g",NaN),_320f.m.getNumberWithDefault(c,"b",NaN),_320f.m.getNumberWithDefault(c,"a",1)];
};
_3213.ensureFillAlphas=function(fill){
if(fill==null){
return;
}
var _3214=_320f.m.getItem(fill,"colors");
if(_3214!=null){
var len=_3214.length;
for(var i=0;i<len;++i){
_3213.ensureColorAlpha(_320f.m.getItem(_3214[i],"color"));
}
return;
}
_3213.ensureColorAlpha(fill);
};
_3213.ensureColorAlpha=function(c){
if(c==null){
return;
}
if(_320f.m.getItem(c,"a")==null){
_320f.m.put(c,"a",1);
}
};
return _3213;
});
},"com/ibm/vis/engine/internal/struct/Insets":function(){
define("com/ibm/vis/engine/internal/struct/Insets",["com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!./Rect","com/ibm/init/statics","dojo/_base/declare"],function(_3215,_3216,_3217,_3218,_3219){
var _321a=_3219("com.ibm.vis.engine.internal.struct.Insets",null,{top:0,left:0,bottom:0,right:0,constructor:function(top,left,_321b,right){
this.top=top;
this.left=left;
this.bottom=_321b;
this.right=right;
},getHorizontal:function(){
return this.left+this.right;
},getVertical:function(){
return this.top+this.bottom;
},insetRect:function(rect){
return new _3217.m(rect.x+this.left,rect.y+this.top,rect.width-this.left-this.right,rect.height-this.top-this.bottom);
},insetRectFromDimension:function(dim){
return new _3217.m(this.left,this.top,dim.width-this.getHorizontal(),dim.height-this.getVertical());
},expandRect:function(_321c){
return new _3217.m(_321c.x-this.left,_321c.y-this.top,_321c.width+this.getHorizontal(),_321c.height+this.getVertical());
},insetRectBy:function(r){
if(this==_321a.NONE){
return r;
}
return new _3217.m(r.x+this.left,r.y+this.top,r.width-this.getHorizontal(),r.height-this.getVertical());
},expandRectBy:function(r){
if(this==_321a.NONE){
return r;
}
return new _3217.m(r.x-this.left,r.y-this.top,r.width+this.getHorizontal(),r.height+this.getVertical());
}});
_321a.makeForStylePadding=function(o,_321d,_321e){
if(o==null){
return _321a.NONE;
}
if(_3215.m.isNumber(o)||_3215.m.isString(o)){
var w=_3216.m.convertLength(o,_321d.width,_321e.width);
var h=_3216.m.convertLength(o,_321d.height,_321e.height);
return _321a.makeInsets(h,w,h,w);
}else{
if(o instanceof Object){
var spec=o;
return _321a.makeInsets(_3216.m.convertLength(spec.top,_321d.height,_321e.height),_3216.m.convertLength(spec.left,_321d.width,_321e.width),_3216.m.convertLength(spec.bottom,_321d.height,_321e.height),_3216.m.convertLength(spec.right,_321d.width,_321e.width));
}else{
return _321a.NONE;
}
}
};
_321a.makeInsets=function(top,left,_321f,right){
return new _321a((top==null)?0:top,(left==null)?0:left,(_321f==null)?0:_321f,(right==null)?0:right);
};
_321a.makeForStyleStroke=function(_3220,_3221,_3222,_3223,_3224){
if(_3220!=null&&_3220.width!=null){
var _3225=_3216.m.convertLength(_3220.width,_3222.height,_3223.height);
if(_3225==null){
_3225=1;
}
if("inside".CPVisEngineEquals(_3224)){
return new _321a(_3225,_3225,_3225,_3225);
}
return new _321a(_3225/2,_3225/2,_3225/2,_3225/2);
}else{
if(_3221!=null){
return new _321a(0.5,0.5,0.5,0.5);
}else{
return _321a.NONE;
}
}
};
_321a.makeForStyle=function(style,_3226){
var _3227=_321a.makeForStylePadding(style.padding,_3226,_3226);
var _3228=_321a.makeForStyleStroke(style.stroke,style.outline,_3226,_3226,null);
return _321a.combine(_3227,_3228);
};
_321a.combine=function(_3229,_322a){
return new _321a(_3229.top+_322a.top,_3229.left+_322a.left,_3229.bottom+_322a.bottom,_3229.right+_322a.right);
};
_321a.makeUniform=function(v){
return new _321a(v,v,v,v);
};
_3218.add("com/ibm/vis/engine/internal/struct/Insets",["com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/grammar/units/UnitConverter"],function(){
_321a.NONE=new _321a(0,0,0,0);
});
return _321a;
});
},"com/ibm/vis/engine/internal/nativeImpl/EventCoordinateHelper":function(){
define("com/ibm/vis/engine/internal/nativeImpl/EventCoordinateHelper",["dojo/_base/declare","dojo/dom-geometry","dojo/dom-style","dojox/gfx"],function(_322b,geom,style,g){
var _322c=_322b("com.ibm.vis.engine.internal.nativeImpl.EventCoordinateHelper",null,{_visControl:null,_origin:null,_includeScroll:null,constructor:function(_322d){
this._visControl=_322d;
this._includeScroll=true;
},_setOrigin:function(){
var _322e=this._visControl._renderer.surface;
var _322f=(g.renderer=="silverlight")?_322e._nodes[1]:this._visControl.domNode;
this._origin=geom.position(_322f,this._includeScroll);
var _3230=style.get(_322f,"paddingLeft");
var _3231=style.get(_322f,"paddingTop");
this._origin.x=this._origin.x+_3230;
this._origin.y=this._origin.y+_3231;
},_originX:function(){
this._setOrigin();
return this._origin.x;
},_originY:function(){
this._setOrigin();
return this._origin.y;
},shiftX:function(x){
return x-this._originX();
},reverseShiftX:function(x){
return x+this._originX();
},shiftY:function(y){
return y-this._originY();
},reverseShiftY:function(y){
return y+this._originY();
},shiftXarray:function(x){
var sx=this._originX();
var xs=new Array();
for(var i=0;i<x.length;i++){
xs[i]=x[i]-sx;
}
return xs;
},shiftYarray:function(y){
var sy=this._originY();
var ys=new Array();
for(var i=0;i<y.length;i++){
ys[i]=y[i]-sy;
}
return ys;
},includeScroll:function(){
return this._includeScroll;
}});
return _322c;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/stress/GroupedNode":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/stress/GroupedNode",["../Node","com/ibm/init/fork!../../../../nativeImpl/List","com/ibm/init/statics","dojo/_base/declare"],function(_3232,_3233,_3234,_3235){
var _3236=_3235("com.ibm.vis.engine.internal.grammar.layout.graph.stress.GroupedNode",[_3232],{children:null,constructor:function(row){
this.children=new _3233.m();
this.inLink=new Array(0);
this.outLink=new Array(0);
},addChild:function(a){
this.children.add(a);
a.parent=this;
},getChildCount:function(){
return this.children.size();
},getChild:function(i){
return this.children.get(i);
},addOutEdge:function(edge){
var t=new Array(this.outLink.length+1);
for(var i=0;i<this.outLink.length;++i){
t[i]=this.outLink[i];
}
t[this.outLink.length]=edge;
this.outLink=t;
this.links=null;
this.neighbors=null;
},addInEdge:function(edge){
var t=new Array(this.inLink.length+1);
for(var i=0;i<this.inLink.length;++i){
t[i]=this.inLink[i];
}
t[this.inLink.length]=edge;
this.inLink=t;
this.links=null;
this.neighbors=null;
}});
return _3236;
});
},"com/ibm/vis/engine/internal/grammar/coordinate/stack/GlyphStacker":function(){
define("com/ibm/vis/engine/internal/grammar/coordinate/stack/GlyphStacker",["./Stacker","com/ibm/init/fork!../../../nativeImpl/HashcodeMap","com/ibm/init/fork!../../../struct/Shape","com/ibm/init/fork!../../../struct/MultiPartPoly","com/ibm/init/fork!../../../nativeImpl/Double","com/ibm/init/fork!../../../struct/Poly","com/ibm/init/fork!../functions/FunctionalPathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_3237,_3238,_3239,_323a,_323b,_323c,_323d,_323e,_323f){
var _3240=_323f("com.ibm.vis.engine.internal.grammar.coordinate.stack.GlyphStacker",[_3237],{stackState:null,cachedFunctionalPaths:null,constructor:function(_3241){
this.stackState=_3241;
this.cachedFunctionalPaths=new _3238.m();
},stack:function(shape,zero,_3242){
if(shape.parent!=null&&"poly".CPVisEngineEquals(shape.parent.getType())){
return this.stackPointsOnLines(shape);
}else{
return this.stackIndependentGlyph(shape,_3242);
}
},stackPointsOnLines:function(shape){
var _3243=this.stackState.getTransformedPoly(shape.parent);
if("poly".CPVisEngineEquals(_3243.getType())){
return this.stackPointsOnSimplePoly(shape,_3243);
}else{
return this.stackPointsOnMultipartPoly(shape,_3243);
}
},stackPointsOnSimplePoly:function(shape,poly){
var _3244=shape.getCenter();
var yOfX=this.getYofXFromPoly(shape.parent,poly,_3244);
if(_323b.m.isNaN(yOfX)){
return shape;
}
shape.affine(1,0,1,yOfX-_3244.y,false);
return shape;
},stackPointsOnMultipartPoly:function(shape,poly){
var _3245=shape.getCenter();
for(var _3246=0,_3247=poly.subPolys,_3248=_3247.size();_3246<_3248;++_3246){
var part=_3247.get(_3246);
var _3249=part;
var yOfX=this.getYofXFromPoly(shape.parent,poly,_3245);
if(!_323b.m.isNaN(yOfX)){
shape.affine(1,0,1,yOfX-_3245.y,false);
return shape;
}
}
return shape;
},getYofXFromPoly:function(_324a,_324b,p){
var fp=this.getFunctionalPath(_324b);
if(fp==null){
if(!_324b.filled&&_324b.x.length==1){
if(Math.round(_324b.x[0])==Math.round(p.x)){
return _324b.y[0];
}
}
if(_324b.filled&&_324b.x.length==3){
if(Math.round(_324b.x[1])==Math.round(p.x)){
return _324b.y[1];
}
}
return NaN;
}
var leftY=-fp.getLeftY(p.x);
var _324c=-fp.getRightY(p.x);
if(_323b.m.isNaN(leftY)&&_323b.m.isNaN(_324c)){
return NaN;
}
var pp=this.getFunctionalPath(_324a);
if(pp!=null){
if(pp.isDiscontinuity(p.x)){
if(Math.round(p.y)==Math.round(-pp.getLeftY(p.x))){
return leftY;
}else{
if(Math.round(p.y)==Math.round(-pp.getRightY(p.x))){
return _324c;
}
}
}
}
if(leftY==_324c){
return leftY;
}
if(_323b.m.isNaN(leftY)){
return _324c;
}
if(_323b.m.isNaN(_324c)){
return leftY;
}
return _324c;
},getFunctionalPath:function(p){
if(!p.filled&&p.x.length<2||p.filled&&p.x.length<4){
return null;
}
var fp=this.cachedFunctionalPaths.get(p);
if(fp!=null){
return fp;
}
fp=_323d.m.makeStackingLine(p,0);
this.cachedFunctionalPaths.put(p,fp);
return fp;
},stackIndependentGlyph:function(shape,zero){
var _324d=shape.getCenter();
var _324e=_324d.y;
var _324f=this.stackState.getStackingOffset(_324d.x,shape.aestheticGroup,_324e,zero);
shape.affine(1,0,1,-_324f,false);
return shape;
}});
return _3240;
});
},"com/ibm/vis/engine/internal/data/DerivedData":function(){
define("com/ibm/vis/engine/internal/data/DerivedData",["com/ibm/init/fork!./Row","com/ibm/init/statics","dojo/_base/declare"],function(_3250,_3251,_3252){
var _3253=_3252("com.ibm.vis.engine.internal.data.DerivedData",null,{grouping:null,transform:null,constructor:function(_3254,_3255){
this.grouping=_3254;
this.transform=_3255;
},calculate:function(input){
var _3256=this.grouping.getOutputFieldCount()+this.transform.getOutputFieldCount();
var _3257=this.grouping.makeGroupings();
var _3258=this.getValuesPerGroup();
var rows;
if(_3258==-1){
rows=new Array(input.length);
}else{
rows=new Array(_3258*_3257.length);
}
for(var i=0;i<rows.length;++i){
rows[i]=_3250.m.createEmptyRow(_3256,i);
}
var start=0;
var _3259=this.transform.getMultiplier();
var _325a=this.getSumOfWeights(input,null);
for(var _325b=0,_325c=_3257.length;_325b<_325c;++_325b){
var _325d=_3257[_325b];
var n;
if(_3258==-1){
n=_325d.size();
}else{
n=_3258;
}
var _325e;
if(_325a==0){
_325e=_325d.size()/input.length;
}else{
_325e=this.getSumOfWeights(input,_325d)/_325a;
}
this.grouping.setRowValues(_325d,rows,start,n);
this.transform.setMultiplier(_3259*_325e);
this.transform.setValues(input,_325d,rows,start,n);
start+=n;
}
return rows;
},getSumOfWeights:function(input,_325f){
var _3260=0;
if(_325f!=null){
for(var i=0;i<_325f.size();++i){
_3260+=this.transform.getWeight(input[_325f.get(i)]);
}
}else{
for(var _3261=0,_3262=input.length;_3261<_3262;++_3261){
var row=input[_3261];
_3260+=this.transform.getWeight(row);
}
}
return _3260;
},getValuesPerGroup:function(){
return this.transform.getRowsCreated();
},getTransform:function(){
return this.transform;
}});
return _3253;
});
},"com/ibm/vis/exp/IdOrderNavigation":function(){
define("com/ibm/vis/exp/IdOrderNavigation",["dojo/_base/declare","dojo/_base/array","./FeatureNavigation"],function(_3263,_3264,_3265){
var _3266=_3263("com.ibm.vis.exp.IdOrderNavigation",[_3265],{_sceneItemArray:null,directionGreaterX:_3265.FORWARD,directionGreaterY:_3265.NOT_APPLICABLE,directionLesserX:_3265.REVERSE,directionLesserY:_3265.NOT_APPLICABLE,wrap:true,constructor:function(_3267,id){
},getFirst:function(){
var array=this._getArray();
var item=array[0];
var _3268=this.convertToSceneItem(item);
return _3268;
},setDirections:function(_3269){
this.directionGreaterX=_3269[_3265.GREATER_X];
this.directionGreaterY=_3269[_3265.GREATER_Y];
this.directionLesserX=_3269[_3265.LESSER_X];
this.directionLesserY=_3269[_3265.LESSER_Y];
},_getArray:function(){
if(this._sceneItemArray==null){
this._sceneItemArray=this._makeArray();
}
return this._sceneItemArray;
},_makeArray:function(){
var _326a=this.visControl._renderer.originalSceneMap;
var array=new Array();
var index=0;
var id=this.baseId+index;
var item=_326a[id];
item=this._handleLegendEntry(item);
while(item!=null){
array.push(item);
index++;
id=this.baseId+index;
item=_326a[id];
item=this._handleLegendEntry(item);
}
return array;
},nextGreaterX:function(_326b,_326c){
var _326d=null;
switch(this.directionGreaterX){
case _3265.FORWARD:
_326d=this._forward(_326b.sceneItem);
break;
case _3265.REVERSE:
_326d=this._reverse(_326b.sceneItem);
break;
case _3265.NOT_APPLICABLE:
return _326b;
break;
}
return this.convertToSceneItem(_326d);
},nextGreaterY:function(_326e,_326f){
var _3270=null;
switch(this.directionGreaterY){
case _3265.FORWARD:
_3270=this._forward(_326e.sceneItem);
break;
case _3265.REVERSE:
_3270=this._reverse(_326e.sceneItem);
break;
case _3265.NOT_APPLICABLE:
return _326e;
break;
}
return this.convertToSceneItem(_3270);
},nextLesserX:function(_3271,_3272){
var _3273=null;
switch(this.directionLesserX){
case _3265.FORWARD:
_3273=this._forward(_3271.sceneItem);
break;
case _3265.REVERSE:
_3273=this._reverse(_3271.sceneItem);
break;
case _3265.NOT_APPLICABLE:
return _3271;
break;
}
return this.convertToSceneItem(_3273);
},nextLesserY:function(_3274,_3275){
var _3276=null;
switch(this.directionLesserY){
case _3265.FORWARD:
_3276=this._forward(_3274.sceneItem);
break;
case _3265.REVERSE:
_3276=this._reverse(_3274.sceneItem);
break;
case _3265.NOT_APPLICABLE:
return _3274;
break;
}
return this.convertToSceneItem(_3276);
},_forward:function(_3277){
var array=this._getArray();
var index=_3264.indexOf(array,_3277)+1;
var _3278=array.length;
if(index<_3278){
return array[index];
}
if(this.wrap){
return array[0];
}
return array[index-1];
},_reverse:function(_3279){
var array=this._getArray();
var index=_3264.indexOf(array,_3279)-1;
if(index>-1){
return array[index];
}
if(this.wrap){
var max=array.length-1;
return array[max];
}
return array[0];
},_handleLegendEntry:function(item){
if(item==null){
return item;
}
var type=item.type;
if(type=="legendEntry"){
var _327a=item.children;
item=_327a[0];
}
return item;
}});
return _3266;
});
},"com/ibm/vis/engine/internal/scene/StyleBuilder":function(){
define("com/ibm/vis/engine/internal/scene/StyleBuilder",["com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!../Fill","com/ibm/init/fork!../ColorUtil","com/ibm/init/fork!../nativeImpl/SpecUtil","com/ibm/init/fork!../Gradient","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../util/MathUtil","com/ibm/init/statics","dojo/_base/declare"],function(_327b,_327c,_327d,_327e,_327f,_3280,_3281,_3282,_3283){
var _3284=_3283("com.ibm.vis.engine.internal.scene.StyleBuilder",null,{});
_3284.getPreferredSize=function(spec,_3285,_3286,_3287){
var s=_3285;
if(spec!=null){
var pref=_327b.m.convertLength(spec.preferred,_3285,_3287);
var max=_327b.m.convertLength(spec.max,_3285,_3287);
var min=_327b.m.convertLength(spec.min,_3285,_3287);
if(pref!=null){
if(_3286){
s=Math.max(pref,_3285);
}else{
s=pref;
}
}
if(max!=null){
s=Math.min(s,max);
}
if(min!=null){
s=Math.max(s,min);
}
}
return Math.min(s,_3287);
};
_3284.modifyFillColor=function(item,color){
var fill=item.fill;
if(fill==null){
item.fill=_327c.m.makeSolid(color);
}else{
if(fill.gradient==null){
fill.solid=_327d.m.makeCombinedColor(color,fill.solid);
}else{
fill.gradient.modifyGradientWithSolid(color);
}
}
};
_3284.modifyPaletteFill=function(item,style){
if("fill".CPVisEngineEquals(_327e.m.getFillType(style.fill))){
var spec=style.fill;
var g=_327f.m.makeFromSpec(spec,item);
if(item.fill!=null&&item.fill.solid!=null){
g.modifySolidWithGradient(item.fill.solid);
}
item.fill=_327c.m.makeGradient(g);
}else{
var color=_327d.m.toCanonicalColor(style.fill);
_3284.modifyFillColor(item,color);
}
};
_3284.modifyMainColor=function(item,_3288){
if(item.fill!=null){
_3284.modifyFillColor(item,_3288);
}else{
item.outline=_327d.m.makeCombinedColor(_3288,item.outline);
}
};
_3284.modifyStrokeColor=function(item,color){
item.outline=color;
};
_3284.setDefaultFillStyle=function(item){
item.fill=_327c.m.makeSolid(_327d.m.getDefaultFillColor());
item.outline=_327d.m.getDefaultStrokeColor();
};
_3284.setDefaultStrokeStyle=function(item){
item.fill=_327c.m.makeSolid(_327d.m.getDefaultStrokeColor());
};
_3284.setDefaultTextStyle=function(item){
item.fill=_327c.m.makeSolid(_327d.m.getDefaultStrokeColor());
};
_3284.setFilled=function(item,style){
_3284.addFill(item,style,_327d.m.getDefaultFillColor());
_3284.addStroke(item,style,false);
if(style!=null){
_3284.addEffect(item,style.effect);
if("inside".CPVisEngineEquals(style.outlineMethod)){
item.insideStroke=true;
}
}
};
_3284.setUnfilled=function(item,style,_3289){
_3284.addFill(item,style,_327d.m.getDefaultStrokeColor());
if(_3289!=null){
_3284.scaleStrokeSize(item,_3289);
}else{
_3284.addStroke(item,style,false);
}
_3284.addEffect(item,style.effect);
};
_3284.setTransparent=function(_328a){
_328a.fill=_327c.m.makeSolid(_327d.m.toCanonicalColor(_3284.TRANSPARENT));
_328a.outline=null;
};
_3284.addStaggeredLegendDefaults=function(_328b,_328c){
var style=_328b;
if(style==null){
style=new Object();
}
if(style.padding==null){
var _328d=new Object();
if(_328c){
_328d.bottom=5;
_328d.top=5;
}else{
_328d.right=5;
_328d.left=5;
}
style.padding=_328d;
}
if(style.stroke==null){
var _328e=new Object();
if(style.outline!=null||style.outlineMethod!=null){
_328e.width=1;
}else{
_328e.width=0;
}
style.stroke=_328e;
}
if(style.symbol==null){
style.symbol="square";
}
return style;
};
_3284.addFill=function(_328f,style,_3290){
if(style==null||style.fill==null){
_328f.fill=_327c.m.makeSolid(_3290);
}else{
if("fill".CPVisEngineEquals(_327e.m.getFillType(style.fill))){
var spec=style.fill;
var g=_327f.m.makeFromSpec(spec,_328f);
if(g.isUnusablySmall()){
_328f.fill=_327c.m.makeSolid(_3290);
}else{
_328f.fill=_327c.m.makeGradient(g);
}
}else{
var c=_327d.m.toCanonicalColor(style.fill);
_328f.fill=_327c.m.makeSolid(c);
}
}
};
_3284.scaleStrokeSize=function(_3291,size){
var _3292=_3280.m.getItem(_3291.stroke,"width");
if(_3292==null){
_3292=1;
}
if(_3291.stroke==null){
_3291.stroke=_3280.m.createJSONObject();
}
_3280.m.put(_3291.stroke,"width",_3281.m.r3(_3292*size));
};
_3284.setStrokeSize=function(_3293,size){
if(_3293.stroke==null){
_3293.stroke=_3280.m.createJSONObject();
}
_3280.m.put(_3293.stroke,"width",_3281.m.r3(size));
};
_3284.addStroke=function(_3294,style,_3295){
if(style.outline!=null){
_3294.outline=_327d.m.toCanonicalColor(style.outline);
}else{
if(_3295){
_3294.outline=_327d.m.createColor();
}
}
if(style.stroke!=null){
_3294.stroke=_3284.makeStroke(style.stroke);
}
};
_3284.makeStroke=function(_3296){
var json=_3280.m.createJSONObject();
if(_3296.width!=null){
_3280.m.put(json,"width",_327b.m.convertLength(_3296.width,1,1));
}
if(_3296.style!=null){
_3280.m.put(json,"style",_3296.style);
}
if(_3296.join!=null){
_3280.m.put(json,"join",_3296.join);
}
if(_3296.cap!=null){
_3280.m.put(json,"cap",_3296.cap);
}
return json;
};
_3284.modifyStrokeStyle=function(_3297,style){
if(_3297.stroke==null){
_3297.stroke=_3280.m.createJSONObject();
}
_3280.m.put(_3297.stroke,"style",style);
};
_3284.addEffect=function(_3298,_3299){
if(_3299==null){
return;
}
var json=_3280.m.createJSONObject();
if(_3299.shadow!=null){
var _329a=_3280.m.createJSONObject();
var _329b=_3299.shadow;
var sdx=_327b.m.convertLength(_329b.dx,2,2);
var dx=(sdx==null)?2:sdx;
_3280.m.put(_329a,"dx",dx);
var sdy=_327b.m.convertLength(_329b.dy,2,2);
var dy=(sdy==null)?2:sdy;
_3280.m.put(_329a,"dy",dy);
var _329c=_327b.m.convertLength(_329b.stdDev,2,2);
var _329d=(_329c==null)?2:_329c;
_3280.m.put(_329a,"stdDev",_329d);
if(_329b.color==null){
_3280.m.put(_329a,"color",_327d.m.getDefaultShadowColor().toJSON());
}else{
_3280.m.put(_329a,"color",_327d.m.toCanonicalColor(_329b.color).toJSON());
}
_3280.m.put(json,"shadow",_329a);
}
if(_3299.glow!=null){
var _329e=_3280.m.createJSONObject();
var glow=_3299.glow;
var _329f=_327b.m.convertLength(glow.size,25,25);
var size=(_329f==null)?25:_329f;
_3280.m.put(_329e,"size",size);
if(glow.color==null){
_3280.m.put(_329e,"color",_327d.m.getDefaultGlowColor().toJSON());
}else{
_3280.m.put(_329e,"color",_327d.m.toCanonicalColor(glow.color).toJSON());
}
var _32a0=_327b.m.convertLength(glow.stdDev,2,2);
var _329d=(_32a0==null)?2:_32a0;
_3280.m.put(_329e,"stdDev",_329d);
_3280.m.put(json,"glow",_329e);
}
_3298.effect=json;
};
_3284.getStrokeWidth=function(style){
if(style!=null&&style.stroke!=null&&!"inside".CPVisEngineEquals(style.outlineMethod)){
var width=_327b.m.convertLength(style.stroke.width,1,1);
return width==null?1:width;
}
return 1;
};
_3284.getSnap=function(style){
var snap=false;
if(style!=null&&style.snap!=null){
snap=style.snap;
}
return snap;
};
_3284.modifyShapeStyle=function(item,style){
if(style==null){
return item;
}
if(style.fill!=null){
_3284.modifyPaletteFill(item,style);
}
if(style.outline!=null){
var c=_327d.m.toCanonicalColor(style.outline);
item.outline=_327d.m.makeCombinedColor(c,item.outline);
}
if(style.effect!=null){
_3284.addEffect(item,style.effect);
}
if(style.stroke!=null){
item.stroke=_3284.makeStroke(style.stroke);
}
if(style.startArrow!=null){
item.setStartArrow(style.startArrow);
}
if(style.endArrow!=null){
item.setEndArrow(style.endArrow);
}
return item;
};
_3284.expandStroke=function(style,size){
if(style.stroke==null&&style.outline==null){
return;
}
if(style.stroke==null){
style.stroke=new Object();
}
var _32a1=_327b.m.convertLength(style.stroke.width,1,1);
if(_32a1==null){
_32a1=1;
}
style.stroke.width=_32a1+size;
};
_3284.getDefaultStrokeWidth=function(){
return 1;
};
_3284.getRectangleCornerRadius=function(style,width,_32a2){
var r=0;
if(style!=null&&style.cornerRadius!=null){
var r1=Math.min(width/2,_32a2/2);
r=Math.min(_327b.m.convertLength(style.cornerRadius,r1,r1),r1);
r=Math.max(r,0);
}
return r;
};
_3282.add("com/ibm/vis/engine/internal/scene/StyleBuilder",["com/ibm/vis/engine/internal/grammar/units/UnitConverter","com/ibm/vis/engine/internal/Fill","com/ibm/vis/engine/internal/ColorUtil","com/ibm/vis/engine/internal/nativeImpl/SpecUtil","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/util/MathUtil"],function(){
_3284.DX="dx";
_3284.DY="dy";
_3284.STD_DEV="stdDev";
_3284.GLOW="glow";
_3284.SIZE="size";
_3284.SHADOW="shadow";
_3284.COLOR="color";
_3284.CAP="cap";
_3284.JOIN="join";
_3284.STYLE="style";
_3284.WIDTH="width";
_3284.SQUARE="square";
_3284.TRANSPARENT="transparent";
_3284.FILL="fill";
_3284.DEFAULT_STROKE_WIDTH=1;
_3284.DEFAULT_HORIZONTAL_OFFSET_FOR_SHADOW=2;
_3284.DEFAULT_VERTICAL_OFFSET_FOR_SHADOW=2;
_3284.DEFAULT_STDDEV_FOR_SHADOW=2;
_3284.DEFAULT_GLOW_SIZE=25;
_3284.DEFAULT_STDDEV_FOR_GLOW=2;
_3284.INSIDE_OUTLINE_METHOD="inside";
_3284.LOCATION_INSIDE="inside";
_3284.LOCATION_OUTSIDE="outside";
_3284.LOCATION_STRETCH="stretch";
_3284.LOCATION_FIT="fit";
_3284.LOCATION_CALLOUT="callout";
});
return _3284;
});
},"com/ibm/vis/engine/internal/nativeImpl/PlatformDefaults":function(){
define("com/ibm/vis/engine/internal/nativeImpl/PlatformDefaults",["exports"],function(_32a3){
_32a3.usesFractionalMetrics=true;
});
},"com/ibm/vis/engine/internal/grammar/layout/graph/Layer":function(){
define("com/ibm/vis/engine/internal/grammar/layout/graph/Layer",["com/ibm/init/statics","dojo/_base/declare"],function(_32a4,_32a5){
var Layer=_32a5("com.ibm.vis.engine.internal.grammar.layout.graph.Layer",null,{id:0,nodeList:null,maxRowCount:0,idealNodeCount:0,rows:null,constructor:function(id){
this.id=id;
this.maxRowCount=1;
this.idealNodeCount=0;
},toString:function(){
return String.CPVisEngineValueOf(this.id);
}});
return Layer;
});
},"com/ibm/vis/engine/internal/oldlegends/LegendEntry":function(){
define("com/ibm/vis/engine/internal/oldlegends/LegendEntry",["./LegendContent","com/ibm/init/fork!../struct/Dim","com/ibm/init/fork!../struct/Rect","com/ibm/init/fork!../struct/Insets","com/ibm/init/fork!../nativeImpl/BasicFactory","com/ibm/init/fork!../struct/Shape","com/ibm/init/fork!../struct/ArrowType","com/ibm/init/fork!../Alignment","com/ibm/init/fork!../util/MathUtil","com/ibm/init/fork!../grammar/units/UnitConverter","com/ibm/init/fork!../../../exceptions/RaveException","com/ibm/init/fork!../scene/ItemBuilder","com/ibm/init/fork!../grammar/aesthetic/SymbolAestheticValueProducer","com/ibm/init/fork!../scene/StyleBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_32a6,_32a7,_32a8,_32a9,_32aa,_32ab,_32ac,_32ad,_32ae,_32af,_32b0,_32b1,_32b2,_32b3,_32b4,_32b5){
var _32b6=_32b5("com.ibm.vis.engine.internal.oldlegends.LegendEntry",[_32a6],{element:null,aesthetics:null,entryTextLabeler:null,symbolStyle:null,swatch:null,swatchBounds:null,fullSwatchBounds:null,tick:null,tick1:null,padding:null,builder:null,subBuilder:null,swatchBoxStyle:null,alignBounds:null,swatchOffset:null,constructor:function(_32b7,style,vis,tick,_32b8,_32b9,_32ba,_32bb,_32bc,_32bd){
this.tick=tick;
this.entryTextLabeler=_32ba;
this.element=_32b9[0].element;
this.aesthetics=_32b9;
this.symbolStyle=_32bb;
this.swatchBoxStyle=_32bd;
this.builder=_32b8;
this.subBuilder=_32bc;
this.alignBounds=null;
},setAlignBounds:function(_32be){
this.alignBounds=_32be;
},setSwatchOffset:function(_32bf){
this.swatchOffset=_32bf;
},buildSwatch:function(){
if(this.swatch!=null){
return;
}
this.swatch=this.builder.makeSwatch(this.subBuilder);
var _32c0=this.swatch.get(0).getBounds();
var _32c1=this.builder.extent;
this.swatchBounds=new _32a8.m(_32c0.x,_32c0.y,_32c0.width,_32c0.height==0?_32c1.height:_32c0.height);
this.padding=_32a9.m.makeForStylePadding(this.style.padding,_32c1,_32c1);
var _32c2=_32b6.makeSwatchBoxSize(this.swatchBoxStyle,this.style,_32c1.width,_32c1.height,true);
if(_32c2!=null){
_32c1=_32c2;
}
var _32c3=_32c1.width+this.padding.getHorizontal();
var _32c4=_32c1.height+this.padding.getVertical();
this.fullSwatchBounds=new _32a8.m(0,0,_32c3,_32c4);
},getShapes:function(_32c5,id,_32c6){
this.buildSwatch();
id=id+_32c6.value;
var array=_32aa.m.createJSONArray();
var index=0;
var _32c7=_32a9.m.makeForStylePadding(this.style.padding,_32c5,_32c5);
var extX=_32c5.width;
var extY=_32c5.height;
if(this.alignBounds!=null){
extX=Math.min(_32c5.width,this.alignBounds.width);
extY=Math.min(_32c5.height,this.alignBounds.height);
}
var _32c8=new _32a7.m(extX,extY);
var _32c9=this.makeFirstTextShape(_32c8);
var _32ca=0;
if(_32c9!=null){
_32ca=_32c9.getHeight();
}
var _32cb=_32b6.makeSwatchBox(this.swatchBoxStyle,this.style,_32c7,this.swatchBounds.width,this.swatchBounds.height,0,0);
if(_32cb!=null){
_32cb.setID(id+"SW"+index);
index++;
array.push(_32cb.toJSON());
}
var _32cc=this.calculateSwatchOffset(_32c9,_32ca);
var _32cd=true;
for(var _32ce=0,_32cf=this.swatch,_32d0=_32cf.size();_32ce<_32d0;++_32ce){
var shape=_32cf.get(_32ce);
shape=this.applyAesthetics(shape);
if(!shape.visible){
_32cd=false;
_32ab.m.makeGhostLike(shape);
}
if(shape.getType()=="schema"){
var _32d1=shape;
var parts=_32d1.getParts();
for(var _32d2=0,_32d3=parts.length;_32d2<_32d3;++_32d2){
var part=parts[_32d2];
part.setID(id+"SW"+index);
var _32d4=this.addInfo(part.toJSON(),false);
this.addSwatchShape(_32c8,array,_32c7,_32ca,_32cb,shape,_32d4,_32cc);
index++;
}
}else{
shape.setID(id+"SW"+index);
if("line".CPVisEngineEquals(shape.getType())){
(shape).setStartArrow(_32ac.m.NONE);
(shape).setEndArrow(_32ac.m.NONE);
}
var _32d5=null;
if("poly".CPVisEngineEquals(shape.getType())){
_32d5=(shape).getSwatchSymbolJSON(this.swatchBounds);
}else{
_32d5=shape.toJSON();
}
var _32d4=this.addInfo(_32d5,false);
this.addSwatchShape(_32c8,array,_32c7,_32ca,_32cb,shape,_32d4,_32cc);
index++;
}
}
if(_32c9!=null){
if(!_32cd){
_32ab.m.makeGhostLike(_32c9);
}
_32c9.setID(id+"T0");
var _32d4=this.addInfo(_32c9.toJSON(),true);
var type=_32aa.m.getItem(_32d4,"type");
if("multitext".CPVisEngineEquals(type)){
var _32d6=_32aa.m.getItem(_32d4,"children");
var size=_32d6.length;
for(var i=0;i<size;++i){
var _32d7=_32d6[i];
var _32d8=i+1;
var cId=id+"T"+_32d8;
_32aa.m.put(_32d7,"id",cId);
this.addLabel(array,_32ca,_32d7);
}
}else{
this.addLabel(array,_32ca,_32d4);
}
}
return array;
},calculateSwatchOffset:function(_32d9,_32da){
var _32db=0;
if(_32da>=this.swatchBounds.height){
var _32dc=this.entryTextLabeler.font.getSize();
if("start".CPVisEngineEquals(this.entryTextLabeler.valign)){
_32db=this.padding.top;
if(this.swatchBounds.height<_32dc){
_32db+=this.padding.top;
}
}
if("middle".CPVisEngineEquals(this.entryTextLabeler.valign)){
_32db=(_32da-this.swatchBounds.height)/2;
}
if("end".CPVisEngineEquals(this.entryTextLabeler.valign)){
_32db=_32da-this.swatchBounds.height;
}
if(_32ad.m.VALIGN_MIDDLE_1ST_LINE.CPVisEngineEquals(this.entryTextLabeler.valign)){
if(this.swatchBounds.height<_32dc){
_32db=(_32dc-this.swatchBounds.height)/2+this.padding.top;
}else{
_32db=this.padding.top;
}
}
}
return _32db;
},addLabel:function(array,_32dd,_32de){
var _32df=0;
var _32e0=this.entryTextLabeler.font.getAscent()+this.entryTextLabeler.font.getDescent();
if("start".CPVisEngineEquals(this.entryTextLabeler.valign)){
_32df=this.entryTextLabeler.padding.top;
}
if("end".CPVisEngineEquals(this.entryTextLabeler.valign)){
_32df=-this.entryTextLabeler.padding.bottom;
}
if(_32ad.m.VALIGN_MIDDLE_1ST_LINE.CPVisEngineEquals(this.entryTextLabeler.valign)){
if(_32dd-_32e0>1){
if(_32e0<this.swatchBounds.height){
_32df=(this.swatchBounds.height-_32e0)/2-this.padding.top;
}
}
}
_32ae.m.translate(_32de,this.fullSwatchBounds.width,_32df);
array.push(_32de);
},addSwatchShape:function(_32e1,array,_32e2,_32e3,_32e4,shape,_32e5,_32e6){
var _32e7=0;
if(_32e4==null){
var _32e8=this.fullSwatchBounds.height-_32e2.getVertical();
if(_32e3>_32e8){
_32e7=_32e6;
}else{
_32e7=_32e2.top;
}
_32ae.m.translate(_32e5,_32e2.left,_32e7);
}else{
if(this.swatchBoxStyle.padding==null){
_32b6.translateIntoSwatchBox(_32e4,shape,_32e5,0,0);
}else{
var _32e9=this.swatchBoxStyle.padding;
var _32ea=_32e4.getBounds();
if(_32aa.m.isNumber(_32e9)){
var _32eb=_32a9.m.makeForStylePadding(this.swatchBoxStyle.padding,_32e1,_32e1);
_32b6.validatePadding(this.swatchBoxStyle,shape,_32ea,this.style,_32eb);
_32b6.translateIntoSwatchBox(_32e4,shape,_32e5,0,0);
}else{
var delta=_32b6.calculateArrayPadding(this.fullSwatchBounds,this.swatchBoxStyle,_32e1,_32e2,shape,_32ea,this.style);
_32b6.translateIntoSwatchBox(_32e4,shape,_32e5,delta[0],delta[1]);
}
}
}
array.push(_32e5);
},makeFirstTextShape:function(_32ec){
var shp=_32b1.m.makeRectangle(0,0,_32ec.width-this.fullSwatchBounds.width,_32ec.height,this.style);
var _32ed=new Array(1);
_32ed[0]=this.tick.name;
var _32ee=this.entryTextLabeler.makeLabel(_32ed,shp);
return _32ee;
},applyAesthetics:function(shape){
var _32ef=this.modifySwatch(shape);
for(var _32f0=0,_32f1=this.aesthetics,_32f2=_32f1.length;_32f0<_32f2;++_32f0){
var _32f3=_32f1[_32f0];
var v=_32f3.scale.toZeroOneClamped(this.tick.value,null);
if(v!=null&&_32f3.applicableToLegend){
_32ef=_32f3.applyValue(_32ef,v,this.tick.value,false);
}
}
return _32ef;
},modifySwatch:function(shape){
if(shape.isGlyphLike()){
if(this.element.isLineWithPoints||shape.getType()!="schema"){
var _32f4=this.element.calculateDefaultShapeSize(this.symbolStyle);
this.scaleSymbolShape(shape,_32f4);
}
}
if(this.isLineWithCustomSwatch()&&shape.isGlyphLike()){
this.scaleSymbolShape(shape,_32b6.CUSTOM_SWATCH_DEFAULT_SIZE);
}
if(this.style!=null&&this.style.symbol!=null){
shape.setGlyphLike();
}
var _32f5=_32b2.m.modifySymbol(shape,this.style,this.element);
_32f5.setGlobalGradient(null);
this.element.styleShape(_32f5);
_32f5=_32b3.m.modifyShapeStyle(_32f5,this.style);
if("line".CPVisEngineEquals(this.element.type)&&_32f5.stroke!=null){
var value=_32af.m.convertLength(_32aa.m.getItem(_32f5.stroke,"width"),null,null);
if(value!=null&&value>this.swatchBounds.height/2){
_32aa.m.put(_32f5.stroke,"width",this.swatchBounds.height/2);
}
}
if("area".CPVisEngineEquals(this.element.type)&&_32f5.stroke!=null){
var value=_32af.m.convertLength(_32aa.m.getItem(_32f5.stroke,"width"),null,null);
if(value!=null&&value>2){
_32aa.m.put(_32f5.stroke,"width",2);
}
}
if(this.isLineWithCustomSwatch()&&_32f5.stroke!=null){
var value=_32af.m.convertLength(_32aa.m.getItem(_32f5.stroke,"width"),null,null);
if(value!=null&&value>2){
_32aa.m.put(_32f5.stroke,"width",2);
}
}
return _32f5;
},isLineWithCustomSwatch:function(){
var _32f6="line".CPVisEngineEquals(this.element.type);
var _32f7=!this.element.isLineWithPoints;
var _32f8=this.style!=null&&this.style.symbol!=null;
return _32f6&&_32f7&&_32f8;
},scaleSymbolShape:function(_32f9,_32fa){
var _32fb=0;
var _32fc=0;
if(this.element.size.width>=this.swatchBounds.width){
_32fb=this.swatchBounds.width;
}else{
_32fb=_32fa.width>this.swatchBounds.width?this.swatchBounds.width:_32fa.width;
}
if(this.element.size.height>=this.swatchBounds.height){
_32fc=this.swatchBounds.height;
}else{
_32fc=_32fa.height>this.swatchBounds.height?this.swatchBounds.height:_32fa.height;
}
var _32fd=_32f9.getBounds();
var _32fe=_32fc/_32fd.height;
var _32ff=(_32fd.width==_32fd.height)?_32fe:_32fb/_32fd.width;
_32f9.scale(_32ff,_32fe);
},addInfo:function(item,_3300){
var value=(_3300||this.tick1==null)?this.tick.value:(this.tick.value+this.tick1.value)/2;
_32aa.m.put(item,"value",_32ae.m.r3(value));
if(this.aesthetics[0].valueProvider.getBaseField()!=null){
_32aa.m.put(item,"field",this.aesthetics[0].valueProvider.getBaseField().id);
}
var _3301=_32aa.m.getItem(item,"children");
if(_3301!=null){
for(var _3302=0,_3303=_3301.length;_3302<_3303;++_3302){
var _3304=_3301[_3302];
var child=_3304;
this.addInfo(child,_3300);
}
}
return item;
},valignHeightModifier:function(_3305){
var _3306=0;
if(_32ad.m.VALIGN_MIDDLE_1ST_LINE.CPVisEngineEquals(this.entryTextLabeler.valign)&&_3305){
_3306=(this.swatchBounds.height-this.entryTextLabeler.font.getSize())/2;
}
return _3306;
},calculateExtent:function(_3307){
this.buildSwatch();
var _3308=this.getBoundsRect(_3307);
if(_3308==null){
var _3309=new Array(1);
_3309[0]=this.tick.name;
var _330a=this.entryTextLabeler.makeLabel(_3309,new _32a8.m(0,0,_3307.width-this.fullSwatchBounds.width,_3307.height));
var _330b=0;
var _330c=0;
if(_330a!=null){
var _330d=_330a.getNumLines()>1;
_330b=_330a.calculateTextWidth()*1.1+this.entryTextLabeler.padding.getHorizontal();
_330c=_330a.getHeight()+this.entryTextLabeler.padding.getVertical();
var _330e=this.valignHeightModifier(_330d);
if(_330e!=0){
if(_330e<0){
this.fullSwatchBounds.height-=_330e;
}else{
_330c+=_330e;
}
}
}
var _330f=_330b+this.fullSwatchBounds.width;
var _3310=Math.max(_330c,this.fullSwatchBounds.height);
var _3311=new _32a8.m(0,0,_330f,_3310);
_3311.width=Math.min(_3307.width,_3311.width);
_3311.height=Math.min(_3307.height,_3311.height);
return _3311.getExtent();
}
return _3308.getExtent();
},layoutChildren:function(){
},createShapesInScene:function(scene,id,_3312){
}});
_32b6.calculateArrayPadding=function(_3313,_3314,_3315,_3316,shape,_3317,_3318){
var _3319=_32a9.m.makeForStylePadding(_3314.padding,_3315,_3315);
_32b6.validatePadding(_3314,shape,_3317,_3318,_3319);
var dx=0;
var dy=0;
var _331a=shape.getBounds().width;
if(_3318!=null){
if(_3318.size!=null){
_331a=_32af.m.convertLength(_3318.size,_331a,_331a);
}
if(_3318.width!=null){
_331a=_32af.m.convertLength(_3318.width,_331a,_331a);
}
}
var _331b=_32b6.getStrokeWidth(_3318,_331a);
var _331c=_32b6.getStrokeWidth(_3314,_3317.width);
if(_3314.outlineMethod!=null&&"inside".CPVisEngineEquals(_3314.outlineMethod)){
_331c=2*_331c;
}
if(_3314.size!=null||_3314.width!=null||_3314.height!=null){
var _331d=_3317.width/2-shape.getBounds().width/2;
var _331e=_3317.height/2-shape.getBounds().height/2;
if((_3314.padding).left!=null){
dx=_3319.left-_331d+_331c/2+_331b/2;
}
if((_3314.padding).right!=null){
dx=_3317.width-shape.getBounds().width-_3319.right-_331d-_331c/2-_331b/2;
}
if((_3314.padding).bottom!=null){
dy=_3317.height-shape.getBounds().height-_3319.bottom-_331e-_331c/2-_331b/2;
}
if((_3314.padding).top!=null){
dy=_3319.top-_331e+_331c/2+_331b/2;
}
}else{
dx=(_3319.left-_3319.right)/2;
dy=(_3319.top-_3319.bottom)/2;
}
var delta=[0,0];
delta[0]=dx;
delta[1]=dy;
return delta;
};
_32b6.validatePadding=function(_331f,shape,_3320,_3321,_3322){
var _3323=true;
if((_3322.left<0)||(_3322.right<0)||(_3322.top<0)||(_3322.bottom<0)){
throw new _32b0.m("Negative padding cannot be applied to SwatchBox. \n Please specify padding correctly.",_32b0.m.LAYOUT_CANNOT_FIT);
}
var _3324=shape.getBounds().height;
var _3325=shape.getBounds().width;
if(_3321!=null){
if(_3321.size!=null){
_3324=_32af.m.convertLength(_3321.size,_3325,_3325);
_3325=_32af.m.convertLength(_3321.size,_3325,_3325);
}
if(_3321.width!=null){
_3325=_32af.m.convertLength(_3321.width,_3325,_3325);
}
if(_3321.height!=null){
_3324=_32af.m.convertLength(_3321.height,_3325,_3325);
}
}
var _3326=_32b6.getStrokeWidth(_3321,_3325);
var _3327=_32b6.getStrokeWidth(_331f,_3320.width);
if(_331f.outlineMethod!=null&&"inside".CPVisEngineEquals(_331f.outlineMethod)){
_3327=2*_3327;
}
if(!_32aa.m.isNumber(_331f.padding)){
if(((_331f.padding).left==null)||((_331f.padding).right==null)){
_3323=(_3320.width-_3327)>=(_3322.right+_3322.left+_3325+_3326);
}
if((_3323)&&((_331f.padding).top==null||(_331f.padding).bottom==null)){
_3323=(_3320.height-_3327)>=(_3322.top+_3322.bottom+_3324+_3326);
}
if((_3321!=null)&&(_3323)&&((_331f.padding).left!=null)&&((_331f.padding).right!=null)){
if((_331f.width==null&&_331f.size==null)||(_3321.width==null&&_3321.size==null)){
_3323=(_3320.width-_3327)>=(_3322.left+_3322.right+_3325+_3326);
}
if((_3323)&&(_331f.width!=null||_331f.size!=null)&&(_3321.width!=null||_3321.size!=null)){
_3323=((_3320.width-_3327)==(_3322.left+_3322.right+_3325+_3326));
}
}
if((_3321!=null)&&(_3323)&&((_331f.padding).top!=null)&&((_331f.padding).bottom!=null)){
if((_331f.height==null&&_331f.size==null)||(_3321.height==null&&_3321.size==null)){
_3323=(_3320.height-_3327)>=(_3322.top+_3322.bottom+_3324+_3326);
}
if((_3323)&&(_331f.height!=null||_331f.size!=null)&&(_3321.height!=null||_3321.size!=null)){
_3323=((_3320.height-_3327)==(_3322.top+_3322.bottom+_3324+_3326));
}
}
}
if((_3321!=null)&&(_3323)&&(_32aa.m.isNumber(_331f.padding))){
if((_331f.width==null&&_331f.size==null)||(_3321.width==null&&_3321.size==null)){
_3323=(_3320.width-_3327)>=(_3322.left+_3322.right+_3325+_3326);
}
if((_3323)&&((_331f.height==null&&_331f.size==null)||(_3321.height==null&&_3321.size==null))){
_3323=(_3320.height-_3327)>=(_3322.top+_3322.bottom+_3324+_3326);
}
if((_3323)&&(_331f.width!=null||_331f.size!=null)&&(_3321.width!=null||_3321.size!=null)){
_3323=((_3320.width-_3327)==(_3322.left+_3322.right+_3325+_3326));
}
if((_3323)&&(_331f.height!=null||_331f.size!=null)&&(_3321.height!=null||_3321.size!=null)){
_3323=((_3320.height-_3327)==(_3322.top+_3322.bottom+_3324+_3326));
}
}
if(!_3323){
}
};
_32b6.getStrokeWidth=function(style,_3328){
if(style==null){
return 0;
}
if(style.stroke==null||style.stroke.width==null){
return 1;
}
return _32af.m.convertLength(style.stroke.width,1,_3328);
};
_32b6.makeSwatchBoxSize=function(style,_3329,_332a,_332b,_332c){
if(style==null){
return null;
}
if(style.size!=null){
var size=_32af.m.convertLength(style.size,_332a,_332a);
_332a=size;
_332b=size;
}
if(style.width!=null){
var size=_32af.m.convertLength(style.width,_332a,_332a);
_332a=size;
}
if(style.height!=null){
var size=_32af.m.convertLength(style.height,_332b,_332b);
_332b=size;
}
if(style.size!=null||(style.width!=null&&style.height!=null)){
return new _32a7.m(_332a,_332b);
}
var _332d=(style.stroke==null||style.stroke.width==null)?1:_32af.m.convertLength(style.stroke.width,1,_332a);
if(style.outlineMethod!=null&&"inside".CPVisEngineEquals(style.outlineMethod)){
_332d=2*_332d;
}
var _332e=0;
if(_3329!=null){
_332e=(_3329.stroke==null||_3329.stroke.width==null)?1:_32af.m.convertLength(_3329.stroke.width,1,_332a);
}
if(_332c){
if(style.height==null){
_332b=_332b+2*_332d+_332e;
}
if(style.width==null){
_332a=_332a+2*_332d+_332e;
}
}else{
if(style.height==null){
_332b=_332b+_332d+_332e;
}
if(style.width==null){
_332a=_332a+_332d+_332e;
}
}
if(style.padding!=null){
var _332f=new _32a7.m(_332a,_332b);
var _3330=_32a9.m.makeForStylePadding(style.padding,_332f,_332f);
if(style.width==null){
_332a+=_3330.getHorizontal();
}
if(style.height==null){
_332b+=_3330.getVertical();
}
return new _32a7.m(_332a,_332b);
}
return new _32a7.m(_332a,_332b);
};
_32b6.makeSwatchBox=function(style,_3331,_3332,_3333,_3334,_3335,_3336){
if(style==null){
return null;
}
var _3337=_32b6.makeSwatchBoxSize(style,_3331,_3333,_3334,false);
var box=_32b1.m.makeRectangle(_3332.left+_3335,_3332.top+_3336,_3337.width,_3337.height,style);
return box;
};
_32b6.translateIntoSwatchBox=function(_3338,_3339,_333a,dx,dy){
var _333b=_3338.getCenter();
var _333c=_3339.getCenter();
_32ae.m.translate(_333a,_333b.x+dx-_333c.x,_333b.y+dy-_333c.y);
};
_32b6.getSwatchSize=function(spec,_333d){
var _333e=20;
var _333f=20;
if(spec!=null){
if(_333d!=null&&_333d[0]!=null){
for(var i=0;i<_333d.length;++i){
var a=_333d[i];
if(a.getDefaultSwatchSize().width>_333e){
_333e=a.getDefaultSwatchSize().width;
}
if(a.getDefaultSwatchSize().height>_333f){
_333f=a.getDefaultSwatchSize().height;
}
}
}
var _3340=_333e;
var _3341=_333f;
var _3342=spec.itemStyle;
if(_3342!=null){
var _3343=_32af.m.convertLength(_3342.size,_333e,_333e);
if(_3342.size!=null){
_3340=_3343;
_3341=_3343;
}
if(_3342.width!=null){
_3340=_32af.m.convertLength(_3342.width,_333e,_333e);
}
if(_3342.height!=null){
_3341=_32af.m.convertLength(_3342.height,_333e,_333e);
}
if((_3342.size!=null)||((_3342.width!=null)&&(_3342.height!=null))){
return new _32a7.m(_3340,_3341);
}
}
var _3344=spec.itemBoxStyle;
if(_3344!=null){
var _3345=_32b6.getSwatchBoxSizeFromStyle(_3344,_333e);
if(_3345==null){
return new _32a7.m(_3340,_3341);
}
var _3346=_32b6.getStrokeWidth(_3342,_3340);
var _3347=_32b6.getStrokeWidth(_3344,_3345.width);
if(_3344.outlineMethod!=null&&"inside".CPVisEngineEquals(_3344.outlineMethod)){
_3347=2*_3347;
}
var _3348=new _32a7.m(_3340,_3341);
if(_3344.padding==null){
if(_3344.width!=null||_3344.size!=null){
if((_3342==null)||(_3342.size==null&&_3342.width==null)){
var _3349=_3345.width-_3347-_3348.width-_3346;
_3348.width=_3348.width+_3349;
}
}
if(_3344.height!=null||_3344.size!=null){
if((_3342==null)||(_3342.size==null&&_3342.height==null)){
var _3349=_3345.height-_3347-_3348.height-_3346;
_3348.height=_3348.height+_3349;
}
}
}
if(_3344.padding!=null){
var zero=new _32a7.m(0,0);
var _334a=_32a9.m.makeForStylePadding(_3344.padding,zero,zero);
if(_3344.width!=null||_3344.size!=null){
if((_3342==null)||(_3342.size==null&&_3342.width==null)){
var _3349=_3345.width-_3347-_3348.width-_334a.getHorizontal()-_3346;
_3348.width=_3348.width+_3349;
}
}
if(_3344.height!=null||_3344.size!=null){
if((_3342==null)||(_3342.size==null&&_3342.height==null)){
var _3349=_3345.height-_3347-_3348.height-_334a.getVertical()-_3346;
_3348.height=_3348.height+_3349;
}
}
}
if(_3348.width<0||_3348.height<0){
if(_3348.width<0){
_3348.width=_333e;
}
if(_3348.height<0){
_3348.height=_333f;
}
}
return _3348;
}
}
return new _32a7.m(_333e,_333f);
};
_32b6.getSwatchBoxSizeFromStyle=function(_334b,_334c){
var _334d=null;
if(_334b.size!=null){
var _334e=_32af.m.convertLength(_334b.size,_334c,_334c);
if(_334e!=null){
_334d=new _32a7.m(_334e,_334e);
}
}
if(_334b.width!=null){
var _334e=_32af.m.convertLength(_334b.width,_334c,_334c);
if(_334e!=null){
if(_334d==null){
_334d=new _32a7.m(_334e,-1);
}else{
_334d.width=_334e;
}
}
}
if(_334b.height!=null){
var _334e=_32af.m.convertLength(_334b.height,_334c,_334c);
if(_334e!=null){
if(_334d==null){
_334d=new _32a7.m(-1,_334e);
}else{
_334d.height=_334e;
}
}
}
return _334d;
};
_32b4.add("com/ibm/vis/engine/internal/oldlegends/LegendEntry",["com/ibm/vis/engine/internal/oldlegends/LegendContent","com/ibm/vis/engine/internal/struct/Dim","com/ibm/vis/engine/internal/nativeImpl/BasicFactory","com/ibm/vis/engine/internal/util/MathUtil","com/ibm/vis/engine/internal/grammar/units/UnitConverter","com/ibm/vis/exceptions/RaveException"],function(){
_32b6.MAXIMUM_WIDTH_FOR_AREA_OUTLINE=2;
_32b6.MAXIMUM_WIDTH_FOR_LINE_OUTLINE=2;
_32b6.CUSTOM_SWATCH_DEFAULT_SIZE=new _32a7.m(20,20);
_32b6.DEFAULT_STROKE_WIDTH=1;
});
return _32b6;
});
},"com/ibm/vis/interaction/internal/events/ActiveEvent":function(){
define("com/ibm/vis/interaction/internal/events/ActiveEvent",["../../RaveEvent","com/ibm/init/statics","dojo/_base/declare"],function(_334f,_3350,_3351){
var _3352=_3351("com.ibm.vis.interaction.internal.events.ActiveEvent",[_334f],{dispatch:function(){
},cancel:function(){
}});
return _3352;
});
},"com/ibm/vis/engine/internal/grammar/label/LabelCallout":function(){
define("com/ibm/vis/engine/internal/grammar/label/LabelCallout",["com/ibm/init/fork!../../nativeImpl/List","com/ibm/init/fork!../units/UnitConverter","com/ibm/init/fork!../../util/MathUtil","com/ibm/init/fork!../../struct/Line","com/ibm/init/fork!../../struct/Poly","com/ibm/init/fork!../../scene/StyleBuilder","com/ibm/init/fork!../../scene/Font","com/ibm/init/fork!./LabelProducer","com/ibm/init/fork!../../struct/Dim","com/ibm/init/fork!../../scene/ItemBuilder","com/ibm/init/statics","dojo/_base/declare"],function(_3353,_3354,_3355,_3356,_3357,_3358,_3359,_335a,_335b,_335c,_335d,_335e){
var _335f=_335e("com.ibm.vis.engine.internal.grammar.label.LabelCallout",null,{grammar:null,extent:null,graphSize:null,labelProducers:null,labelText:null,constructor:function(_3360,_3361,_3362){
this.grammar=_3360;
this.extent=_3362;
this.graphSize=_3360.graphSize;
this.labelProducers=_3361.labelProducers;
},modifyShapes:function(_3363,_3364,index){
var _3365=new _3353.m();
var _3366=this.labelProducers.get(index);
if(!this.grammar.coordinates.containsPolar()){
return _3365;
}
this.populateLabelTexts(_3364);
var _3367=this.grammar.coordinates.getCoordinateCenter(this.graphSize).x;
var _3368=true;
var _3369=this.getDiameterFromSpec();
var size=Math.min(this.graphSize.width,this.graphSize.height);
var _336a=size,_336b=0,_336c=size/2;
if(_3369!=null){
if(_3369.max!=null){
_336a=_3354.m.convertLength(_3369.max,size,size);
}
if(_3369.min!=null){
_336b=_3354.m.convertLength(_3369.min,size,size);
}
if(_3369.preferred!=null){
_336c=_3354.m.convertLength(_3369.preferred,size,size);
}
}
if(_3369!=null&&_3369.preferred!=null){
if(_336c>size){
_336c=size;
}else{
if(_336c<0){
_336c=0;
}
}
if(_336c<_336b){
_336c=_336b;
}
if(_336c>_336a){
_336c=_336a;
}
this.setWedgeRadius(_3363,_336c/2);
this.createLabelCallouts(_3363,_3364,_3365,_3366,_3367,this.getWedgeRadius(_3363));
this.clip(_3364,_3365,this.extent);
return _3365;
}
var _336d=Math.min(this.graphSize.width,this.graphSize.height)/4;
if(_336d<_336b/2){
_336d=_336b/2;
}else{
if(_336d>_336a/2){
_336d=_336a/2;
}
}
this.setWedgeRadius(_3363,_336d);
this.createLabelCallouts(_3363,_3364,_3365,_3366,_3367,this.getWedgeRadius(_3363));
_3368=this.isLableTruncated(_3364);
var _336e;
if(_3369!=null&&_3369.max!=null&&!_3368){
while(true){
_336e=this.getWedgeRadius(_3363)*0.1;
this.increaseWedgeSize(_3363,_336e);
if(this.getWedgeRadius(_3363)>_336a/2){
var _336f=this.getWedgeRadius(_3363)-_336a/2;
this.reduceWedgeSize(_3363,_336f);
this.createLabelCallouts(_3363,_3364,_3365,_3366,_3367,this.getWedgeRadius(_3363));
break;
}
this.createLabelCallouts(_3363,_3364,_3365,_3366,_3367,this.getWedgeRadius(_3363));
_3368=this.isLableTruncated(_3364);
if(_3368){
this.reduceWedgeSize(_3363,_336e);
this.createLabelCallouts(_3363,_3364,_3365,_3366,_3367,this.getWedgeRadius(_3363));
break;
}
}
}else{
if(_3369!=null&&_3369.min!=null&&_3368){
while(true){
_336e=this.getWedgeRadius(_3363)*0.1;
this.reduceWedgeSize(_3363,_336e);
if(this.getWedgeRadius(_3363)<_336b/2){
var _3370=_336b/2-this.getWedgeRadius(_3363);
this.increaseWedgeSize(_3363,_3370);
this.createLabelCallouts(_3363,_3364,_3365,_3366,_3367,this.getWedgeRadius(_3363));
break;
}
this.createLabelCallouts(_3363,_3364,_3365,_3366,_3367,this.getWedgeRadius(_3363));
_3368=this.isLableTruncated(_3364);
if(!_3368){
break;
}
}
}
}
this.clip(_3364,_3365,this.extent);
return _3365;
},getDiameterFromSpec:function(){
var _3371=null;
var _3372=this.grammar.coordinates.transforms;
for(var _3373=0,_3374=_3372.length;_3373<_3374;++_3373){
var _3375=_3372[_3373];
if(_3375.isPolar()){
return _3375.getDiameterSpec();
}
}
return _3371;
},getClockwise:function(){
var _3376=this.grammar.coordinates.transforms;
for(var _3377=0,_3378=_3376.length;_3377<_3378;++_3377){
var _3379=_3376[_3377];
if(_3379.isPolar()){
return _3379.getClockwise();
}
}
return false;
},initializeLabelText:function(_337a){
for(var i=0;i<_337a.size();++i){
(_337a.get(i)).text=this.labelText.get(i);
}
},populateLabelTexts:function(_337b){
this.labelText=new _3353.m();
for(var _337c=0,_337d=_337b.size();_337c<_337d;++_337c){
var shape=_337b.get(_337c);
if(shape!=null){
if("text".CPVisEngineEquals(shape.getType())||"multitext".CPVisEngineEquals(shape.getType())){
var text=(shape).text;
this.labelText.add(text);
}
}
}
},getWedgeRadius:function(_337e){
for(var _337f=0,_3380=_337e.size();_337f<_3380;++_337f){
var shape=_337e.get(_337f);
if(shape.getType()=="wedge"){
var w=shape;
return w.r2;
}
}
return 0;
},setWedgeRadius:function(_3381,_3382){
for(var _3383=0,_3384=_3381.size();_3383<_3384;++_3383){
var shape=_3381.get(_3383);
if(shape.getType()=="wedge"){
var w=shape;
if(w.r1>0){
w.r1=_3382-(w.r2-w.r1);
}
w.r2=_3382;
}
}
},getFarthestWedgeCenterXCoordinateOnRight:function(_3385){
var max=0;
for(var _3386=0,_3387=_3385.size();_3386<_3387;++_3386){
var shape=_3385.get(_3386);
if(shape.getType()=="wedge"){
var w=shape;
if(w.x>max){
max=w.x;
}
}
}
return max;
},getFarthestWedgeCenterXCoordinateOnLeft:function(_3388){
var min=100000;
for(var _3389=0,_338a=_3388.size();_3389<_338a;++_3389){
var shape=_3388.get(_3389);
if(shape.getType()=="wedge"){
var w=shape;
if(w.x<min){
min=w.x;
}
}
}
return min;
},reduceWedgeSize:function(_338b,_338c){
for(var _338d=0,_338e=_338b.size();_338d<_338e;++_338d){
var shape=_338b.get(_338d);
if(shape.getType()=="wedge"){
var w=shape;
w.r2-=_338c;
if(w.r1>0){
w.r1-=_338c;
}
}
}
},increaseWedgeSize:function(_338f,_3390){
for(var _3391=0,_3392=_338f.size();_3391<_3392;++_3391){
var shape=_338f.get(_3391);
if(shape.getType()=="wedge"){
var w=shape;
w.r2+=_3390;
if(w.r1>0){
w.r1+=_3390;
}
}
}
},createLabelCallouts:function(_3393,_3394,_3395,_3396,_3397,r){
this.initializeLabelText(_3394);
var _3398=new _3353.m();
var _3399=new _3353.m();
var _339a=true;
var _339b=0.1;
var _339c=0.6;
var _339d=0;
var maxX=0,minX=0;
while(_339a){
_3398.clear();
_3399.clear();
_3395.clear();
_339b+=0.1;
_339d=(1+_339b)*r;
maxX=(this.getFarthestWedgeCenterXCoordinateOnRight(_3393)+_339d);
minX=(this.getFarthestWedgeCenterXCoordinateOnLeft(_3393)-_339d);
this.prepareLabels(_3394,_3398,_3399,_3397,maxX,minX);
this.arrangeLabels(_3398,_3396.backgroundStyle);
this.arrangeLabels(_3399,_3396.backgroundStyle);
if(this.isOutOfBounds(_3398)){
this.adjustLabels(_3398);
}else{
if(this.isOutOfBounds(_3399)){
this.adjustLabels(_3399);
}
}
_339a=this.drawLabelLines(_3393,_3394,_3395,_3396,_3398,_3399,_339b,_339c);
if(_3393.size()==1){
_339a=false;
}
}
var _339e=this.graphSize.width-maxX;
this.arrangeLongLabels(_3394,_3398,_3396,_339e);
_339e=minX;
this.arrangeLongLabels(_3394,_3399,_3396,_339e);
},drawLabelLines:function(_339f,_33a0,_33a1,_33a2,_33a3,_33a4,_33a5,_33a6){
var _33a7=true;
var _33a8=0.2;
var _33a9=0;
var _33aa=this.isThreeSegmentsNeeded(_339f,_33a0,_33a3,true);
var _33ab=this.isThreeSegmentsNeeded(_339f,_33a0,_33a4,false);
if(_33aa){
this.adjustLabels(_33a3);
}else{
if(_33ab){
this.adjustLabels(_33a4);
}
}
if(_33aa){
_33aa=this.isThreeSegmentsNeeded(_339f,_33a0,_33a3,true);
}else{
if(_33ab){
_33ab=this.isThreeSegmentsNeeded(_339f,_33a0,_33a4,false);
}
}
for(var _33ac=0,_33ad=_339f.size();_33ac<_33ad;++_33ac){
var s=_339f.get(_33ac);
if(s.getType()=="wedge"){
var w=(s);
if(_33a9==0){
_33a9=(this.graphSize.height-2*w.r2)/3;
}
var x0=w.x+w.r2*Math.cos((w.a1+w.a2)/2);
var y0=w.y+w.r2*Math.sin((w.a1+w.a2)/2);
var x01=w.x+(w.r2+w.r2*0.1)*Math.cos((w.a1+w.a2)/2);
var phi=(w.a1+w.a2)/2;
var y01=y0+w.r2*0.1*Math.sin(phi);
y01-=_33a9*Math.sin(2*3.141592653589793-phi);
var _33ae=_339f.indexOf(s);
var _33af=_33a0.get(_33ae);
var x2=_33af.getCenter().x;
var y2=_33af.getCenter().y;
var x02=0;
var y02=y01;
var x1=0;
var y1=y2;
if(_33a3.contains(_33af)){
x02=w.x+(w.r2+w.r2*_33a8);
while(x02>=x2){
_33a8=_33a8-(0.1);
x02=w.x+(w.r2+w.r2*_33a8);
}
x1=x2-w.r2/10;
}else{
x02=w.x-(w.r2+w.r2*_33a8);
while(x02<=x2){
_33a8=_33a8-(0.1);
x02=w.x-(w.r2+w.r2*_33a8);
}
x1=x2+w.r2/10;
}
if(!_33a1.isEmpty()){
var _33b0=(_33a1.get(_33a1.size()-1)).getLines()[0];
var _33b1=_3355.m.r3(x0);
var _33b2=_3355.m.r3(y0);
var _33b3=_3355.m.r3(_33b0.x[0]);
var _33b4=_3355.m.r3(_33b0.y[0]);
var newX0=_33b1;
var newY0=_33b2;
var oldX0=_33b3;
var oldY0=_33b4;
if(newX0!=oldX0||newY0!=oldY0){
_33a7=_3356.m.intersects(x0,y0,x1,y1,_33b0.x[0],_33b0.y[0],_33b0.x[1],_33b0.y[1]);
if(_33a7){
if((_33a6-_33a5)>=0){
break;
}
_33a7=false;
}
}
}
if(Math.abs(x02-x01)<15){
x01=x02;
y01=y02;
}
var x=null;
var y=null;
if((_33a3.contains(_33af)&&!_33aa)||(_33a4.contains(_33af)&&!_33ab)){
x=[x0,x1,x2];
y=[y0,y1,y2];
}else{
x=[x0,x01,x02,x2];
y=[y0,y01,y02,y2];
}
var _33b5=new _3357.m(x,y,false,null);
_33b5.snap=s.snap;
if(_33af.key!=null){
_33b5.key=_33af.key+"_LC";
}
var _33b6=s.visible?_33af.visible:false;
_33b5.visible=_33b6;
_3358.m.setUnfilled(_33b5,_33a2.lineStyle,null);
_33a1.add(_33b5);
}
}
return _33a7;
},isThreeSegmentsNeeded:function(_33b7,_33b8,_33b9,_33ba){
var _33bb=this.getClockwise();
for(var _33bc=0,_33bd=_33b7.size();_33bc<_33bd;++_33bc){
var s=_33b7.get(_33bc);
var w=(s);
var _33be=_33b7.indexOf(s);
var _33bf=_33b8.get(_33be);
if(_33b9.contains(_33bf)){
var y2=_33bf.getCenter().y;
var x2=_33bf.getCenter().x;
var y1=y2;
var x1=0;
if(_33ba){
x1=x2-w.r2/10;
}else{
x1=x2+w.r2/10;
}
var angle=w.a1-w.a2;
var _33c0=0;
_33c0=w.a2+(angle/2);
if(!_33bb){
_33c0=_33c0-(2*3.141592653589793);
}
var _33c1=w.x;
var _33c2=w.y;
var x=w.x+w.r2*Math.cos((w.a1+w.a2)/2);
var y=w.y+w.r2*Math.sin((w.a1+w.a2)/2);
if(x>_33c1&&y<_33c2){
_33c0=(2*3.141592653589793)-_33c0;
var _33c3=(3.141592653589793/2)-_33c0;
var dist=w.r2/Math.sin(_33c3);
var _33c4=_33c1+dist;
var m=(y-_33c2)/(x-_33c4);
var c=y-(m*x);
var _33c5=(y1-c)/m;
if(y1>y&&_33c5>x1){
return true;
}
}else{
if(x>_33c1&&y>_33c2){
var _33c3=(3.141592653589793/2)-_33c0;
var dist=w.r2/Math.sin(_33c3);
var _33c4=_33c1+dist;
var m=(y-_33c2)/(x-_33c4);
var c=y-(m*x);
var _33c5=(y1-c)/m;
if(y1<y&&_33c5>x1){
return true;
}
}else{
if(x<_33c1&&y<_33c2){
_33c0=3.141592653589793-_33c0;
var _33c3=(3.141592653589793/2)-_33c0;
var dist=w.r2/Math.sin(_33c3);
var _33c4=_33c1-dist;
var m=(y-_33c2)/(x-_33c4);
var c=y-(m*x);
var _33c5=(y1-c)/m;
if(y1>y&&_33c5<x1){
return true;
}
}else{
if(x<_33c1&&y>_33c2){
_33c0=3.141592653589793-_33c0;
var _33c3=(3.141592653589793/2)-_33c0;
var dist=w.r2/Math.sin(_33c3);
var _33c4=_33c1-dist;
var m=(y-_33c2)/(x-_33c4);
var c=y-(m*x);
var _33c5=(y1-c)/m;
if(y1<y&&_33c5<x1){
return true;
}
}
}
}
}
}
}
return false;
},isLableTruncated:function(_33c6){
for(var _33c7=0,_33c8=_33c6.size();_33c7<_33c8;++_33c7){
var shape=_33c6.get(_33c7);
var text=shape;
if("multitext".CPVisEngineEquals(text.getType())){
var _33c9=text;
var lines=_33c9.lines;
for(var _33ca=0,_33cb=lines.size();_33ca<_33cb;++_33ca){
var _33cc=lines.get(_33ca);
if(_33cc.text.indexOf(_3359.m.ELLIPSIS)!=-1){
return true;
}
}
}else{
if(text.text.indexOf(_3359.m.ELLIPSIS)!=-1){
return true;
}
}
if(text.p.x>this.graphSize.width||text.p.x<0||text.p.y>this.graphSize.height||text.p.y<0){
return true;
}
}
return false;
},prepareLabels:function(_33cd,_33ce,_33cf,_33d0,maxX,minX){
this.divideLabels(_33cd,_33ce,_33cf,_33d0,maxX,minX);
this.sortLabels(_33ce);
this.sortLabels(_33cf);
},divideLabels:function(_33d1,_33d2,_33d3,_33d4,maxX,minX){
for(var _33d5=0,_33d6=_33d1.size();_33d5<_33d6;++_33d5){
var s=_33d1.get(_33d5);
var t=s;
if(t.getCenter().x>_33d4){
t.align="start";
t.affine(0,maxX,1,0,false);
_33d2.add(t);
}else{
t.align="end";
t.affine(0,minX,1,0,false);
_33d3.add(t);
}
}
},adjustLabels:function(_33d7){
var _33d8=this.graphSize.height/_33d7.size();
var newY=0;
for(var _33d9=0,_33da=_33d7.size();_33d9<_33da;++_33d9){
var label=_33d7.get(_33d9);
var t=label;
if(newY+t.getBounds().height<this.graphSize.height){
var _33db=newY+t.getBounds().height/2+_33d8/2;
label.affine(1,0,0,_33db,false);
if(_33d8>t.getBounds().height){
newY+=_33d8;
}else{
newY+=t.getBounds().height+2;
}
}else{
break;
}
}
},isOutOfBounds:function(_33dc){
var _33dd=false;
for(var i=0;i<_33dc.size();++i){
var t=_33dc.get(i);
var maxY=t.getCenter().y+t.getBounds().height/2;
if(maxY>this.extent.height){
_33dd=true;
}
}
return _33dd;
},sortLabels:function(_33de){
var index=-1;
var _33df=false;
var _33e0=new _3353.m();
for(var _33e1=0,_33e2=_33de.size();_33e1<_33e2;++_33e1){
var s=_33de.get(_33e1);
for(var _33e3=0,_33e4=_33e0.size();_33e3<_33e4;++_33e3){
var _33e5=_33e0.get(_33e3);
if(_33e5.getCenter().y>s.getCenter().y){
index=_33e0.indexOf(_33e5);
_33df=true;
break;
}
}
if(!_33df){
index=_33e0.size();
}
_33e0.add(index,s);
_33df=false;
}
_33de.clear();
_33de.addAll(_33e0);
},arrangeLabels:function(_33e6,_33e7){
var disp=0;
if(this.isLabelCollision(_33e6)){
for(var _33e8=0,_33e9=_33e6.size();_33e8<_33e9;++_33e8){
var _33ea=_33e6.get(_33e8);
disp+=_33ea.getBounds().height/2;
if(_33ea.getCenter().y<disp){
_33ea.affine(1,0,0,disp,false);
}
if(_33e7==null){
disp=_33ea.getCenter().y+(_33ea.getBounds().height/2)+0.01;
}else{
disp=_33ea.getCenter().y+(_33ea.getBounds().height/2)+_335a.m.V_BACKGROUND_PADDING*2+0.01;
}
}
var _33eb=_33e6.get(0);
var _33ec=_33e6.get(_33e6.size()-1);
var diff=_33ec.getCenter().y+_33ec.getBounds().height-this.graphSize.height;
if(diff>0){
if((_33eb.getCenter().y-_33eb.getBounds().height-diff)<0){
diff=_33eb.getCenter().y-_33eb.getBounds().height;
}
var newY;
for(var _33ed=0,_33ee=_33e6.size();_33ed<_33ee;++_33ed){
var _33ea=_33e6.get(_33ed);
newY=_33ea.getCenter().y-diff;
_33ea.affine(1,0,0,newY,false);
}
}
}
},isLabelCollision:function(_33ef){
var _33f0=false;
for(var i=0;i<(_33ef.size()-1);++i){
var _33f1=_33ef.get(i).getBounds();
var _33f2=_33ef.get(i+1);
_33f0=_33f1.isRectIntersects(_33f2.getBounds());
if(_33f0){
break;
}
}
return _33f0;
},arrangeLongLabels:function(_33f3,_33f4,_33f5,_33f6){
for(var i=0;i<_33f4.size();++i){
var t1=_33f4.get(i);
var _33f7=t1.text;
var _33f8=_33f7.CPVISEngineTrim();
t1.text=_33f8;
var _33f9=0;
if(i>0){
var t0=_33f4.get(i-1);
_33f9=t0.getCenter().y+t0.getHeight()/2;
}
var _33fa=0;
if((i+1)==_33f4.size()){
_33fa=this.graphSize.height;
}else{
var t2=_33f4.get(i+1);
_33fa=t2.getCenter().y-t2.getHeight()/2;
}
var _33fb=t1.getCenter().y-t1.getHeight()/2;
var _33fc=_33fb-_33f9;
var _33fd=_33fa-_33fb;
var _33fe=t1.getHeight()/t1.getNumLines();
var _33ff=0;
if(Math.min(_33fc,_33fd)>_33fe&&(Math.min(_33fc,_33fd)-_33fe)>1){
_33ff=t1.getHeight()+2*Math.min(_33fc,_33fd);
}else{
_33ff=t1.getHeight();
}
var size=new _335b.m(_33f6,_33ff);
var _3400=_335c.m.makeText(_33f8,t1.p.x,t1.p.y,t1.align,t1.valign,t1.font,_33f5.style,size,this.allowClip(_33f5.style),_3359.m.ELLIPSIS,_33f5.shapingInfo);
_3400.setID(t1.id);
_3400.key=t1.key;
if(_33ff<t1.font.getHeight()||("text".CPVisEngineEquals(_3400.getType())&&_3400.text.CPVisEngineEquals(_33f8))){
t1.clipToFit(_33f6);
_33f3.set(_33f3.indexOf(t1),t1);
}else{
if(_3400.getNumLines()==1&&"multitext".CPVisEngineEquals(_3400.getType())&&(_3400).lines.get(0).text.indexOf(_3359.m.ELLIPSIS)!=-1){
t1.clipToFit(_33f6);
_33f3.set(_33f3.indexOf(t1),t1);
}else{
var index=_33f3.indexOf(t1);
_33f3.set(index,_3400);
}
}
}
},allowClip:function(style){
return style==null||style.location==null||!("fit".CPVisEngineEquals(style.location)||"stretch".CPVisEngineEquals(style.location));
},clip:function(_3401,_3402,_3403){
for(var i=0;i<_3401.size();++i){
var t=_3401.get(i);
var maxX=t.getCenter().x+t.getBounds().width/2;
var maxY=t.getCenter().y+t.getBounds().height/2;
if(maxX>_3403.width||maxY>_3403.height){
_3401.set(i,null);
_3402.set(i,null);
}
}
}});
_335d.add("com/ibm/vis/engine/internal/grammar/label/LabelCallout",[],function(){
_335f.CALLOUT_LINE_KEY_SUFFIX="_LC";
_335f.PERCENTAGE_RADIUS_RADIAL_CALLOUT=0.1;
_335f.INITIAL_PERCENTAGE_RADIUS_HORIZONTAL_CALLOUT=0.2;
});
return _335f;
});
},"com/ibm/vis/engine/internal/Grammar":function(){
define("com/ibm/vis/engine/internal/Grammar",["./ContentFrame","com/ibm/init/fork!./nativeImpl/List","com/ibm/init/fork!./grammar/layout/SharedLayoutInfo","com/ibm/init/fork!./Bounds","com/ibm/init/fork!./nativeImpl/BasicFactory","com/ibm/init/fork!./grammar/coordinate/Coordinates","com/ibm/init/fork!./grammar/element/Element","com/ibm/init/fork!./facet/FacetingFactory","com/ibm/init/fork!./nativeImpl/Double","com/ibm/init/fork!../../exceptions/RaveException","com/ibm/init/fork!./struct/Rect","com/ibm/init/fork!./grammar/scale/ScaleGeometry","com/ibm/init/fork!./struct/Insets","com/ibm/init/fork!./SceneParts","com/ibm/init/fork!./grammar/units/UnitConverter","com/ibm/init/fork!./nativeImpl/Map","com/ibm/init/fork!./scene/ItemBuilder","com/ibm/init/fork!./grammar/scale/Tick","com/ibm/init/fork!./struct/Dim","com/ibm/init/statics","dojo/_base/declare"],function(_3404,_3405,_3406,_3407,_3408,_3409,_340a,_340b,_340c,_340d,_340e,_340f,_3410,_3411,_3412,_3413,_3414,_3415,_3416,_3417,_3418){
var _3419=_3418("com.ibm.vis.engine.internal.Grammar",[_3404],{coordinates:null,elements:null,faceting:null,vis:null,spec:null,graphTranslate:null,graphSize:null,gSpec:null,facetedGrammars:null,dataSpec:null,sharedLayoutInfo:null,constructor:function(){
this.facetedGrammars=new _3405.m();
this.sharedLayoutInfo=new _3406.m();
this.__constructor_com_ibm_vis_engine_internal_Grammar.apply(this,arguments);
},__constructor_com_ibm_vis_engine_internal_Grammar:function(_341a,style,vis,base,_341b,index){
this.setId("G"+index);
this.style=style;
this.setBackgroundIdSuffixes("Outline","Out");
this.setRequiresBackgroundShape(true);
this.specifiedBounds=new _3407.m(_341a,vis.visContext.logContext);
this.vis=vis;
this.dataSpec=_3408.m.getItem(vis.currentJSON,"data");
this.spec=base;
this.gSpec=_341b;
this.coordinates=_3409.m.createCoordinates(vis,_341b.coordinates);
var _341c=this.gSpec.elements;
if(_341c==null){
this.elements=new Array(0);
}else{
this.elements=new Array(_341c.length);
for(var i=0;i<this.elements.length;++i){
this.elements[i]=new _340a.m(_341c[i].id,this.vis,this,_341c[i],i);
}
}
this.faceting=_340b.m.getFacetingInstance(_341b.facet,vis.getLogger(),vis,this.elements);
this.modifyDataWithAreaUnderCurve();
this.coordinates.prepareForElements(this.elements);
},getAreaUnderCurve:function(){
var _341d=0;
var count=0;
for(var _341e=0,_341f=this.elements,_3420=_341f.length;_341e<_3420;++_341e){
var _3421=_341f[_341e];
var area=_3421.getAreaUnderCurve();
if(!_340c.m.isNaN(area)){
_341d+=area;
count++;
}
}
if(count!=0){
_341d=_341d/count;
}else{
_341d=NaN;
}
return _341d;
},modifyDataWithAreaUnderCurve:function(){
var _3422=this.getAreaUnderCurve();
var _3423=new _3405.m();
for(var _3424=0,_3425=this.elements,_3426=_3425.length;_3424<_3426;++_3424){
var _3427=_3425[_3424];
if(_3427.data!=null&&!_3423.contains(_3427.data.id)&&_3427.data.isPdf()){
_3427.data.matchDensityWithAreaUnderCurve(_3422);
_3423.add(_3427.data.id);
}
}
},replaceSharedScales:function(base){
for(var i=0;i<this.coordinates.scales.length;++i){
if(!this.coordinates.scales[i].localScale){
this.coordinates.scales[i]=base.coordinates.scales[i];
}
}
for(var i=0;i<this.coordinates.axes.length;++i){
if(!this.coordinates.scales[i].localScale){
this.coordinates.scales[i]=base.coordinates.scales[i];
}
}
for(var i=0;i<this.elements.length;++i){
var _3428=this.elements[i].getAesthetics();
for(var j=0;j<_3428.length;++j){
if(!_3428[j].scale.localScale){
_3428[j].scale=base.elements[i].getAesthetics()[j].scale;
}
}
}
},screenToCoordinates:function(x,y){
if(this.graphSize==null){
return [x,y];
}else{
return this.coordinates.getDataValuesFor(x,y,this.graphSize);
}
},layoutAxesAndInnerCell:function(_3429){
_3429=_3429.makeIntegerRect();
var area=_3429.makeIntegerRect();
if(area.height<0){
throw new _340d.m("Grammar layout error--area is too small for the shapes within it",_340d.m.LAYOUT_CANNOT_FIT);
}
if(area.width<0){
throw new _340d.m("Grammar layout error--area is too narrow for the shapes within it",_340d.m.LAYOUT_CANNOT_FIT);
}
var inner=new _340e.m(area.x,area.y,area.width,area.height);
var _342a=this.coordinates;
this.layoutAxes(_342a,area,inner,0);
this.layoutAxes(_342a,area,inner,1);
if(!area.isEquivalent(inner)){
area.x=inner.x;
area.width=inner.width;
this.layoutAxes(_342a,area,inner,0);
area.y=inner.y;
area.height=inner.height;
this.layoutAxes(_342a,area,inner,1);
}
area=this.addAxesAutoPadding(area,_342a,_3429);
var _342b=_342a.scales;
for(var i=0;i<_342b.length;++i){
var scale=_342b[i];
if(scale.getTicks()==null){
var len=_342a.getDrawnPosition(i)==0?area.height:area.width;
scale.initializeForDisplayableExtent(_340f.m.makeSized(len,false));
}
}
return area;
},addAxesAutoPadding:function(area,_342c,_342d){
var total;
var top=0;
var left=0;
var _342e=0;
var right=0;
if(_342d.x+_342d.width==this.vis.getSize().width){
right=1;
}
if(_342d.y+_342d.height==this.vis.getSize().height){
_342e=1;
}
if(_342d.y==area.y){
top=1;
}
total=new _3410.m(top,left,_342e,right);
for(var _342f=0,_3430=_342c.axes,_3431=_3430.length;_342f<_3431;++_342f){
var axis=_3430[_342f];
var _3432=axis.computeExtraSpacingNeededForBounds(area);
total=new _3410.m(Math.max(total.top,_3432.top),Math.max(total.left,_3432.left),Math.max(total.bottom,_3432.bottom),Math.max(total.right,_3432.right));
}
return total.insetRectBy(area);
},layoutAxes:function(_3433,area,inner,_3434){
for(var _3435=0,_3436=_3433.axes,_3437=_3436.length;_3435<_3437;++_3435){
var axis=_3436[_3435];
if(axis.drawPosition==_3434){
axis.setLayoutForBounds(area,inner);
var _3438=this.gSpec.axesOverflow!=null&&this.gSpec.axesOverflow;
axis.modifyInnerCellSize(area,_3438);
}
}
},needsIndependentScenes:function(){
for(var _3439=0,_343a=this.coordinates.scales,_343b=_343a.length;_3439<_343b;++_3439){
var scale=_343a[_3439];
if(scale.localScale){
return true;
}
}
for(var _343c=0,_343d=this.elements,_343e=_343d.length;_343c<_343e;++_343c){
var _343f=_343d[_343c];
for(var _3440=0,_3441=_343f.getAesthetics(),_3442=_3441.length;_3440<_3442;++_3440){
var aes=_3441[_3440];
if(aes.scale.localScale){
return true;
}
}
}
return this.faceting.getFacetSpec()!=null&&this.faceting.getFacetSpec().sharedAxes!=null&&this.faceting.getFacetSpec().sharedAxes.length>0;
},createShapesInSceneInternal:function(_3443,_3444){
var id=this.getId();
var area=this.layoutAxesAndInnerCell(_3444);
var _3445=area.getTopLeft();
var _3446=area.getExtent();
var parts=new _3411.m(_3443);
var _3447=_3408.m.createJSONArray();
var _3448=this.coordinates;
this.graphTranslate=_3445;
this.graphSize=_3446;
var _3449=this.makeDrawnBounds(_3447,_3446,_3448.spec.style,_3445,id+"Coords",_3448);
this.addCoordinatesSpecToJson(_3449);
parts.beforeAxis.add(_3449);
var axes=_3448.axes;
var _344a=this.getClipBounds();
parts.outerClipBounds=new _340e.m(_344a.x-this.graphTranslate.x,_344a.y-this.graphTranslate.y,_344a.width,_344a.height);
this.createElementItems(area,id,parts);
for(var i=axes.length-1;i>=0;--i){
if(axes[i].axisSpec.gridStyle!=null){
var _344b=axes[i].getBackgroundShapes(_3446,id);
var _344c=this.addAxisGroup(axes[i],_3445,_3446,_344b,"axis-back");
if(_344c!=null){
parts.beforeAxis.add(_344c);
}
}
}
if(this.hasStroke(_3448.spec.style)){
var _344d=this.makeDrawnBounds(_3447,_3446,_3448.spec.style,_3445,id+"InStroke",_3448);
_3408.m.remove(_3449,"stroke");
_3408.m.remove(_344d,"fill");
parts.beforeAxis.add(_344d);
}
for(var _344e=0,_344f=axes.length;_344e<_344f;++_344e){
var axe=axes[_344e];
if(axe.isVisible()){
var _344b=axe.getForegroundShapes(_3446,id);
var _344c=this.addAxisGroup(axe,_3445,_3446,_344b,"axis");
if(_344c!=null){
parts.axis.add(_344c);
}
}
}
parts.addBeforeAxesItems();
parts.addItems(parts.elementsBeforeAxis);
parts.addAxesItems();
parts.addItems(parts.elementsAfterAxis);
parts.addAfterAxesItems();
},addCoordinatesSpecToJson:function(gIn){
var _3450=_3408.m.createJSONObject();
var _3451=this.gSpec.coordinates;
var _3452=_3451.dimensions;
if(_3452!=null){
var dims=_3408.m.createJSONArray();
_3408.m.put(_3450,"dimensions",dims);
for(var _3453=0,_3454=_3452.length;_3453<_3454;++_3453){
var dim=_3452[_3453];
var scale=dim.scale;
if(scale==null){
dims.push("linear");
}else{
var spans=scale.spans;
if(spans==null||spans.length==0){
dims.push("linear");
}else{
if(spans.length==1){
var _3455=spans[0].method;
if(_3455==null){
_3455="linear";
}
dims.push(_3455);
}else{
dims.push("multiple");
}
}
}
}
}
var _3456=_3451.transforms;
if(_3456!=null){
var trans=_3408.m.createJSONArray();
_3408.m.put(_3450,"transforms",trans);
for(var _3457=0,_3458=_3456.length;_3457<_3458;++_3457){
var _3459=_3456[_3457];
trans.push(_3459.type);
}
}
_3408.m.put(gIn,"coordinates",_3450);
},hasStroke:function(style){
if(style==null||style.stroke==null||style.stroke.width==null){
return false;
}
var _345a=_3412.m.convertLength(style.stroke.width,null,null);
return _345a>1;
},createElementItems:function(area,id,_345b){
var _345c=this.coordinates;
var _345d=area.getTopLeft();
var _345e=area.getExtent();
for(var _345f=0;_345f<this.elements.length;++_345f){
var _3460=this.elements[_345f];
var _3461=this.vis.getDataByID("positions");
if(_3461!=null&&_3460.layout!=null){
var _3462=false;
if(_3461.fields[1].id.CPVisEngineEquals("y")&&_3461.fields[2].id.CPVisEngineEquals("x")){
_3462=true;
}
_3460.layout.setSpecifiedPositions(_3461.rows,_3462);
}
var _3463=!this.faceting.isFacetedElement(_3460);
var clip=_3460.getClip();
var _3464=(_3460.labelProducers.size()>0);
var _3465=_3460.makeShapes(id,_345c,_345e,_345f,_345b.outerClipBounds,true);
if(_3460.isLineWithPoints&&clip==1){
var parts=this.splitShapes(_3465);
var items=this.makeShapeGroup(parts[0],"element",_345d,_345e,2,_3463,_345b.outerClipBounds);
this.addElementInfo(_3460,items);
_345b.elementsAfterAxis.add(items);
var r=new _340e.m(0,0,_345e.width,_345e.height);
this.defineElementShapes(_345b,_345d,_345e,_3463,clip,parts[1],r,_3464,_3460);
}else{
if(clip==2||this.facetedGrammars.size()>0){
var items=this.makeShapeGroup(_3465,"element",_345d,_345e,clip,_3463,_345b.outerClipBounds);
this.addElementInfo(_3460,items);
_345b.elementsBeforeAxis.add(items);
}else{
var r=new _340e.m(0,0,_345e.width,_345e.height);
this.defineElementShapes(_345b,_345d,_345e,_3463,clip,_3465,r,_3464,_3460);
}
}
}
for(var _3466=0,_3467=this.elements,_3468=_3467.length;_3466<_3468;++_3466){
var _3460=_3467[_3466];
_3460.cachedShapes=null;
}
},addElementInfo:function(_3469,group){
var eType=(_3469.isLineWithPoints)?"lineWithPoints":_3469.type;
_3408.m.put(group,"elementType",eType);
if(_3469.baseline==null){
return;
}
var line=_3469.baseline.toJSON();
var shape=_3408.m.getItem(line,"shape");
_3408.m.remove(shape,"type");
_3408.m.put(group,"baseline",shape);
},splitShapes:function(_346a){
var lines=new _3405.m();
var _346b=new _3405.m();
for(var _346c=0,_346d=_346a.size();_346c<_346d;++_346c){
var s=_346a.get(_346c);
if("line".CPVisEngineEquals(s.getElementPart())){
lines.add(s);
}else{
_346b.add(s);
}
}
return [lines,_346b];
},defineElementShapes:function(_346e,_346f,_3470,_3471,clip,_3472,r,_3473,_3474){
var _3475=new _3405.m();
var _3476=new _3405.m();
if(clip==4){
_3476=_3472;
}else{
if(_3473){
this.splitShapesWithLabelsClipOverlap(_3472,r,_3475,_3476);
}else{
this.splitShapesClipOverlap(_3472,r,_3475,_3476);
}
}
if(_3475.size()>0){
var items=this.makeShapeGroup(_3475,"element",_346f,_3470,clip,_3471,r);
this.addElementInfo(_3474,items);
_346e.elementsBeforeAxis.add(items);
}
if(_3476.size()>0){
var items=this.makeShapeGroup(_3476,"element",_346f,_3470,clip,_3471,_346e.outerClipBounds);
this.addElementInfo(_3474,items);
_346e.elementsAfterAxis.add(items);
}
},splitShapesClipOverlap:function(_3477,r,_3478,_3479){
for(var _347a=0,_347b=_3477.size();_347a<_347b;++_347a){
var shape=_3477.get(_347a);
var _347c=shape.getBounds();
if(r.isRectIntersects(_347c)){
_3479.add(shape);
}else{
_3478.add(shape);
}
}
},splitShapesWithLabelsClipOverlap:function(_347d,r,_347e,_347f){
var _3480=new _3413.m();
for(var _3481=0,_3482=_347d.size();_3481<_3482;++_3481){
var shape=_347d.get(_3481);
var id=shape.id;
var _3483=shape.getBounds();
if(id.indexOf("L")>0){
var key=this.getKeyForRows(shape);
var list=_3480.get(key);
if(list!=null){
list.add(shape);
}
}else{
if(r.isRectIntersects(_3483)){
_347f.add(shape);
var key=this.getKeyForRows(shape);
_3480.put(key,_347f);
}else{
_347e.add(shape);
var key=this.getKeyForRows(shape);
_3480.put(key,_347e);
}
}
}
},setIDs:function(_3484,_3485){
var n=0;
for(var _3486=0,_3487=_3484.size();_3486<_3487;++_3486){
var shape=_3484.get(_3486);
if(shape!=null){
shape.setID(_3485+(n++));
}
}
},addAxisGroup:function(axis,inner,_3488,_3489,type){
if(_3489==null||_3489.length==0){
return null;
}
var group=_3408.m.createJSONObject();
_3408.m.put(group,"type",type);
_3408.m.put(group,"children",_3489);
axis.defineLocationVisTransform(group,inner,_3488);
return group;
},makeShapeGroup:function(_348a,type,_348b,_348c,clip,_348d,_348e){
var group=_3408.m.createJSONObject();
if(_348d){
var meta=_3408.m.createJSONObject();
_3408.m.put(meta,"unfaceted",true);
_3408.m.put(group,"meta",meta);
}
_3408.m.put(group,"type",type);
var _348f=_3408.m.createSizedJSONArray(_348a.size());
var r=new _340e.m(0,0,_348c.width,_348c.height);
for(var _3490=0,_3491=_348a.size();_3490<_3491;++_3490){
var shape=_348a.get(_3490);
_348f.push(shape.toJSON());
}
_3408.m.put(group,"children",_348f);
var _3492=(clip==2)?r:_348e;
var clipR=_3408.m.createJSONObject();
_3492.setShapeParameters(clipR);
_3408.m.put(group,"clip",clipR);
_348b.translate(group);
return group;
},processFacetedGrammar:function(_3493,_3494,_3495,_3496,_3497,_3498){
var _3499;
if(this.needsIndependentScenes()){
var area=this.layoutAxesAndInnerCell(_3494);
this.graphTranslate=area.getTopLeft();
this.graphSize=area.getExtent();
_3499=this.faceting.makeUnsharedCellsScene(this,_3498,_3493,_3495,_3496);
}else{
var _349a=_3408.m.createJSONArray();
var _349b=new _340e.m(0,0,_3497.width,_3497.height);
_349a.push(_3414.m.createBackgroundShape(_3497.makeRect(),null,this.getId()+"Out"));
this.createShapesInSceneInternal(_349a,_349b);
_3499=this.faceting.makeSharedCellsScene(_349a,_3493);
}
var n=_3499.length;
for(var i=0;i<n;++i){
var o=_3499[i];
_3493.push(o);
}
},getKeyForRows:function(s){
var rows=s.getRows();
if(rows==null){
return "ref";
}
var key="|";
for(var _349c=0,_349d=rows.length;_349c<_349d;++_349c){
var row=rows[_349c];
key=key+"|"+row;
}
return key;
},isFacetChart:function(){
return this.faceting.isChartInChart();
},createSceneShapes:function(scene,_349e,_349f){
if(this.faceting!=_340b.m.FACETING_NONE){
var _34a0=this.faceting.getPanelSize(scene,this.getExtent());
this.processFacetedGrammar(scene,this.getExtent().makeRect(),_349e,_349f,_34a0,_34a0);
}else{
this.createShapesInSceneInternal(scene,this.getExtent().makeRect());
}
},makeDrawnBounds:function(_34a1,_34a2,_34a3,_34a4,id,_34a5){
var shape;
if(_34a5!=null&&_34a5.isPoylgonal(id)){
var x=_3415.m.getTicksLocation(_34a5.axes[1].ticks,_34a2,false);
var y=Array.create([x.length],0);
var yMax=0;
for(var i=0;i<y.length;++i){
y[i]=yMax;
}
shape=_3414.m.makePoly(x,y,_34a3);
}else{
shape=_3414.m.makeRectangle(0,0,_34a2.width,_34a2.height,_34a3);
}
if(_34a5!=null){
shape=_34a5.modifyShape(shape,_34a2);
}
shape.setID(id);
if(_34a3==null){
shape.fill=null;
shape.outline=null;
}
var back=shape.toJSON();
if(_34a4!=null){
_34a4.translate(back);
}
_34a1.push(back);
return back;
},createContent:function(){
var _34a6=this.inherited(arguments,[]);
var _34a7=this.vis.visContext;
this.createSceneShapes(_34a6,this.dataSpec,_34a7);
for(var _34a8=0,_34a9=this.facetedGrammars,_34aa=_34a9.size();_34a8<_34aa;++_34a8){
var _34ab=_34a9.get(_34a8);
var _34ac=_34ab.faceting.getPanelSize(_34a6,this.getExtent());
var _34ad=this.getExtent();
_34ab.layoutWithBounds(_34ac.makeRect(),_34ad,this.getOverallBounds());
var _34ae=_34ab.getExtent();
_34ab.processFacetedGrammar(_34a6,_34ae.makeRect(),this.dataSpec,_34a7,_34ae,_34ac);
}
return _34a6;
},getContentPreferredSize:function(){
var width=0;
var _34af=0;
for(var _34b0=0,_34b1=this.elements,_34b2=_34b1.length;_34b0<_34b2;++_34b0){
var _34b3=_34b1[_34b0];
var size=_34b3.getPreferredSize();
width=Math.max(width,size.width);
_34af=Math.max(_34af,size.height);
}
if(width==0){
width=400;
}
if(_34af==0){
_34af=400;
}
return new _3416.m(width,_34af);
},addFacetedGrammar:function(_34b4){
this.facetedGrammars.add(_34b4);
},getFacetTarget:function(){
var _34b5=null;
var _34b6=this.faceting.getFacetSpec();
if(_34b6!=null&&_34b6.targetElement!=null){
var _34b7=this.vis.getByID(_34b6.targetElement.$ref);
_34b5=_34b7.grammar;
}
return _34b5;
},getSharedLayoutInfo:function(){
return this.sharedLayoutInfo;
}});
_3417.add("com/ibm/vis/engine/internal/Grammar",["com/ibm/vis/engine/internal/ContentFrame"],function(){
_3419.SCALE_LINEAR="linear";
});
return _3419;
});
},"com/ibm/vis/engine/internal/layout/Flow":function(){
define("com/ibm/vis/engine/internal/layout/Flow",["com/ibm/init/fork!../nativeImpl/WebEngineException","com/ibm/init/statics","dojo/_base/declare"],function(_34b8,_34b9,_34ba){
var Flow=_34ba("com.ibm.vis.engine.internal.layout.Flow",null,{name:null,constructor:function(name){
this.name=name;
},toString:function(){
return this.name;
},equals:function(o){
return this==o;
},hashCode:function(){
return this.name.charAt(0);
}});
Flow.valueOf=function(flow){
if(flow.CPVisEngineEquals("vertical")){
return Flow.vertical;
}else{
if(flow.CPVisEngineEquals("horizontal")){
return Flow.horizontal;
}else{
throw new _34b8.m();
}
}
};
_34b9.add("com/ibm/vis/engine/internal/layout/Flow",["com/ibm/vis/engine/internal/nativeImpl/WebEngineException"],function(){
Flow.VERTICAL="vertical";
Flow.HORIZONTAL="horizontal";
Flow.vertical=new Flow("vertical");
Flow.horizontal=new Flow("horizontal");
});
return Flow;
});
},"com/ibm/vis/engine/internal/grammar/layout/LinkLayoutEdgeBuilder":function(){
define("com/ibm/vis/engine/internal/grammar/layout/LinkLayoutEdgeBuilder",["com/ibm/init/fork!../../nativeImpl/BasicFactory","com/ibm/init/statics","dojo/_base/declare"],function(_34bb,_34bc,_34bd){
var _34be=_34bd("com.ibm.vis.engine.internal.grammar.layout.LinkLayoutEdgeBuilder",null,{adapter:null,constructor:function(_34bf){
this.adapter=_34bf;
},makeElbowInLayerLink:function(xE,yE,_34c0){
var last=xE.length-1;
var types=["M","L","L","L"];
var x;
var y;
if(this.adapter.isSwapXY()){
var x2=[xE[0],xE[1],xE[last-1],xE[last]];
var y2=[yE[0],yE[0],yE[last],yE[last]];
x=x2;
y=y2;
}else{
var x1=[xE[0],xE[0],xE[last],xE[last]];
var y1=[yE[0],yE[1],yE[last-1],yE[last]];
x=x1;
y=y1;
}
return this.adapter.makeItemFromPath(x,y,types,false,_34c0);
},makeInLayerLink:function(xE,yE,codes,_34c1){
var style=this.adapter.getStyle();
var _34c2=(style==null)?null:style.symbol;
var _34c3=_34bb.m.isString(_34c2)?_34c2:null;
var _34c4=!this.adapter.isSwapXY();
var _34c5=xE.length==2;
var item;
var lleb=new _34be(this.adapter);
if(_34c5){
item=this.adapter.makeItemFromPath(xE,yE,codes,false,_34c1);
}else{
if(_34c3!=null&&_34c3.indexOf("elbow")>-1){
item=this.makeElbowInLayerLink(xE,yE,_34c1);
_34c4=!_34c4;
}else{
if(_34c3!=null&&_34c3.indexOf("curved")>-1){
item=lleb.makeCurvedInLayerLink(xE,yE,_34c1);
_34c4=!_34c4;
}else{
item=this.adapter.makeItemFromPath(xE,yE,codes,false,_34c1);
}
}
}
var ps=item;
var _34c6=(style==null)?null:style.startArrow;
var _34c7=(style==null)?null:style.endArrow;
ps.setEdgeProperties(_34c4,_34c3,_34c6,_34c7);
return item;
},makeCurvedInLayerLink:function(xE,yE,_34c8){
var last=xE.length-1;
var types=["M","L","Q",",","L","Q",",","L"];
var x;
var y;
if(this.adapter.isSwapXY()){
var _34c9=(xE[1]-xE[0])/2;
var _34ca=xE[1];
var _34cb=yE[0];
var _34cc=yE[last];
var xsign=_34cb<_34cc?-1:+1;
if(xE[0]<xE[1]){
xsign*=-1;
}
var x1=[xE[0],_34ca-_34c9,_34ca,_34ca,_34ca,_34ca,_34ca-_34c9,xE[last]];
var y1=[_34cb,_34cb,_34cb,_34cb+_34c9*xsign,_34cc-_34c9*xsign,_34cc,_34cc,_34cc];
x=x1;
y=y1;
}else{
var _34c9=(yE[1]-yE[0])/2;
var _34cd=yE[1];
var _34ce=xE[0];
var _34cf=xE[last];
var xsign=_34ce<_34cf?-1:+1;
if(yE[0]<yE[1]){
xsign*=-1;
}
var x1=[_34ce,_34ce,_34ce,_34ce+_34c9*xsign,_34cf-_34c9*xsign,_34cf,_34cf,_34cf];
var y1=[yE[0],_34cd-_34c9,_34cd,_34cd,_34cd,_34cd,_34cd-_34c9,yE[last]];
x=x1;
y=y1;
}
return this.adapter.makeItemFromPath(x,y,types,false,_34c8);
},makeSelfLink:function(from,to,_34d0,_34d1,_34d2){
var style=this.adapter.getStyle();
if(style==null||style.symbol==null||!_34bb.m.isString(style.symbol)||(style.symbol).indexOf("curved")<0){
return this.makeStraightSelfLink(from,to,_34d0,_34d1>_34d0?_34d1:0,_34d2);
}
return this.makeCurvedSelfLink(from,to,_34d0,_34d1,_34d2);
},makeStraightSelfLink:function(from,to,r1,_34d3,_34d4){
var types=["M","L","L","L","L"];
var xE=to.x;
var yE=to.y;
if(this.adapter.isSwapXY()){
if(this.adapter.isReflectY()){
var x=[from.x,from.x-_34d3-r1,from.x-_34d3-r1,xE,xE];
var y=[from.y,from.y,yE-_34d3-r1,yE-_34d3-r1,yE];
return this.adapter.makeItemFromPath(x,y,types,false,_34d4);
}
var x=[from.x,from.x+_34d3+r1,from.x+_34d3+r1,xE,xE];
var y=[from.y,from.y,yE-_34d3-r1,yE-_34d3-r1,yE];
return this.adapter.makeItemFromPath(x,y,types,false,_34d4);
}
if(this.adapter.isReflectY()){
var x=[from.x,from.x,xE+_34d3+r1,xE+_34d3+r1,xE];
var y=[from.y,from.y-_34d3-r1,from.y-_34d3-r1,yE,yE];
return this.adapter.makeItemFromPath(x,y,types,false,_34d4);
}
var x=[from.x,from.x,xE+_34d3+r1,xE+_34d3+r1,xE];
var y=[from.y,from.y+_34d3+r1,from.y+_34d3+r1,yE,yE];
return this.adapter.makeItemFromPath(x,y,types,false,_34d4);
},makeCurvedSelfLink:function(from,to,_34d5,ah,_34d6){
var r=_34d5/2;
var types=["M","L","Q",",","L","Q",",","L","Q",",","L"];
if(this.adapter.isSwapXY()){
if(this.adapter.isReflectY()){
var y=[from.y,from.y,from.y,from.y-r,to.y-ah,to.y-ah-r,to.y-ah-r,to.y-ah-r,to.y-ah-r,to.y-ah,to.y];
var x=[from.x,from.x-ah,from.x-ah-r,from.x-ah-r,from.x-ah-r,from.x-ah-r,from.x-ah,to.x-r,to.x,to.x,to.x];
return this.adapter.makeItemFromPath(x,y,types,false,_34d6);
}
var y=[from.y,from.y,from.y,from.y-r,to.y-ah,to.y-ah-r,to.y-ah-r,to.y-ah-r,to.y-ah-r,to.y-ah,to.y];
var x=[from.x,from.x+ah,from.x+ah+r,from.x+ah+r,from.x+ah+r,from.x+ah+r,from.x+ah,to.x+r,to.x,to.x,to.x];
return this.adapter.makeItemFromPath(x,y,types,false,_34d6);
}
if(this.adapter.isReflectY()){
var x=[from.x,from.x,from.x,from.x+r,to.x+ah,to.x+ah+r,to.x+ah+r,to.x+ah+r,to.x+ah+r,to.x+ah,to.x];
var y=[from.y,from.y-ah,from.y-ah-r,from.y-ah-r,from.y-ah-r,from.y-ah-r,from.y-ah,to.y-r,to.y,to.y,to.y];
return this.adapter.makeItemFromPath(x,y,types,false,_34d6);
}
var x=[from.x,from.x,from.x,from.x+r,to.x+ah,to.x+ah+r,to.x+ah+r,to.x+ah+r,to.x+ah+r,to.x+ah,to.x];
var y=[from.y,from.y+ah,from.y+ah+r,from.y+ah+r,from.y+ah+r,from.y+ah+r,from.y+ah,to.y+r,to.y,to.y,to.y];
return this.adapter.makeItemFromPath(x,y,types,false,_34d6);
}});
_34bc.add("com/ibm/vis/engine/internal/grammar/layout/LinkLayoutEdgeBuilder",[],function(){
_34be.SYMBOL_CURVED="curved";
_34be.SYMBOL_ELBOW="elbow";
});
return _34be;
});
}}});
define("com/main",[],1);

