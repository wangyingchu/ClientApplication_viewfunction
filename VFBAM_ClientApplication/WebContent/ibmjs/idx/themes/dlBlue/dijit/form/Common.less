/* claro/form/Common.css */

/*========================= common css =========================*/

@import "../variables";
 .@{theme-name} {
    /* 'dijitTextBox' refers to 'dijit(TextBox|DateTextBox|CurrencyTextBox|...)' */
    .dijitTextBox, .dijitInputInner {
        // .dijitInputInner selector needed for ValidationTextBox on IE6 because <input> doesn't inherit
        // the color setting from the ancestor div.dijitTextBox
        color: @text-color;
    }
    .dijitValidationTextBoxError .dijitValidationContainer {
        background: url("../@{image-form-error}") no-repeat center center;
        width: 16px;
        margin-right: 5px;
    }
    .dijitTextBoxError .dijitValidationContainer {
        border-left-width: 1px;
    }
    .dijitValidationTextBoxError .dijitValidationIcon {
        width: 0;
        background-color: transparent;
        /* so the INPUT doesn't obscure the border in rtl+a11y */
    }
    /* Padding for the input area of TextBox based widgets, and corresponding padding for the
 * down arrow button and the placeholder.   placeholder is explicitly listed  because
 * dijitPlaceHolder is absolutely positioned, so padding set on dijitInputField
 * won't affect it
 */
    .dijitTextArea,
    .dijitInputField .dijitPlaceHolder {
        padding: @textbox-padding;

    }
    .dijitSelect .dijitInputField,
    .dijitTextBox .dijitInputField {
        // Subtract 1px from top/bottom because we add 1px to other nodes, see rules below.
        // Although we are theoretically only adding 1px to top/bottom browsers seem to pad inputs by 1px on left/right,
        // although that varies by so compensate for that too.
        padding: @textbox-padding;

    }
    /*.dj_gecko  .dijitTextBox .dijitInputInner,
.dj_webkit  .dijitTextBox .dijitInputInner {
	// Although we are theoretically only adding 1px to top/bottom, some browsers seem to pad inputs by 1px on left/right,
	// so compensate for that too.
	padding-left: @textbox-padding;
	padding-right: @textbox-padding;
}*/
    .dijitSelect,
    .dijitSelect .dijitButtonContents,
    .dijitTextBox,
    .dijitTextBox .dijitButtonNode {
        /* color for (outer) border on *TextBox widgets, and border between input and buttons on ComboBox and Spinner */
        border-color: @border-color;
        .transition-property(background-color, border);
        .transition-duration(.35s);
    }
    .dijitSelect,
    .dijitTextBox {
        background-color: @textbox-background-color;
    }
    /* hover */
    .dijitSelectHover,
    .dijitSelectHover .dijitButtonContents,
    .dijitTextBoxHover,
    .dijitTextBoxHover .dijitButtonNode {
        border-color: @hovered-border-color;
        .transition-duration(.25s);
    }
    .dijitTextBoxHover {
        background-color: @textbox-hovered-background-color;
       .textbox-background-image;
    }
    /* error state */
    .dijitSelectError,
    .dijitSelectError .dijitButtonContents,
    .dijitTextBoxError,
    .dijitTextBoxError .dijitButtonNode {
        border-color: @error-border-color;
    }
    /* focused state */
    .dijitSelectFocused,
    .dijitSelectFocused .dijitButtonContents,
    .dijitTextBoxFocused,
    .dijitTextBoxFocused .dijitButtonNode {
        border-color: @focused-border-color;
        .transition-duration(.1s);
    }
    .dijitTextBoxFocused {
        background-color: @textbox-focused-background-color;
        .textbox-background-image;
    }
    .dijitTextBoxFocused .dijitInputContainer {
        background: @textbox-focused-background-color;
    }
    .dijitSelectErrorFocused,
    .dijitSelectErrorFocused .dijitButtonContents,
    .dijitTextBoxErrorFocused,
    .dijitTextBoxErrorFocused .dijitButtonNode {
        border-color: @error-focused-border-color;
    }
    /* disabled state */
    .dijitSelectDisabled,
    .dijitSelectDisabled .dijitButtonContents,
    .dijitTextBoxDisabled,
    .dijitTextBoxDisabled .dijitButtonNode {
        border-color: @disabled-border-color;
    }
    .dijitSelectDisabled,
    .dijitTextBoxDisabled,
    .dijitTextBoxDisabled .dijitInputContainer {
        background-color: @textbox-disabled-background-color;
        background-image: none;
    }
    .dijitSelectDisabled,
    .dijitTextBoxDisabled,
    .dijitTextBoxDisabled .dijitInputInner {
        color: @disabled-text-color;

    }
    /*========================= for special widgets =========================*/
    /* Input boxes with an arrow (for a drop down) */
    .dijitSelect .dijitArrowButtonInner,
    .dijitComboBox .dijitArrowButtonInner {
        background-image: url("../@{image-form-common-arrows}");
        background-position: @arrow-down;
        background-repeat: no-repeat;
        margin: 0;
        width: 15px;
        margin: 1px 4px;
    }
    .dijitToolbar .dijitComboBox .dijitArrowButtonInner {
        border: none;
    }
    .dijitToolbar .dijitComboBox .dijitArrowButtonInner {
        border: none;
    }
    /* Add 1px vertical padding to the <input> where user types and the validation icon,
   to match the 1px border on arrow button */
    .dijitSelectLabel,
    .dijitTextBox .dijitInputInner,
    .dijitValidationTextBox .dijitValidationContainer {
        padding: 1px 0;
    }
    .dijitComboBox .dijitButtonNode {
        background-color: @arrowbutton-background-color;
		border-color: @no-color;
    }
    .dijitComboBoxFocused .dijitButtonNode {
    	background-color: @arrowbutton-background-color;
    }
    /* Arrow "hover" effect:
 * The arrow button should change color whenever the mouse is in a position such that clicking it
 * will toggle the drop down.   That's either (1) anywhere over the ComboBox or (2) over the arrow
 * button, depending on the openOnClick setting for the widget.
 */
    .dijitComboBoxOpenOnClickHover .dijitButtonNode,
    .dijitComboBox .dijitDownArrowButtonHover{
          background-color: @arrowbutton-hovered-background-color;
          border-color: @border-color;
          .dijitArrowButtonInner{
          		background-image: url("../@{image-form-common-arrows}");
          }
          
    }
    /*
 .dijitComboBoxOpenOnClickHover .dijitArrowButtonInner,
 .dijitComboBox .dijitDownArrowButtonHover .dijitArrowButtonInner {
	background-position:-70px 53%;
}*/
    /* Arrow Button change when drop down is open */
    .dijitComboBox .dijitHasDropDownOpen {
        // .dijitHasDropDown is on dijitArrowButton node
        background-color: @pressed-background-color;
        padding: 1px;		// Since no border on arrow button (see rule below)
    }
    .dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
        background-position: -70px 53%;
        border: 0 none;
    }
    .dijitComboBox .dijitDownArrowButtonActive,{
		background-color: @pressed-background-color;	
	}
    /* disabled state */
    div.dijitComboBoxDisabled .dijitButtonNode {
        background-color: @disabled-background-color;
		border-color: @container-background-color;
    }
    div.dijitComboBoxDisabled .dijitArrowButtonInner {
        /* specific selector set to override background-position setting from Button.js
	 * ( .dijitComboBoxDisabled .dijitArrowButtonInner) */
        background-position: @arrow-disabled-down;

    }
}
/*========================= hacks for browsers =========================*/

/* it seems the input[type="hidden"] has a height (16px) too... this may cause the widget's height calculate error */

.dj_ff3 .@{theme-name} .dijitInputField input[type="hidden"] {
    display: none;
    height: 0;
    width: 0;
}
/* Webkit specific changes */

.dj_webkit@{theme-name} {
    .dijitDisabled input {
        /* because WebKit lightens disabled input/textarea no matter what color you specify */
        color: darken(@disabled-text-color, 5%)
    }
    textarea.dijitTextAreaDisabled {
        /* because WebKit lightens disabled input/textarea no matter what color you specify */
        color: darken(@disabled-text-color, 40%)
    }
}
.dj_iequirks .@{theme-name} .dijitComboBox .dijitHasDropDownOpen {
    padding: 1px 0;
}
.dj_borderbox .@{theme-name} .dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
    width: 18px;				// quirks mode means border-box sizing, so 18px with the border (same as 16px without border)
}
.dj_borderbox .@{theme-name} .dijitComboBoxFocused .dijitHasDropDownOpen .dijitArrowButtonInner {
    width: 16px;				// when no border, then back to 16px just like content-box sizing
}